#!/usr/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/dmFyIF-ags.js"

/bin/cat <<EOF | /bin/base64 --decode > $file
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __knownSymbol = (name, symbol) => (symbol = Symbol[name]) ? symbol : Symbol.for("Symbol." + name);
var __typeError = (msg) => {
  throw TypeError(msg);
};
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __decoratorStart = (base) => [, , , __create(base?.[__knownSymbol("metadata")] ?? null)];
var __decoratorStrings = ["class", "method", "getter", "setter", "accessor", "field", "value", "get", "set"];
var __expectFn = (fn) => fn !== void 0 && typeof fn !== "function" ? __typeError("Function expected") : fn;
var __decoratorContext = (kind, name, done, metadata, fns) => ({ kind: __decoratorStrings[kind], name, metadata, addInitializer: (fn) => done._ ? __typeError("Already initialized") : fns.push(__expectFn(fn || null)) });
var __decoratorMetadata = (array, target) => __defNormalProp(target, __knownSymbol("metadata"), array[3]);
var __runInitializers = (array, flags, self, value) => {
  for (var i = 0, fns = array[flags >> 1], n = fns && fns.length; i < n; i++) flags & 1 ? fns[i].call(self) : value = fns[i].call(self, value);
  return value;
};
var __decorateElement = (array, flags, name, decorators, target, extra) => {
  var fn, it, done, ctx, access, k = flags & 7, s = !!(flags & 8), p = !!(flags & 16);
  var j = k > 3 ? array.length + 1 : k ? s ? 1 : 2 : 0, key = __decoratorStrings[k + 5];
  var initializers = k > 3 && (array[j - 1] = []), extraInitializers = array[j] || (array[j] = []);
  var desc = k && (!p && !s && (target = target.prototype), k < 5 && (k > 3 || !p) && __getOwnPropDesc(k < 4 ? target : { get [name]() {
    return __privateGet(this, extra);
  }, set [name](x) {
    return __privateSet(this, extra, x);
  } }, name));
  k ? p && k < 4 && __name(extra, (k > 2 ? "set " : k > 1 ? "get " : "") + name) : __name(target, name);
  for (var i = decorators.length - 1; i >= 0; i--) {
    ctx = __decoratorContext(k, name, done = {}, array[3], extraInitializers);
    if (k) {
      ctx.static = s, ctx.private = p, access = ctx.access = { has: p ? (x) => __privateIn(target, x) : (x) => name in x };
      if (k ^ 3) access.get = p ? (x) => (k ^ 1 ? __privateGet : __privateMethod)(x, target, k ^ 4 ? extra : desc.get) : (x) => x[name];
      if (k > 2) access.set = p ? (x, y) => __privateSet(x, target, y, k ^ 4 ? extra : desc.set) : (x, y) => x[name] = y;
    }
    it = (0, decorators[i])(k ? k < 4 ? p ? extra : desc[key] : k > 4 ? void 0 : { get: desc.get, set: desc.set } : target, ctx), done._ = 1;
    if (k ^ 4 || it === void 0) __expectFn(it) && (k > 4 ? initializers.unshift(it) : k ? p ? extra = it : desc[key] = it : target = it);
    else if (typeof it !== "object" || it === null) __typeError("Object expected");
    else __expectFn(fn = it.get) && (desc.get = fn), __expectFn(fn = it.set) && (desc.set = fn), __expectFn(fn = it.init) && initializers.unshift(fn);
  }
  return k || __decoratorMetadata(array, target), desc && __defProp(target, name, desc), p ? k ^ 4 ? extra : desc : target;
};
var __accessCheck = (obj, member, msg) => member.has(obj) || __typeError("Cannot " + msg);
var __privateIn = (member, obj) => Object(obj) !== obj ? __typeError('Cannot use the "in" operator on this value') : member.has(obj);
var __privateGet = (obj, member, getter2) => (__accessCheck(obj, member, "read from private field"), getter2 ? getter2.call(obj) : member.get(obj));
var __privateAdd = (obj, member, value) => member.has(obj) ? __typeError("Cannot add the same private member more than once") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
var __privateSet = (obj, member, value, setter2) => (__accessCheck(obj, member, "write to private field"), setter2 ? setter2.call(obj, value) : member.set(obj, value), value);
var __privateMethod = (obj, member, method) => (__accessCheck(obj, member, "access private method"), method);

// ../../../usr/share/ags/js/lib/overrides.ts
function snakeify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1_$2").replaceAll("-", "_").toLowerCase();
}
async function suppress(mod, patch2) {
  return mod.then((m) => patch2(m.default)).catch(() => void 0);
}
function patch(proto, prop) {
  Object.defineProperty(proto, prop, {
    get() {
      return this[`get_${snakeify(prop)}`]();
    }
  });
}
await suppress(import("gi://AstalApps"), ({ Apps, Application }) => {
  patch(Apps.prototype, "list");
  patch(Application.prototype, "keywords");
  patch(Application.prototype, "categories");
});
await suppress(import("gi://AstalBattery"), ({ UPower }) => {
  patch(UPower.prototype, "devices");
});
await suppress(import("gi://AstalBluetooth"), ({ Adapter, Bluetooth, Device }) => {
  patch(Adapter.prototype, "uuids");
  patch(Bluetooth.prototype, "adapters");
  patch(Bluetooth.prototype, "devices");
  patch(Device.prototype, "uuids");
});
await suppress(import("gi://AstalHyprland"), ({ Hyprland, Monitor, Workspace }) => {
  patch(Hyprland.prototype, "binds");
  patch(Hyprland.prototype, "monitors");
  patch(Hyprland.prototype, "workspaces");
  patch(Hyprland.prototype, "clients");
  patch(Monitor.prototype, "availableModes");
  patch(Monitor.prototype, "available_modes");
  patch(Workspace.prototype, "clients");
});
await suppress(import("gi://AstalMpris"), ({ Mpris, Player }) => {
  patch(Mpris.prototype, "players");
  patch(Player.prototype, "supported_uri_schemes");
  patch(Player.prototype, "supportedUriSchemes");
  patch(Player.prototype, "supported_mime_types");
  patch(Player.prototype, "supportedMimeTypes");
  patch(Player.prototype, "comments");
});
await suppress(import("gi://AstalNetwork"), ({ Wifi }) => {
  patch(Wifi.prototype, "access_points");
  patch(Wifi.prototype, "accessPoints");
});
await suppress(import("gi://AstalNotifd"), ({ Notifd, Notification: Notification2 }) => {
  patch(Notifd.prototype, "notifications");
  patch(Notification2.prototype, "actions");
});
await suppress(import("gi://AstalPowerProfiles"), ({ PowerProfiles }) => {
  patch(PowerProfiles.prototype, "actions");
});
await suppress(import("gi://AstalWp"), ({ Wp, Audio, Video }) => {
  patch(Wp.prototype, "devices");
  patch(Audio.prototype, "streams");
  patch(Audio.prototype, "recorders");
  patch(Audio.prototype, "microphones");
  patch(Audio.prototype, "speakers");
  patch(Audio.prototype, "devices");
  patch(Video.prototype, "streams");
  patch(Video.prototype, "recorders");
  patch(Video.prototype, "sinks");
  patch(Video.prototype, "sources");
  patch(Video.prototype, "devices");
});
await suppress(import("gi://AstalTray"), ({ Tray }) => {
  patch(Tray.prototype, "items");
});

// ../../../usr/share/ags/js/node_modules/gnim/dist/gobject.ts
import GObject from "gi://GObject";
import GLib from "gi://GLib";

// ../../../usr/share/ags/js/node_modules/gnim/dist/util.ts
function kebabify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("_", "-").toLowerCase();
}
function snakeify2(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("-", "_").toLowerCase();
}
function xml({ name, attributes, children }) {
  let builder = `<${name}`;
  const attrs = Object.entries(attributes ?? []);
  if (attrs.length > 0) {
    for (const [key, value] of attrs) {
      builder += ` ${key}="${value}"`;
    }
  }
  if (children && children.length > 0) {
    builder += ">";
    for (const node of children) {
      builder += xml(node);
    }
    builder += `</${name}>`;
  } else {
    builder += " />";
  }
  return builder;
}
function set(obj, prop, value) {
  const key = snakeify2(prop);
  const getter2 = `get_${key}`;
  const setter2 = `set_${key}`;
  let current;
  if (getter2 in obj && typeof obj[getter2] === "function") {
    current = obj[getter2]();
  } else {
    current = obj[prop];
  }
  if (current !== value) {
    if (setter2 in obj && typeof obj[setter2] === "function") {
      ;
      obj[setter2](value);
    } else {
      Object.assign(obj, { [prop]: value });
    }
  }
}

// ../../../usr/share/ags/js/node_modules/gnim/dist/gobject.ts
var priv = Symbol("gobject private");
var { defineProperty, fromEntries, entries } = Object;
var { Object: GObj, registerClass } = GObject;
var SignalFlags = GObject.SignalFlags;
var AccumulatorType = GObject.AccumulatorType;
var ParamSpec = GObject.ParamSpec;
var ParamFlags = GObject.ParamFlags;
function assertField(ctx) {
  if (ctx.private) throw Error("private fields are not supported");
  if (ctx.static) throw Error("static fields are not supported");
  if (typeof ctx.name !== "string") {
    throw Error("only strings can be gobject property keys");
  }
  return ctx.name;
}
function getter(typeDeclaration) {
  return function(get, ctx) {
    const fieldName = assertField(ctx);
    const meta = ctx.metadata;
    const props = meta.properties ??= {};
    if (fieldName in props) {
      const { flags, type } = props[fieldName];
      props[fieldName] = { flags: flags | ParamFlags.READABLE, type };
    } else {
      props[fieldName] = { flags: ParamFlags.READABLE, type: typeDeclaration };
    }
    return get;
  };
}
function setter(typeDeclaration) {
  return function(set2, ctx) {
    const fieldName = assertField(ctx);
    const meta = ctx.metadata;
    const props = meta.properties ??= {};
    if (fieldName in props) {
      const { flags, type } = props[fieldName];
      props[fieldName] = { flags: flags | ParamFlags.WRITABLE, type };
    } else {
      props[fieldName] = { flags: ParamFlags.WRITABLE, type: typeDeclaration };
    }
    return set2;
  };
}
function signal(...args) {
  return function(method, ctx) {
    if (ctx.private) throw Error("private fields are not supported");
    if (ctx.static) throw Error("static fields are not supported");
    if (typeof ctx.name !== "string") {
      throw Error("only strings can be gobject signals");
    }
    const signalName2 = kebabify(ctx.name);
    const meta = ctx.metadata;
    const signals = meta.signals ??= {};
    if (Array.isArray(args[0])) {
      const [params, returnType, options] = args;
      signals[signalName2] = {
        method,
        default: options?.default ?? true,
        param_types: params.map((i) => "$gtype" in i ? i.$gtype : i),
        ...returnType && {
          return_type: "$gtype" in returnType ? returnType.$gtype : returnType
        },
        ...options?.flags && {
          flags: options.flags
        },
        ...typeof options?.accumulator === "number" && {
          accumulator: options.accumulator
        }
      };
    } else {
      const params = args;
      signals[signalName2] = {
        method,
        default: true,
        param_types: params.map((i) => "$gtype" in i ? i.$gtype : i)
      };
    }
    return function(...params) {
      return this.emit(signalName2, ...params);
    };
  };
}
var MAXINT = 2 ** 31 - 1;
var MININT = -(2 ** 31);
var MAXUINT = 2 ** 32 - 1;
var MAXFLOAT = 34028235e31;
var MINFLOAT = -34028235e31;
var MININT64 = Number.MIN_SAFE_INTEGER;
var MAXINT64 = Number.MAX_SAFE_INTEGER;
function pspecFromGType(type, name, flags) {
  switch (type) {
    case GObject.TYPE_BOOLEAN:
      return ParamSpec.boolean(name, "", "", flags, false);
    case GObject.TYPE_STRING:
      return ParamSpec.string(name, "", "", flags, "");
    case GObject.TYPE_INT:
      return ParamSpec.int(name, "", "", flags, MININT, MAXINT, 0);
    case GObject.TYPE_UINT:
      return ParamSpec.uint(name, "", "", flags, 0, MAXUINT, 0);
    case GObject.TYPE_INT64:
      return ParamSpec.int64(name, "", "", flags, MININT64, MAXINT64, 0);
    case GObject.TYPE_UINT64:
      return ParamSpec.uint64(name, "", "", flags, 0, Number.MAX_SAFE_INTEGER, 0);
    case GObject.TYPE_FLOAT:
      return ParamSpec.float(name, "", "", flags, MINFLOAT, MAXFLOAT, 0);
    case GObject.TYPE_DOUBLE:
      return ParamSpec.double(name, "", "", flags, Number.MIN_VALUE, Number.MIN_VALUE, 0);
    case GObject.TYPE_JSOBJECT:
      return ParamSpec.jsobject(name, "", "", flags);
    case GObject.TYPE_VARIANT:
      return ParamSpec.object(name, "", "", flags, GLib.Variant);
    case GObject.TYPE_ENUM:
    case GObject.TYPE_INTERFACE:
    case GObject.TYPE_BOXED:
    case GObject.TYPE_POINTER:
    case GObject.TYPE_PARAM:
    case GObject.type_from_name("GType"):
      throw Error(`cannot guess ParamSpec from GType "${type}"`);
    case GObject.TYPE_OBJECT:
    default:
      return ParamSpec.object(name, "", "", flags, type);
  }
}
function pspec(name, flags, declaration) {
  if (declaration instanceof ParamSpec) return declaration;
  if (declaration === Object || declaration === Function || declaration === Array) {
    return ParamSpec.jsobject(name, "", "", flags);
  }
  if (declaration === String) {
    return ParamSpec.string(name, "", "", flags, "");
  }
  if (declaration === Number) {
    return ParamSpec.double(name, "", "", flags, -Number.MAX_VALUE, Number.MAX_VALUE, 0);
  }
  if (declaration === Boolean) {
    return ParamSpec.boolean(name, "", "", flags, false);
  }
  if ("$gtype" in declaration) {
    return pspecFromGType(declaration.$gtype, name, flags);
  }
  if (typeof declaration === "function") {
    return declaration(name, flags);
  }
  throw Error("invalid PropertyTypeDeclaration");
}
function register(options = {}) {
  return function(cls, ctx) {
    const t = options.Template;
    if (typeof t === "string" && !t.startsWith("resource://") && !t.startsWith("file://")) {
      options.Template = new TextEncoder().encode(t);
    }
    const meta = ctx.metadata;
    const props = fromEntries(
      entries(meta.properties ?? {}).map(([fieldName, { flags, type }]) => {
        const key = kebabify(fieldName);
        const spec = pspec(key, flags, type);
        return [key, spec];
      })
    );
    const signals = fromEntries(
      entries(meta.signals ?? {}).map(([signalName2, { default: def, method, ...signal2 }]) => {
        if (def) {
          defineProperty(cls.prototype, `on_${signalName2.replaceAll("-", "_")}`, {
            enumerable: false,
            configurable: false,
            value: method
          });
        }
        return [signalName2, signal2];
      })
    );
    delete meta.properties;
    delete meta.signals;
    registerClass({ ...options, Properties: props, Signals: signals }, cls);
  };
}
Function.$gtype = Object.$gtype;
Array.$gtype = Object.$gtype;
Date.$gtype = Object.$gtype;
Map.$gtype = Object.$gtype;
Set.$gtype = Object.$gtype;

// ../../../usr/share/ags/js/lib/gtk4/app.ts
import GLib4 from "gi://GLib?version=2.0";
import Gtk from "gi://Gtk?version=4.0";
import Gdk from "gi://Gdk?version=4.0";
import Gio3 from "gi://Gio?version=2.0";

// ../../../usr/share/ags/js/node_modules/gnim/dist/dbus.ts
import Gio from "gi://Gio";
import GLib2 from "gi://GLib";
import GObject2 from "gi://GObject";
var DEFAULT_TIMEOUT = 1e4;
var Variant = GLib2.Variant;
var info = Symbol("dbus interface info");
var internals = Symbol("dbus interface internals");
var remoteMethod = Symbol("proxy remoteMethod");
var remoteMethodAsync = Symbol("proxy remoteMethodAsync");
var remotePropertySet = Symbol("proxy remotePropertySet");
var _a;
var Service = class extends GObject2.Object {
  constructor() {
    super();
    this[_a] = {
      priv: {},
      onStop: /* @__PURE__ */ new Set()
    };
    const service = this.constructor;
    if (!service[info]) throw Error("missing interface info");
    this.#info = service[info];
  }
  static {
    GObject2.registerClass(this);
  }
  #info;
  notify(propertyName) {
    const prop = this.#info.lookup_property(propertyName);
    if (prop && this[internals].dbusObject) {
      this[internals].dbusObject.emit_property_changed(
        propertyName,
        new GLib2.Variant(prop.signature, this[propertyName])
      );
    }
    super.notify(prop ? kebabify(propertyName) : propertyName);
  }
  emit(name, ...params) {
    const signal2 = this.#info.lookup_signal(name);
    if (signal2 && this[internals].dbusObject) {
      const signature = `(${signal2.args.map((a) => a.signature).join("")})`;
      this[internals].dbusObject.emit_signal(name, new GLib2.Variant(signature, params));
    }
    return super.emit(signal2 ? kebabify(name) : name, ...params);
  }
  // server
  #handlePropertyGet(_, propertyName) {
    const prop = this.#info.lookup_property(propertyName);
    if (!prop) {
      throw Error(`${this.constructor.name} has no exported property: "${propertyName}"`);
    }
    const value = this[propertyName];
    if (typeof value !== "undefined") {
      return new GLib2.Variant(prop.signature, value);
    } else {
      return null;
    }
  }
  // server
  #handlePropertySet(_, propertyName, value) {
    const newValue = value.deepUnpack();
    const prop = this.#info.lookup_property(propertyName);
    if (!prop) {
      throw Error(`${this.constructor.name} has no property: "${propertyName}"`);
    }
    if (this[propertyName] !== newValue) {
      this[propertyName] = value.deepUnpack();
    }
  }
  // server
  #returnError(error, invocation) {
    console.error(error);
    if (error instanceof GLib2.Error) {
      return invocation.return_gerror(error);
    }
    if (error instanceof Error) {
      return invocation.return_dbus_error(
        error.name.includes(".") ? error.name : `gjs.JSError.${error.name}`,
        error.message
      );
    }
    invocation.return_dbus_error("gjs.DBusService.UnknownError", `${error}`);
  }
  // server
  #returnValue(value, methodName, invocation) {
    if (value === null || value === void 0) {
      return invocation.return_value(new GLib2.Variant("()", []));
    }
    const args = this.#info.lookup_method(methodName)?.out_args ?? [];
    const signature = `(${args.map((arg) => arg.signature).join("")})`;
    if (!Array.isArray(value)) throw Error("value has to be a tuple");
    invocation.return_value(new GLib2.Variant(signature, value));
  }
  // server
  #handleMethodCall(_, methodName, parameters, invocation) {
    try {
      const value = this[methodName](
        ...parameters.deepUnpack()
      );
      if (value instanceof GLib2.Variant) {
        invocation.return_value(value);
      } else if (value instanceof Promise) {
        value.then((value2) => this.#returnValue(value2, methodName, invocation)).catch((error) => this.#returnError(error, invocation));
      } else {
        this.#returnValue(value, methodName, invocation);
      }
    } catch (error) {
      this.#returnError(error, invocation);
    }
  }
  // server
  async serve({
    busType = Gio.BusType.SESSION,
    name = this.#info.name,
    objectPath = "/" + this.#info.name.split(".").join("/"),
    flags = Gio.BusNameOwnerFlags.NONE,
    timeout: timeout2 = DEFAULT_TIMEOUT
  } = {}) {
    const impl = new Gio.DBusExportedObject(
      // @ts-expect-error missing constructor type
      { g_interface_info: this.#info }
    );
    impl.connect("handle-method-call", this.#handleMethodCall.bind(this));
    impl.connect("handle-property-get", this.#handlePropertyGet.bind(this));
    impl.connect("handle-property-set", this.#handlePropertySet.bind(this));
    this.#info.cache_build();
    return new Promise((resolve, reject) => {
      let source = timeout2 > 0 ? setTimeout(() => {
        reject(Error(`serve timed out`));
        source = null;
      }, timeout2) : null;
      const clear = () => {
        if (source) {
          clearTimeout(source);
          source = null;
        }
      };
      const busId = Gio.bus_own_name(
        busType,
        name,
        flags,
        (conn) => {
          try {
            impl.export(conn, objectPath);
            this[internals].dbusObject = impl;
            this[internals].onStop.add(() => {
              Gio.bus_unown_name(busId);
              impl.unexport();
              this.#info.cache_release();
              delete this[internals].dbusObject;
            });
            resolve(this);
          } catch (error) {
            reject(error);
          }
        },
        clear,
        clear
      );
    });
  }
  // proxy
  #handlePropertiesChanged(_, changed, invalidated) {
    const set2 = /* @__PURE__ */ new Set([...Object.keys(changed.deepUnpack()), ...invalidated]);
    for (const prop of set2.values()) {
      this.notify(prop);
    }
  }
  // proxy
  #handleSignal(_, _sender, signal2, parameters) {
    this.emit(kebabify(signal2), ...parameters.deepUnpack());
  }
  // proxy
  #remoteMethodParams(methodName, args) {
    const { proxy } = this[internals];
    if (!proxy) throw Error("invalid remoteMethod invocation: not a proxy");
    const method = this.#info.lookup_method(methodName);
    if (!method) throw Error("method not found");
    const signature = `(${method.in_args.map((a) => a.signature).join("")})`;
    return [
      methodName,
      new GLib2.Variant(signature, args),
      Gio.DBusCallFlags.NONE,
      DEFAULT_TIMEOUT,
      null
    ];
  }
  // proxy
  [(info, _a = internals, remoteMethod)](methodName, args) {
    const params = this.#remoteMethodParams(methodName, args);
    return this[internals].proxy.call_sync(...params);
  }
  // proxy
  [remoteMethodAsync](methodName, args) {
    return new Promise((resolve, reject) => {
      try {
        const params = this.#remoteMethodParams(methodName, args);
        this[internals].proxy.call(...params, (_, res) => {
          try {
            resolve(this[internals].proxy.call_finish(res));
          } catch (error) {
            reject(error);
          }
        });
      } catch (error) {
        reject(error);
      }
    });
  }
  // proxy
  [remotePropertySet](name, value) {
    const proxy = this[internals].proxy;
    const prop = this.#info.lookup_property(name);
    const variant = new GLib2.Variant(prop.signature, value);
    proxy.set_cached_property(name, variant);
    proxy.call(
      "org.freedesktop.DBus.Properties.Set",
      new GLib2.Variant("(ssv)", [proxy.gInterfaceName, name, variant]),
      Gio.DBusCallFlags.NONE,
      -1,
      null,
      (_, res) => {
        try {
          proxy.call_finish(res);
        } catch (e) {
          console.error(e);
        }
      }
    );
  }
  // proxy
  async proxy({
    bus = Gio.DBus.session,
    name = this.#info.name,
    objectPath = "/" + this.#info.name.split(".").join("/"),
    flags = Gio.DBusProxyFlags.NONE,
    timeout: timeout2 = DEFAULT_TIMEOUT
  } = {}) {
    const proxy = new Gio.DBusProxy({
      gConnection: bus,
      gInterfaceName: this.#info.name,
      gInterfaceInfo: this.#info,
      gName: name,
      gFlags: flags,
      gObjectPath: objectPath
    });
    return new Promise((resolve, reject) => {
      const cancallable = new Gio.Cancellable();
      let source = timeout2 > 0 ? setTimeout(() => {
        reject(Error(`proxy timed out`));
        source = null;
        cancallable.cancel();
      }, timeout2) : null;
      proxy.init_async(GLib2.PRIORITY_DEFAULT, cancallable, (_, res) => {
        try {
          if (source) {
            clearTimeout(source);
            source = null;
          }
          proxy.init_finish(res);
          this[internals].proxy = proxy;
          const ids = [
            proxy.connect("g-signal", this.#handleSignal.bind(this)),
            proxy.connect(
              "g-properties-changed",
              this.#handlePropertiesChanged.bind(this)
            )
          ];
          this[internals].onStop.add(() => {
            ids.forEach((id) => proxy.disconnect(id));
            delete this[internals].proxy;
          });
          resolve(this);
        } catch (error) {
          reject(error);
        }
      });
    });
  }
  stop() {
    const { onStop } = this[internals];
    for (const cb of onStop.values()) {
      onStop.delete(cb);
      cb();
    }
  }
};
function iface(name, options) {
  return function(cls, ctx) {
    const meta = ctx.metadata;
    if (!meta) throw Error(`${cls.name} is not an interface`);
    const { dbusMethods = {}, dbusSignals = {}, dbusProperties = {} } = meta;
    const infoXml = xml({
      name: "node",
      children: [
        {
          name: "interface",
          attributes: { name },
          children: [
            ...Object.entries(dbusMethods).map(([name2, args]) => ({
              name: "method",
              attributes: { name: name2 },
              children: args.map((arg) => ({ name: "arg", attributes: arg }))
            })),
            ...Object.entries(dbusSignals).map(([name2, args]) => ({
              name: "signal",
              attributes: { name: name2 },
              children: args.map((arg) => ({ name: "arg", attributes: arg }))
            })),
            ...Object.values(dbusProperties).map(({ name: name2, type, read, write }) => ({
              name: "property",
              attributes: {
                ...name2 && { name: name2 },
                type,
                access: (read ? "read" : "") + (write ? "write" : "")
              }
            }))
          ]
        }
      ]
    });
    Object.assign(cls, { [info]: Gio.DBusInterfaceInfo.new_for_xml(infoXml) });
    register(options)(cls, ctx);
  };
}
function installMethod(args, method, ctx) {
  const name = ctx.name;
  const meta = ctx.metadata;
  const methods = meta.dbusMethods ??= {};
  if (typeof name !== "string") {
    throw Error("only string named methods are allowed");
  }
  const [inArgs, outArgs = []] = Array.isArray(args[0]) ? args : [args];
  methods[name] = [
    ...inArgs.map((arg) => ({
      direction: "in",
      ...typeof arg === "string" ? { type: arg } : arg
    })),
    ...outArgs.map((arg) => ({
      direction: "out",
      ...typeof arg === "string" ? { type: arg } : arg
    }))
  ];
  return name;
}
function methodAsync(...args) {
  return function(method, ctx) {
    const name = installMethod(args, method, ctx);
    return async function(...args2) {
      if (this[internals].proxy) {
        const value = await this[remoteMethodAsync](name, args2);
        return value.deepUnpack();
      } else {
        return method.apply(this, args2);
      }
    };
  };
}

// ../../../usr/share/ags/js/lib/app/dbus.ts
var _Request_dec, _Quit_dec, _ToggleWindow_dec, _Inspector_dec, _a2, _AppDBus_decorators, _init;
_AppDBus_decorators = [iface("io.Astal.Application")];
var _AppDBus = class _AppDBus extends (_a2 = Service, _Inspector_dec = [methodAsync()], _ToggleWindow_dec = [methodAsync("s")], _Quit_dec = [methodAsync()], _Request_dec = [methodAsync(["as"], ["s"])], _a2) {
  constructor(impl) {
    super();
    __runInitializers(_init, 5, this);
    this.impl = void 0;
    this.impl = impl;
  }
  async Inspector() {
    return Promise.resolve(this.impl.insector());
  }
  async ToggleWindow(name) {
    return Promise.resolve(this.impl.toggleWindow(name));
  }
  async Quit() {
    return Promise.resolve(this.impl.quit());
  }
  async Request(argv) {
    return this.impl.request(argv).then((res) => [res]);
  }
  static proxy(instanceName) {
    const app2 = new _AppDBus({
      insector() {
      },
      toggleWindow() {
      },
      quit() {
      },
      request: () => Promise.reject()
    });
    return app2.proxy({
      name: "io.Astal." + instanceName
    });
  }
};
_init = __decoratorStart(_a2);
__decorateElement(_init, 1, "Inspector", _Inspector_dec, _AppDBus);
__decorateElement(_init, 1, "ToggleWindow", _ToggleWindow_dec, _AppDBus);
__decorateElement(_init, 1, "Quit", _Quit_dec, _AppDBus);
__decorateElement(_init, 1, "Request", _Request_dec, _AppDBus);
_AppDBus = __decorateElement(_init, 0, "AppDBus", _AppDBus_decorators, _AppDBus);
__runInitializers(_init, 1, _AppDBus);
var AppDBus = _AppDBus;

// ../../../usr/share/ags/js/lib/gtk4/app.ts
import { setConsoleLogDomain } from "console";
import { exit, programArgs } from "system";

// ../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
import GObject5 from "gi://GObject";

// ../../../usr/share/ags/js/node_modules/gnim/dist/jsx/Fragment.ts
import GObject3 from "gi://GObject";
var _a3, _b;
var Fragment = class _Fragment extends GObject3.Object {
  static {
    this[_b] = {
      append: { param_types: [GObject3.TYPE_OBJECT] },
      remove: { param_types: [GObject3.TYPE_OBJECT] }
    };
  }
  static {
    this[_a3] = {
      children: GObject3.ParamSpec.jsobject("children", "", "", GObject3.ParamFlags.READABLE)
    };
  }
  static {
    GObject3.registerClass(this);
  }
  *[(_b = GObject3.signals, _a3 = GObject3.properties, Symbol.iterator)]() {
    yield* this._children;
  }
  append(child) {
    if (child instanceof _Fragment) {
      throw Error(`nesting Fragments are not yet supported`);
    }
    this._children.push(child);
    this.emit("append", child);
    this.notify("children");
  }
  remove(child) {
    const index = this._children.findIndex((i) => i === child);
    this._children.splice(index, 1);
    this.emit("remove", child);
    this.notify("children");
  }
  constructor({ children = [] } = {}) {
    super();
    this._children = Array.isArray(children) ? children : [children];
  }
  connect(signal2, callback) {
    return super.connect(signal2, callback);
  }
};

// ../../../usr/share/ags/js/node_modules/gnim/dist/jsx/state.ts
import GObject4 from "gi://GObject";
import Gio2 from "gi://Gio";
import GLib3 from "gi://GLib";
var empty = Symbol("empty computed value");
var Accessor = class _Accessor extends Function {
  static {
    this.$gtype = GObject4.TYPE_JSOBJECT;
  }
  #get;
  #subscribe;
  constructor(get, subscribe) {
    super("return arguments.callee._call.apply(arguments.callee, arguments)");
    this.#subscribe = subscribe ?? (() => () => void 0);
    this.#get = get;
  }
  /**
   * Subscribe for value changes.
   * @param callback The function to run when the current value changes.
   * @returns Unsubscribe function.
   */
  subscribe(callback) {
    return this.#subscribe(callback);
  }
  /**
   * @returns The current value.
   */
  get() {
    return this.#get();
  }
  /**
   * Create a new `Accessor` that applies a transformation on its value.
   * @param transform The transformation to apply. Should be a pure function.
   */
  as(transform) {
    return new _Accessor(() => transform(this.#get()), this.#subscribe);
  }
  _call(transform) {
    let value = empty;
    let unsub;
    const subscribers = /* @__PURE__ */ new Set();
    const subscribe = (callback) => {
      if (subscribers.size === 0) {
        unsub = this.subscribe(() => {
          const newValue = transform(this.get());
          if (value !== newValue) {
            value = newValue;
            Array.from(subscribers).forEach((cb) => cb());
          }
        });
      }
      subscribers.add(callback);
      return () => {
        subscribers.delete(callback);
        if (subscribers.size === 0) {
          value = empty;
          unsub();
        }
      };
    };
    const get = () => {
      return value !== empty ? value : transform(this.get());
    };
    return new _Accessor(get, subscribe);
  }
  toString() {
    return `Accessor<${this.get()}>`;
  }
  [Symbol.toPrimitive]() {
    console.warn("Accessor implicitly converted to a primitive value.");
    return this.toString();
  }
};
function createState(init) {
  let currentValue = init;
  const subscribers = /* @__PURE__ */ new Set();
  const subscribe = (callback) => {
    subscribers.add(callback);
    return () => subscribers.delete(callback);
  };
  const set2 = (newValue) => {
    const value = typeof newValue === "function" ? newValue(currentValue) : newValue;
    if (currentValue !== value) {
      currentValue = value;
      Array.from(subscribers).forEach((cb) => cb());
    }
  };
  return [new Accessor(() => currentValue, subscribe), set2];
}
function createComputedProducer(fn) {
  let value = empty;
  let prevDeps = /* @__PURE__ */ new Map();
  const subscribers = /* @__PURE__ */ new Set();
  const cache = /* @__PURE__ */ new Map();
  const effect = () => {
    const deps = /* @__PURE__ */ new Set();
    const newValue = fn((v) => {
      deps.add(v);
      return cache.get(v) || v.get();
    });
    const didChange = value !== newValue;
    value = newValue;
    const newDeps = /* @__PURE__ */ new Map();
    for (const [dep, unsub] of prevDeps) {
      if (!deps.has(dep)) {
        unsub();
      } else {
        newDeps.set(dep, unsub);
      }
    }
    for (const dep of deps) {
      if (!newDeps.has(dep)) {
        const dispose = dep.subscribe(() => {
          const value2 = dep.get();
          if (cache.get(dep) !== value2) {
            cache.set(dep, value2);
            effect();
          }
        });
        newDeps.set(dep, dispose);
      }
    }
    prevDeps = newDeps;
    if (didChange) {
      Array.from(subscribers).forEach((cb) => cb());
    }
  };
  const subscribe = (callback) => {
    if (subscribers.size === 0) {
      effect();
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        value = empty;
        for (const [, unsub] of prevDeps) {
          unsub();
        }
      }
    };
  };
  const get = () => {
    return value !== empty ? value : fn((v) => v.get());
  };
  return new Accessor(get, subscribe);
}
function createComputedArgs(deps, transform) {
  let dispose;
  let value = empty;
  const subscribers = /* @__PURE__ */ new Set();
  const cache = new Array(deps.length);
  const compute = () => {
    const args = deps.map((dep, i) => {
      if (!cache[i]) {
        cache[i] = dep.get();
      }
      return cache[i];
    });
    return transform ? transform(...args) : args;
  };
  const subscribe = (callback) => {
    if (subscribers.size === 0) {
      dispose = deps.map(
        (dep, i) => dep.subscribe(() => {
          const newValue = dep.get();
          if (cache[i] !== newValue) {
            cache[i] = dep.get();
            const newValue2 = compute();
            if (value !== newValue2) {
              value = newValue2;
              Array.from(subscribers).forEach((cb) => cb());
            }
          }
        })
      );
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        value = empty;
        dispose.map((cb) => cb());
        dispose.length = 0;
        cache.length = 0;
      }
    };
  };
  const get = () => {
    return value !== empty ? value : compute();
  };
  return new Accessor(get, subscribe);
}
function createComputed(...args) {
  const [depsOrProducer, transform] = args;
  if (typeof depsOrProducer === "function") {
    return createComputedProducer(depsOrProducer);
  } else {
    return createComputedArgs(depsOrProducer, transform);
  }
}
function createBinding(object, key) {
  const prop = kebabify(key);
  const subscribe = (callback) => {
    const sig = object instanceof Gio2.Settings ? "changed" : "notify";
    const id = object.connect(`${sig}::${prop}`, () => callback());
    return () => object.disconnect(id);
  };
  const get = () => {
    if (object instanceof Gio2.Settings) {
      return object.get_value(key).recursiveUnpack();
    }
    if (object instanceof GObject4.Object) {
      const getter2 = `get_${prop.replaceAll("-", "_")}`;
      if (getter2 in object && typeof object[getter2] === "function") {
        return object[getter2]();
      }
      if (prop in object) return object[prop];
      if (key in object) return object[key];
    }
    throw Error(`cannot get property "${key}" on "${object}"`);
  };
  return new Accessor(get, subscribe);
}

// ../../../usr/share/ags/js/node_modules/gnim/dist/jsx/env.ts
function configue(conf) {
  return Object.assign(env, conf);
}
function missingImpl() {
  throw Error("missing impl");
}
var env = {
  intrinsicElements: {},
  textNode: missingImpl,
  appendChild: missingImpl,
  removeChild: missingImpl,
  setCss: missingImpl,
  setClass: missingImpl,
  initProps: () => void 0,
  defaultCleanup: () => void 0
};

// ../../../usr/share/ags/js/node_modules/gnim/dist/jsx/scope.ts
var Scope = class _Scope {
  constructor(parent) {
    this.contexts = /* @__PURE__ */ new Map();
    this.cleanups = /* @__PURE__ */ new Set();
    this.mounts = /* @__PURE__ */ new Set();
    this.mounted = false;
    this.parent = parent;
  }
  onCleanup(callback) {
    this.cleanups?.add(callback);
  }
  onMount(callback) {
    if (this.parent && !this.parent.mounted) {
      this.parent.onMount(callback);
    } else {
      this.mounts.add(callback);
    }
  }
  run(fn) {
    const prev = _Scope.current;
    _Scope.current = this;
    try {
      return fn();
    } finally {
      this.mounts.forEach((cb) => cb());
      this.mounts.clear();
      this.mounted = true;
      _Scope.current = prev;
    }
  }
  dispose() {
    this.cleanups.forEach((cb) => cb());
    this.cleanups.clear();
    this.contexts.clear();
    delete this.parent;
  }
};
function getScope() {
  const scope = Scope.current;
  if (!scope) {
    throw Error("cannot get scope: out of tracking context");
  }
  return scope;
}
function onCleanup(cleanup) {
  if (!Scope.current) {
    console.error(Error("out of tracking context: will not be able to cleanup"));
  }
  Scope.current?.onCleanup(cleanup);
}
function createRoot(fn) {
  const scope = new Scope(null);
  return scope.run(() => fn(() => scope.dispose()));
}

// ../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
var gtkType = Symbol("gtk builder type");
var appendChild = Symbol("JSX add child method");
var removeChild = Symbol("JSX add remove method");
function getType(object) {
  return gtkType in object ? object[gtkType] : null;
}
function isGObjectCtor(ctor) {
  return ctor.prototype instanceof GObject5.Object;
}
function isFunctionCtor(ctor) {
  return typeof ctor === "function" && !isGObjectCtor(ctor);
}
function signalName(key) {
  const [sig, detail] = kebabify(key.slice(2)).split(":");
  if (sig.startsWith("notify-")) {
    return `notify::${sig.slice(7)}`;
  }
  return detail ? `${sig}::${detail}` : sig;
}
function remove(parent, child) {
  if (parent instanceof Fragment) {
    parent.remove(child);
    return;
  }
  if (removeChild in parent && typeof parent[removeChild] === "function") {
    parent[removeChild](child);
    return;
  }
  env.removeChild(parent, child);
}
function append(parent, child) {
  if (parent instanceof Fragment) {
    parent.append(child);
    return;
  }
  if (child instanceof Fragment) {
    for (const ch of child) {
      append(parent, ch);
    }
    const appendHandler = child.connect("append", (_, ch) => {
      if (!(ch instanceof GObject5.Object)) {
        return console.error(TypeError(`cannot add ${ch} to ${parent}`));
      }
      append(parent, ch);
    });
    const removeHandler = child.connect("remove", (_, ch) => {
      if (!(ch instanceof GObject5.Object)) {
        return console.error(TypeError(`cannot remove ${ch} from ${parent}`));
      }
      remove(parent, ch);
    });
    onCleanup(() => {
      child.disconnect(appendHandler);
      child.disconnect(removeHandler);
    });
    return;
  }
  if (appendChild in parent && typeof parent[appendChild] === "function") {
    parent[appendChild](child, getType(child));
    return;
  }
  env.appendChild(parent, child);
}
function setType(object, type) {
  if (gtkType in object && object[gtkType] !== "") {
    console.warn(`type overriden from ${object[gtkType]} to ${type} on ${object}`);
  }
  Object.assign(object, { [gtkType]: type });
}
function jsx(ctor, inprops, key) {
  const { $, $type, $constructor, children, ...rest } = inprops;
  const props = rest;
  if (key) Object.assign(props, { key });
  const deferProps = env.initProps(ctor, props) ?? [];
  const deferredProps = {};
  for (const [key2, value] of Object.entries(props)) {
    if (value === void 0) {
      delete props[key2];
    }
    if (deferProps.includes(key2)) {
      deferredProps[key2] = props[key2];
      delete props[key2];
    }
  }
  if (typeof ctor === "string") {
    if (ctor in env.intrinsicElements) {
      ctor = env.intrinsicElements[ctor];
    } else {
      throw Error(`unknown intrinsic element "${ctor}"`);
    }
  }
  if (isFunctionCtor(ctor)) {
    const object2 = ctor({ children, ...props });
    if ($type) setType(object2, $type);
    $?.(object2);
    return object2;
  }
  const { css, class: className } = props;
  delete props.css;
  delete props.class;
  const signals = [];
  const bindings = [];
  for (const [key2, value] of Object.entries(props)) {
    if (key2.startsWith("on")) {
      signals.push([key2, value]);
      delete props[key2];
    }
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
      props[key2] = value.get();
    }
  }
  const object = $constructor ? $constructor(props) : new ctor(props);
  if ($constructor) Object.assign(object, props);
  if ($type) setType(object, $type);
  if (css) env.setCss(object, css);
  if (className) env.setClass(object, className);
  for (let child of Array.isArray(children) ? children : [children]) {
    if (child === true) {
      console.warn(Error("Trying to add boolean value of `true` as a child."));
      continue;
    }
    if (Array.isArray(child)) {
      for (const ch of child) {
        append(object, ch);
      }
    } else if (child) {
      if (!(child instanceof GObject5.Object)) {
        child = env.textNode(child);
      }
      append(object, child);
    }
  }
  const disposeHandlers = signals.map(([sig, handler]) => {
    const id = object.connect(signalName(sig), handler);
    return () => object.disconnect(id);
  });
  for (const [key2, value] of Object.entries(deferredProps)) {
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
    } else {
      Object.assign(object, { [key2]: value });
    }
  }
  const disposeBindings = bindings.map(([prop, binding]) => {
    const dispose = binding.subscribe(() => {
      set(object, prop, binding.get());
    });
    set(object, prop, binding.get());
    return dispose;
  });
  if (disposeBindings.length > 0 || disposeHandlers.length > 0) {
    onCleanup(() => {
      disposeHandlers.forEach((cb) => cb());
      disposeBindings.forEach((cb) => cb());
    });
  }
  $?.(object);
  return object;
}
var jsxs = jsx;

// ../../../usr/share/ags/js/node_modules/gnim/dist/jsx/For.ts
function For({
  each,
  children: mkChild,
  cleanup,
  id = (item) => item
}) {
  const currentScope = getScope();
  const map = /* @__PURE__ */ new Map();
  const fragment = new Fragment();
  function remove2({ item, child, index: [index], scope }) {
    scope.dispose();
    if (typeof cleanup === "function") {
      cleanup(child, item, index.get());
    } else if (cleanup !== null) {
      env.defaultCleanup(child);
    }
  }
  function callback(itareable) {
    const items = [...itareable];
    const ids = items.map(id);
    const idSet = new Set(ids);
    for (const [key, value] of map.entries()) {
      fragment.remove(value.child);
      if (!idSet.has(key)) {
        remove2(value);
        map.delete(key);
      }
    }
    items.map((item, i) => {
      const key = ids[i];
      if (map.has(key)) {
        const {
          index: [, setIndex],
          child
        } = map.get(key);
        setIndex(i);
        if ([...fragment].some((ch) => ch === child)) {
          console.warn(`duplicate keys found: ${key}`);
        } else {
          fragment.append(child);
        }
      } else {
        const [index, setIndex] = createState(i);
        const scope = new Scope(currentScope);
        const child = scope.run(() => mkChild(item, index));
        map.set(key, { item, child, index: [index, setIndex], scope });
        fragment.append(child);
      }
    });
  }
  const dispose = each.subscribe(() => {
    callback(each.get());
  });
  callback(each.get());
  onCleanup(() => {
    dispose();
    for (const value of map.values()) {
      remove2(value);
    }
    map.clear();
  });
  return fragment;
}

// ../../../usr/share/ags/js/node_modules/gnim/dist/jsx/This.ts
import GObject6 from "gi://GObject";

// ../../../usr/share/ags/js/lib/gtk4/app.ts
Gtk.init();
GLib4.unsetenv("LD_PRELOAD");
await import("gi://Adw?version=1").then(({ default: Adw2 }) => Adw2.init()).catch(() => void 0);
var _request_dec, _cursorTheme_dec, _cursorTheme_dec2, _iconTheme_dec, _iconTheme_dec2, _gtkTheme_dec, _gtkTheme_dec2, _windows_dec, _monitors_dec, _windowToggled_dec, _a4, _App_decorators, _instanceName, _main, _requestHandlers, _dbusService, _cssProviders, _App_instances, settings_get, display_get, _init2;
_App_decorators = [register()];
var App = class extends (_a4 = Gtk.Application, _windowToggled_dec = [signal(Gtk.Window)], _monitors_dec = [getter(Array)], _windows_dec = [getter(Array)], _gtkTheme_dec2 = [setter(String)], _gtkTheme_dec = [getter(String)], _iconTheme_dec2 = [setter(String)], _iconTheme_dec = [getter(String)], _cursorTheme_dec2 = [setter(String)], _cursorTheme_dec = [getter(String)], _request_dec = [signal(Array, Function)], _a4) {
  constructor() {
    super({ flags: Gio3.ApplicationFlags.HANDLES_COMMAND_LINE });
    __runInitializers(_init2, 5, this);
    __privateAdd(this, _App_instances);
    __privateAdd(this, _instanceName, "ags");
    __privateAdd(this, _main);
    __privateAdd(this, _requestHandlers, 0);
    __privateAdd(this, _dbusService);
    __privateAdd(this, _cssProviders, new Array());
    __privateSet(this, _dbusService, new AppDBus({
      toggleWindow: this.toggle_window.bind(this),
      quit: this.quit.bind(this),
      request: (argv) => new Promise((resolve) => this.request(argv, resolve)),
      insector: () => {
        Gtk.Window.set_interactive_debugging(true);
      }
    }));
    __privateGet(this, _App_instances, display_get).get_monitors().connect("items-changed", () => {
      this.notify("monitors");
    });
    this.connect("window-added", (_, window) => {
      const id1 = window.connect("notify::visible", () => this.windowToggled(window));
      const id2 = this.connect("window-removed", (_2, removed) => {
        if (removed == window) {
          window.disconnect(id1);
          this.disconnect(id2);
        }
      });
    });
    __privateGet(this, _App_instances, settings_get).connect("notify", (_, { name }) => {
      switch (name) {
        case "gtk-theme-name":
          this.notify("gtk-theme");
          break;
        case "gtk-icon-theme-name":
          this.notify("icon-theme");
          break;
        case "gtk-cursor-theme-name":
          this.notify("cursor-theme");
          break;
        default:
          break;
      }
    });
  }
  get instanceName() {
    return __privateGet(this, _instanceName);
  }
  /**
   * Get all monitors from {@link Gdk.Display}.
   */
  get_monitors() {
    const mons = __privateGet(this, _App_instances, display_get).get_monitors();
    const list = new Array();
    let monitor = null;
    let i = 0;
    while ((monitor = mons.get_item(i++)) !== null) {
      list.push(monitor);
    }
    return list;
  }
  windowToggled(window) {
    void window;
  }
  get monitors() {
    return this.get_monitors();
  }
  get windows() {
    return this.get_windows();
  }
  set gtkTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkThemeName = name;
  }
  get gtkTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkThemeName;
  }
  set iconTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkIconThemeName = name;
  }
  get iconTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkIconThemeName;
  }
  set cursorTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkCursorThemeName = name;
  }
  get cursorTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkCursorThemeName;
  }
  /**
   * Get a window by its {@link Gtk.Widget.prototype.name} that has been added to this app
   * using {@link Gtk.Application.prototype.add_window}.
   */
  get_window(name) {
    return this.windows.find((w) => w.name === name);
  }
  /**
   * Toggle the visibility of a window by its {@link Gtk.Widget.prototype.name}
   * that has been added to this app using {@link Gtk.Application.prototype.add_window}.
   */
  toggle_window(name) {
    const win = this.get_window(name);
    if (!win) throw Error(`no window registered with name "${name}"`);
    win.visible = !win.visible;
  }
  /**
   * Reset previously set css providers with {@link App.prototype.apply_css}.
   */
  reset_css() {
    for (const provider of __privateGet(this, _cssProviders)) {
      Gtk.StyleContext.remove_provider_for_display(__privateGet(this, _App_instances, display_get), provider);
    }
  }
  /**
   * Add a new {@link Gtk.CssProvider}.
   * @param style Css string or a path to a css file.
   */
  apply_css(style, reset = false) {
    const provider = new Gtk.CssProvider();
    provider.connect("parsing-error", (_, section, error) => {
      const name = section.get_file()?.get_basename() ?? "";
      const line = section.get_start_location().lines + 1;
      const chars = section.get_start_location().line_chars + 1;
      console.error(`CSS Error ${name}:${line}:${chars} ${error.message}`);
    });
    if (reset) this.reset_css();
    if (GLib4.file_test(style, GLib4.FileTest.EXISTS)) {
      provider.load_from_path(style);
    } else if (style.startsWith("resource://")) {
      provider.load_from_resource(style.replace("resource://", ""));
    } else {
      provider.load_from_string(style);
    }
    Gtk.StyleContext.add_provider_for_display(
      __privateGet(this, _App_instances, display_get),
      provider,
      Gtk.STYLE_PROVIDER_PRIORITY_USER
    );
    __privateGet(this, _cssProviders).push(provider);
  }
  /**
   * Shortcut for {@link Gtk.IconTheme.prototype.add_search_path}.
   */
  add_icons(path) {
    Gtk.IconTheme.get_for_display(__privateGet(this, _App_instances, display_get)).add_search_path(path);
  }
  /**
   * Quit and exit the application.
   */
  quit(code = 0) {
    __privateGet(this, _dbusService).stop();
    super.quit();
    exit(code);
  }
  request(args, response) {
    if (__privateGet(this, _requestHandlers) === 0) {
      response(`instance "${this.instanceName}" has no request handler implemented`);
    }
    void args;
  }
  vfunc_command_line(cmd) {
    if (cmd.isRemote) {
      this.request(cmd.get_arguments(), (str) => {
        cmd.print_literal(str + "\n");
        cmd.done();
      });
    } else {
      this.hold();
      __privateGet(this, _dbusService).serve({
        name: this.applicationId
      });
      createRoot((dispose) => {
        var _a7;
        this.connect("shutdown", dispose);
        (_a7 = __privateGet(this, _main)) == null ? void 0 : _a7.call(this, ...programArgs);
      });
    }
    return 0;
  }
  start(config) {
    const { main, requestHandler, instanceName, css, icons: icons2, ...cfg } = config;
    __privateSet(this, _main, main);
    Object.assign(this, cfg);
    if (requestHandler) {
      this.connect("request", (_, args, response) => requestHandler(args, response));
    }
    if (instanceName) __privateSet(this, _instanceName, instanceName);
    if (css) this.apply_css(css, false);
    if (icons2) app.add_icons(icons2);
    this.applicationId = "io.Astal." + this.instanceName;
    setConsoleLogDomain(this.instanceName);
    this.runAsync(programArgs);
  }
  connect(signal2, callback) {
    if (signal2 === "request") __privateSet(this, _requestHandlers, __privateGet(this, _requestHandlers) + 1);
    return super.connect(signal2, callback);
  }
};
_init2 = __decoratorStart(_a4);
_instanceName = new WeakMap();
_main = new WeakMap();
_requestHandlers = new WeakMap();
_dbusService = new WeakMap();
_cssProviders = new WeakMap();
_App_instances = new WeakSet();
settings_get = function() {
  const settings = Gtk.Settings.get_default();
  if (!settings) throw Error("could not get settings");
  return settings;
};
display_get = function() {
  const display = Gdk.Display.get_default();
  if (!display) throw Error("could not get display");
  return display;
};
__decorateElement(_init2, 1, "windowToggled", _windowToggled_dec, App);
__decorateElement(_init2, 2, "monitors", _monitors_dec, App);
__decorateElement(_init2, 2, "windows", _windows_dec, App);
__decorateElement(_init2, 3, "gtkTheme", _gtkTheme_dec2, App);
__decorateElement(_init2, 2, "gtkTheme", _gtkTheme_dec, App);
__decorateElement(_init2, 3, "iconTheme", _iconTheme_dec2, App);
__decorateElement(_init2, 2, "iconTheme", _iconTheme_dec, App);
__decorateElement(_init2, 3, "cursorTheme", _cursorTheme_dec2, App);
__decorateElement(_init2, 2, "cursorTheme", _cursorTheme_dec, App);
__decorateElement(_init2, 1, "request", _request_dec, App);
App = __decorateElement(_init2, 0, "App", _App_decorators, App);
__runInitializers(_init2, 1, App);
var app = new App();
var app_default = app;

// sass:/home/dm1nh/.dots/config/ags/styles/styles.scss
var styles_default = '/* Trop colorscheme for AGS */\n/* ~/.config/ags/styles/colors.scss */\n* {\n  font-family: "JetBrainsMonoNL Nerd Font";\n  font-size: 16px;\n  font-weight: 500;\n}\n\nscale {\n  margin: 0;\n  padding: 0;\n}\nscale trough highlight {\n  min-height: 6px;\n}\nscale trough slider {\n  box-shadow: none;\n  outline: unset;\n  background-color: transparent;\n}\n\nmenubutton {\n  padding: 0;\n}\nmenubutton button {\n  padding: unset;\n  margin: unset;\n}\nmenubutton button:hover {\n  background-color: rgba(211, 198, 170, 0.15);\n}\n\nbutton {\n  padding: unset;\n  margin: unset;\n  background-color: transparent;\n  transition: transform 0.2s ease-in-out;\n}\nbutton:active > * {\n  transform: scale(0.85);\n}\nbutton:hover {\n  background-color: rgba(211, 198, 170, 0.15);\n}\n\nwindow.Bar {\n  background: transparent;\n}\nwindow.Bar .bar-container {\n  padding: 0rem 0.4rem;\n  min-height: 1.75rem;\n  background-color: #171b1f;\n  color: #d3c6aa;\n}\n\n.module-container .icon {\n  padding: 0 0.3em;\n  font-family: "Material Symbols Rounded";\n  font-size: 18px;\n  border-top-left-radius: 0.25em;\n  border-bottom-left-radius: 0.25em;\n  color: #23292e;\n  background-color: #b2c98f;\n}\n.module-container .label {\n  padding: 0 0.3em;\n  color: #d3c6aa;\n  background-color: #2a3137;\n  border-top-right-radius: 0.25em;\n  border-bottom-right-radius: 0.25em;\n}\n\n.workspaces .workspace-button {\n  min-height: 0.7rem;\n  min-width: 0.7rem;\n  border-radius: 100px;\n  background-color: #494f48;\n}\n.workspaces .workspace-button.active {\n  min-width: 1.4rem;\n  background-color: #b2c98f;\n}\n.workspaces .workspace-button.occupied {\n  background-color: #a99e88;\n}\n.workspaces .workspace-button.occupied.active {\n  background-color: #b2c98f;\n}\n\n.taskbar .client.active .client-icon {\n  background-color: #b2c98f;\n  color: #23292e;\n}\n.taskbar .client.active .client-title {\n  background-color: #2a3137;\n  color: #b2c98f;\n}\n.taskbar .client-icon {\n  padding: 0rem 0.3rem;\n  font-family: "Material Symbols Rounded";\n  border-top-left-radius: 0.25em;\n  border-bottom-left-radius: 0.25em;\n  background-color: #444a4f;\n  color: #d3c6aa;\n}\n.taskbar .client-title {\n  min-width: 8em;\n  padding: 0rem 0.3rem;\n  border-top-right-radius: 0.25em;\n  border-bottom-right-radius: 0.25em;\n  background-color: #1e2428;\n  color: #555c54;\n}\n\n.exit-button .icon {\n  background-color: #e67e80;\n}\n.exit-button .label {\n  color: #e67e80;\n}\n\n.clock .icon {\n  background-color: #dbbc7f;\n}\n.clock .label {\n  color: #dbbc7f;\n}\n\n.network .icon {\n  background-color: #ad85d7;\n}\n.network .label {\n  color: #ad85d7;\n}\n\n.netstats .icon {\n  background-color: #e69875;\n}\n.netstats .label {\n  color: #e69875;\n}\n\n.volume .icon {\n  background-color: #83c092;\n}\n.volume .label {\n  color: #83c092;\n}\n\n.systray .button-icon {\n  border-radius: 0.25em;\n  padding: 0rem 0.4rem;\n  min-width: 18px;\n  min-height: 18px;\n}\n.systray .button-icon:hover {\n  background-color: #b2c98f;\n  color: #23292e;\n}\n\nwindow.notification-popups {\n  all: unset;\n}\n\n.notification {\n  border-radius: 0.25em;\n  background-color: #1e2428;\n  margin: 4px;\n  box-shadow: 2px 3px 8px 0 alpha(black,0.4);\n  border: 1pt solid alpha(#d3c6aa,0.03);\n}\n.notification.critical {\n  border: 1pt solid alpha(#e67e80,0.4);\n}\n.notification.critical .header .app-name {\n  color: alpha(#e67e80,0.8);\n}\n.notification.critical .header .app-icon {\n  color: alpha(#e67e80,0.6);\n}\n.notification .header {\n  padding: 0.5rem;\n  color: alpha(#d3c6aa,0.5);\n}\n.notification .header .app-icon {\n  margin: 0 0.4rem;\n}\n.notification .header .app-name {\n  margin-right: 0.3rem;\n  font-weight: bold;\n}\n.notification .header .app-name:first-child {\n  margin-left: 0.4rem;\n}\n.notification .header .time {\n  margin: 0 0.4rem;\n}\n.notification .header button {\n  border-radius: 0.25em;\n  padding: 0.2rem;\n  min-width: 0;\n  min-height: 0;\n  background-color: #e67e80;\n  color: #1e2428;\n}\n.notification separator {\n  margin: 0 0.4rem;\n  background-color: alpha(#d3c6aa,0.1);\n}\n.notification .content {\n  margin: 1rem;\n  margin-top: 0.5rem;\n}\n.notification .content .summary {\n  font-size: 1em;\n  color: #d3c6aa;\n}\n.notification .content .body {\n  color: alpha(#d3c6aa,0.6);\n  font-size: 1em;\n}\n.notification .content .image {\n  border: 1px solid alpha(#d3c6aa,0.02);\n  margin-right: 0.5rem;\n  border-radius: 0.25em;\n  min-width: 100px;\n  min-height: 100px;\n  background-size: cover;\n  background-position: center;\n}\n.notification .actions {\n  margin: 1rem;\n  margin-top: 0;\n}\n.notification .actions button {\n  margin: 0 0.3rem;\n  padding: 0.3rem 0;\n  font-size: 0.8rem;\n  border-radius: 0.25em;\n  background-color: alpha(#d3c6aa,0.1);\n}\n.notification .actions button:first-child {\n  margin-left: 0;\n}\n.notification .actions button:last-child {\n  margin-right: 0;\n}';

// ../../../usr/share/ags/js/lib/gtk4/index.ts
import Astal from "gi://Astal?version=4.0";
import Gtk2 from "gi://Gtk?version=4.0";
import Gdk2 from "gi://Gdk?version=4.0";

// ../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
import Gtk4 from "gi://Gtk?version=4.0";
import Astal2 from "gi://Astal?version=4.0";

// ../../../usr/share/ags/js/node_modules/gnim/dist/gtk4/jsx-runtime.ts
import Gtk3 from "gi://Gtk?version=4.0";
import Gio4 from "gi://Gio?version=2.0";
var adw = await import("gi://Adw").then((m) => m.default).catch(() => null);
var dummyBuilder = new Gtk3.Builder();
var { intrinsicElements } = configue({
  initProps(ctor) {
    if (ctor === Gtk3.Stack) {
      const keys = [
        "visibleChildName",
        "visible_child_name"
      ];
      return keys;
    }
    if (adw && ctor === adw.ToggleGroup) {
      const keys = [
        "active",
        "activeName",
        "active_name"
      ];
      return keys;
    }
  },
  setCss(object, css) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set css on ${object}`));
    }
    const ctx = object.get_style_context();
    let provider;
    const setter2 = (css2) => {
      if (!css2.includes("{") || !css2.includes("}")) {
        css2 = `* { ${css2} }`;
      }
      if (provider) ctx.remove_provider(provider);
      provider = new Gtk3.CssProvider();
      provider.load_from_string(css2);
      ctx.add_provider(provider, Gtk3.STYLE_PROVIDER_PRIORITY_USER);
    };
    if (css instanceof Accessor) {
      setter2(css.get());
      const dispose = css.subscribe(() => setter2(css.get()));
      onCleanup(dispose);
    } else {
      setter2(css);
    }
  },
  setClass(object, className) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set className on ${object}`));
    }
    if (className instanceof Accessor) {
      object.cssClasses = className.get().split(/\s+/);
      const dispose = className.subscribe(
        () => object.cssClasses = className.get().split(/\s+/)
      );
      onCleanup(dispose);
    } else {
      object.set_css_classes(className.split(/\s+/));
    }
  },
  textNode(text) {
    return Gtk3.Label.new(text.toString());
  },
  // `set_child` and especially `remove` might be way too generic and there might
  // be cases where it does not actually do what we want it to do
  //
  // if there is a usecase for either of these two that does something else than
  // we expect it to do here in a JSX context we have to check for known instances
  removeChild(parent, child) {
    if (parent instanceof Gtk3.Widget && child instanceof Gtk3.EventController) {
      return parent.remove_controller(child);
    }
    if ("set_child" in parent && typeof parent.set_child == "function") {
      return parent.set_child(null);
    }
    if ("remove" in parent && typeof parent.remove == "function") {
      return parent.remove(child);
    }
    throw Error(`cannot remove ${child} from ${parent}`);
  },
  appendChild(parent, child) {
    if (child instanceof Gtk3.Adjustment && "set_adjustment" in parent && typeof parent.set_adjustment === "function") {
      return parent.set_adjustment(child);
    }
    if (child instanceof Gtk3.Widget && parent instanceof Gtk3.Stack && child.name !== "" && child.name !== null && getType(child) === "named") {
      return parent.add_named(child, child.name);
    }
    if (child instanceof Gtk3.Popover && parent instanceof Gtk3.MenuButton) {
      return parent.set_popover(child);
    }
    if (child instanceof Gio4.MenuModel && (parent instanceof Gtk3.MenuButton || parent instanceof Gtk3.PopoverMenu)) {
      return parent.set_menu_model(child);
    }
    if (child instanceof Gio4.MenuItem && parent instanceof Gio4.Menu) {
    }
    if (child instanceof Gtk3.Window && parent instanceof Gtk3.Application) {
      return parent.add_window(child);
    }
    if (child instanceof Gtk3.TextBuffer && parent instanceof Gtk3.TextView) {
      return parent.set_buffer(child);
    }
    if (parent instanceof Gtk3.Buildable) {
      return parent.vfunc_add_child(dummyBuilder, child, getType(child));
    }
    throw Error(`cannot add ${child} to ${parent}`);
  }
});

// ../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
Object.assign(intrinsicElements, {
  box: Gtk4.Box,
  button: Gtk4.Button,
  centerbox: Gtk4.CenterBox,
  // circularprogress: Astal.CircularProgress,
  drawingarea: Gtk4.DrawingArea,
  entry: Gtk4.Entry,
  image: Gtk4.Image,
  label: Gtk4.Label,
  levelbar: Gtk4.LevelBar,
  menubutton: Gtk4.MenuButton,
  overlay: Gtk4.Overlay,
  popover: Gtk4.Popover,
  revealer: Gtk4.Revealer,
  scrolledwindow: Gtk4.ScrolledWindow,
  slider: Astal2.Slider,
  stack: Gtk4.Stack,
  switch: Gtk4.Switch,
  togglebutton: Gtk4.ToggleButton,
  window: Astal2.Window
});

// config/ags/components/bar/shared/module-container.tsx
function ModuleContainer({
  icon,
  label,
  class: className,
  ...props
}) {
  return /* @__PURE__ */ jsx("button", { class: "module-container " + className, ...props, children: /* @__PURE__ */ jsxs("box", { children: [
    /* @__PURE__ */ jsx("label", { class: "icon", label: icon }),
    /* @__PURE__ */ jsx("label", { class: "label", label })
  ] }) });
}

// config/ags/components/bar/clock/helpers.ts
import GLib6 from "gi://GLib";

// ../../../usr/share/ags/js/lib/process.ts
import Gio5 from "gi://Gio?version=2.0";
import GLib5 from "gi://GLib?version=2.0";
var encoder = new TextEncoder();
var _exit_dec, _stderr_dec, _stdout_dec, _a5, _Process_decorators, _init3, _encoder, _outStream, _errStream, _inStream, _process, _Process_instances, readStream_fn;
_Process_decorators = [register()];
var _Process = class _Process extends (_a5 = GObject.Object, _stdout_dec = [signal(String)], _stderr_dec = [signal(String)], _exit_dec = [signal(Number, Boolean)], _a5) {
  constructor({ argv }) {
    super();
    __runInitializers(_init3, 5, this);
    __privateAdd(this, _Process_instances);
    __privateAdd(this, _encoder, new TextEncoder());
    __privateAdd(this, _outStream);
    __privateAdd(this, _errStream);
    __privateAdd(this, _inStream);
    __privateAdd(this, _process);
    const process = __privateSet(this, _process, Gio5.Subprocess.new(
      argv,
      Gio5.SubprocessFlags.STDIN_PIPE | Gio5.SubprocessFlags.STDOUT_PIPE | Gio5.SubprocessFlags.STDERR_PIPE
    ));
    __privateSet(this, _inStream, Gio5.DataOutputStream.new(process.get_stdin_pipe()));
    __privateSet(this, _outStream, Gio5.DataInputStream.new(process.get_stdout_pipe()));
    __privateSet(this, _errStream, Gio5.DataInputStream.new(process.get_stderr_pipe()));
    __privateMethod(this, _Process_instances, readStream_fn).call(this, __privateGet(this, _outStream));
    __privateMethod(this, _Process_instances, readStream_fn).call(this, __privateGet(this, _errStream));
    process.wait_async(null, (_, res) => {
      try {
        process.wait_finish(res);
      } catch {
      }
      if (process.get_if_exited()) {
        this.exit(process.get_exit_status(), false);
      }
      if (process.get_if_signaled()) {
        this.exit(process.get_term_sig(), true);
      }
    });
  }
  stdout(out) {
    void out;
  }
  stderr(err) {
    void err;
  }
  exit(code, signaled) {
    void [code, signaled];
  }
  connect(signal2, callback) {
    return super.connect(signal2, callback);
  }
  /**
   * Force quit the subprocess.
   */
  kill() {
    __privateGet(this, _process).force_exit();
  }
  /**
   * Send a signal to the subprocess.
   *
   * @param signal Signal number to be sent
   */
  signal(signal2) {
    __privateGet(this, _process).send_signal(signal2);
  }
  /**
   * Write a line to the subprocess' stdin synchronously.
   * See {@link Gio.DataOutputStream.prototype.write_bytes_async}
   *
   * @param str String to be written to stdin
   */
  write(str) {
    return new Promise((resolve, reject) => {
      __privateGet(this, _inStream).write_bytes_async(
        encoder.encode(str),
        GLib5.PRIORITY_DEFAULT,
        null,
        (_, res) => {
          try {
            resolve(__privateGet(this, _inStream).write_all_finish(res));
          } catch (error) {
            reject(error);
          }
        }
      );
    });
  }
  /**
   * Write a line to the subprocess' stdin asynchronously.
   *
   * @param str String to be written to stdin
   */
  async writeAsync(str) {
    return new Promise((resolve, reject) => {
      __privateGet(this, _inStream).write_all_async(
        __privateGet(this, _encoder).encode(str),
        GLib5.PRIORITY_DEFAULT,
        null,
        (_, res) => {
          try {
            resolve(void __privateGet(this, _inStream).write_all_finish(res));
          } catch (error) {
            reject(error);
          }
        }
      );
    });
  }
  /**
   * Start a new subprocess with the given command.
   * The first element of the vector is executed with the remaining
   * elements as the argument list.
   */
  static subprocessv(cmd) {
    return new _Process({ argv: cmd });
  }
  /**
   * Start a new subprocess with the given command
   * which is parsed using {@link GLib.shell_parse_argv}.
   */
  static subprocess(cmd) {
    const [, argv] = GLib5.shell_parse_argv(cmd);
    return _Process.subprocessv(argv);
  }
  /**
   * Execute a command synchronously.
   * The first element of the vector is executed with the remaining
   * elements as the argument list.
   *
   * @throws stderr
   * @return stdout of the subprocess
   */
  static execv(cmd) {
    const process = Gio5.Subprocess.new(
      cmd,
      Gio5.SubprocessFlags.STDERR_PIPE | Gio5.SubprocessFlags.STDOUT_PIPE
    );
    const [, out, err] = process.communicate_utf8(null, null);
    if (process.get_successful()) {
      return out.trim();
    } else {
      throw new Error(err);
    }
  }
  /**
   * Execute a command synchronously.
   * The command is parsed using {@link GLib.shell_parse_argv}.
   *
   * @throws stderr
   * @return stdout of the subprocess
   */
  static exec(cmd) {
    const [, argv] = GLib5.shell_parse_argv(cmd);
    return _Process.execv(argv);
  }
  /**
   * Execute a command asynchronously.
   * The first element of the vector is executed with the remaining
   * elements as the argument list.
   *
   * @throws stderr
   * @return stdout of the subprocess
   */
  static execAsyncv(cmd) {
    const process = Gio5.Subprocess.new(
      cmd,
      Gio5.SubprocessFlags.STDERR_PIPE | Gio5.SubprocessFlags.STDOUT_PIPE
    );
    return new Promise((resolve, reject) => {
      process.communicate_utf8_async(null, null, (_, res) => {
        try {
          const [, out, err] = process.communicate_utf8_finish(res);
          if (process.get_successful()) {
            return resolve(out.trim());
          } else {
            reject(new Error(err.trim()));
          }
        } catch (error) {
          reject(error);
        }
      });
    });
  }
  /**
   * Execute a command asynchronously.
   * The command is parsed using {@link GLib.shell_parse_argv}.
   *
   * @throws stderr
   * @return stdout of the subprocess
   */
  static execAsync(cmd) {
    const [, argv] = GLib5.shell_parse_argv(cmd);
    return _Process.execAsyncv(argv);
  }
};
_init3 = __decoratorStart(_a5);
_encoder = new WeakMap();
_outStream = new WeakMap();
_errStream = new WeakMap();
_inStream = new WeakMap();
_process = new WeakMap();
_Process_instances = new WeakSet();
readStream_fn = function(stream) {
  stream.read_line_async(GLib5.PRIORITY_DEFAULT, null, (_, res) => {
    try {
      const [output] = stream.read_line_finish_utf8(res);
      if (output !== null) {
        if (stream === __privateGet(this, _errStream)) {
          this.stderr(output.trim());
        } else {
          this.stdout(output.trim());
        }
        __privateMethod(this, _Process_instances, readStream_fn).call(this, stream);
      }
    } catch (error) {
      console.error(error);
    }
  });
};
__decorateElement(_init3, 1, "stdout", _stdout_dec, _Process);
__decorateElement(_init3, 1, "stderr", _stderr_dec, _Process);
__decorateElement(_init3, 1, "exit", _exit_dec, _Process);
_Process = __decorateElement(_init3, 0, "Process", _Process_decorators, _Process);
__runInitializers(_init3, 1, _Process);
var Process = _Process;
function execAsync(cmd) {
  if (Array.isArray(cmd)) {
    return Process.execAsyncv(cmd);
  } else {
    return Process.execAsync(cmd);
  }
}

// ../../../usr/share/ags/js/lib/time.ts
var _cancelled_dec, _now_dec, _a6, _Timer_decorators, _init4;
_Timer_decorators = [register()];
var _Timer = class _Timer extends (_a6 = GObject.Object, _now_dec = [signal()], _cancelled_dec = [signal()], _a6) {
  constructor() {
    super(...arguments);
    __runInitializers(_init4, 5, this);
  }
  now() {
  }
  cancelled() {
  }
  static interval(interval2, callback) {
    const { timer, now } = _Timer.new(callback, () => {
      if (immediate.is_destroyed()) immediate.destroy();
      if (source.is_destroyed()) source.destroy();
    });
    const immediate = setTimeout(now);
    const source = setInterval(now, interval2);
    return timer;
  }
  static timeout(interval2, callback) {
    const { timer, now } = _Timer.new(callback, () => {
      if (source.is_destroyed()) source.destroy();
    });
    const source = setTimeout(now, interval2);
    return timer;
  }
  static idle(callback) {
    const { timer, now } = _Timer.new(callback, () => {
      if (source.is_destroyed()) source.destroy();
    });
    const source = setTimeout(now);
    return timer;
  }
  static new(onNow, onCancelled) {
    const timer = new _Timer();
    const now = timer.connect("now", () => void onNow?.());
    const cancelled = timer.connect("cancelled", () => {
      timer.disconnect(now);
      timer.disconnect(cancelled);
      onCancelled?.();
    });
    return { timer, now: () => timer.now() };
  }
  connect(signal2, callback) {
    return super.connect(signal2, callback);
  }
  cancel() {
    this.cancelled();
  }
};
_init4 = __decoratorStart(_a6);
__decorateElement(_init4, 1, "now", _now_dec, _Timer);
__decorateElement(_init4, 1, "cancelled", _cancelled_dec, _Timer);
_Timer = __decorateElement(_init4, 0, "Timer", _Timer_decorators, _Timer);
__runInitializers(_init4, 1, _Timer);
var Timer = _Timer;
var { interval, timeout, idle } = Timer;
function createPoll(init, ival, execOrFn, transform) {
  let currentValue = init;
  let timer = null;
  const subscribers = /* @__PURE__ */ new Set();
  function set2(value) {
    if (value !== currentValue) {
      currentValue = value;
      Array.from(subscribers).forEach((cb) => cb());
    }
  }
  function compute() {
    if (typeof execOrFn === "function") {
      const value = execOrFn(currentValue);
      if (value instanceof Promise) {
        value.then(set2);
      } else {
        set2(value);
      }
    } else {
      execAsync(execOrFn).then((stdout) => {
        set2(transform ? transform(stdout, currentValue) : stdout);
      });
    }
  }
  function subscribe(callback) {
    if (subscribers.size === 0) {
      setTimeout(compute);
      timer = setInterval(compute, ival);
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0 && timer) {
        clearInterval(timer);
        timer = null;
      }
    };
  }
  return new Accessor(() => currentValue, subscribe);
}

// config/ags/components/bar/clock/helpers.ts
function formatDateTime(format = "%a, %b %d - %H:%M") {
  return createPoll("", 6e4, () => {
    return GLib6.DateTime.new_now_local().format(format);
  });
}
var clockLabel = formatDateTime("%H:%M");
var clockTooltip = formatDateTime();

// config/ags/components/bar/clock/index.tsx
function Clock() {
  return /* @__PURE__ */ jsx(
    ModuleContainer,
    {
      class: "clock",
      icon: "\uE8B5",
      label: clockLabel,
      tooltipText: clockTooltip
    }
  );
}

// config/ags/components/bar/workspaces/index.tsx
import AstalHyprland from "gi://AstalHyprland";

// config/ags/utils/index.ts
function range(max) {
  return Array.from({ length: max }, (_, i) => i);
}
async function bash(strings, ...values) {
  const cmd = typeof strings === "string" ? strings : strings.flatMap((str, i) => str + `${values[i] ?? ""}`).join("");
  return execAsync(["bash", "-c", cmd]).catch((err) => {
    console.error(cmd, err);
    return "";
  });
}

// config/ags/components/bar/workspaces/index.tsx
function WsButton({ ws, ...props }) {
  const hyprland = AstalHyprland.get_default();
  const classNames = createComputed(
    [
      createBinding(hyprland, "focusedWorkspace"),
      createBinding(hyprland, "clients")
    ],
    (fws, _) => {
      const classes = ["workspace-button"];
      const active = fws.id == ws.id;
      if (active) classes.push("active");
      const occupied = hyprland.get_workspace(ws.id)?.get_clients().length > 0;
      if (occupied) classes.push("occupied");
      return classes;
    }
  );
  return /* @__PURE__ */ jsx(
    "button",
    {
      cssClasses: classNames,
      valign: Gtk2.Align.CENTER,
      halign: Gtk2.Align.CENTER,
      onClicked: () => ws.focus(),
      ...props
    }
  );
}
function Workspaces() {
  return /* @__PURE__ */ jsx("box", { cssClasses: ["workspaces"], spacing: 7, children: range(6).map((i) => /* @__PURE__ */ jsx(WsButton, { ws: AstalHyprland.Workspace.dummy(i + 1, null) })) });
}

// config/ags/components/bar/volume/helpers/constants.ts
var icons = {
  muted: "\uE04F",
  low: "\uE04D",
  high: "\uE050",
  overamplified: "\uE98E"
};
var thresholds = {
  101: "overamplified",
  51: "high",
  1: "low",
  0: "muted"
};

// config/ags/components/bar/volume/helpers/index.ts
import AstalWp from "gi://AstalWp";
var speaker = AstalWp.get_default()?.audio.default_speaker;
function getVolumeIcon(volume, mute) {
  const icon = mute ? 0 : [101, 51, 1, 0].find((ts) => ts <= volume * 100);
  return icon ? icons[thresholds[icon]] : icons.muted;
}
var volumeIcon = createComputed(
  [createBinding(speaker, "volume"), createBinding(speaker, "mute")],
  (volume, mute) => getVolumeIcon(volume, mute)
);
var volumeValue = createBinding(speaker, "volume").as((value) => {
  return Math.floor(value * 100).toString().padStart(3, "0") + "%";
});

// config/ags/components/bar/volume/index.tsx
import AstalWp2 from "gi://AstalWp";
function Volume() {
  const speaker2 = AstalWp2.get_default()?.audio.default_speaker;
  function on_scroll(_, __, dx) {
    if (dx > 0) {
      speaker2.set_volume(speaker2.volume - 0.01);
    }
    if (dx < 0) {
      speaker2.set_volume(speaker2.volume + 0.01);
    }
  }
  return /* @__PURE__ */ jsx(
    ModuleContainer,
    {
      class: "volume",
      icon: volumeIcon,
      label: volumeValue,
      onClicked: () => bash("pavucontrol"),
      $: (self) => {
        const scroll_event = Gtk2.EventControllerScroll.new(
          Gtk2.EventControllerScrollFlags.VERTICAL
        );
        scroll_event.connect("scroll", on_scroll);
        self.add_controller(scroll_event);
      }
    }
  );
}

// config/ags/components/bar/systray/index.tsx
import AstalTray from "gi://AstalTray";
function Systray() {
  const tray = AstalTray.get_default();
  const items = createBinding(tray, "items");
  return /* @__PURE__ */ jsx("box", { class: "systray", spacing: 2, children: /* @__PURE__ */ jsx(For, { each: items, children: (item) => /* @__PURE__ */ jsxs(
    "menubutton",
    {
      class: "button",
      $: (self) => {
        self.insert_action_group("dbusmenu", item.actionGroup);
      },
      tooltipText: createBinding(item, "tooltipMarkup"),
      children: [
        /* @__PURE__ */ jsx("image", { class: "button-icon", gicon: createBinding(item, "gicon") }),
        Gtk2.PopoverMenu.new_from_model(item.menuModel)
      ]
    }
  ) }) });
}

// config/ags/components/bar/exit-button/index.tsx
function ExitButton() {
  return /* @__PURE__ */ jsx(
    ModuleContainer,
    {
      class: "exit-button",
      icon: "\uE879",
      label: "Exit",
      onClicked: () => bash("~/.config/hypr/scripts/dmenu.sh quit")
    }
  );
}

// config/ags/components/bar/index.tsx
function Bar(gdkmonitor) {
  const { BOTTOM, LEFT, RIGHT } = Astal.WindowAnchor;
  return /* @__PURE__ */ jsx(
    "window",
    {
      visible: true,
      name: "bar",
      class: "Bar",
      gdkmonitor,
      exclusivity: Astal.Exclusivity.EXCLUSIVE,
      anchor: BOTTOM | LEFT | RIGHT,
      application: app_default,
      children: /* @__PURE__ */ jsxs("centerbox", { cssClasses: ["bar-container"], children: [
        /* @__PURE__ */ jsx("box", { $type: "start", halign: Gtk2.Align.START, spacing: 8, children: /* @__PURE__ */ jsx(Workspaces, {}) }),
        /* @__PURE__ */ jsxs("box", { $type: "end", halign: Gtk2.Align.END, spacing: 8, children: [
          /* @__PURE__ */ jsx(Systray, {}),
          /* @__PURE__ */ jsx(Volume, {}),
          /* @__PURE__ */ jsx(Clock, {}),
          /* @__PURE__ */ jsx(ExitButton, {})
        ] })
      ] })
    }
  );
}

// config/ags/components/notifications/index.tsx
import AstalNotifd2 from "gi://AstalNotifd";

// config/ags/components/notifications/notification.tsx
import Gtk5 from "gi://Gtk?version=4.0";
import Gdk4 from "gi://Gdk?version=4.0";
import Adw from "gi://Adw";
import GLib7 from "gi://GLib";
import AstalNotifd from "gi://AstalNotifd";
import Pango from "gi://Pango";
function isIcon(icon) {
  const iconTheme = Gtk5.IconTheme.get_for_display(Gdk4.Display.get_default());
  return icon && iconTheme.has_icon(icon);
}
function fileExists(path) {
  return GLib7.file_test(path, GLib7.FileTest.EXISTS);
}
function time(time2, format = "%H:%M") {
  return GLib7.DateTime.new_from_unix_local(time2).format(format);
}
function urgency(n) {
  const { LOW, NORMAL, CRITICAL } = AstalNotifd.Urgency;
  switch (n.urgency) {
    case LOW:
      return "low";
    case CRITICAL:
      return "critical";
    case NORMAL:
    default:
      return "normal";
  }
}
function Notification({ notification: n }) {
  return /* @__PURE__ */ jsx(Adw.Clamp, { maximumSize: 400, children: /* @__PURE__ */ jsxs(
    "box",
    {
      widthRequest: 400,
      class: `notification ${urgency(n)}`,
      orientation: Gtk5.Orientation.VERTICAL,
      children: [
        /* @__PURE__ */ jsxs("box", { class: "header", children: [
          (n.appIcon || isIcon(n.desktopEntry)) && /* @__PURE__ */ jsx(
            "image",
            {
              class: "app-icon",
              visible: Boolean(n.appIcon || n.desktopEntry),
              iconName: n.appIcon || n.desktopEntry
            }
          ),
          /* @__PURE__ */ jsx(
            "label",
            {
              class: "app-name",
              halign: Gtk5.Align.START,
              ellipsize: Pango.EllipsizeMode.END,
              label: n.appName || "Unknown"
            }
          ),
          /* @__PURE__ */ jsx(
            "label",
            {
              class: "time",
              hexpand: true,
              halign: Gtk5.Align.END,
              label: time(n.time)
            }
          ),
          /* @__PURE__ */ jsx("button", { onClicked: () => n.dismiss(), children: /* @__PURE__ */ jsx("image", { iconName: "window-close-symbolic" }) })
        ] }),
        /* @__PURE__ */ jsx(Gtk5.Separator, { visible: true }),
        /* @__PURE__ */ jsxs("box", { class: "content", children: [
          n.image && fileExists(n.image) && /* @__PURE__ */ jsx("image", { valign: Gtk5.Align.START, class: "image", file: n.image }),
          n.image && isIcon(n.image) && /* @__PURE__ */ jsx("box", { valign: Gtk5.Align.START, class: "icon-image", children: /* @__PURE__ */ jsx(
            "image",
            {
              iconName: n.image,
              halign: Gtk5.Align.CENTER,
              valign: Gtk5.Align.CENTER
            }
          ) }),
          /* @__PURE__ */ jsxs("box", { orientation: Gtk5.Orientation.VERTICAL, children: [
            /* @__PURE__ */ jsx(
              "label",
              {
                class: "summary",
                halign: Gtk5.Align.START,
                xalign: 0,
                label: n.summary,
                ellipsize: Pango.EllipsizeMode.END
              }
            ),
            n.body && /* @__PURE__ */ jsx(
              "label",
              {
                class: "body",
                wrap: true,
                useMarkup: true,
                halign: Gtk5.Align.START,
                xalign: 0,
                justify: Gtk5.Justification.FILL,
                label: n.body
              }
            )
          ] })
        ] }),
        n.actions.length > 0 && /* @__PURE__ */ jsx("box", { class: "actions", children: n.actions.map(({ label, id }) => /* @__PURE__ */ jsx("button", { hexpand: true, onClicked: () => n.invoke(id), children: /* @__PURE__ */ jsx("label", { label, halign: Gtk5.Align.CENTER, hexpand: true }) })) })
      ]
    }
  ) });
}

// config/ags/components/notifications/index.tsx
function NotificationPopups() {
  const monitors = createBinding(app_default, "monitors");
  const notifd = AstalNotifd2.get_default();
  const [notifications, setNotifications] = createState(
    new Array()
  );
  const notifiedHandler = notifd.connect("notified", (_, id, replaced) => {
    const notification = notifd.get_notification(id);
    if (replaced && notifications.get().some((n) => n.id === id)) {
      setNotifications((ns) => ns.map((n) => n.id === id ? notification : n));
    } else {
      setNotifications((ns) => [notification, ...ns]);
    }
  });
  const resolvedHandler = notifd.connect("resolved", (_, id) => {
    setNotifications((ns) => ns.filter((n) => n.id !== id));
  });
  onCleanup(() => {
    notifd.disconnect(notifiedHandler);
    notifd.disconnect(resolvedHandler);
  });
  return /* @__PURE__ */ jsx(For, { each: monitors, children: (monitor) => /* @__PURE__ */ jsx(
    "window",
    {
      $: (self) => onCleanup(() => self.destroy()),
      class: "notification-popups",
      gdkmonitor: monitor,
      visible: notifications((ns) => ns.length > 0),
      anchor: Astal.WindowAnchor.BOTTOM | Astal.WindowAnchor.RIGHT,
      children: /* @__PURE__ */ jsx("box", { orientation: Gtk2.Orientation.VERTICAL, children: /* @__PURE__ */ jsx(For, { each: notifications, children: (notification) => /* @__PURE__ */ jsx(Notification, { notification }) }) })
    }
  ) });
}

// config/ags/app.ts
app_default.start({
  css: styles_default,
  main() {
    app_default.get_monitors().map(Bar);
    NotificationPopups();
  }
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvb3ZlcnJpZGVzLnRzIiwgIi4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9nb2JqZWN0LnRzIiwgIi4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC91dGlsLnRzIiwgIi4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2d0azQvYXBwLnRzIiwgIi4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9kYnVzLnRzIiwgIi4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2FwcC9kYnVzLnRzIiwgIi4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvanN4LnRzIiwgIi4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvRnJhZ21lbnQudHMiLCAiLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9zdGF0ZS50cyIsICIuLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L2Vudi50cyIsICIuLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L3Njb3BlLnRzIiwgIi4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvRm9yLnRzIiwgIi4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvVGhpcy50cyIsICJzYXNzOi9ob21lL2RtMW5oLy5kb3RzL2NvbmZpZy9hZ3Mvc3R5bGVzL3N0eWxlcy5zY3NzIiwgIi4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2d0azQvaW5kZXgudHMiLCAiLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvZ3RrNC9qc3gtcnVudGltZS50cyIsICIuLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvZ3RrNC9qc3gtcnVudGltZS50cyIsICJjb25maWcvYWdzL2NvbXBvbmVudHMvYmFyL3NoYXJlZC9tb2R1bGUtY29udGFpbmVyLnRzeCIsICJjb25maWcvYWdzL2NvbXBvbmVudHMvYmFyL2Nsb2NrL2hlbHBlcnMudHMiLCAiLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvcHJvY2Vzcy50cyIsICIuLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi90aW1lLnRzIiwgImNvbmZpZy9hZ3MvY29tcG9uZW50cy9iYXIvY2xvY2svaW5kZXgudHN4IiwgImNvbmZpZy9hZ3MvY29tcG9uZW50cy9iYXIvd29ya3NwYWNlcy9pbmRleC50c3giLCAiY29uZmlnL2Fncy91dGlscy9pbmRleC50cyIsICJjb25maWcvYWdzL2NvbXBvbmVudHMvYmFyL3ZvbHVtZS9oZWxwZXJzL2NvbnN0YW50cy50cyIsICJjb25maWcvYWdzL2NvbXBvbmVudHMvYmFyL3ZvbHVtZS9oZWxwZXJzL2luZGV4LnRzIiwgImNvbmZpZy9hZ3MvY29tcG9uZW50cy9iYXIvdm9sdW1lL2luZGV4LnRzeCIsICJjb25maWcvYWdzL2NvbXBvbmVudHMvYmFyL3N5c3RyYXkvaW5kZXgudHN4IiwgImNvbmZpZy9hZ3MvY29tcG9uZW50cy9iYXIvZXhpdC1idXR0b24vaW5kZXgudHN4IiwgImNvbmZpZy9hZ3MvY29tcG9uZW50cy9iYXIvaW5kZXgudHN4IiwgImNvbmZpZy9hZ3MvY29tcG9uZW50cy9ub3RpZmljYXRpb25zL2luZGV4LnRzeCIsICJjb25maWcvYWdzL2NvbXBvbmVudHMvbm90aWZpY2F0aW9ucy9ub3RpZmljYXRpb24udHN4IiwgImNvbmZpZy9hZ3MvYXBwLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyIvKipcbiAqIFdvcmthcm91bmQgZm9yIFwiQ2FuJ3QgY29udmVydCBub24tbnVsbCBwb2ludGVyIHRvIEpTIHZhbHVlIFwiXG4gKi9cblxuZXhwb3J0IHt9XG5cbmZ1bmN0aW9uIHNuYWtlaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0clxuICAgICAgICAucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgXCIkMV8kMlwiKVxuICAgICAgICAucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpXG59XG5cbmFzeW5jIGZ1bmN0aW9uIHN1cHByZXNzPFQ+KG1vZDogUHJvbWlzZTx7IGRlZmF1bHQ6IFQgfT4sIHBhdGNoOiAobTogVCkgPT4gdm9pZCkge1xuICAgIHJldHVybiBtb2QudGhlbigobSkgPT4gcGF0Y2gobS5kZWZhdWx0KSkuY2F0Y2goKCkgPT4gdm9pZCAwKVxufVxuXG5mdW5jdGlvbiBwYXRjaDxQIGV4dGVuZHMgb2JqZWN0Pihwcm90bzogUCwgcHJvcDogRXh0cmFjdDxrZXlvZiBQLCBzdHJpbmc+KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHByb3RvLCBwcm9wLCB7XG4gICAgICAgIGdldCgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzW2BnZXRfJHtzbmFrZWlmeShwcm9wKX1gXSgpXG4gICAgICAgIH0sXG4gICAgfSlcbn1cblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEFwcHNcIiksICh7IEFwcHMsIEFwcGxpY2F0aW9uIH0pID0+IHtcbiAgICBwYXRjaChBcHBzLnByb3RvdHlwZSwgXCJsaXN0XCIpXG4gICAgcGF0Y2goQXBwbGljYXRpb24ucHJvdG90eXBlLCBcImtleXdvcmRzXCIpXG4gICAgcGF0Y2goQXBwbGljYXRpb24ucHJvdG90eXBlLCBcImNhdGVnb3JpZXNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxCYXR0ZXJ5XCIpLCAoeyBVUG93ZXIgfSkgPT4ge1xuICAgIHBhdGNoKFVQb3dlci5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEJsdWV0b290aFwiKSwgKHsgQWRhcHRlciwgQmx1ZXRvb3RoLCBEZXZpY2UgfSkgPT4ge1xuICAgIHBhdGNoKEFkYXB0ZXIucHJvdG90eXBlLCBcInV1aWRzXCIpXG4gICAgcGF0Y2goQmx1ZXRvb3RoLnByb3RvdHlwZSwgXCJhZGFwdGVyc1wiKVxuICAgIHBhdGNoKEJsdWV0b290aC5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxuICAgIHBhdGNoKERldmljZS5wcm90b3R5cGUsIFwidXVpZHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxIeXBybGFuZFwiKSwgKHsgSHlwcmxhbmQsIE1vbml0b3IsIFdvcmtzcGFjZSB9KSA9PiB7XG4gICAgcGF0Y2goSHlwcmxhbmQucHJvdG90eXBlLCBcImJpbmRzXCIpXG4gICAgcGF0Y2goSHlwcmxhbmQucHJvdG90eXBlLCBcIm1vbml0b3JzXCIpXG4gICAgcGF0Y2goSHlwcmxhbmQucHJvdG90eXBlLCBcIndvcmtzcGFjZXNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwiY2xpZW50c1wiKVxuICAgIHBhdGNoKE1vbml0b3IucHJvdG90eXBlLCBcImF2YWlsYWJsZU1vZGVzXCIpXG4gICAgcGF0Y2goTW9uaXRvci5wcm90b3R5cGUsIFwiYXZhaWxhYmxlX21vZGVzXCIpXG4gICAgcGF0Y2goV29ya3NwYWNlLnByb3RvdHlwZSwgXCJjbGllbnRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsTXByaXNcIiksICh7IE1wcmlzLCBQbGF5ZXIgfSkgPT4ge1xuICAgIHBhdGNoKE1wcmlzLnByb3RvdHlwZSwgXCJwbGF5ZXJzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJzdXBwb3J0ZWRfdXJpX3NjaGVtZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZFVyaVNjaGVtZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZF9taW1lX3R5cGVzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJzdXBwb3J0ZWRNaW1lVHlwZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcImNvbW1lbnRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsTmV0d29ya1wiKSwgKHsgV2lmaSB9KSA9PiB7XG4gICAgcGF0Y2goV2lmaS5wcm90b3R5cGUsIFwiYWNjZXNzX3BvaW50c1wiKVxuICAgIHBhdGNoKFdpZmkucHJvdG90eXBlLCBcImFjY2Vzc1BvaW50c1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbE5vdGlmZFwiKSwgKHsgTm90aWZkLCBOb3RpZmljYXRpb24gfSkgPT4ge1xuICAgIHBhdGNoKE5vdGlmZC5wcm90b3R5cGUsIFwibm90aWZpY2F0aW9uc1wiKVxuICAgIHBhdGNoKE5vdGlmaWNhdGlvbi5wcm90b3R5cGUsIFwiYWN0aW9uc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbFBvd2VyUHJvZmlsZXNcIiksICh7IFBvd2VyUHJvZmlsZXMgfSkgPT4ge1xuICAgIHBhdGNoKFBvd2VyUHJvZmlsZXMucHJvdG90eXBlLCBcImFjdGlvbnNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxXcFwiKSwgKHsgV3AsIEF1ZGlvLCBWaWRlbyB9KSA9PiB7XG4gICAgcGF0Y2goV3AucHJvdG90eXBlLCBcImRldmljZXNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwic3RyZWFtc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJyZWNvcmRlcnNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwibWljcm9waG9uZXNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwic3BlYWtlcnNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJzdHJlYW1zXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInJlY29yZGVyc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJzaW5rc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJzb3VyY2VzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcImRldmljZXNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxUcmF5XCIpLCAoeyBUcmF5IH0pID0+IHtcbiAgICBwYXRjaChUcmF5LnByb3RvdHlwZSwgXCJpdGVtc1wiKVxufSlcbiIsICIvKipcbiAqIEluIHRoZSBmdXR1cmUgSSB3b3VsZCBsaWtlIHRvIG1ha2UgdHlwZSBkZWNsYXJhdGlvbiBpbiBkZWNvcmF0b3JzIG9wdGlvbmFsXG4gKiBhbmQgaW5mZXIgaXQgZnJvbSB0eXBlc2NyaXB0IHR5cGVzIGF0IHRyYW5zcGlsZSB0aW1lLiBDdXJyZW50bHksIHdlIGNvdWxkXG4gKiBlaXRoZXIgdXNlIHN0YWdlIDIgZGVjb3JhdG9ycyB3aXRoIHRoZSBcImVtaXREZWNvcmF0b3JNZXRhZGF0YVwiIGFuZFxuICogXCJleHBlcmltZW50YWxEZWNvcmF0b3JzXCIgdHNjb25maWcgb3B0aW9ucy4gSG93ZXZlciwgbWV0YWRhdGEgaXMgbm90IHN1cHBvcnRlZFxuICogYnkgZXNidWlsZCB3aGljaCBpcyB3aGF0IEknbSBtb3N0bHkgdGFyZ2V0aW5nIGFzIHRoZSBidW5kbGVyIGZvciBwZXJmb3JtYW5jZVxuICogcmVhc29ucy4gaHR0cHM6Ly9naXRodWIuY29tL2V2YW53L2VzYnVpbGQvaXNzdWVzLzI1N1xuICogSG93ZXZlciwgSSBiZWxpZXZlIHRoYXQgd2Ugc2hvdWxkIG5vdCB1c2Ugc3RhZ2UgMiBhbnltb3JlLFxuICogc28gSSdtIHdhaXRpbmcgZm9yIGEgYmV0dGVyIGFsdGVybmF0aXZlLlxuICovXG5cbmltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYlwiXG5pbXBvcnQgeyBkZWZpbmVQcm9wZXJ0eUdldHRlciwga2ViYWJpZnkgfSBmcm9tIFwiLi91dGlsLmpzXCJcblxuY29uc3QgcHJpdiA9IFN5bWJvbChcImdvYmplY3QgcHJpdmF0ZVwiKVxuY29uc3QgeyBkZWZpbmVQcm9wZXJ0eSwgZnJvbUVudHJpZXMsIGVudHJpZXMgfSA9IE9iamVjdFxuY29uc3QgeyBPYmplY3Q6IEdPYmosIHJlZ2lzdGVyQ2xhc3MgfSA9IEdPYmplY3RcblxuZXhwb3J0IHsgR09iamVjdCBhcyBkZWZhdWx0IH1cbmV4cG9ydCB7IEdPYmogYXMgT2JqZWN0IH1cblxuZXhwb3J0IGNvbnN0IFNpZ25hbEZsYWdzID0gR09iamVjdC5TaWduYWxGbGFnc1xuZXhwb3J0IHR5cGUgU2lnbmFsRmxhZ3MgPSBHT2JqZWN0LlNpZ25hbEZsYWdzXG5cbmV4cG9ydCBjb25zdCBBY2N1bXVsYXRvclR5cGUgPSBHT2JqZWN0LkFjY3VtdWxhdG9yVHlwZVxuZXhwb3J0IHR5cGUgQWNjdW11bGF0b3JUeXBlID0gR09iamVjdC5BY2N1bXVsYXRvclR5cGVcblxuZXhwb3J0IHR5cGUgUGFyYW1TcGVjPFQgPSB1bmtub3duPiA9IEdPYmplY3QuUGFyYW1TcGVjPFQ+XG5leHBvcnQgY29uc3QgUGFyYW1TcGVjID0gR09iamVjdC5QYXJhbVNwZWNcblxuZXhwb3J0IHR5cGUgUGFyYW1GbGFncyA9IEdPYmplY3QuUGFyYW1GbGFnc1xuZXhwb3J0IGNvbnN0IFBhcmFtRmxhZ3MgPSBHT2JqZWN0LlBhcmFtRmxhZ3NcblxuZXhwb3J0IHR5cGUgR1R5cGU8VCA9IHVua25vd24+ID0gR09iamVjdC5HVHlwZTxUPlxuXG50eXBlIEdPYmogPSBHT2JqZWN0Lk9iamVjdFxuXG5pbnRlcmZhY2UgR09ialByaXZhdGUgZXh0ZW5kcyBHT2JqIHtcbiAgICBbcHJpdl06IFJlY29yZDxzdHJpbmcsIGFueT5cbn1cblxudHlwZSBNZXRhID0ge1xuICAgIHByb3BlcnRpZXM/OiB7XG4gICAgICAgIFtmaWVsZE5hbWU6IHN0cmluZ106IHtcbiAgICAgICAgICAgIGZsYWdzOiBQYXJhbUZsYWdzXG4gICAgICAgICAgICB0eXBlOiBQcm9wZXJ0eVR5cGVEZWNsYXJhdGlvbjx1bmtub3duPlxuICAgICAgICB9XG4gICAgfVxuICAgIHNpZ25hbHM/OiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IHtcbiAgICAgICAgICAgIGRlZmF1bHQ/OiBib29sZWFuXG4gICAgICAgICAgICBmbGFncz86IFNpZ25hbEZsYWdzXG4gICAgICAgICAgICBhY2N1bXVsYXRvcj86IEFjY3VtdWxhdG9yVHlwZVxuICAgICAgICAgICAgcmV0dXJuX3R5cGU/OiBHVHlwZVxuICAgICAgICAgICAgcGFyYW1fdHlwZXM/OiBBcnJheTxHVHlwZT5cbiAgICAgICAgICAgIG1ldGhvZDogKC4uLmFyZzogYW55W10pID0+IHVua25vd25cbiAgICAgICAgfVxuICAgIH1cbn1cblxudHlwZSBDb250ZXh0ID0geyBwcml2YXRlOiBmYWxzZTsgc3RhdGljOiBmYWxzZTsgbmFtZTogc3RyaW5nIH1cbnR5cGUgUHJvcGVydHlDb250ZXh0PFQ+ID0gQ2xhc3NGaWVsZERlY29yYXRvckNvbnRleHQ8R09iaiwgVD4gJiBDb250ZXh0XG50eXBlIEdldHRlckNvbnRleHQ8VD4gPSBDbGFzc0dldHRlckRlY29yYXRvckNvbnRleHQ8R09iaiwgVD4gJiBDb250ZXh0XG50eXBlIFNldHRlckNvbnRleHQ8VD4gPSBDbGFzc1NldHRlckRlY29yYXRvckNvbnRleHQ8R09iaiwgVD4gJiBDb250ZXh0XG50eXBlIFNpZ25hbENvbnRleHQ8VCBleHRlbmRzICgpID0+IGFueT4gPSBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8R09iaiwgVD4gJiBDb250ZXh0XG5cbnR5cGUgU2lnbmFsT3B0aW9ucyA9IHtcbiAgICBkZWZhdWx0PzogYm9vbGVhblxuICAgIGZsYWdzPzogU2lnbmFsRmxhZ3NcbiAgICBhY2N1bXVsYXRvcj86IEFjY3VtdWxhdG9yVHlwZVxufVxuXG50eXBlIFByb3BlcnR5VHlwZURlY2xhcmF0aW9uPFQ+ID1cbiAgICB8ICgobmFtZTogc3RyaW5nLCBmbGFnczogUGFyYW1GbGFncykgPT4gUGFyYW1TcGVjPFQ+KVxuICAgIHwgUGFyYW1TcGVjPFQ+XG4gICAgfCB7ICRndHlwZTogR1R5cGU8VD4gfVxuXG5mdW5jdGlvbiBhc3NlcnRGaWVsZChcbiAgICBjdHg6IENsYXNzRmllbGREZWNvcmF0b3JDb250ZXh0IHwgQ2xhc3NHZXR0ZXJEZWNvcmF0b3JDb250ZXh0IHwgQ2xhc3NTZXR0ZXJEZWNvcmF0b3JDb250ZXh0LFxuKTogc3RyaW5nIHtcbiAgICBpZiAoY3R4LnByaXZhdGUpIHRocm93IEVycm9yKFwicHJpdmF0ZSBmaWVsZHMgYXJlIG5vdCBzdXBwb3J0ZWRcIilcbiAgICBpZiAoY3R4LnN0YXRpYykgdGhyb3cgRXJyb3IoXCJzdGF0aWMgZmllbGRzIGFyZSBub3Qgc3VwcG9ydGVkXCIpXG5cbiAgICBpZiAodHlwZW9mIGN0eC5uYW1lICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHRocm93IEVycm9yKFwib25seSBzdHJpbmdzIGNhbiBiZSBnb2JqZWN0IHByb3BlcnR5IGtleXNcIilcbiAgICB9XG5cbiAgICByZXR1cm4gY3R4Lm5hbWVcbn1cblxuLyoqXG4gKiBEZWZpbmVzIGEgcmVhZGFibGUgKmFuZCogd3JpdGVhYmxlIHByb3BlcnR5IHRvIGJlIHJlZ2lzdGVyZWQgd2hlbiB1c2luZyB0aGUge0BsaW5rIHJlZ2lzdGVyfSBkZWNvcmF0b3IuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjbGFzcyB7XG4gKiAgICAgXFxAcHJvcGVydHkoU3RyaW5nKSBteVByb3AgPSBcIlwiXG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHByb3BlcnR5PFQ+KHR5cGVEZWNsYXJhdGlvbjogUHJvcGVydHlUeXBlRGVjbGFyYXRpb248VD4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKFxuICAgICAgICBfOiB2b2lkLFxuICAgICAgICBjdHg6IFByb3BlcnR5Q29udGV4dDxUPixcbiAgICAgICAgb3B0aW9ucz86IHsgbWV0YU9ubHk6IHRydWUgfSxcbiAgICApOiAodGhpczogR09iaiwgaW5pdDogVCkgPT4gYW55IHtcbiAgICAgICAgY29uc3QgZmllbGROYW1lID0gYXNzZXJ0RmllbGQoY3R4KVxuICAgICAgICBjb25zdCBrZXkgPSBrZWJhYmlmeShmaWVsZE5hbWUpXG4gICAgICAgIGNvbnN0IG1ldGE6IFBhcnRpYWw8TWV0YT4gPSBjdHgubWV0YWRhdGEhXG5cbiAgICAgICAgbWV0YS5wcm9wZXJ0aWVzID8/PSB7fVxuICAgICAgICBtZXRhLnByb3BlcnRpZXNbZmllbGROYW1lXSA9IHsgZmxhZ3M6IFBhcmFtRmxhZ3MuUkVBRFdSSVRFLCB0eXBlOiB0eXBlRGVjbGFyYXRpb24gfVxuXG4gICAgICAgIGN0eC5hZGRJbml0aWFsaXplcihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBkZWZpbmVQcm9wZXJ0eUdldHRlcih0aGlzLCBmaWVsZE5hbWUgYXMgRXh0cmFjdDxrZXlvZiBHT2JqLCBzdHJpbmc+KVxuXG4gICAgICAgICAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLm1ldGFPbmx5KSByZXR1cm5cblxuICAgICAgICAgICAgZGVmaW5lUHJvcGVydHkodGhpcywgZmllbGROYW1lLCB7XG4gICAgICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHNldCh2OiBUKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzW3ByaXZdW2tleV0gIT09IHYpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbcHJpdl1ba2V5XSA9IHZcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubm90aWZ5KGtleSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0KCk6IFQge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpc1twcml2XVtrZXldXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0gc2F0aXNmaWVzIFRoaXNUeXBlPEdPYmpQcml2YXRlPilcbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGluaXQ6IFQpIHtcbiAgICAgICAgICAgIGNvbnN0IGRpY3QgPSAoKHRoaXMgYXMgR09ialByaXZhdGUpW3ByaXZdID8/PSB7fSlcbiAgICAgICAgICAgIGRpY3Rba2V5XSA9IGluaXRcbiAgICAgICAgICAgIHJldHVybiBpbml0XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogRGVmaW5lcyBhIHJlYWQtb25seSBwcm9wZXJ0eSB0byBiZSByZWdpc3RlcmVkIHdoZW4gdXNpbmcgdGhlIHtAbGluayByZWdpc3Rlcn0gZGVjb3JhdG9yLlxuICogSWYgdGhlIGdldHRlciBoYXMgYSBzZXR0ZXIgcGFpciBkZWNvcmF0ZWQgd2l0aCB0aGUge0BsaW5rIHNldHRlcn0gZGVjb3JhdG9yIHRoZSBwcm9wZXJ0eSB3aWxsIGJlIHJlYWRhYmxlICphbmQqIHdyaXRlYWJsZS5cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHNcbiAqIGNsYXNzIHtcbiAqICAgICBcXEBzZXR0ZXIoU3RyaW5nKVxuICogICAgIHNldCBteVByb3AodmFsdWU6IHN0cmluZykge1xuICogICAgICAgICAvL1xuICogICAgIH1cbiAqXG4gKiAgICAgXFxAZ2V0dGVyKFN0cmluZylcbiAqICAgICBnZXQgbXlQcm9wKCk6IHN0cmluZyB7XG4gKiAgICAgICAgIHJldHVybiBcIlwiXG4gKiAgICAgfVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXR0ZXI8VD4odHlwZURlY2xhcmF0aW9uOiBQcm9wZXJ0eVR5cGVEZWNsYXJhdGlvbjxUPikge1xuICAgIHJldHVybiBmdW5jdGlvbiAoZ2V0OiAodGhpczogR09iaikgPT4gYW55LCBjdHg6IEdldHRlckNvbnRleHQ8VD4pIHtcbiAgICAgICAgY29uc3QgZmllbGROYW1lID0gYXNzZXJ0RmllbGQoY3R4KVxuICAgICAgICBjb25zdCBtZXRhOiBQYXJ0aWFsPE1ldGE+ID0gY3R4Lm1ldGFkYXRhIVxuICAgICAgICBjb25zdCBwcm9wcyA9IChtZXRhLnByb3BlcnRpZXMgPz89IHt9KVxuICAgICAgICBpZiAoZmllbGROYW1lIGluIHByb3BzKSB7XG4gICAgICAgICAgICBjb25zdCB7IGZsYWdzLCB0eXBlIH0gPSBwcm9wc1tmaWVsZE5hbWVdXG4gICAgICAgICAgICBwcm9wc1tmaWVsZE5hbWVdID0geyBmbGFnczogZmxhZ3MgfCBQYXJhbUZsYWdzLlJFQURBQkxFLCB0eXBlIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHByb3BzW2ZpZWxkTmFtZV0gPSB7IGZsYWdzOiBQYXJhbUZsYWdzLlJFQURBQkxFLCB0eXBlOiB0eXBlRGVjbGFyYXRpb24gfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBnZXRcbiAgICB9XG59XG5cbi8qKlxuICogRGVmaW5lcyBhIHdyaXRlLW9ubHkgcHJvcGVydHkgdG8gYmUgcmVnaXN0ZXJlZCB3aGVuIHVzaW5nIHRoZSB7QGxpbmsgcmVnaXN0ZXJ9IGRlY29yYXRvci5cbiAqIElmIHRoZSBzZXR0ZXIgaGFzIGEgZ2V0dGVyIHBhaXIgZGVjb3JhdGVkIHdpdGggdGhlIHtAbGluayBnZXR0ZXJ9IGRlY29yYXRvciB0aGUgcHJvcGVydHkgd2lsbCBiZSB3cml0ZWFibGUgKmFuZCogcmVhZGFibGUuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjbGFzcyB7XG4gKiAgICAgXFxAc2V0dGVyKFN0cmluZylcbiAqICAgICBzZXQgbXlQcm9wKHZhbHVlOiBzdHJpbmcpIHtcbiAqICAgICAgICAgLy9cbiAqICAgICB9XG4gKlxuICogICAgIFxcQGdldHRlcihTdHJpbmcpXG4gKiAgICAgZ2V0IG15UHJvcCgpOiBzdHJpbmcge1xuICogICAgICAgICByZXR1cm4gXCJcIlxuICogICAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0dGVyPFQ+KHR5cGVEZWNsYXJhdGlvbjogUHJvcGVydHlUeXBlRGVjbGFyYXRpb248VD4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKHNldDogKHRoaXM6IEdPYmosIHZhbHVlOiBhbnkpID0+IHZvaWQsIGN0eDogU2V0dGVyQ29udGV4dDxUPikge1xuICAgICAgICBjb25zdCBmaWVsZE5hbWUgPSBhc3NlcnRGaWVsZChjdHgpXG4gICAgICAgIGNvbnN0IG1ldGE6IFBhcnRpYWw8TWV0YT4gPSBjdHgubWV0YWRhdGEhXG4gICAgICAgIGNvbnN0IHByb3BzID0gKG1ldGEucHJvcGVydGllcyA/Pz0ge30pXG4gICAgICAgIGlmIChmaWVsZE5hbWUgaW4gcHJvcHMpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgZmxhZ3MsIHR5cGUgfSA9IHByb3BzW2ZpZWxkTmFtZV1cbiAgICAgICAgICAgIHByb3BzW2ZpZWxkTmFtZV0gPSB7IGZsYWdzOiBmbGFncyB8IFBhcmFtRmxhZ3MuV1JJVEFCTEUsIHR5cGUgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcHJvcHNbZmllbGROYW1lXSA9IHsgZmxhZ3M6IFBhcmFtRmxhZ3MuV1JJVEFCTEUsIHR5cGU6IHR5cGVEZWNsYXJhdGlvbiB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNldFxuICAgIH1cbn1cblxudHlwZSBQYXJhbVR5cGU8UD4gPSBQIGV4dGVuZHMgeyAkZ3R5cGU6IEdUeXBlPGluZmVyIFQ+IH0gPyBUIDogUCBleHRlbmRzIEdUeXBlPGluZmVyIFQ+ID8gVCA6IG5ldmVyXG5cbnR5cGUgUGFyYW1UeXBlczxQYXJhbXM+ID0ge1xuICAgIFtLIGluIGtleW9mIFBhcmFtc106IFBhcmFtVHlwZTxQYXJhbXNbS10+XG59XG5cbi8qKlxuICogRGVmaW5lcyBhIHNpZ25hbCB0byBiZSByZWdpc3RlcmVkIHdoZW4gdXNpbmcgdGhlIHtAbGluayByZWdpc3Rlcn0gZGVjb3JhdG9yLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogY2xhc3Mge1xuICogICAgIFxcQHNpZ25hbChbU3RyaW5nLCBOdW1iZXJdLCBCb29sZWFuLCB7XG4gKiAgICAgICAgIGFjY3VtdWxhdG9yOiBBY2N1bXVsYXRvclR5cGUuRklSU1RfV0lOU1xuICogICAgIH0pXG4gKiAgICAgbXlTaWduYWwoc3RyOiBzdHJpbmcsIG46IG51bWJlcik6IGJvb2xlYW4ge1xuICogICAgICAgICAvLyBkZWZhdWx0IGhhbmRsZXJcbiAqICAgICAgICAgcmV0dXJuIGZhbHNlXG4gKiAgICAgfVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzaWduYWw8XG4gICAgY29uc3QgUGFyYW1zIGV4dGVuZHMgQXJyYXk8eyAkZ3R5cGU6IEdUeXBlIH0gfCBHVHlwZT4sXG4gICAgUmV0dXJuIGV4dGVuZHMgeyAkZ3R5cGU6IEdUeXBlIH0gfCBHVHlwZSxcbj4oXG4gICAgcGFyYW1zOiBQYXJhbXMsXG4gICAgcmV0dXJuVHlwZTogUmV0dXJuLFxuICAgIG9wdGlvbnM/OiBTaWduYWxPcHRpb25zLFxuKTogKFxuICAgIG1ldGhvZDogKHRoaXM6IEdPYmosIC4uLmFyZ3M6IGFueSkgPT4gUGFyYW1UeXBlPFJldHVybj4sXG4gICAgY3R4OiBTaWduYWxDb250ZXh0PHR5cGVvZiBtZXRob2Q+LFxuKSA9PiAodGhpczogR09iaiwgLi4uYXJnczogUGFyYW1UeXBlczxQYXJhbXM+KSA9PiBhbnlcblxuLyoqXG4gKiBEZWZpbmVzIGEgc2lnbmFsIHRvIGJlIHJlZ2lzdGVyZWQgd2hlbiB1c2luZyB0aGUge0BsaW5rIHJlZ2lzdGVyfSBkZWNvcmF0b3IuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjbGFzcyB7XG4gKiAgICAgXFxAc2lnbmFsKFN0cmluZywgTnVtYmVyKVxuICogICAgIG15U2lnbmFsKHN0cjogc3RyaW5nLCBuOiBudW1iZXIpOiB2b2lkIHtcbiAqICAgICAgICAgLy8gZGVmYXVsdCBoYW5kbGVyXG4gKiAgICAgfVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzaWduYWw8UGFyYW1zIGV4dGVuZHMgQXJyYXk8eyAkZ3R5cGU6IEdUeXBlIH0gfCBHVHlwZT4+KFxuICAgIC4uLnBhcmFtczogUGFyYW1zXG4pOiAoXG4gICAgbWV0aG9kOiAodGhpczogR09iamVjdC5PYmplY3QsIC4uLmFyZ3M6IGFueSkgPT4gdm9pZCxcbiAgICBjdHg6IFNpZ25hbENvbnRleHQ8dHlwZW9mIG1ldGhvZD4sXG4pID0+ICh0aGlzOiBHT2JqZWN0Lk9iamVjdCwgLi4uYXJnczogUGFyYW1UeXBlczxQYXJhbXM+KSA9PiB2b2lkXG5cbmV4cG9ydCBmdW5jdGlvbiBzaWduYWw8XG4gICAgUGFyYW1zIGV4dGVuZHMgQXJyYXk8eyAkZ3R5cGU6IEdUeXBlIH0gfCBHVHlwZT4sXG4gICAgUmV0dXJuIGV4dGVuZHMgeyAkZ3R5cGU6IEdUeXBlIH0gfCBHVHlwZSxcbj4oXG4gICAgLi4uYXJnczogUGFyYW1zIHwgW3BhcmFtczogUGFyYW1zLCByZXR1cm5UeXBlPzogUmV0dXJuLCBvcHRpb25zPzogU2lnbmFsT3B0aW9uc11cbik6IChcbiAgICBtZXRob2Q6ICh0aGlzOiBHT2JqLCAuLi5hcmdzOiBQYXJhbVR5cGVzPFBhcmFtcz4pID0+IFBhcmFtVHlwZTxSZXR1cm4+IHwgdm9pZCxcbiAgICBjdHg6IFNpZ25hbENvbnRleHQ8dHlwZW9mIG1ldGhvZD4sXG4pID0+IHR5cGVvZiBtZXRob2Qge1xuICAgIHJldHVybiBmdW5jdGlvbiAobWV0aG9kLCBjdHgpIHtcbiAgICAgICAgaWYgKGN0eC5wcml2YXRlKSB0aHJvdyBFcnJvcihcInByaXZhdGUgZmllbGRzIGFyZSBub3Qgc3VwcG9ydGVkXCIpXG4gICAgICAgIGlmIChjdHguc3RhdGljKSB0aHJvdyBFcnJvcihcInN0YXRpYyBmaWVsZHMgYXJlIG5vdCBzdXBwb3J0ZWRcIilcblxuICAgICAgICBpZiAodHlwZW9mIGN0eC5uYW1lICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihcIm9ubHkgc3RyaW5ncyBjYW4gYmUgZ29iamVjdCBzaWduYWxzXCIpXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBzaWduYWxOYW1lID0ga2ViYWJpZnkoY3R4Lm5hbWUpXG4gICAgICAgIGNvbnN0IG1ldGE6IFBhcnRpYWw8TWV0YT4gPSBjdHgubWV0YWRhdGEhXG4gICAgICAgIGNvbnN0IHNpZ25hbHMgPSAobWV0YS5zaWduYWxzID8/PSB7fSlcblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShhcmdzWzBdKSkge1xuICAgICAgICAgICAgY29uc3QgW3BhcmFtcywgcmV0dXJuVHlwZSwgb3B0aW9uc10gPSBhcmdzIGFzIFtcbiAgICAgICAgICAgICAgICBwYXJhbXM6IFBhcmFtcyxcbiAgICAgICAgICAgICAgICByZXR1cm5UeXBlPzogUmV0dXJuLFxuICAgICAgICAgICAgICAgIG9wdGlvbnM/OiBTaWduYWxPcHRpb25zLFxuICAgICAgICAgICAgXVxuXG4gICAgICAgICAgICBzaWduYWxzW3NpZ25hbE5hbWVdID0ge1xuICAgICAgICAgICAgICAgIG1ldGhvZCxcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiBvcHRpb25zPy5kZWZhdWx0ID8/IHRydWUsXG4gICAgICAgICAgICAgICAgcGFyYW1fdHlwZXM6IHBhcmFtcy5tYXAoKGkpID0+IChcIiRndHlwZVwiIGluIGkgPyBpLiRndHlwZSA6IGkpKSxcbiAgICAgICAgICAgICAgICAuLi4ocmV0dXJuVHlwZSAmJiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybl90eXBlOiBcIiRndHlwZVwiIGluIHJldHVyblR5cGUgPyByZXR1cm5UeXBlLiRndHlwZSA6IHJldHVyblR5cGUsXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgLi4uKG9wdGlvbnM/LmZsYWdzICYmIHtcbiAgICAgICAgICAgICAgICAgICAgZmxhZ3M6IG9wdGlvbnMuZmxhZ3MsXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgLi4uKHR5cGVvZiBvcHRpb25zPy5hY2N1bXVsYXRvciA9PT0gXCJudW1iZXJcIiAmJiB7XG4gICAgICAgICAgICAgICAgICAgIGFjY3VtdWxhdG9yOiBvcHRpb25zLmFjY3VtdWxhdG9yLFxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgcGFyYW1zID0gYXJncyBhcyBQYXJhbXNcbiAgICAgICAgICAgIHNpZ25hbHNbc2lnbmFsTmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgbWV0aG9kLFxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6IHRydWUsXG4gICAgICAgICAgICAgICAgcGFyYW1fdHlwZXM6IHBhcmFtcy5tYXAoKGkpID0+IChcIiRndHlwZVwiIGluIGkgPyBpLiRndHlwZSA6IGkpKSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoLi4ucGFyYW1zKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5lbWl0KHNpZ25hbE5hbWUsIC4uLnBhcmFtcykgYXMgUGFyYW1UeXBlPFJldHVybj5cbiAgICAgICAgfVxuICAgIH1cbn1cblxuY29uc3QgTUFYSU5UID0gMiAqKiAzMSAtIDFcbmNvbnN0IE1JTklOVCA9IC0oMiAqKiAzMSlcbmNvbnN0IE1BWFVJTlQgPSAyICoqIDMyIC0gMVxuY29uc3QgTUFYRkxPQVQgPSAzLjQwMjgyMzVlMzhcbmNvbnN0IE1JTkZMT0FUID0gLTMuNDAyODIzNWUzOFxuY29uc3QgTUlOSU5UNjQgPSBOdW1iZXIuTUlOX1NBRkVfSU5URUdFUlxuY29uc3QgTUFYSU5UNjQgPSBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUlxuXG5mdW5jdGlvbiBwc3BlY0Zyb21HVHlwZSh0eXBlOiBHVHlwZTx1bmtub3duPiwgbmFtZTogc3RyaW5nLCBmbGFnczogUGFyYW1GbGFncykge1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9CT09MRUFOOlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5ib29sZWFuKG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBmYWxzZSlcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfU1RSSU5HOlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5zdHJpbmcobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIFwiXCIpXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0lOVDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMuaW50KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBNSU5JTlQsIE1BWElOVCwgMClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfVUlOVDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMudWludChuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgMCwgTUFYVUlOVCwgMClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfSU5UNjQ6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmludDY0KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBNSU5JTlQ2NCwgTUFYSU5UNjQsIDApXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX1VJTlQ2NDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMudWludDY0KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCAwLCBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUiwgMClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfRkxPQVQ6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmZsb2F0KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBNSU5GTE9BVCwgTUFYRkxPQVQsIDApXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0RPVUJMRTpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMuZG91YmxlKG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBOdW1iZXIuTUlOX1ZBTFVFLCBOdW1iZXIuTUlOX1ZBTFVFLCAwKVxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9KU09CSkVDVDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMuanNvYmplY3QobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MpXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX1ZBUklBTlQ6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLm9iamVjdChuYW1lLCBcIlwiLCBcIlwiLCBmbGFncyBhcyBhbnksIEdMaWIuVmFyaWFudClcblxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9FTlVNOlxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9JTlRFUkZBQ0U6XG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0JPWEVEOlxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9QT0lOVEVSOlxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9QQVJBTTpcbiAgICAgICAgY2FzZSBHT2JqZWN0LnR5cGVfZnJvbV9uYW1lKFwiR1R5cGVcIik6XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgY2Fubm90IGd1ZXNzIFBhcmFtU3BlYyBmcm9tIEdUeXBlIFwiJHt0eXBlfVwiYClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfT0JKRUNUOlxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5vYmplY3QobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MgYXMgYW55LCB0eXBlKVxuICAgIH1cbn1cblxuZnVuY3Rpb24gcHNwZWMobmFtZTogc3RyaW5nLCBmbGFnczogUGFyYW1GbGFncywgZGVjbGFyYXRpb246IFByb3BlcnR5VHlwZURlY2xhcmF0aW9uPHVua25vd24+KSB7XG4gICAgaWYgKGRlY2xhcmF0aW9uIGluc3RhbmNlb2YgUGFyYW1TcGVjKSByZXR1cm4gZGVjbGFyYXRpb25cblxuICAgIGlmIChkZWNsYXJhdGlvbiA9PT0gT2JqZWN0IHx8IGRlY2xhcmF0aW9uID09PSBGdW5jdGlvbiB8fCBkZWNsYXJhdGlvbiA9PT0gQXJyYXkpIHtcbiAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5qc29iamVjdChuYW1lLCBcIlwiLCBcIlwiLCBmbGFncylcbiAgICB9XG5cbiAgICBpZiAoZGVjbGFyYXRpb24gPT09IFN0cmluZykge1xuICAgICAgICByZXR1cm4gUGFyYW1TcGVjLnN0cmluZyhuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgXCJcIilcbiAgICB9XG5cbiAgICBpZiAoZGVjbGFyYXRpb24gPT09IE51bWJlcikge1xuICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmRvdWJsZShuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgLU51bWJlci5NQVhfVkFMVUUsIE51bWJlci5NQVhfVkFMVUUsIDApXG4gICAgfVxuXG4gICAgaWYgKGRlY2xhcmF0aW9uID09PSBCb29sZWFuKSB7XG4gICAgICAgIHJldHVybiBQYXJhbVNwZWMuYm9vbGVhbihuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgZmFsc2UpXG4gICAgfVxuXG4gICAgaWYgKFwiJGd0eXBlXCIgaW4gZGVjbGFyYXRpb24pIHtcbiAgICAgICAgcmV0dXJuIHBzcGVjRnJvbUdUeXBlKGRlY2xhcmF0aW9uLiRndHlwZSwgbmFtZSwgZmxhZ3MpXG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBkZWNsYXJhdGlvbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBkZWNsYXJhdGlvbihuYW1lLCBmbGFncylcbiAgICB9XG5cbiAgICB0aHJvdyBFcnJvcihcImludmFsaWQgUHJvcGVydHlUeXBlRGVjbGFyYXRpb25cIilcbn1cblxudHlwZSBNZXRhSW5mbyA9IEdPYmplY3QuTWV0YUluZm88bmV2ZXIsIEFycmF5PHsgJGd0eXBlOiBHVHlwZTx1bmtub3duPiB9PiwgbmV2ZXI+XG5cbi8qKlxuICogUmVwbGFjZW1lbnQgZm9yIHtAbGluayBHT2JqZWN0LnJlZ2lzdGVyQ2xhc3N9XG4gKiBUaGlzIGRlY29yYXRvciBjb25zdW1lcyBtZXRhZGF0YSBuZWVkZWQgdG8gcmVnaXN0ZXIgdHlwZXMgd2hlcmUgdGhlIHByb3ZpZGVkIGRlY29yYXRvcnMgYXJlIHVzZWQ6XG4gKiAtIHtAbGluayBzaWduYWx9XG4gKiAtIHtAbGluayBwcm9wZXJ0eX1cbiAqIC0ge0BsaW5rIGdldHRlcn1cbiAqIC0ge0BsaW5rIHNldHRlcn1cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHNcbiAqIFxcQHJlZ2lzdGVyKHsgR1R5cGVOYW1lOiBcIk15Q2xhc3NcIiB9KVxuICogY2xhc3MgTXlDbGFzcyBleHRlbmRzIEdPYmplY3QuT2JqZWN0IHsgfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZWdpc3RlcjxDbHMgZXh0ZW5kcyB7IG5ldyAoLi4uYXJnczogYW55KTogR09iaiB9PihvcHRpb25zOiBNZXRhSW5mbyA9IHt9KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChjbHM6IENscywgY3R4OiBDbGFzc0RlY29yYXRvckNvbnRleHQ8Q2xzPikge1xuICAgICAgICBjb25zdCB0ID0gb3B0aW9ucy5UZW1wbGF0ZVxuXG4gICAgICAgIGlmICh0eXBlb2YgdCA9PT0gXCJzdHJpbmdcIiAmJiAhdC5zdGFydHNXaXRoKFwicmVzb3VyY2U6Ly9cIikgJiYgIXQuc3RhcnRzV2l0aChcImZpbGU6Ly9cIikpIHtcbiAgICAgICAgICAgIG9wdGlvbnMuVGVtcGxhdGUgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUodClcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IG1ldGEgPSBjdHgubWV0YWRhdGEhIGFzIE1ldGFcblxuICAgICAgICBjb25zdCBwcm9wczogUmVjb3JkPHN0cmluZywgUGFyYW1TcGVjPHVua25vd24+PiA9IGZyb21FbnRyaWVzKFxuICAgICAgICAgICAgZW50cmllcyhtZXRhLnByb3BlcnRpZXMgPz8ge30pLm1hcCgoW2ZpZWxkTmFtZSwgeyBmbGFncywgdHlwZSB9XSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGtleSA9IGtlYmFiaWZ5KGZpZWxkTmFtZSlcbiAgICAgICAgICAgICAgICBjb25zdCBzcGVjID0gcHNwZWMoa2V5LCBmbGFncywgdHlwZSlcbiAgICAgICAgICAgICAgICByZXR1cm4gW2tleSwgc3BlY11cbiAgICAgICAgICAgIH0pLFxuICAgICAgICApXG5cbiAgICAgICAgY29uc3Qgc2lnbmFscyA9IGZyb21FbnRyaWVzKFxuICAgICAgICAgICAgZW50cmllcyhtZXRhLnNpZ25hbHMgPz8ge30pLm1hcCgoW3NpZ25hbE5hbWUsIHsgZGVmYXVsdDogZGVmLCBtZXRob2QsIC4uLnNpZ25hbCB9XSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChkZWYpIHtcbiAgICAgICAgICAgICAgICAgICAgZGVmaW5lUHJvcGVydHkoY2xzLnByb3RvdHlwZSwgYG9uXyR7c2lnbmFsTmFtZS5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIil9YCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IG1ldGhvZCxcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIFtzaWduYWxOYW1lLCBzaWduYWxdXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgKVxuXG4gICAgICAgIGRlbGV0ZSBtZXRhLnByb3BlcnRpZXNcbiAgICAgICAgZGVsZXRlIG1ldGEuc2lnbmFsc1xuXG4gICAgICAgIHJlZ2lzdGVyQ2xhc3MoeyAuLi5vcHRpb25zLCBQcm9wZXJ0aWVzOiBwcm9wcywgU2lnbmFsczogc2lnbmFscyB9LCBjbHMpXG4gICAgfVxufVxuXG4vKipcbiAqIEBleHBlcmltZW50YWxcbiAqIEFzc2VydHMgYSBndHlwZSBpbiBjYXNlcyB3aGVyZSB0aGUgdHlwZSBpcyB0b28gbG9vc2Uvc3RyaWN0LlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogdHlwZSBUdXBsZSA9IFtudW1iZXIsIG51bWJlcl1cbiAqIGNvbnN0IFR1cGxlID0gZ3R5cGU8VHVwbGU+KEFycmF5KVxuICpcbiAqIGNsYXNzIHtcbiAqICAgXFxAcHJvcGVydHkoVHVwbGUpIHZhbHVlID0gWzEsIDJdIGFzIFR1cGxlXG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGd0eXBlPEFzc2VydD4odHlwZTogR1R5cGU8YW55PiB8IHsgJGd0eXBlOiBHVHlwZTxhbnk+IH0pOiB7XG4gICAgJGd0eXBlOiBHVHlwZTxBc3NlcnQ+XG59IHtcbiAgICByZXR1cm4gXCIkZ3R5cGVcIiBpbiB0eXBlID8gdHlwZSA6IHsgJGd0eXBlOiB0eXBlIH1cbn1cblxuZGVjbGFyZSBnbG9iYWwge1xuICAgIGludGVyZmFjZSBGdW5jdGlvbkNvbnN0cnVjdG9yIHtcbiAgICAgICAgJGd0eXBlOiBHVHlwZTwoLi4uYXJnczogYW55W10pID0+IGFueT5cbiAgICB9XG5cbiAgICBpbnRlcmZhY2UgQXJyYXlDb25zdHJ1Y3RvciB7XG4gICAgICAgICRndHlwZTogR1R5cGU8YW55W10+XG4gICAgfVxuXG4gICAgaW50ZXJmYWNlIERhdGVDb25zdHJ1Y3RvciB7XG4gICAgICAgICRndHlwZTogR1R5cGU8RGF0ZT5cbiAgICB9XG5cbiAgICBpbnRlcmZhY2UgTWFwQ29uc3RydWN0b3Ige1xuICAgICAgICAkZ3R5cGU6IEdUeXBlPE1hcDxhbnksIGFueT4+XG4gICAgfVxuXG4gICAgaW50ZXJmYWNlIFNldENvbnN0cnVjdG9yIHtcbiAgICAgICAgJGd0eXBlOiBHVHlwZTxTZXQ8YW55Pj5cbiAgICB9XG59XG5cbkZ1bmN0aW9uLiRndHlwZSA9IE9iamVjdC4kZ3R5cGUgYXMgRnVuY3Rpb25Db25zdHJ1Y3RvcltcIiRndHlwZVwiXVxuQXJyYXkuJGd0eXBlID0gT2JqZWN0LiRndHlwZSBhcyBBcnJheUNvbnN0cnVjdG9yW1wiJGd0eXBlXCJdXG5EYXRlLiRndHlwZSA9IE9iamVjdC4kZ3R5cGUgYXMgRGF0ZUNvbnN0cnVjdG9yW1wiJGd0eXBlXCJdXG5NYXAuJGd0eXBlID0gT2JqZWN0LiRndHlwZSBhcyBNYXBDb25zdHJ1Y3RvcltcIiRndHlwZVwiXVxuU2V0LiRndHlwZSA9IE9iamVjdC4kZ3R5cGUgYXMgU2V0Q29uc3RydWN0b3JbXCIkZ3R5cGVcIl1cbiIsICJpbXBvcnQgdHlwZSBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuXG5leHBvcnQgZnVuY3Rpb24ga2ViYWJpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyXG4gICAgICAgIC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxLSQyXCIpXG4gICAgICAgIC5yZXBsYWNlQWxsKFwiX1wiLCBcIi1cIilcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNuYWtlaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0clxuICAgICAgICAucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgXCIkMS0kMlwiKVxuICAgICAgICAucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYW1lbGlmeShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHIucmVwbGFjZSgvWy1fXSguKS9nLCAoXywgY2hhcikgPT4gY2hhci50b1VwcGVyQ2FzZSgpKVxufVxuXG5leHBvcnQgdHlwZSBQYXNjYWxpZnk8Uz4gPSBTIGV4dGVuZHMgYCR7aW5mZXIgSGVhZH0ke1wiLVwiIHwgXCJfXCJ9JHtpbmZlciBUYWlsfWBcbiAgICA/IGAke0NhcGl0YWxpemU8SGVhZD59JHtQYXNjYWxpZnk8VGFpbD59YFxuICAgIDogUyBleHRlbmRzIHN0cmluZ1xuICAgICAgPyBDYXBpdGFsaXplPFM+XG4gICAgICA6IG5ldmVyXG5cbmV4cG9ydCB0eXBlIFhtbE5vZGUgPSB7XG4gICAgbmFtZTogc3RyaW5nXG4gICAgYXR0cmlidXRlcz86IFJlY29yZDxzdHJpbmcsIHN0cmluZz5cbiAgICBjaGlsZHJlbj86IEFycmF5PFhtbE5vZGU+XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB4bWwoeyBuYW1lLCBhdHRyaWJ1dGVzLCBjaGlsZHJlbiB9OiBYbWxOb2RlKSB7XG4gICAgbGV0IGJ1aWxkZXIgPSBgPCR7bmFtZX1gXG5cbiAgICBjb25zdCBhdHRycyA9IE9iamVjdC5lbnRyaWVzKGF0dHJpYnV0ZXMgPz8gW10pXG5cbiAgICBpZiAoYXR0cnMubGVuZ3RoID4gMCkge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBhdHRycykge1xuICAgICAgICAgICAgYnVpbGRlciArPSBgICR7a2V5fT1cIiR7dmFsdWV9XCJgXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoY2hpbGRyZW4gJiYgY2hpbGRyZW4ubGVuZ3RoID4gMCkge1xuICAgICAgICBidWlsZGVyICs9IFwiPlwiXG4gICAgICAgIGZvciAoY29uc3Qgbm9kZSBvZiBjaGlsZHJlbikge1xuICAgICAgICAgICAgYnVpbGRlciArPSB4bWwobm9kZSlcbiAgICAgICAgfVxuICAgICAgICBidWlsZGVyICs9IGA8LyR7bmFtZX0+YFxuICAgIH0gZWxzZSB7XG4gICAgICAgIGJ1aWxkZXIgKz0gXCIgLz5cIlxuICAgIH1cblxuICAgIHJldHVybiBidWlsZGVyXG59XG5cbi8vIEJpbmRpbmdzIHdvcmsgb3ZlciBwcm9wZXJ0aWVzIGluIGtlYmFiLWNhc2UgYmVjYXVzZSB0aGF0cyB0aGUgY29udmVudGlvbiBvZiBnb2JqZWN0XG4vLyBob3dldmVyIGluIGpzIGl0cyBlaXRoZXIgc25ha2VfY2FzZSBvciBjYW1lbENhc2Vcbi8vIGFsc28gb24gREJ1cyBpbnRlcmZhY2VzIGl0cyBQYXNjYWxDYXNlIGJ5IGNvbnZlbnRpb25cbi8vIHNvIGFzIGEgd29ya2Fyb3VuZCB3ZSB1c2UgZ2V0X3Byb3BlcnR5X25hbWUgYW5kIG9ubHkgdXNlIHRoZSBwcm9wZXJ0eSBmaWVsZCBhcyBhIGZhbGxiYWNrXG5leHBvcnQgZnVuY3Rpb24gZGVmaW5lUHJvcGVydHlHZXR0ZXI8VCBleHRlbmRzIG9iamVjdD4ob2JqZWN0OiBULCBwcm9wOiBFeHRyYWN0PGtleW9mIFQsIHN0cmluZz4pIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqZWN0LCBgZ2V0XyR7a2ViYWJpZnkocHJvcCkucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpfWAsIHtcbiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6ICgpID0+IG9iamVjdFtwcm9wXSxcbiAgICB9KVxufVxuXG4vLyBhdHRlbXB0IHNldHRpbmcgYSBwcm9wZXJ0eSBvZiBHT2JqZWN0Lk9iamVjdFxuZXhwb3J0IGZ1bmN0aW9uIHNldChvYmo6IEdPYmplY3QuT2JqZWN0LCBwcm9wOiBzdHJpbmcsIHZhbHVlOiBhbnkpIHtcbiAgICBjb25zdCBrZXkgPSBzbmFrZWlmeShwcm9wKVxuICAgIGNvbnN0IGdldHRlciA9IGBnZXRfJHtrZXl9YCBhcyBrZXlvZiB0eXBlb2Ygb2JqXG4gICAgY29uc3Qgc2V0dGVyID0gYHNldF8ke2tleX1gIGFzIGtleW9mIHR5cGVvZiBvYmpcblxuICAgIGxldCBjdXJyZW50OiB1bmtub3duXG5cbiAgICBpZiAoZ2V0dGVyIGluIG9iaiAmJiB0eXBlb2Ygb2JqW2dldHRlcl0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICBjdXJyZW50ID0gKG9ialtnZXR0ZXJdIGFzICgpID0+IHVua25vd24pKClcbiAgICB9IGVsc2Uge1xuICAgICAgICBjdXJyZW50ID0gb2JqW3Byb3AgYXMga2V5b2YgdHlwZW9mIG9ial1cbiAgICB9XG5cbiAgICBpZiAoY3VycmVudCAhPT0gdmFsdWUpIHtcbiAgICAgICAgaWYgKHNldHRlciBpbiBvYmogJiYgdHlwZW9mIG9ialtzZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIDsob2JqW3NldHRlcl0gYXMgKHY6IGFueSkgPT4gdm9pZCkodmFsdWUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKG9iaiwgeyBbcHJvcF06IHZhbHVlIH0pXG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAiaW1wb3J0IFwiLi4vb3ZlcnJpZGVzLmpzXCJcbmltcG9ydCBHT2JqZWN0LCB7IHJlZ2lzdGVyLCBzaWduYWwsIHNldHRlciB9IGZyb20gXCJnbmltL2dvYmplY3RcIlxuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYj92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR2RrIGZyb20gXCJnaTovL0dkaz92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpbz92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgeyBnZXR0ZXIgfSBmcm9tIFwiZ25pbS9nb2JqZWN0XCJcbmltcG9ydCB7IEFwcERCdXMgfSBmcm9tIFwiLi4vYXBwL2RidXMuanNcIlxuaW1wb3J0IHsgc2V0Q29uc29sZUxvZ0RvbWFpbiB9IGZyb20gXCJjb25zb2xlXCJcbmltcG9ydCB7IGV4aXQsIHByb2dyYW1BcmdzIH0gZnJvbSBcInN5c3RlbVwiXG5pbXBvcnQgeyBjcmVhdGVSb290IH0gZnJvbSBcImduaW1cIlxuXG5HdGsuaW5pdCgpXG5cbi8vIHN0b3AgdGhpcyBmcm9tIGxlYWtpbmcgaW50byBzdWJwcm9jZXNzZXNcbi8vIGFuZCBnaW8gbGF1bmNoIGludm9jYXRpb25zXG5HTGliLnVuc2V0ZW52KFwiTERfUFJFTE9BRFwiKVxuXG4vLyB1c2VycyBtaWdodCB3YW50IHRvIHVzZSBBZHdhaXRhIGluIHdoaWNoIGNhc2UgaXQgaGFzIHRvIGJlIGluaXRpYWxpemVkXG4vLyBpdCBtaWdodCBiZSBjb21tb24gcGl0ZmFsbCB0byBmb3JnZXQgaXQgYmVjYXVzZSBgQXBwYCBpcyBub3QgYEFkdy5BcHBsaWNhdGlvbmBcbmF3YWl0IGltcG9ydChcImdpOi8vQWR3P3ZlcnNpb249MVwiKS50aGVuKCh7IGRlZmF1bHQ6IEFkdyB9KSA9PiBBZHcuaW5pdCgpKS5jYXRjaCgoKSA9PiB2b2lkIDApXG5cbnR5cGUgU3RhcnRDb25maWcgPSBQYXJ0aWFsPHtcbiAgICBpbnN0YW5jZU5hbWU6IHN0cmluZ1xuICAgIGNzczogc3RyaW5nXG4gICAgaWNvbnM6IHN0cmluZ1xuICAgIGd0a1RoZW1lOiBzdHJpbmdcbiAgICBpY29uVGhlbWU6IHN0cmluZ1xuICAgIGN1cnNvclRoZW1lOiBzdHJpbmdcbiAgICBtYWluKC4uLmFyZ3Y6IHN0cmluZ1tdKTogdm9pZFxuICAgIHJlcXVlc3RIYW5kbGVyKGFyZ3Y6IHN0cmluZ1tdLCByZXM6IChyZXNwb25zZTogYW55KSA9PiB2b2lkKTogdm9pZFxufT5cblxuaW50ZXJmYWNlIEFwcFNpZ25hbHMgZXh0ZW5kcyBHdGsuQXBwbGljYXRpb24uU2lnbmFsU2lnbmF0dXJlcyB7XG4gICAgXCJyZXF1ZXN0XCI6IEFwcFtcInJlcXVlc3RcIl1cbiAgICBcIndpbmRvdy10b2dnbGVkXCI6IEFwcFtcIndpbmRvd1RvZ2dsZWRcIl1cbn1cblxuQHJlZ2lzdGVyKClcbmNsYXNzIEFwcCBleHRlbmRzIEd0ay5BcHBsaWNhdGlvbiB7XG4gICAgZGVjbGFyZSAkc2lnbmFsczogQXBwU2lnbmFsc1xuXG4gICAgI2luc3RhbmNlTmFtZSA9IFwiYWdzXCJcbiAgICAjbWFpbj86ICguLi5hcmd2OiBzdHJpbmdbXSkgPT4gdm9pZFxuICAgICNyZXF1ZXN0SGFuZGxlcnMgPSAwXG4gICAgI2RidXNTZXJ2aWNlOiBBcHBEQnVzXG4gICAgI2Nzc1Byb3ZpZGVycyA9IG5ldyBBcnJheTxHdGsuQ3NzUHJvdmlkZXI+KClcblxuICAgIGdldCAjc2V0dGluZ3MoKTogR3RrLlNldHRpbmdzIHtcbiAgICAgICAgY29uc3Qgc2V0dGluZ3MgPSBHdGsuU2V0dGluZ3MuZ2V0X2RlZmF1bHQoKVxuICAgICAgICBpZiAoIXNldHRpbmdzKSB0aHJvdyBFcnJvcihcImNvdWxkIG5vdCBnZXQgc2V0dGluZ3NcIilcbiAgICAgICAgcmV0dXJuIHNldHRpbmdzXG4gICAgfVxuXG4gICAgZ2V0ICNkaXNwbGF5KCk6IEdkay5EaXNwbGF5IHtcbiAgICAgICAgY29uc3QgZGlzcGxheSA9IEdkay5EaXNwbGF5LmdldF9kZWZhdWx0KClcbiAgICAgICAgaWYgKCFkaXNwbGF5KSB0aHJvdyBFcnJvcihcImNvdWxkIG5vdCBnZXQgZGlzcGxheVwiKVxuICAgICAgICByZXR1cm4gZGlzcGxheVxuICAgIH1cblxuICAgIGdldCBpbnN0YW5jZU5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiNpbnN0YW5jZU5hbWVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXQgYWxsIG1vbml0b3JzIGZyb20ge0BsaW5rIEdkay5EaXNwbGF5fS5cbiAgICAgKi9cbiAgICBnZXRfbW9uaXRvcnMoKSB7XG4gICAgICAgIGNvbnN0IG1vbnMgPSB0aGlzLiNkaXNwbGF5LmdldF9tb25pdG9ycygpIGFzIEdpby5MaXN0TW9kZWw8R2RrLk1vbml0b3I+XG4gICAgICAgIGNvbnN0IGxpc3QgPSBuZXcgQXJyYXk8R2RrLk1vbml0b3I+KClcblxuICAgICAgICBsZXQgbW9uaXRvcjogR2RrLk1vbml0b3IgfCBudWxsID0gbnVsbFxuICAgICAgICBsZXQgaSA9IDBcblxuICAgICAgICB3aGlsZSAoKG1vbml0b3IgPSBtb25zLmdldF9pdGVtKGkrKykpICE9PSBudWxsKSB7XG4gICAgICAgICAgICBsaXN0LnB1c2gobW9uaXRvcilcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBsaXN0XG4gICAgfVxuXG4gICAgQHNpZ25hbChHdGsuV2luZG93KVxuICAgIHByaXZhdGUgd2luZG93VG9nZ2xlZCh3aW5kb3c6IEd0ay5XaW5kb3cpIHtcbiAgICAgICAgdm9pZCB3aW5kb3dcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXQgYWxsIG1vbml0b3JzIGZyb20ge0BsaW5rIEdkay5EaXNwbGF5fS5cbiAgICAgKi9cbiAgICBAZ2V0dGVyKEFycmF5KVxuICAgIGdldCBtb25pdG9ycygpOiBBcnJheTxHZGsuTW9uaXRvcj4ge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRfbW9uaXRvcnMoKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFdpbmRvd3MgdGhhdCBoYXMgYmVlbiBhZGRlZCB0byB0aGlzIGFwcFxuICAgICAqIHVzaW5nIHtAbGluayBHdGsuQXBwbGljYXRpb24ucHJvdG90eXBlLmFkZF93aW5kb3d9LlxuICAgICAqL1xuICAgIEBnZXR0ZXIoQXJyYXkpXG4gICAgZ2V0IHdpbmRvd3MoKTogQXJyYXk8R3RrLldpbmRvdz4ge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRfd2luZG93cygpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2hvcnRjdXQgZm9yIHtAbGluayBHdGsuU2V0dGluZ3MucHJvdG90eXBlLmd0a1RoZW1lTmFtZX1cbiAgICAgKi9cbiAgICBAc2V0dGVyKFN0cmluZylcbiAgICBzZXQgZ3RrVGhlbWUobmFtZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuI3NldHRpbmdzLmd0a1RoZW1lTmFtZSA9IG5hbWVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaG9ydGN1dCBmb3Ige0BsaW5rIEd0ay5TZXR0aW5ncy5wcm90b3R5cGUuZ3RrVGhlbWVOYW1lfVxuICAgICAqL1xuICAgIEBnZXR0ZXIoU3RyaW5nKVxuICAgIGdldCBndGtUaGVtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI3NldHRpbmdzLmd0a1RoZW1lTmFtZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3J0Y3V0IGZvciB7QGxpbmsgR3RrLlNldHRpbmdzLnByb3RvdHlwZS5ndGtJY29uVGhlbWVOYW1lfVxuICAgICAqL1xuICAgIEBzZXR0ZXIoU3RyaW5nKVxuICAgIHNldCBpY29uVGhlbWUobmFtZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuI3NldHRpbmdzLmd0a0ljb25UaGVtZU5hbWUgPSBuYW1lXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2hvcnRjdXQgZm9yIHtAbGluayBHdGsuU2V0dGluZ3MucHJvdG90eXBlLmd0a0ljb25UaGVtZU5hbWV9XG4gICAgICovXG4gICAgQGdldHRlcihTdHJpbmcpXG4gICAgZ2V0IGljb25UaGVtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI3NldHRpbmdzLmd0a0ljb25UaGVtZU5hbWVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaG9ydGN1dCBmb3Ige0BsaW5rIEd0ay5TZXR0aW5ncy5wcm90b3R5cGUuZ3RrQ3Vyc29yVGhlbWVOYW1lfVxuICAgICAqL1xuICAgIEBzZXR0ZXIoU3RyaW5nKVxuICAgIHNldCBjdXJzb3JUaGVtZShuYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy4jc2V0dGluZ3MuZ3RrQ3Vyc29yVGhlbWVOYW1lID0gbmFtZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3J0Y3V0IGZvciB7QGxpbmsgR3RrLlNldHRpbmdzLnByb3RvdHlwZS5ndGtDdXJzb3JUaGVtZU5hbWV9XG4gICAgICovXG4gICAgQGdldHRlcihTdHJpbmcpXG4gICAgZ2V0IGN1cnNvclRoZW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jc2V0dGluZ3MuZ3RrQ3Vyc29yVGhlbWVOYW1lXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2V0IGEgd2luZG93IGJ5IGl0cyB7QGxpbmsgR3RrLldpZGdldC5wcm90b3R5cGUubmFtZX0gdGhhdCBoYXMgYmVlbiBhZGRlZCB0byB0aGlzIGFwcFxuICAgICAqIHVzaW5nIHtAbGluayBHdGsuQXBwbGljYXRpb24ucHJvdG90eXBlLmFkZF93aW5kb3d9LlxuICAgICAqL1xuICAgIGdldF93aW5kb3cobmFtZTogc3RyaW5nKSB7XG4gICAgICAgIHJldHVybiB0aGlzLndpbmRvd3MuZmluZCgodykgPT4gdy5uYW1lID09PSBuYW1lKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRvZ2dsZSB0aGUgdmlzaWJpbGl0eSBvZiBhIHdpbmRvdyBieSBpdHMge0BsaW5rIEd0ay5XaWRnZXQucHJvdG90eXBlLm5hbWV9XG4gICAgICogdGhhdCBoYXMgYmVlbiBhZGRlZCB0byB0aGlzIGFwcCB1c2luZyB7QGxpbmsgR3RrLkFwcGxpY2F0aW9uLnByb3RvdHlwZS5hZGRfd2luZG93fS5cbiAgICAgKi9cbiAgICB0b2dnbGVfd2luZG93KG5hbWU6IHN0cmluZykge1xuICAgICAgICBjb25zdCB3aW4gPSB0aGlzLmdldF93aW5kb3cobmFtZSlcbiAgICAgICAgaWYgKCF3aW4pIHRocm93IEVycm9yKGBubyB3aW5kb3cgcmVnaXN0ZXJlZCB3aXRoIG5hbWUgXCIke25hbWV9XCJgKVxuICAgICAgICB3aW4udmlzaWJsZSA9ICF3aW4udmlzaWJsZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlc2V0IHByZXZpb3VzbHkgc2V0IGNzcyBwcm92aWRlcnMgd2l0aCB7QGxpbmsgQXBwLnByb3RvdHlwZS5hcHBseV9jc3N9LlxuICAgICAqL1xuICAgIHJlc2V0X2NzcygpIHtcbiAgICAgICAgZm9yIChjb25zdCBwcm92aWRlciBvZiB0aGlzLiNjc3NQcm92aWRlcnMpIHtcbiAgICAgICAgICAgIEd0ay5TdHlsZUNvbnRleHQucmVtb3ZlX3Byb3ZpZGVyX2Zvcl9kaXNwbGF5KHRoaXMuI2Rpc3BsYXksIHByb3ZpZGVyKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIGEgbmV3IHtAbGluayBHdGsuQ3NzUHJvdmlkZXJ9LlxuICAgICAqIEBwYXJhbSBzdHlsZSBDc3Mgc3RyaW5nIG9yIGEgcGF0aCB0byBhIGNzcyBmaWxlLlxuICAgICAqL1xuICAgIGFwcGx5X2NzcyhzdHlsZTogc3RyaW5nLCByZXNldCA9IGZhbHNlKSB7XG4gICAgICAgIGNvbnN0IHByb3ZpZGVyID0gbmV3IEd0ay5Dc3NQcm92aWRlcigpXG5cbiAgICAgICAgcHJvdmlkZXIuY29ubmVjdChcInBhcnNpbmctZXJyb3JcIiwgKF8sIHNlY3Rpb24sIGVycm9yKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBuYW1lID0gc2VjdGlvbi5nZXRfZmlsZSgpPy5nZXRfYmFzZW5hbWUoKSA/PyBcIlwiXG4gICAgICAgICAgICBjb25zdCBsaW5lID0gc2VjdGlvbi5nZXRfc3RhcnRfbG9jYXRpb24oKS5saW5lcyArIDFcbiAgICAgICAgICAgIGNvbnN0IGNoYXJzID0gc2VjdGlvbi5nZXRfc3RhcnRfbG9jYXRpb24oKS5saW5lX2NoYXJzICsgMVxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihgQ1NTIEVycm9yICR7bmFtZX06JHtsaW5lfToke2NoYXJzfSAke2Vycm9yLm1lc3NhZ2V9YClcbiAgICAgICAgfSlcblxuICAgICAgICBpZiAocmVzZXQpIHRoaXMucmVzZXRfY3NzKClcblxuICAgICAgICBpZiAoR0xpYi5maWxlX3Rlc3Qoc3R5bGUsIEdMaWIuRmlsZVRlc3QuRVhJU1RTKSkge1xuICAgICAgICAgICAgcHJvdmlkZXIubG9hZF9mcm9tX3BhdGgoc3R5bGUpXG4gICAgICAgIH0gZWxzZSBpZiAoc3R5bGUuc3RhcnRzV2l0aChcInJlc291cmNlOi8vXCIpKSB7XG4gICAgICAgICAgICBwcm92aWRlci5sb2FkX2Zyb21fcmVzb3VyY2Uoc3R5bGUucmVwbGFjZShcInJlc291cmNlOi8vXCIsIFwiXCIpKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcHJvdmlkZXIubG9hZF9mcm9tX3N0cmluZyhzdHlsZSlcbiAgICAgICAgfVxuXG4gICAgICAgIEd0ay5TdHlsZUNvbnRleHQuYWRkX3Byb3ZpZGVyX2Zvcl9kaXNwbGF5KFxuICAgICAgICAgICAgdGhpcy4jZGlzcGxheSxcbiAgICAgICAgICAgIHByb3ZpZGVyLFxuICAgICAgICAgICAgR3RrLlNUWUxFX1BST1ZJREVSX1BSSU9SSVRZX1VTRVIsXG4gICAgICAgIClcblxuICAgICAgICB0aGlzLiNjc3NQcm92aWRlcnMucHVzaChwcm92aWRlcilcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaG9ydGN1dCBmb3Ige0BsaW5rIEd0ay5JY29uVGhlbWUucHJvdG90eXBlLmFkZF9zZWFyY2hfcGF0aH0uXG4gICAgICovXG4gICAgYWRkX2ljb25zKHBhdGg6IHN0cmluZykge1xuICAgICAgICBHdGsuSWNvblRoZW1lLmdldF9mb3JfZGlzcGxheSh0aGlzLiNkaXNwbGF5KS5hZGRfc2VhcmNoX3BhdGgocGF0aClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBRdWl0IGFuZCBleGl0IHRoZSBhcHBsaWNhdGlvbi5cbiAgICAgKi9cbiAgICBxdWl0KGNvZGUgPSAwKSB7XG4gICAgICAgIHRoaXMuI2RidXNTZXJ2aWNlLnN0b3AoKVxuICAgICAgICBzdXBlci5xdWl0KClcbiAgICAgICAgZXhpdChjb2RlKVxuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcih7IGZsYWdzOiBHaW8uQXBwbGljYXRpb25GbGFncy5IQU5ETEVTX0NPTU1BTkRfTElORSB9KVxuXG4gICAgICAgIHRoaXMuI2RidXNTZXJ2aWNlID0gbmV3IEFwcERCdXMoe1xuICAgICAgICAgICAgdG9nZ2xlV2luZG93OiB0aGlzLnRvZ2dsZV93aW5kb3cuYmluZCh0aGlzKSxcbiAgICAgICAgICAgIHF1aXQ6IHRoaXMucXVpdC5iaW5kKHRoaXMpLFxuICAgICAgICAgICAgcmVxdWVzdDogKGFyZ3YpID0+IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB0aGlzLnJlcXVlc3QoYXJndiwgcmVzb2x2ZSkpLFxuICAgICAgICAgICAgaW5zZWN0b3I6ICgpID0+IHtcbiAgICAgICAgICAgICAgICBHdGsuV2luZG93LnNldF9pbnRlcmFjdGl2ZV9kZWJ1Z2dpbmcodHJ1ZSlcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pXG5cbiAgICAgICAgdGhpcy4jZGlzcGxheS5nZXRfbW9uaXRvcnMoKS5jb25uZWN0KFwiaXRlbXMtY2hhbmdlZFwiLCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLm5vdGlmeShcIm1vbml0b3JzXCIpXG4gICAgICAgIH0pXG5cbiAgICAgICAgdGhpcy5jb25uZWN0KFwid2luZG93LWFkZGVkXCIsIChfLCB3aW5kb3cpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGlkMSA9IHdpbmRvdy5jb25uZWN0KFwibm90aWZ5Ojp2aXNpYmxlXCIsICgpID0+IHRoaXMud2luZG93VG9nZ2xlZCh3aW5kb3cpKVxuICAgICAgICAgICAgY29uc3QgaWQyID0gdGhpcy5jb25uZWN0KFwid2luZG93LXJlbW92ZWRcIiwgKF8sIHJlbW92ZWQpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAocmVtb3ZlZCA9PSB3aW5kb3cpIHtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LmRpc2Nvbm5lY3QoaWQxKVxuICAgICAgICAgICAgICAgICAgICB0aGlzLmRpc2Nvbm5lY3QoaWQyKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG5cbiAgICAgICAgdGhpcy4jc2V0dGluZ3MuY29ubmVjdChcIm5vdGlmeVwiLCAoXywgeyBuYW1lIH0pID0+IHtcbiAgICAgICAgICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgXCJndGstdGhlbWUtbmFtZVwiOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeShcImd0ay10aGVtZVwiKVxuICAgICAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgICAgIGNhc2UgXCJndGstaWNvbi10aGVtZS1uYW1lXCI6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubm90aWZ5KFwiaWNvbi10aGVtZVwiKVxuICAgICAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgICAgIGNhc2UgXCJndGstY3Vyc29yLXRoZW1lLW5hbWVcIjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ub3RpZnkoXCJjdXJzb3ItdGhlbWVcIilcbiAgICAgICAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIEBzaWduYWwoQXJyYXksIEZ1bmN0aW9uKVxuICAgIHByaXZhdGUgcmVxdWVzdChhcmdzOiBzdHJpbmdbXSwgcmVzcG9uc2U6IChyZXNwb25zZTogc3RyaW5nKSA9PiB2b2lkKSB7XG4gICAgICAgIGlmICh0aGlzLiNyZXF1ZXN0SGFuZGxlcnMgPT09IDApIHtcbiAgICAgICAgICAgIHJlc3BvbnNlKGBpbnN0YW5jZSBcIiR7dGhpcy5pbnN0YW5jZU5hbWV9XCIgaGFzIG5vIHJlcXVlc3QgaGFuZGxlciBpbXBsZW1lbnRlZGApXG4gICAgICAgIH1cbiAgICAgICAgdm9pZCBhcmdzXG4gICAgfVxuXG4gICAgdmZ1bmNfY29tbWFuZF9saW5lKGNtZDogR2lvLkFwcGxpY2F0aW9uQ29tbWFuZExpbmUpOiBudW1iZXIge1xuICAgICAgICBpZiAoY21kLmlzUmVtb3RlKSB7XG4gICAgICAgICAgICB0aGlzLnJlcXVlc3QoY21kLmdldF9hcmd1bWVudHMoKSwgKHN0cikgPT4ge1xuICAgICAgICAgICAgICAgIGNtZC5wcmludF9saXRlcmFsKHN0ciArIFwiXFxuXCIpXG4gICAgICAgICAgICAgICAgY21kLmRvbmUoKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuaG9sZCgpXG4gICAgICAgICAgICB0aGlzLiNkYnVzU2VydmljZS5zZXJ2ZSh7XG4gICAgICAgICAgICAgICAgbmFtZTogdGhpcy5hcHBsaWNhdGlvbklkLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIGNyZWF0ZVJvb3QoKGRpc3Bvc2UpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbm5lY3QoXCJzaHV0ZG93blwiLCBkaXNwb3NlKVxuICAgICAgICAgICAgICAgIHRoaXMuI21haW4/LiguLi5wcm9ncmFtQXJncylcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gMFxuICAgIH1cblxuICAgIHN0YXJ0KGNvbmZpZzogU3RhcnRDb25maWcpIHtcbiAgICAgICAgY29uc3QgeyBtYWluLCByZXF1ZXN0SGFuZGxlciwgaW5zdGFuY2VOYW1lLCBjc3MsIGljb25zLCAuLi5jZmcgfSA9IGNvbmZpZ1xuXG4gICAgICAgIHRoaXMuI21haW4gPSBtYWluXG4gICAgICAgIE9iamVjdC5hc3NpZ24odGhpcywgY2ZnKVxuXG4gICAgICAgIGlmIChyZXF1ZXN0SGFuZGxlcikge1xuICAgICAgICAgICAgdGhpcy5jb25uZWN0KFwicmVxdWVzdFwiLCAoXywgYXJncywgcmVzcG9uc2UpID0+IHJlcXVlc3RIYW5kbGVyKGFyZ3MsIHJlc3BvbnNlKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChpbnN0YW5jZU5hbWUpIHRoaXMuI2luc3RhbmNlTmFtZSA9IGluc3RhbmNlTmFtZVxuICAgICAgICBpZiAoY3NzKSB0aGlzLmFwcGx5X2Nzcyhjc3MsIGZhbHNlKVxuICAgICAgICBpZiAoaWNvbnMpIGFwcC5hZGRfaWNvbnMoaWNvbnMpXG5cbiAgICAgICAgdGhpcy5hcHBsaWNhdGlvbklkID0gXCJpby5Bc3RhbC5cIiArIHRoaXMuaW5zdGFuY2VOYW1lXG4gICAgICAgIHNldENvbnNvbGVMb2dEb21haW4odGhpcy5pbnN0YW5jZU5hbWUpXG4gICAgICAgIHRoaXMucnVuQXN5bmMocHJvZ3JhbUFyZ3MpXG4gICAgfVxuXG4gICAgY29ubmVjdDxTIGV4dGVuZHMga2V5b2YgQXBwU2lnbmFscz4oXG4gICAgICAgIHNpZ25hbDogUyxcbiAgICAgICAgY2FsbGJhY2s6IEdPYmplY3QuU2lnbmFsQ2FsbGJhY2s8dGhpcywgQXBwU2lnbmFsc1tTXT4sXG4gICAgKTogbnVtYmVyIHtcbiAgICAgICAgaWYgKHNpZ25hbCA9PT0gXCJyZXF1ZXN0XCIpIHRoaXMuI3JlcXVlc3RIYW5kbGVycyArPSAxXG4gICAgICAgIHJldHVybiBzdXBlci5jb25uZWN0KHNpZ25hbCwgY2FsbGJhY2spXG4gICAgfVxufVxuXG5jb25zdCBhcHAgPSBuZXcgQXBwKClcbmV4cG9ydCBkZWZhdWx0IGFwcFxuIiwgIi8qKlxuICogQSB7QGxpbmsgU2VydmljZX0gY3VycmVudGx5IG9ubHkgYWxsb3dzIGludGVyZmFjaW5nIHdpdGggYSBzaW5nbGUgaW50ZXJmYWNlIG9mIGEgcmVtb3RlIG9iamVjdC5cbiAqIEluIHRoZSBmdXR1cmUgSSB3YW50IHRvIGNvbWUgdXAgd2l0aCBhbiBBUEkgdG8gYmUgYWJsZSB0byBjcmVhdGUgU2VydmljZSBvYmplY3RzIGZvciBtdWx0aXBsZVxuICogaW50ZXJmYWNlcyBvZiBhbiBvYmplY3QgYXQgdGhlIHNhbWUgdGltZS4gRXhhbXBsZSB1c2FnZSB3b3VsZCBiZSBmb3IgZXhhbXBsZSBjb21iaW5pbmdcbiAqIFwib3JnLm1wcmlzLk1lZGlhUGxheWVyMlwiIGFuZCBcIm9yZy5tcHJpcy5NZWRpYVBsYXllcjIuUGxheWVyXCIgaW50byBhIHNpbmdsZSBvYmplY3QuXG4gKi9cbmltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvXCJcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWJcIlxuaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyBkZWZpbmVQcm9wZXJ0eUdldHRlciwga2ViYWJpZnksIHhtbCB9IGZyb20gXCIuL3V0aWwuanNcIlxuaW1wb3J0IHR5cGUgeyBEZWVwSW5mZXIgfSBmcm9tIFwiLi92YXJpYW50LmpzXCJcbmltcG9ydCB7XG4gICAgcmVnaXN0ZXIsXG4gICAgcHJvcGVydHkgYXMgZ3Byb3BlcnR5LFxuICAgIHNpZ25hbCBhcyBnc2lnbmFsLFxuICAgIGdldHRlciBhcyBnZ2V0dGVyLFxuICAgIHNldHRlciBhcyBnc2V0dGVyLFxufSBmcm9tIFwiLi9nb2JqZWN0LmpzXCJcblxuY29uc3QgREVGQVVMVF9USU1FT1VUID0gMTBfMDAwXG5cbmV4cG9ydCBjb25zdCBWYXJpYW50ID0gR0xpYi5WYXJpYW50XG5leHBvcnQgdHlwZSBWYXJpYW50PFQgZXh0ZW5kcyBzdHJpbmc+ID0gR0xpYi5WYXJpYW50PFQ+XG5cbmNvbnN0IGluZm8gPSBTeW1ib2woXCJkYnVzIGludGVyZmFjZSBpbmZvXCIpXG5jb25zdCBpbnRlcm5hbHMgPSBTeW1ib2woXCJkYnVzIGludGVyZmFjZSBpbnRlcm5hbHNcIilcbmNvbnN0IHJlbW90ZU1ldGhvZCA9IFN5bWJvbChcInByb3h5IHJlbW90ZU1ldGhvZFwiKVxuY29uc3QgcmVtb3RlTWV0aG9kQXN5bmMgPSBTeW1ib2woXCJwcm94eSByZW1vdGVNZXRob2RBc3luY1wiKVxuY29uc3QgcmVtb3RlUHJvcGVydHlTZXQgPSBTeW1ib2woXCJwcm94eSByZW1vdGVQcm9wZXJ0eVNldFwiKVxuXG50eXBlIEN0eCA9IHsgcHJpdmF0ZTogZmFsc2U7IHN0YXRpYzogZmFsc2U7IG5hbWU6IHN0cmluZyB9XG5cbi8qKlxuICogQmFzZSB0eXBlIGZvciBEQnVzIHNlcnZpY2VzIGFuZCBwcm94aWVzLiBJbnRlcmZhY2UgbmFtZSBpcyBzZXQgd2l0aFxuICogdGhlIHtAbGluayBpZmFjZX0gZGVjb3JhdG9yIHdoaWNoIGFsc28gcmVnaXN0ZXIgaXQgYXMgYSBHT2JqZWN0IHR5cGUuXG4gKi9cbmV4cG9ydCBjbGFzcyBTZXJ2aWNlIGV4dGVuZHMgR09iamVjdC5PYmplY3Qge1xuICAgIHN0YXRpYyBbaW5mb10/OiBHaW8uREJ1c0ludGVyZmFjZUluZm9cblxuICAgIHN0YXRpYyB7XG4gICAgICAgIEdPYmplY3QucmVnaXN0ZXJDbGFzcyh0aGlzKVxuICAgIH1cblxuICAgIFtpbnRlcm5hbHNdOiB7XG4gICAgICAgIGRidXNPYmplY3Q/OiBHaW8uREJ1c0V4cG9ydGVkT2JqZWN0XG4gICAgICAgIHByb3h5PzogR2lvLkRCdXNQcm94eVxuICAgICAgICBwcml2OiBSZWNvcmQ8c3RyaW5nIHwgc3ltYm9sLCB1bmtub3duPlxuICAgICAgICBvblN0b3A6IFNldDwoKSA9PiB2b2lkPlxuICAgIH0gPSB7XG4gICAgICAgIHByaXY6IHt9LFxuICAgICAgICBvblN0b3A6IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKSxcbiAgICB9XG5cbiAgICAjaW5mbzogR2lvLkRCdXNJbnRlcmZhY2VJbmZvXG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoKVxuICAgICAgICBjb25zdCBzZXJ2aWNlID0gdGhpcy5jb25zdHJ1Y3RvciBhcyB1bmtub3duIGFzIHR5cGVvZiBTZXJ2aWNlXG4gICAgICAgIGlmICghc2VydmljZVtpbmZvXSkgdGhyb3cgRXJyb3IoXCJtaXNzaW5nIGludGVyZmFjZSBpbmZvXCIpXG4gICAgICAgIHRoaXMuI2luZm8gPSBzZXJ2aWNlW2luZm9dXG4gICAgfVxuXG4gICAgbm90aWZ5KHByb3BlcnR5TmFtZTogRXh0cmFjdDxrZXlvZiB0aGlzLCBzdHJpbmc+IHwgKHN0cmluZyAmIHt9KSk6IHZvaWQge1xuICAgICAgICBjb25zdCBwcm9wID0gdGhpcy4jaW5mby5sb29rdXBfcHJvcGVydHkocHJvcGVydHlOYW1lKVxuXG4gICAgICAgIGlmIChwcm9wICYmIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0KSB7XG4gICAgICAgICAgICB0aGlzW2ludGVybmFsc10uZGJ1c09iamVjdC5lbWl0X3Byb3BlcnR5X2NoYW5nZWQoXG4gICAgICAgICAgICAgICAgcHJvcGVydHlOYW1lLFxuICAgICAgICAgICAgICAgIG5ldyBHTGliLlZhcmlhbnQocHJvcC5zaWduYXR1cmUsIHRoaXNbcHJvcGVydHlOYW1lIGFzIGtleW9mIHRoaXNdKSxcbiAgICAgICAgICAgIClcbiAgICAgICAgfVxuXG4gICAgICAgIHN1cGVyLm5vdGlmeShwcm9wID8ga2ViYWJpZnkocHJvcGVydHlOYW1lKSA6IHByb3BlcnR5TmFtZSlcbiAgICB9XG5cbiAgICBlbWl0KG5hbWU6IHN0cmluZywgLi4ucGFyYW1zOiB1bmtub3duW10pOiB2b2lkIHtcbiAgICAgICAgY29uc3Qgc2lnbmFsID0gdGhpcy4jaW5mby5sb29rdXBfc2lnbmFsKG5hbWUpXG5cbiAgICAgICAgaWYgKHNpZ25hbCAmJiB0aGlzW2ludGVybmFsc10uZGJ1c09iamVjdCkge1xuICAgICAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gYCgke3NpZ25hbC5hcmdzLm1hcCgoYSkgPT4gYS5zaWduYXR1cmUpLmpvaW4oXCJcIil9KWBcbiAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0LmVtaXRfc2lnbmFsKG5hbWUsIG5ldyBHTGliLlZhcmlhbnQoc2lnbmF0dXJlLCBwYXJhbXMpKVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHN1cGVyLmVtaXQoc2lnbmFsID8ga2ViYWJpZnkobmFtZSkgOiBuYW1lLCAuLi5wYXJhbXMpXG4gICAgfVxuXG4gICAgLy8gc2VydmVyXG4gICAgI2hhbmRsZVByb3BlcnR5R2V0KF86IEdpby5EQnVzRXhwb3J0ZWRPYmplY3QsIHByb3BlcnR5TmFtZTogRXh0cmFjdDxrZXlvZiB0aGlzLCBzdHJpbmc+KSB7XG4gICAgICAgIGNvbnN0IHByb3AgPSB0aGlzLiNpbmZvLmxvb2t1cF9wcm9wZXJ0eShwcm9wZXJ0eU5hbWUpXG5cbiAgICAgICAgaWYgKCFwcm9wKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgJHt0aGlzLmNvbnN0cnVjdG9yLm5hbWV9IGhhcyBubyBleHBvcnRlZCBwcm9wZXJ0eTogXCIke3Byb3BlcnR5TmFtZX1cImApXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXNbcHJvcGVydHlOYW1lXVxuICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEdMaWIuVmFyaWFudChwcm9wLnNpZ25hdHVyZSwgdmFsdWUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gc2VydmVyXG4gICAgI2hhbmRsZVByb3BlcnR5U2V0KFxuICAgICAgICBfOiBHaW8uREJ1c0V4cG9ydGVkT2JqZWN0LFxuICAgICAgICBwcm9wZXJ0eU5hbWU6IEV4dHJhY3Q8a2V5b2YgdGhpcywgc3RyaW5nPixcbiAgICAgICAgdmFsdWU6IEdMaWIuVmFyaWFudCxcbiAgICApIHtcbiAgICAgICAgY29uc3QgbmV3VmFsdWUgPSB2YWx1ZS5kZWVwVW5wYWNrKClcbiAgICAgICAgY29uc3QgcHJvcCA9IHRoaXMuI2luZm8ubG9va3VwX3Byb3BlcnR5KHByb3BlcnR5TmFtZSlcblxuICAgICAgICBpZiAoIXByb3ApIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGAke3RoaXMuY29uc3RydWN0b3IubmFtZX0gaGFzIG5vIHByb3BlcnR5OiBcIiR7cHJvcGVydHlOYW1lfVwiYClcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzW3Byb3BlcnR5TmFtZV0gIT09IG5ld1ZhbHVlKSB7XG4gICAgICAgICAgICB0aGlzW3Byb3BlcnR5TmFtZV0gPSB2YWx1ZS5kZWVwVW5wYWNrPGFueT4oKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gc2VydmVyXG4gICAgI3JldHVybkVycm9yKGVycm9yOiB1bmtub3duLCBpbnZvY2F0aW9uOiBHaW8uREJ1c01ldGhvZEludm9jYXRpb24pIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcilcbiAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgR0xpYi5FcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIGludm9jYXRpb24ucmV0dXJuX2dlcnJvcihlcnJvcilcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBFcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIGludm9jYXRpb24ucmV0dXJuX2RidXNfZXJyb3IoXG4gICAgICAgICAgICAgICAgZXJyb3IubmFtZS5pbmNsdWRlcyhcIi5cIikgPyBlcnJvci5uYW1lIDogYGdqcy5KU0Vycm9yLiR7ZXJyb3IubmFtZX1gLFxuICAgICAgICAgICAgICAgIGVycm9yLm1lc3NhZ2UsXG4gICAgICAgICAgICApXG4gICAgICAgIH1cbiAgICAgICAgaW52b2NhdGlvbi5yZXR1cm5fZGJ1c19lcnJvcihcImdqcy5EQnVzU2VydmljZS5Vbmtub3duRXJyb3JcIiwgYCR7ZXJyb3J9YClcbiAgICB9XG5cbiAgICAvLyBzZXJ2ZXJcbiAgICAjcmV0dXJuVmFsdWUodmFsdWU6IHVua25vd24sIG1ldGhvZE5hbWU6IHN0cmluZywgaW52b2NhdGlvbjogR2lvLkRCdXNNZXRob2RJbnZvY2F0aW9uKSB7XG4gICAgICAgIGlmICh2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXR1cm4gaW52b2NhdGlvbi5yZXR1cm5fdmFsdWUobmV3IEdMaWIuVmFyaWFudChcIigpXCIsIFtdKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGFyZ3MgPSB0aGlzLiNpbmZvLmxvb2t1cF9tZXRob2QobWV0aG9kTmFtZSk/Lm91dF9hcmdzID8/IFtdXG4gICAgICAgIGNvbnN0IHNpZ25hdHVyZSA9IGAoJHthcmdzLm1hcCgoYXJnKSA9PiBhcmcuc2lnbmF0dXJlKS5qb2luKFwiXCIpfSlgXG4gICAgICAgIGlmICghQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHRocm93IEVycm9yKFwidmFsdWUgaGFzIHRvIGJlIGEgdHVwbGVcIilcbiAgICAgICAgaW52b2NhdGlvbi5yZXR1cm5fdmFsdWUobmV3IEdMaWIuVmFyaWFudChzaWduYXR1cmUsIHZhbHVlKSlcbiAgICB9XG5cbiAgICAvLyBzZXJ2ZXJcbiAgICAjaGFuZGxlTWV0aG9kQ2FsbChcbiAgICAgICAgXzogR2lvLkRCdXNFeHBvcnRlZE9iamVjdCxcbiAgICAgICAgbWV0aG9kTmFtZTogRXh0cmFjdDxrZXlvZiB0aGlzLCBzdHJpbmc+LFxuICAgICAgICBwYXJhbWV0ZXJzOiBHTGliLlZhcmlhbnQsXG4gICAgICAgIGludm9jYXRpb246IEdpby5EQnVzTWV0aG9kSW52b2NhdGlvbixcbiAgICApOiB2b2lkIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gKHRoaXNbbWV0aG9kTmFtZV0gYXMgKC4uLmFyZ3M6IHVua25vd25bXSkgPT4gdW5rbm93bikoXG4gICAgICAgICAgICAgICAgLi4ucGFyYW1ldGVycy5kZWVwVW5wYWNrPEFycmF5PHVua25vd24+PigpLFxuICAgICAgICAgICAgKVxuXG4gICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBHTGliLlZhcmlhbnQpIHtcbiAgICAgICAgICAgICAgICBpbnZvY2F0aW9uLnJldHVybl92YWx1ZSh2YWx1ZSlcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oKHZhbHVlKSA9PiB0aGlzLiNyZXR1cm5WYWx1ZSh2YWx1ZSwgbWV0aG9kTmFtZSwgaW52b2NhdGlvbikpXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IHRoaXMuI3JldHVybkVycm9yKGVycm9yLCBpbnZvY2F0aW9uKSlcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy4jcmV0dXJuVmFsdWUodmFsdWUsIG1ldGhvZE5hbWUsIGludm9jYXRpb24pXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICB0aGlzLiNyZXR1cm5FcnJvcihlcnJvciwgaW52b2NhdGlvbilcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIHNlcnZlclxuICAgIGFzeW5jIHNlcnZlKHtcbiAgICAgICAgYnVzVHlwZSA9IEdpby5CdXNUeXBlLlNFU1NJT04sXG4gICAgICAgIG5hbWUgPSB0aGlzLiNpbmZvLm5hbWUsXG4gICAgICAgIG9iamVjdFBhdGggPSBcIi9cIiArIHRoaXMuI2luZm8ubmFtZS5zcGxpdChcIi5cIikuam9pbihcIi9cIiksXG4gICAgICAgIGZsYWdzID0gR2lvLkJ1c05hbWVPd25lckZsYWdzLk5PTkUsXG4gICAgICAgIHRpbWVvdXQgPSBERUZBVUxUX1RJTUVPVVQsXG4gICAgfToge1xuICAgICAgICBidXNUeXBlPzogR2lvLkJ1c1R5cGVcbiAgICAgICAgbmFtZT86IHN0cmluZ1xuICAgICAgICBvYmplY3RQYXRoPzogc3RyaW5nXG4gICAgICAgIGZsYWdzPzogR2lvLkJ1c05hbWVPd25lckZsYWdzXG4gICAgICAgIHRpbWVvdXQ/OiBudW1iZXJcbiAgICB9ID0ge30pOiBQcm9taXNlPHRoaXM+IHtcbiAgICAgICAgY29uc3QgaW1wbCA9IG5ldyBHaW8uREJ1c0V4cG9ydGVkT2JqZWN0KFxuICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBtaXNzaW5nIGNvbnN0cnVjdG9yIHR5cGVcbiAgICAgICAgICAgIHsgZ19pbnRlcmZhY2VfaW5mbzogdGhpcy4jaW5mbyB9LFxuICAgICAgICApXG5cbiAgICAgICAgaW1wbC5jb25uZWN0KFwiaGFuZGxlLW1ldGhvZC1jYWxsXCIsIHRoaXMuI2hhbmRsZU1ldGhvZENhbGwuYmluZCh0aGlzKSlcbiAgICAgICAgaW1wbC5jb25uZWN0KFwiaGFuZGxlLXByb3BlcnR5LWdldFwiLCB0aGlzLiNoYW5kbGVQcm9wZXJ0eUdldC5iaW5kKHRoaXMpKVxuICAgICAgICBpbXBsLmNvbm5lY3QoXCJoYW5kbGUtcHJvcGVydHktc2V0XCIsIHRoaXMuI2hhbmRsZVByb3BlcnR5U2V0LmJpbmQodGhpcykpXG5cbiAgICAgICAgdGhpcy4jaW5mby5jYWNoZV9idWlsZCgpXG5cbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGxldCBzb3VyY2UgPVxuICAgICAgICAgICAgICAgIHRpbWVvdXQgPiAwXG4gICAgICAgICAgICAgICAgICAgID8gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChFcnJvcihgc2VydmUgdGltZWQgb3V0YCkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZSA9IG51bGxcbiAgICAgICAgICAgICAgICAgICAgICB9LCB0aW1lb3V0KVxuICAgICAgICAgICAgICAgICAgICA6IG51bGxcblxuICAgICAgICAgICAgY29uc3QgY2xlYXIgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHNvdXJjZSkge1xuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQoc291cmNlKVxuICAgICAgICAgICAgICAgICAgICBzb3VyY2UgPSBudWxsXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBidXNJZCA9IEdpby5idXNfb3duX25hbWUoXG4gICAgICAgICAgICAgICAgYnVzVHlwZSxcbiAgICAgICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgICAgIGZsYWdzLFxuICAgICAgICAgICAgICAgIChjb25uOiBHaW8uREJ1c0Nvbm5lY3Rpb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGltcGwuZXhwb3J0KGNvbm4sIG9iamVjdFBhdGgpXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzW2ludGVybmFsc10uZGJ1c09iamVjdCA9IGltcGxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5vblN0b3AuYWRkKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBHaW8uYnVzX3Vub3duX25hbWUoYnVzSWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW1wbC51bmV4cG9ydCgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4jaW5mby5jYWNoZV9yZWxlYXNlKClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgdGhpc1tpbnRlcm5hbHNdLmRidXNPYmplY3RcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUodGhpcylcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2xlYXIsXG4gICAgICAgICAgICAgICAgY2xlYXIsXG4gICAgICAgICAgICApXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgLy8gcHJveHlcbiAgICAjaGFuZGxlUHJvcGVydGllc0NoYW5nZWQoXG4gICAgICAgIF86IEdpby5EQnVzUHJveHksXG4gICAgICAgIGNoYW5nZWQ6IEdMaWIuVmFyaWFudDxcImF7c3Z9XCI+LFxuICAgICAgICBpbnZhbGlkYXRlZDogc3RyaW5nW10sXG4gICAgKSB7XG4gICAgICAgIGNvbnN0IHNldCA9IG5ldyBTZXQoWy4uLk9iamVjdC5rZXlzKGNoYW5nZWQuZGVlcFVucGFjaygpKSwgLi4uaW52YWxpZGF0ZWRdKVxuICAgICAgICBmb3IgKGNvbnN0IHByb3Agb2Ygc2V0LnZhbHVlcygpKSB7XG4gICAgICAgICAgICB0aGlzLm5vdGlmeShwcm9wIGFzIEV4dHJhY3Q8a2V5b2YgdGhpcywgc3RyaW5nPilcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIHByb3h5XG4gICAgI2hhbmRsZVNpZ25hbChcbiAgICAgICAgXzogR2lvLkRCdXNQcm94eSxcbiAgICAgICAgX3NlbmRlcjogc3RyaW5nIHwgbnVsbCxcbiAgICAgICAgc2lnbmFsOiBzdHJpbmcsXG4gICAgICAgIHBhcmFtZXRlcnM6IEdMaWIuVmFyaWFudCxcbiAgICApIHtcbiAgICAgICAgdGhpcy5lbWl0KGtlYmFiaWZ5KHNpZ25hbCksIC4uLnBhcmFtZXRlcnMuZGVlcFVucGFjazxBcnJheTx1bmtub3duPj4oKSlcbiAgICB9XG5cbiAgICAvLyBwcm94eVxuICAgICNyZW1vdGVNZXRob2RQYXJhbXMoXG4gICAgICAgIG1ldGhvZE5hbWU6IHN0cmluZyxcbiAgICAgICAgYXJnczogdW5rbm93bltdLFxuICAgICk6IFBhcmFtZXRlcnM8R2lvLkRCdXNQcm94eVtcImNhbGxfc3luY1wiXT4ge1xuICAgICAgICBjb25zdCB7IHByb3h5IH0gPSB0aGlzW2ludGVybmFsc11cbiAgICAgICAgaWYgKCFwcm94eSkgdGhyb3cgRXJyb3IoXCJpbnZhbGlkIHJlbW90ZU1ldGhvZCBpbnZvY2F0aW9uOiBub3QgYSBwcm94eVwiKVxuXG4gICAgICAgIGNvbnN0IG1ldGhvZCA9IHRoaXMuI2luZm8ubG9va3VwX21ldGhvZChtZXRob2ROYW1lKVxuICAgICAgICBpZiAoIW1ldGhvZCkgdGhyb3cgRXJyb3IoXCJtZXRob2Qgbm90IGZvdW5kXCIpXG5cbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gYCgke21ldGhvZC5pbl9hcmdzLm1hcCgoYSkgPT4gYS5zaWduYXR1cmUpLmpvaW4oXCJcIil9KWBcblxuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAgbWV0aG9kTmFtZSxcbiAgICAgICAgICAgIG5ldyBHTGliLlZhcmlhbnQoc2lnbmF0dXJlLCBhcmdzKSxcbiAgICAgICAgICAgIEdpby5EQnVzQ2FsbEZsYWdzLk5PTkUsXG4gICAgICAgICAgICBERUZBVUxUX1RJTUVPVVQsXG4gICAgICAgICAgICBudWxsLFxuICAgICAgICBdXG4gICAgfVxuXG4gICAgLy8gcHJveHlcbiAgICBbcmVtb3RlTWV0aG9kXShtZXRob2ROYW1lOiBzdHJpbmcsIGFyZ3M6IHVua25vd25bXSk6IEdMaWIuVmFyaWFudCB7XG4gICAgICAgIGNvbnN0IHBhcmFtcyA9IHRoaXMuI3JlbW90ZU1ldGhvZFBhcmFtcyhtZXRob2ROYW1lLCBhcmdzKVxuICAgICAgICByZXR1cm4gdGhpc1tpbnRlcm5hbHNdLnByb3h5IS5jYWxsX3N5bmMoLi4ucGFyYW1zKVxuICAgIH1cblxuICAgIC8vIHByb3h5XG4gICAgW3JlbW90ZU1ldGhvZEFzeW5jXShtZXRob2ROYW1lOiBzdHJpbmcsIGFyZ3M6IHVua25vd25bXSk6IFByb21pc2U8R0xpYi5WYXJpYW50PiB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBhcmFtcyA9IHRoaXMuI3JlbW90ZU1ldGhvZFBhcmFtcyhtZXRob2ROYW1lLCBhcmdzKVxuICAgICAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5wcm94eSEuY2FsbCguLi5wYXJhbXMsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUodGhpc1tpbnRlcm5hbHNdLnByb3h5IS5jYWxsX2ZpbmlzaChyZXMpKVxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIC8vIHByb3h5XG4gICAgW3JlbW90ZVByb3BlcnR5U2V0XShuYW1lOiBzdHJpbmcsIHZhbHVlOiB1bmtub3duKSB7XG4gICAgICAgIGNvbnN0IHByb3h5ID0gdGhpc1tpbnRlcm5hbHNdLnByb3h5IVxuICAgICAgICBjb25zdCBwcm9wID0gdGhpcy4jaW5mby5sb29rdXBfcHJvcGVydHkobmFtZSkhXG5cbiAgICAgICAgY29uc3QgdmFyaWFudCA9IG5ldyBHTGliLlZhcmlhbnQocHJvcC5zaWduYXR1cmUsIHZhbHVlKVxuICAgICAgICBwcm94eS5zZXRfY2FjaGVkX3Byb3BlcnR5KG5hbWUsIHZhcmlhbnQpXG5cbiAgICAgICAgcHJveHkuY2FsbChcbiAgICAgICAgICAgIFwib3JnLmZyZWVkZXNrdG9wLkRCdXMuUHJvcGVydGllcy5TZXRcIixcbiAgICAgICAgICAgIG5ldyBHTGliLlZhcmlhbnQoXCIoc3N2KVwiLCBbcHJveHkuZ0ludGVyZmFjZU5hbWUsIG5hbWUsIHZhcmlhbnRdKSxcbiAgICAgICAgICAgIEdpby5EQnVzQ2FsbEZsYWdzLk5PTkUsXG4gICAgICAgICAgICAtMSxcbiAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgcHJveHkuY2FsbF9maW5pc2gocmVzKVxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgIClcbiAgICB9XG5cbiAgICAvLyBwcm94eVxuICAgIGFzeW5jIHByb3h5KHtcbiAgICAgICAgYnVzID0gR2lvLkRCdXMuc2Vzc2lvbixcbiAgICAgICAgbmFtZSA9IHRoaXMuI2luZm8ubmFtZSxcbiAgICAgICAgb2JqZWN0UGF0aCA9IFwiL1wiICsgdGhpcy4jaW5mby5uYW1lLnNwbGl0KFwiLlwiKS5qb2luKFwiL1wiKSxcbiAgICAgICAgZmxhZ3MgPSBHaW8uREJ1c1Byb3h5RmxhZ3MuTk9ORSxcbiAgICAgICAgdGltZW91dCA9IERFRkFVTFRfVElNRU9VVCxcbiAgICB9OiB7XG4gICAgICAgIGJ1cz86IEdpby5EQnVzQ29ubmVjdGlvblxuICAgICAgICBuYW1lPzogc3RyaW5nXG4gICAgICAgIG9iamVjdFBhdGg/OiBzdHJpbmdcbiAgICAgICAgZmxhZ3M/OiBHaW8uREJ1c1Byb3h5RmxhZ3NcbiAgICAgICAgdGltZW91dD86IG51bWJlclxuICAgIH0gPSB7fSk6IFByb21pc2U8dGhpcz4ge1xuICAgICAgICBjb25zdCBwcm94eSA9IG5ldyBHaW8uREJ1c1Byb3h5KHtcbiAgICAgICAgICAgIGdDb25uZWN0aW9uOiBidXMsXG4gICAgICAgICAgICBnSW50ZXJmYWNlTmFtZTogdGhpcy4jaW5mby5uYW1lLFxuICAgICAgICAgICAgZ0ludGVyZmFjZUluZm86IHRoaXMuI2luZm8sXG4gICAgICAgICAgICBnTmFtZTogbmFtZSxcbiAgICAgICAgICAgIGdGbGFnczogZmxhZ3MsXG4gICAgICAgICAgICBnT2JqZWN0UGF0aDogb2JqZWN0UGF0aCxcbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgY2FuY2FsbGFibGUgPSBuZXcgR2lvLkNhbmNlbGxhYmxlKClcblxuICAgICAgICAgICAgbGV0IHNvdXJjZSA9XG4gICAgICAgICAgICAgICAgdGltZW91dCA+IDBcbiAgICAgICAgICAgICAgICAgICAgPyBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KEVycm9yKGBwcm94eSB0aW1lZCBvdXRgKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlID0gbnVsbFxuICAgICAgICAgICAgICAgICAgICAgICAgICBjYW5jYWxsYWJsZS5jYW5jZWwoKVxuICAgICAgICAgICAgICAgICAgICAgIH0sIHRpbWVvdXQpXG4gICAgICAgICAgICAgICAgICAgIDogbnVsbFxuXG4gICAgICAgICAgICBwcm94eS5pbml0X2FzeW5jKEdMaWIuUFJJT1JJVFlfREVGQVVMVCwgY2FuY2FsbGFibGUsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoc291cmNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQoc291cmNlKVxuICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlID0gbnVsbFxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgcHJveHkuaW5pdF9maW5pc2gocmVzKVxuICAgICAgICAgICAgICAgICAgICB0aGlzW2ludGVybmFsc10ucHJveHkgPSBwcm94eVxuXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGlkcyA9IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3h5LmNvbm5lY3QoXCJnLXNpZ25hbFwiLCB0aGlzLiNoYW5kbGVTaWduYWwuYmluZCh0aGlzKSksXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm94eS5jb25uZWN0KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiZy1wcm9wZXJ0aWVzLWNoYW5nZWRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiNoYW5kbGVQcm9wZXJ0aWVzQ2hhbmdlZC5iaW5kKHRoaXMpLFxuICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgXVxuXG4gICAgICAgICAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5vblN0b3AuYWRkKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkcy5mb3JFYWNoKChpZCkgPT4gcHJveHkuZGlzY29ubmVjdChpZCkpXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgdGhpc1tpbnRlcm5hbHNdLnByb3h5XG4gICAgICAgICAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh0aGlzKVxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIHN0b3AoKSB7XG4gICAgICAgIGNvbnN0IHsgb25TdG9wIH0gPSB0aGlzW2ludGVybmFsc11cbiAgICAgICAgZm9yIChjb25zdCBjYiBvZiBvblN0b3AudmFsdWVzKCkpIHtcbiAgICAgICAgICAgIG9uU3RvcC5kZWxldGUoY2IpXG4gICAgICAgICAgICBjYigpXG4gICAgICAgIH1cbiAgICB9XG59XG5cbnR5cGUgSW50ZXJmYWNlTWV0YSA9IHtcbiAgICBkYnVzTWV0aG9kcz86IFJlY29yZDxcbiAgICAgICAgc3RyaW5nLFxuICAgICAgICBBcnJheTx7XG4gICAgICAgICAgICBuYW1lPzogc3RyaW5nXG4gICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiAgICAgICAgICAgIGRpcmVjdGlvbjogXCJpblwiIHwgXCJvdXRcIlxuICAgICAgICB9PlxuICAgID5cbiAgICBkYnVzU2lnbmFscz86IFJlY29yZDxcbiAgICAgICAgc3RyaW5nLFxuICAgICAgICBBcnJheTx7XG4gICAgICAgICAgICBuYW1lPzogc3RyaW5nXG4gICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiAgICAgICAgfT5cbiAgICA+XG4gICAgZGJ1c1Byb3BlcnRpZXM/OiBSZWNvcmQ8XG4gICAgICAgIHN0cmluZyxcbiAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogc3RyaW5nXG4gICAgICAgICAgICB0eXBlOiBzdHJpbmdcbiAgICAgICAgICAgIHJlYWQ/OiB0cnVlXG4gICAgICAgICAgICB3cml0ZT86IHRydWVcbiAgICAgICAgfVxuICAgID5cbn1cblxuLyoqXG4gKiBSZWdpc3RlcnMgYSB7QGxpbmsgU2VydmljZX0gYXMgYSBkYnVzIGludGVyZmFjZS5cbiAqXG4gKiBAcGFyYW0gbmFtZSBJbnRlcmZhY2UgbmFtZSBvZiB0aGUgb2JqZWN0LiBGb3IgZXhhbXBsZSBcIm9yZy5nbm9tZS5TaGVsbC5TZWFyY2hQcm92aWRlcjJcIlxuICogQHBhcmFtIG9wdGlvbnMgb3B0aW9uYWwgcHJvcGVydGllcyB0byBwYXNzIHRvIHtAbGluayByZWdpc3Rlcn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlmYWNlKG5hbWU6IHN0cmluZywgb3B0aW9ucz86IFBhcmFtZXRlcnM8dHlwZW9mIHJlZ2lzdGVyPlswXSkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoY2xzOiB7IG5ldyAoLi4uYXJnczogYW55W10pOiBTZXJ2aWNlIH0sIGN0eDogQ2xhc3NEZWNvcmF0b3JDb250ZXh0KSB7XG4gICAgICAgIGNvbnN0IG1ldGEgPSBjdHgubWV0YWRhdGFcbiAgICAgICAgaWYgKCFtZXRhKSB0aHJvdyBFcnJvcihgJHtjbHMubmFtZX0gaXMgbm90IGFuIGludGVyZmFjZWApXG5cbiAgICAgICAgY29uc3QgeyBkYnVzTWV0aG9kcyA9IHt9LCBkYnVzU2lnbmFscyA9IHt9LCBkYnVzUHJvcGVydGllcyA9IHt9IH0gPSBtZXRhIGFzIEludGVyZmFjZU1ldGFcblxuICAgICAgICBjb25zdCBpbmZvWG1sID0geG1sKHtcbiAgICAgICAgICAgIG5hbWU6IFwibm9kZVwiLFxuICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiaW50ZXJmYWNlXCIsXG4gICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHsgbmFtZSB9LFxuICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgLi4uT2JqZWN0LmVudHJpZXMoZGJ1c01ldGhvZHMpLm1hcCgoW25hbWUsIGFyZ3NdKSA9PiAoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwibWV0aG9kXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlczogeyBuYW1lIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IGFyZ3MubWFwKChhcmcpID0+ICh7IG5hbWU6IFwiYXJnXCIsIGF0dHJpYnV0ZXM6IGFyZyB9KSksXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSksXG4gICAgICAgICAgICAgICAgICAgICAgICAuLi5PYmplY3QuZW50cmllcyhkYnVzU2lnbmFscykubWFwKChbbmFtZSwgYXJnc10pID0+ICh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJzaWduYWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB7IG5hbWUgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogYXJncy5tYXAoKGFyZykgPT4gKHsgbmFtZTogXCJhcmdcIiwgYXR0cmlidXRlczogYXJnIH0pKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLk9iamVjdC52YWx1ZXMoZGJ1c1Byb3BlcnRpZXMpLm1hcCgoeyBuYW1lLCB0eXBlLCByZWFkLCB3cml0ZSB9KSA9PiAoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwicHJvcGVydHlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLihuYW1lICYmIHsgbmFtZSB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXNzOiAocmVhZCA/IFwicmVhZFwiIDogXCJcIikgKyAod3JpdGUgPyBcIndyaXRlXCIgOiBcIlwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSkpLFxuICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdLFxuICAgICAgICB9KVxuXG4gICAgICAgIE9iamVjdC5hc3NpZ24oY2xzLCB7IFtpbmZvXTogR2lvLkRCdXNJbnRlcmZhY2VJbmZvLm5ld19mb3JfeG1sKGluZm9YbWwpIH0pXG4gICAgICAgIHJlZ2lzdGVyKG9wdGlvbnMpKGNscywgY3R4KVxuICAgIH1cbn1cblxudHlwZSBEQnVzVHlwZSA9IHN0cmluZyB8IHsgdHlwZTogc3RyaW5nOyBuYW1lOiBzdHJpbmcgfVxuXG50eXBlIEluZmVyVmFyaWFudFR5cGVzPFQgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4+ID0ge1xuICAgIFtLIGluIGtleW9mIFRdOiBUW0tdIGV4dGVuZHMgc3RyaW5nXG4gICAgICAgID8gRGVlcEluZmVyPFRbS10+XG4gICAgICAgIDogVFtLXSBleHRlbmRzIHsgdHlwZTogaW5mZXIgUyB9XG4gICAgICAgICAgPyBTIGV4dGVuZHMgc3RyaW5nXG4gICAgICAgICAgICAgID8gRGVlcEluZmVyPFM+XG4gICAgICAgICAgICAgIDogbmV2ZXJcbiAgICAgICAgICA6IHVua25vd25cbn1cblxuZnVuY3Rpb24gaW5zdGFsbE1ldGhvZDxBcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+PihcbiAgICBhcmdzOiBBcmdzIHwgW0FyZ3MsIEFyZ3M/XSxcbiAgICBtZXRob2Q6ICguLi5hcmdzOiBhbnlbXSkgPT4gdW5rbm93bixcbiAgICBjdHg6IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCB0eXBlb2YgbWV0aG9kPixcbikge1xuICAgIGNvbnN0IG5hbWUgPSBjdHgubmFtZVxuICAgIGNvbnN0IG1ldGEgPSBjdHgubWV0YWRhdGEhIGFzIEludGVyZmFjZU1ldGFcbiAgICBjb25zdCBtZXRob2RzID0gKG1ldGEuZGJ1c01ldGhvZHMgPz89IHt9KVxuXG4gICAgaWYgKHR5cGVvZiBuYW1lICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHRocm93IEVycm9yKFwib25seSBzdHJpbmcgbmFtZWQgbWV0aG9kcyBhcmUgYWxsb3dlZFwiKVxuICAgIH1cblxuICAgIGNvbnN0IFtpbkFyZ3MsIG91dEFyZ3MgPSBbXV0gPSAoQXJyYXkuaXNBcnJheShhcmdzWzBdKSA/IGFyZ3MgOiBbYXJnc10pIGFzIFtBcmdzLCBBcmdzXVxuXG4gICAgbWV0aG9kc1tuYW1lXSA9IFtcbiAgICAgICAgLi4uaW5BcmdzLm1hcCgoYXJnKSA9PiAoe1xuICAgICAgICAgICAgZGlyZWN0aW9uOiBcImluXCIgYXMgY29uc3QsXG4gICAgICAgICAgICAuLi4odHlwZW9mIGFyZyA9PT0gXCJzdHJpbmdcIiA/IHsgdHlwZTogYXJnIH0gOiBhcmcpLFxuICAgICAgICB9KSksXG4gICAgICAgIC4uLm91dEFyZ3MubWFwKChhcmcpID0+ICh7XG4gICAgICAgICAgICBkaXJlY3Rpb246IFwib3V0XCIgYXMgY29uc3QsXG4gICAgICAgICAgICAuLi4odHlwZW9mIGFyZyA9PT0gXCJzdHJpbmdcIiA/IHsgdHlwZTogYXJnIH0gOiBhcmcpLFxuICAgICAgICB9KSksXG4gICAgXVxuXG4gICAgcmV0dXJuIG5hbWVcbn1cblxuZnVuY3Rpb24gaW5zdGFsbFByb3BlcnR5PFQgZXh0ZW5kcyBzdHJpbmc+KFxuICAgIHR5cGU6IFQsXG4gICAgY3R4OiBDbGFzc0ZpZWxkRGVjb3JhdG9yQ29udGV4dCB8IENsYXNzR2V0dGVyRGVjb3JhdG9yQ29udGV4dCB8IENsYXNzU2V0dGVyRGVjb3JhdG9yQ29udGV4dCxcbikge1xuICAgIGNvbnN0IGtpbmQgPSBjdHgua2luZFxuICAgIGNvbnN0IG5hbWUgPSBjdHgubmFtZVxuICAgIGNvbnN0IG1ldGEgPSBjdHgubWV0YWRhdGEhIGFzIEludGVyZmFjZU1ldGFcbiAgICBjb25zdCBwcm9wZXJ0aWVzID0gKG1ldGEuZGJ1c1Byb3BlcnRpZXMgPz89IHt9KVxuXG4gICAgaWYgKHR5cGVvZiBuYW1lICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIHRocm93IEVycm9yKFwib25seSBzdHJpbmcgbmFtZWQgcHJvcGVydGllcyBhcmUgYWxsb3dlZFwiKVxuICAgIH1cblxuICAgIGNvbnN0IHJlYWQgPSBraW5kID09PSBcImZpZWxkXCIgfHwga2luZCA9PT0gXCJnZXR0ZXJcIlxuICAgIGNvbnN0IHdyaXRlID0ga2luZCA9PT0gXCJmaWVsZFwiIHx8IGtpbmQgPT09IFwic2V0dGVyXCJcblxuICAgIGlmIChuYW1lIGluIHByb3BlcnRpZXMpIHtcbiAgICAgICAgaWYgKHdyaXRlKSBwcm9wZXJ0aWVzW25hbWVdLndyaXRlID0gdHJ1ZVxuICAgICAgICBpZiAocmVhZCkgcHJvcGVydGllc1tuYW1lXS5yZWFkID0gdHJ1ZVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHByb3BlcnRpZXNbbmFtZV0gPSB7XG4gICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgIC4uLihyZWFkICYmIHsgcmVhZCB9KSxcbiAgICAgICAgICAgIC4uLih3cml0ZSAmJiB7IHdyaXRlIH0pLFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5hbWVcbn1cblxuZnVuY3Rpb24gaW5zdGFsbFNpZ25hbDxQYXJhbXMgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4+KFxuICAgIHBhcmFtczogUGFyYW1zLFxuICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2U+LFxuKSB7XG4gICAgY29uc3QgbmFtZSA9IGN0eC5uYW1lXG4gICAgY29uc3QgbWV0YSA9IGN0eC5tZXRhZGF0YSEgYXMgSW50ZXJmYWNlTWV0YVxuICAgIGNvbnN0IHNpZ25hbHMgPSAobWV0YS5kYnVzU2lnbmFscyA/Pz0ge30pXG5cbiAgICBpZiAodHlwZW9mIG5hbWUgPT09IFwic3ltYm9sXCIpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJzeW1ib2xzIGFyZSBub3QgdmFsaWQgc2lnbmFsc1wiKVxuICAgIH1cblxuICAgIHNpZ25hbHNbbmFtZV0gPSBwYXJhbXMubWFwKChhcmcpID0+ICh0eXBlb2YgYXJnID09PSBcInN0cmluZ1wiID8geyB0eXBlOiBhcmcgfSA6IGFyZykpXG5cbiAgICByZXR1cm4gbmFtZVxufVxuXG5mdW5jdGlvbiBpbmZlckdUeXBlRnJvbVZhcmlhbnQodHlwZTogREJ1c1R5cGUpOiBHT2JqZWN0LkdUeXBlPGFueT4ge1xuICAgIGlmICh0eXBlb2YgdHlwZSAhPT0gXCJzdHJpbmdcIikgcmV0dXJuIGluZmVyR1R5cGVGcm9tVmFyaWFudCh0eXBlLnR5cGUpXG5cbiAgICBpZiAodHlwZS5zdGFydHNXaXRoKFwiYVwiKSB8fCB0eXBlLnN0YXJ0c1dpdGgoXCIoXCIpKSB7XG4gICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfSlNPQkpFQ1RcbiAgICB9XG5cbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgY2FzZSBcInZcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfVkFSSUFOVFxuICAgICAgICBjYXNlIFwiYlwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9CT09MRUFOXG4gICAgICAgIGNhc2UgXCJ5XCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX1VJTlRcbiAgICAgICAgY2FzZSBcIm5cIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfSU5UXG4gICAgICAgIGNhc2UgXCJxXCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX1VJTlRcbiAgICAgICAgY2FzZSBcImlcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfSU5UXG4gICAgICAgIGNhc2UgXCJ1XCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX1VJTlRcbiAgICAgICAgY2FzZSBcInhcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfSU5UNjRcbiAgICAgICAgY2FzZSBcInRcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfVUlOVDY0XG4gICAgICAgIGNhc2UgXCJoXCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX0lOVFxuICAgICAgICBjYXNlIFwiZFwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9ET1VCTEVcbiAgICAgICAgY2FzZSBcInNcIjpcbiAgICAgICAgY2FzZSBcImdcIjpcbiAgICAgICAgY2FzZSBcIm9cIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfU1RSSU5HXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBicmVha1xuICAgIH1cblxuICAgIHRocm93IEVycm9yKGBjYW5ub3QgaW5mZXIgR1R5cGUgZnJvbSB2YXJpYW50IFwiJHt0eXBlfVwiYClcbn1cblxuLyoqXG4gKiBSZWdpc3RlcnMgYSBtZXRob2QuXG4gKiBZb3Ugc2hvdWxkIHByZWZlciB1c2luZyB7QGxpbmsgbWV0aG9kQXN5bmN9IHdoZW4gcHJveHlpbmcsIGR1ZSB0byBJTyBibG9ja2luZy5cbiAqIE5vdGUgdGhhdCB0aGlzIGlzIGZ1bmN0aW9uYWxseSB0aGUgc2FtZSBhcyB7QGxpbmsgbWV0aG9kQXN5bmN9IG9uIGV4cG9ydGVkIG9iamVjdHMuXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1ldGhvZDxjb25zdCBJbkFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4sIGNvbnN0IE91dEFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4+KFxuICAgIGluQXJnczogSW5BcmdzLFxuICAgIG91dEFyZ3M6IE91dEFyZ3MsXG4pOiAoXG4gICAgbWV0aG9kOiAodGhpczogU2VydmljZSwgLi4uYXJnczogYW55W10pID0+IEluZmVyVmFyaWFudFR5cGVzPE91dEFyZ3M+LFxuICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuKSA9PiAodGhpczogU2VydmljZSwgLi4uYXJnczogSW5mZXJWYXJpYW50VHlwZXM8SW5BcmdzPikgPT4gYW55XG5cbi8qKlxuICogUmVnaXN0ZXJzIGEgbWV0aG9kLlxuICogWW91IHNob3VsZCBwcmVmZXIgdXNpbmcge0BsaW5rIG1ldGhvZEFzeW5jfSB3aGVuIHByb3h5aW5nLCBkdWUgdG8gSU8gYmxvY2tpbmcuXG4gKiBOb3RlIHRoYXQgdGhpcyBpcyBmdW5jdGlvbmFsbHkgdGhlIHNhbWUgYXMge0BsaW5rIG1ldGhvZEFzeW5jfSBvbiBleHBvcnRlZCBvYmplY3RzLlxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtZXRob2Q8Y29uc3QgSW5BcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+PihcbiAgICAuLi5pbkFyZ3M6IEluQXJnc1xuKTogKFxuICAgIG1ldGhvZDogKHRoaXM6IFNlcnZpY2UsIC4uLmFyZ3M6IGFueVtdKSA9PiB2b2lkLFxuICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuKSA9PiAodGhpczogU2VydmljZSwgLi4uYXJnczogSW5mZXJWYXJpYW50VHlwZXM8SW5BcmdzPikgPT4gdm9pZFxuXG5leHBvcnQgZnVuY3Rpb24gbWV0aG9kPGNvbnN0IEluQXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPiwgY29uc3QgT3V0QXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oXG4gICAgLi4uYXJnczogSW5BcmdzIHwgW2luQXJnczogSW5BcmdzLCBvdXRBcmdzPzogT3V0QXJnc11cbikge1xuICAgIHJldHVybiBmdW5jdGlvbiAoXG4gICAgICAgIG1ldGhvZDogKFxuICAgICAgICAgICAgdGhpczogU2VydmljZSxcbiAgICAgICAgICAgIC4uLmFyZ3M6IEluZmVyVmFyaWFudFR5cGVzPEluQXJncz5cbiAgICAgICAgKSA9PiBJbmZlclZhcmlhbnRUeXBlczxPdXRBcmdzPiB8IHZvaWQsXG4gICAgICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuICAgICk6ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+KSA9PiBhbnkge1xuICAgICAgICBjb25zdCBuYW1lID0gaW5zdGFsbE1ldGhvZChhcmdzLCBtZXRob2QsIGN0eClcblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKC4uLmFyZ3MpIHtcbiAgICAgICAgICAgIGlmICh0aGlzW2ludGVybmFsc10ucHJveHkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXNbcmVtb3RlTWV0aG9kXShuYW1lLCBhcmdzKVxuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZS5kZWVwVW5wYWNrPEluZmVyVmFyaWFudFR5cGVzPE91dEFyZ3M+PigpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBtZXRob2QuYXBwbHkodGhpcywgYXJncylcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLyoqXG4gKiBSZWdpc3RlcnMgYSBtZXRob2QuXG4gKiBZb3Ugc2hvdWxkIHByZWZlciB1c2luZyB0aGlzIG92ZXIge0BsaW5rIG1ldGhvZH0gd2hlbiBwcm94eWluZywgc2luY2UgdGhpcyBkb2VzIG5vdCBibG9jayBJTy5cbiAqIE5vdGUgdGhhdCB0aGlzIGlzIGZ1bmN0aW9uYWxseSB0aGUgc2FtZSBhcyB7QGxpbmsgbWV0aG9kfSBvbiBleHBvcnRlZCBvYmplY3RzLlxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtZXRob2RBc3luYzxcbiAgICBjb25zdCBJbkFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4sXG4gICAgY29uc3QgT3V0QXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPixcbj4oXG4gICAgaW5BcmdzOiBJbkFyZ3MsXG4gICAgb3V0QXJnczogT3V0QXJncyxcbik6IChcbiAgICBtZXRob2Q6ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBhbnlbXSkgPT4gUHJvbWlzZTxJbmZlclZhcmlhbnRUeXBlczxPdXRBcmdzPj4sXG4gICAgY3R4OiBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8U2VydmljZSwgdHlwZW9mIG1ldGhvZD4sXG4pID0+ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+KSA9PiBQcm9taXNlPGFueT5cblxuLyoqXG4gKiBSZWdpc3RlcnMgYSBtZXRob2QuXG4gKiBZb3Ugc2hvdWxkIHByZWZlciB1c2luZyB0aGlzIG92ZXIge0BsaW5rIG1ldGhvZH0gd2hlbiBwcm94eWluZywgc2luY2UgdGhpcyBkb2VzIG5vdCBibG9jayBJTy5cbiAqIE5vdGUgdGhhdCB0aGlzIGlzIGZ1bmN0aW9uYWxseSB0aGUgc2FtZSBhcyB7QGxpbmsgbWV0aG9kfSBvbiBleHBvcnRlZCBvYmplY3RzLlxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtZXRob2RBc3luYzxjb25zdCBJbkFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4+KFxuICAgIC4uLmluQXJnczogSW5BcmdzXG4pOiAoXG4gICAgbWV0aG9kOiAodGhpczogU2VydmljZSwgLi4uYXJnczogYW55W10pID0+IFByb21pc2U8dm9pZD4sXG4gICAgY3R4OiBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8U2VydmljZSwgdHlwZW9mIG1ldGhvZD4sXG4pID0+ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+KSA9PiBQcm9taXNlPHZvaWQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBtZXRob2RBc3luYzxcbiAgICBjb25zdCBJbkFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4sXG4gICAgY29uc3QgT3V0QXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPixcbj4oLi4uYXJnczogSW5BcmdzIHwgW2luQXJnczogSW5BcmdzLCBvdXRBcmdzPzogT3V0QXJnc10pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKFxuICAgICAgICBtZXRob2Q6IChcbiAgICAgICAgICAgIHRoaXM6IFNlcnZpY2UsXG4gICAgICAgICAgICAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+XG4gICAgICAgICkgPT4gUHJvbWlzZTxJbmZlclZhcmlhbnRUeXBlczxPdXRBcmdzPiB8IHZvaWQ+LFxuICAgICAgICBjdHg6IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCB0eXBlb2YgbWV0aG9kPixcbiAgICApOiAodGhpczogU2VydmljZSwgLi4uYXJnczogSW5mZXJWYXJpYW50VHlwZXM8SW5BcmdzPikgPT4gUHJvbWlzZTxhbnk+IHtcbiAgICAgICAgY29uc3QgbmFtZSA9IGluc3RhbGxNZXRob2QoYXJncywgbWV0aG9kLCBjdHgpXG5cbiAgICAgICAgcmV0dXJuIGFzeW5jIGZ1bmN0aW9uICguLi5hcmdzKSB7XG4gICAgICAgICAgICBpZiAodGhpc1tpbnRlcm5hbHNdLnByb3h5KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBhd2FpdCB0aGlzW3JlbW90ZU1ldGhvZEFzeW5jXShuYW1lLCBhcmdzKVxuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZS5kZWVwVW5wYWNrPEluZmVyVmFyaWFudFR5cGVzPE91dEFyZ3M+PigpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiBtZXRob2QuYXBwbHkodGhpcywgYXJncylcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLyoqXG4gKiBSZWdpc3RlcnMgYSByZWFkLXdyaXRlIHByb3BlcnR5LiBXaGVuIGEgbmV3IHZhbHVlIGlzIGFzc2lnbmVkIHRoZSBub3RpZnkgc2lnbmFsXG4gKiBpcyBhdXRvbWF0aWNhbGx5IGVtaXR0ZWQgb24gdGhlIGxvY2FsIGFuZCBleHBvcnRlZCBvYmplY3QuXG4gKlxuICogTm90ZSB0aGF0IG5ldyB2YWx1ZXMgYXJlIGNoZWNrZWQgYnkgcmVmZXJlbmNlIHNvIGFzc2lnbmluZyB0aGUgc2FtZSBvYmplY3Qgd2lsbFxuICogbm90IGVtaXQgdGhlIG5vdGlmeSBzaWduYWwuXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHByb3BlcnR5PFQgZXh0ZW5kcyBzdHJpbmc+KHR5cGU6IFQpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKFxuICAgICAgICBfOiB2b2lkLFxuICAgICAgICBjdHg6IENsYXNzRmllbGREZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIERlZXBJbmZlcjxUPj4sXG4gICAgKTogKHRoaXM6IFNlcnZpY2UsIGluaXQ6IERlZXBJbmZlcjxUPikgPT4gYW55IHtcbiAgICAgICAgY29uc3QgbmFtZSA9IGluc3RhbGxQcm9wZXJ0eSh0eXBlLCBjdHgpXG5cbiAgICAgICAgdm9pZCBncHJvcGVydHkoeyAkZ3R5cGU6IGluZmVyR1R5cGVGcm9tVmFyaWFudCh0eXBlKSB9KShcbiAgICAgICAgICAgIF8sXG4gICAgICAgICAgICBjdHggYXMgQ2xhc3NGaWVsZERlY29yYXRvckNvbnRleHQ8R09iamVjdC5PYmplY3Q+ICYgQ3R4LFxuICAgICAgICAgICAgeyBtZXRhT25seTogdHJ1ZSB9LFxuICAgICAgICApXG5cbiAgICAgICAgY3R4LmFkZEluaXRpYWxpemVyKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBuYW1lLCB7XG4gICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIHNldCh2YWx1ZTogRGVlcEluZmVyPFQ+KSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgcHJveHksIHByaXYgfSA9IHRoaXNbaW50ZXJuYWxzXVxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChwcm94eSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1tyZW1vdGVQcm9wZXJ0eVNldF0obmFtZSwgdmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIGlmIChwcml2W25hbWVdICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJpdltuYW1lXSA9IHZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeShuYW1lIGFzIEV4dHJhY3Q8a2V5b2YgU2VydmljZSwgc3RyaW5nPilcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0KCk6IERlZXBJbmZlcjxUPiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgcHJveHksIHByaXYgfSA9IHRoaXNbaW50ZXJuYWxzXVxuXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm94eVxuICAgICAgICAgICAgICAgICAgICAgICAgPyBwcm94eS5nZXRfY2FjaGVkX3Byb3BlcnR5KG5hbWUpIS5kZWVwVW5wYWNrPERlZXBJbmZlcjxUPj4oKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiAocHJpdltuYW1lXSBhcyBEZWVwSW5mZXI8VD4pXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0gc2F0aXNmaWVzIFRoaXNUeXBlPFNlcnZpY2U+KVxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoaW5pdCkge1xuICAgICAgICAgICAgY29uc3QgcHJpdiA9IHRoaXNbaW50ZXJuYWxzXS5wcml2XG4gICAgICAgICAgICBwcml2W25hbWVdID0gaW5pdFxuICAgICAgICAgICAgLy8gd2UgZG9uJ3QgbmVlZCB0byBzdG9yZSB0aGUgdmFsdWUgb24gdGhlIG9iamVjdCBpdHNlbGZcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLyoqXG4gKiBSZWdpc3RlcnMgYSByZWFkLW9ubHkgcHJvcGVydHkuIENhbiBiZSB1c2VkIGluIGNvbmp1Y3Rpb24gd2l0aCB7QGxpbmsgc2V0dGVyfSB0byBkZWZpbmVcbiAqIHJlYWQtd3JpdGUgcHJvcGVydGllcyBhcyBhY2Nlc3NvcnMuXG4gKlxuICogTm90ZSB0aGF0IHlvdSB3aWxsIG5lZWQgdG8gZXhwbGljaXRseSBlbWl0IHRoZSBub3RpZnkgc2lnbmFsLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0dGVyPFQgZXh0ZW5kcyBzdHJpbmc+KHR5cGU6IFQpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKFxuICAgICAgICBtZXRob2Q6ICh0aGlzOiBTZXJ2aWNlKSA9PiBEZWVwSW5mZXI8VD4sXG4gICAgICAgIGN0eDogQ2xhc3NHZXR0ZXJEZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIERlZXBJbmZlcjxUPj4sXG4gICAgKTogKHRoaXM6IFNlcnZpY2UpID0+IGFueSB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBpbnN0YWxsUHJvcGVydHkodHlwZSwgY3R4KVxuXG4gICAgICAgIGN0eC5hZGRJbml0aWFsaXplcihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBkZWZpbmVQcm9wZXJ0eUdldHRlcih0aGlzLCBuYW1lIGFzIEV4dHJhY3Q8a2V5b2YgU2VydmljZSwgc3RyaW5nPilcbiAgICAgICAgfSlcblxuICAgICAgICB2b2lkIGdnZXR0ZXIoeyAkZ3R5cGU6IGluZmVyR1R5cGVGcm9tVmFyaWFudCh0eXBlKSB9KShcbiAgICAgICAgICAgICgpID0+IHt9LFxuICAgICAgICAgICAgY3R4IGFzIENsYXNzR2V0dGVyRGVjb3JhdG9yQ29udGV4dDxHT2JqZWN0Lk9iamVjdD4gJiBDdHgsXG4gICAgICAgIClcblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gZ2V0KCk6IERlZXBJbmZlcjxUPiB7XG4gICAgICAgICAgICBjb25zdCB7IHByb3h5IH0gPSB0aGlzW2ludGVybmFsc11cbiAgICAgICAgICAgIHJldHVybiBwcm94eVxuICAgICAgICAgICAgICAgID8gcHJveHkuZ2V0X2NhY2hlZF9wcm9wZXJ0eShuYW1lKSEuZGVlcFVucGFjazxEZWVwSW5mZXI8VD4+KClcbiAgICAgICAgICAgICAgICA6IG1ldGhvZC5jYWxsKHRoaXMpXG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogUmVnaXN0ZXJzIGEgd3JpdGUtb25seSBwcm9wZXJ0eS4gQ2FuIGJlIHVzZWQgaW4gY29uanVjdGlvbiB3aXRoIHtAbGluayBnZXR0ZXJ9IHRvIGRlZmluZVxuICogcmVhZC13cml0ZSBwcm9wZXJ0aWVzIGFzIGFjY2Vzc29ycy5cbiAqXG4gKiBOb3RlIHRoYXQgeW91IHdpbGwgbmVlZCB0byBleHBsaWNpdGx5IGVtaXQgdGhlIG5vdGlmeSBzaWduYWwuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXR0ZXI8VCBleHRlbmRzIHN0cmluZz4odHlwZTogVCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoXG4gICAgICAgIHNldHRlcjogKHRoaXM6IFNlcnZpY2UsIHZhbHVlOiBhbnkpID0+IHZvaWQsXG4gICAgICAgIGN0eDogQ2xhc3NTZXR0ZXJEZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIERlZXBJbmZlcjxUPj4sXG4gICAgKTogKHRoaXM6IFNlcnZpY2UsIHZhbHVlOiBEZWVwSW5mZXI8VD4pID0+IHZvaWQge1xuICAgICAgICBjb25zdCBuYW1lID0gaW5zdGFsbFByb3BlcnR5KHR5cGUsIGN0eClcblxuICAgICAgICB2b2lkIGdzZXR0ZXIoeyAkZ3R5cGU6IGluZmVyR1R5cGVGcm9tVmFyaWFudCh0eXBlKSB9KShcbiAgICAgICAgICAgICgpID0+IHt9LFxuICAgICAgICAgICAgY3R4IGFzIENsYXNzU2V0dGVyRGVjb3JhdG9yQ29udGV4dDxHT2JqZWN0Lk9iamVjdD4gJiBDdHgsXG4gICAgICAgIClcblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHZhbHVlOiBEZWVwSW5mZXI8VD4pIHtcbiAgICAgICAgICAgIGNvbnN0IHsgcHJveHkgfSA9IHRoaXNbaW50ZXJuYWxzXVxuXG4gICAgICAgICAgICBpZiAocHJveHkpIHtcbiAgICAgICAgICAgICAgICB0aGlzW3JlbW90ZVByb3BlcnR5U2V0XShuYW1lLCB2YWx1ZSlcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc2V0dGVyLmNhbGwodGhpcywgdmFsdWUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogUmVnaXN0ZXJzIGEgc2lnbmFsIHdoaWNoIHdoZW4gaW52b2tlZCB3aWxsIGVtaXQgdGhlIHNpZ25hbFxuICogb24gdGhlIGxvY2FsIG9iamVjdCBhbmQgdGhlIGV4cG9ydGVkIG9iamVjdC5cbiAqXG4gKiAqKk5vdGUqKjogaXRzIG5vdCBwb3NzaWJsZSB0byBlbWl0IHNpZ25hbHMgb24gcmVtb3RlIG9iamVjdHMgdGhyb3VnaCBwcm94aWVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2lnbmFsPGNvbnN0IFBhcmFtcyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oLi4ucGFyYW1zOiBQYXJhbXMpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKFxuICAgICAgICBtZXRob2Q6ICh0aGlzOiBTZXJ2aWNlLCAuLi5wYXJhbXM6IGFueSkgPT4gdm9pZCxcbiAgICAgICAgY3R4OiBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8U2VydmljZSwgdHlwZW9mIG1ldGhvZD4sXG4gICAgKTogKHRoaXM6IFNlcnZpY2UsIC4uLnBhcmFtczogSW5mZXJWYXJpYW50VHlwZXM8UGFyYW1zPikgPT4gdm9pZCB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBpbnN0YWxsU2lnbmFsKHBhcmFtcywgY3R4KVxuXG4gICAgICAgIHZvaWQgZ3NpZ25hbCguLi5wYXJhbXMubWFwKGluZmVyR1R5cGVGcm9tVmFyaWFudCkpKFxuICAgICAgICAgICAgKCkgPT4ge30sXG4gICAgICAgICAgICBjdHggYXMgQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PEdPYmplY3QuT2JqZWN0PiAmIEN0eCxcbiAgICAgICAgKVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoLi4ucGFyYW1zKSB7XG4gICAgICAgICAgICBpZiAodGhpc1tpbnRlcm5hbHNdLnByb3h5KSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBjYW5ub3QgZW1pdCBzaWduYWwgXCIke25hbWV9XCIgb24gcmVtb3RlIG9iamVjdGApXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh0aGlzW2ludGVybmFsc10uZGJ1c09iamVjdCB8fCAhdGhpc1tpbnRlcm5hbHNdLnByb3h5KSB7XG4gICAgICAgICAgICAgICAgbWV0aG9kLmFwcGx5KHRoaXMsIHBhcmFtcylcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZW1pdChuYW1lLCAuLi5wYXJhbXMpXG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAiaW1wb3J0IHsgU2VydmljZSwgaWZhY2UsIG1ldGhvZEFzeW5jIH0gZnJvbSBcImduaW0vZGJ1c1wiXG5cbmV4cG9ydCBpbnRlcmZhY2UgQXBwREJ1c0ltcGwge1xuICAgIGluc2VjdG9yKCk6IHZvaWRcbiAgICB0b2dnbGVXaW5kb3cobmFtZTogc3RyaW5nKTogdm9pZFxuICAgIHF1aXQoKTogdm9pZFxuICAgIHJlcXVlc3QoYXJndjogc3RyaW5nW10pOiBQcm9taXNlPHN0cmluZz5cbn1cblxuQGlmYWNlKFwiaW8uQXN0YWwuQXBwbGljYXRpb25cIilcbmV4cG9ydCBjbGFzcyBBcHBEQnVzIGV4dGVuZHMgU2VydmljZSB7XG4gICAgcHJpdmF0ZSBpbXBsOiBBcHBEQnVzSW1wbFxuXG4gICAgQG1ldGhvZEFzeW5jKClcbiAgICBhc3luYyBJbnNwZWN0b3IoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5pbXBsLmluc2VjdG9yKCkpXG4gICAgfVxuXG4gICAgQG1ldGhvZEFzeW5jKFwic1wiKVxuICAgIGFzeW5jIFRvZ2dsZVdpbmRvdyhuYW1lOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLmltcGwudG9nZ2xlV2luZG93KG5hbWUpKVxuICAgIH1cblxuICAgIEBtZXRob2RBc3luYygpXG4gICAgYXN5bmMgUXVpdCgpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLmltcGwucXVpdCgpKVxuICAgIH1cblxuICAgIEBtZXRob2RBc3luYyhbXCJhc1wiXSwgW1wic1wiXSlcbiAgICBhc3luYyBSZXF1ZXN0KGFyZ3Y6IHN0cmluZ1tdKTogUHJvbWlzZTxbc3RyaW5nXT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5pbXBsLnJlcXVlc3QoYXJndikudGhlbigocmVzKSA9PiBbcmVzXSlcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3RvcihpbXBsOiBBcHBEQnVzSW1wbCkge1xuICAgICAgICBzdXBlcigpXG4gICAgICAgIHRoaXMuaW1wbCA9IGltcGxcbiAgICB9XG5cbiAgICBzdGF0aWMgcHJveHkoaW5zdGFuY2VOYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgY29uc3QgYXBwID0gbmV3IEFwcERCdXMoe1xuICAgICAgICAgICAgaW5zZWN0b3IoKSB7fSxcbiAgICAgICAgICAgIHRvZ2dsZVdpbmRvdygpIHt9LFxuICAgICAgICAgICAgcXVpdCgpIHt9LFxuICAgICAgICAgICAgcmVxdWVzdDogKCkgPT4gUHJvbWlzZS5yZWplY3QoKSxcbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm4gYXBwLnByb3h5KHtcbiAgICAgICAgICAgIG5hbWU6IFwiaW8uQXN0YWwuXCIgKyBpbnN0YW5jZU5hbWUsXG4gICAgICAgIH0pXG4gICAgfVxufVxuIiwgImltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgRnJhZ21lbnQgfSBmcm9tIFwiLi9GcmFnbWVudC5qc1wiXG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCIuL3N0YXRlLmpzXCJcbmltcG9ydCB7IHR5cGUgQ0MsIHR5cGUgRkMsIGVudiB9IGZyb20gXCIuL2Vudi5qc1wiXG5pbXBvcnQgeyBrZWJhYmlmeSwgdHlwZSBQYXNjYWxpZnksIHNldCB9IGZyb20gXCIuLi91dGlsLmpzXCJcbmltcG9ydCB7IG9uQ2xlYW51cCB9IGZyb20gXCIuL3Njb3BlLmpzXCJcblxuLyoqXG4gKiBSZXByZXNlbnRzIGFsbCBvZiB0aGUgdGhpbmdzIHRoYXQgY2FuIGJlIHBhc3NlZCBhcyBhIGNoaWxkIHRvIGNsYXNzIGNvbXBvbmVudHMuXG4gKi9cbmV4cG9ydCB0eXBlIE5vZGUgPVxuICAgIHwgQXJyYXk8R09iamVjdC5PYmplY3Q+XG4gICAgfCBHT2JqZWN0Lk9iamVjdFxuICAgIHwgbnVtYmVyXG4gICAgfCBzdHJpbmdcbiAgICB8IGJvb2xlYW5cbiAgICB8IG51bGxcbiAgICB8IHVuZGVmaW5lZFxuXG5leHBvcnQgY29uc3QgZ3RrVHlwZSA9IFN5bWJvbChcImd0ayBidWlsZGVyIHR5cGVcIilcblxuLyoqXG4gKiBTcGVjaWFsIHN5bWJvbCB3aGljaCBsZXRzIHlvdSBpbXBsZW1lbnQgaG93IHdpZGdldHMgYXJlIGFwcGVuZGVkIGluIEpTWC5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYHRzXG4gKiBjbGFzcyBNeUNvbXBvbmVudCBleHRlbmRzIEdPYmplY3QuT2JqZWN0IHtcbiAqICAgW2FwcGVuZENoaWxkXShjaGlsZDogR09iamVjdC5PYmplY3QsIHR5cGU6IHN0cmluZyB8IG51bGwpIHtcbiAqICAgICAvLyBpbXBsZW1lbnRcbiAqICAgfVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBjb25zdCBhcHBlbmRDaGlsZCA9IFN5bWJvbChcIkpTWCBhZGQgY2hpbGQgbWV0aG9kXCIpXG5cbi8qKlxuICogU3BlY2lhbCBzeW1ib2wgd2hpY2ggbGV0cyB5b3UgaW1wbGVtZW50IGhvdyB3aWRnZXRzIGFyZSByZW1vdmVkIGluIEpTWC5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYHRzXG4gKiBjbGFzcyBNeUNvbXBvbmVudCBleHRlbmRzIEdPYmplY3QuT2JqZWN0IHtcbiAqICAgW3JlbW92ZUNoaWxkXShjaGlsZDogR09iamVjdC5PYmplY3QpIHtcbiAqICAgICAvLyBpbXBsZW1lbnRcbiAqICAgfVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBjb25zdCByZW1vdmVDaGlsZCA9IFN5bWJvbChcIkpTWCBhZGQgcmVtb3ZlIG1ldGhvZFwiKVxuXG4vKipcbiAqIEdldCB0aGUgdHlwZSBvZiB0aGUgb2JqZWN0IHNwZWNpZmllZCB0aHJvdWdoIHRoZSBgJHR5cGVgIHByb3BlcnR5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRUeXBlKG9iamVjdDogR09iamVjdC5PYmplY3QpIHtcbiAgICByZXR1cm4gZ3RrVHlwZSBpbiBvYmplY3QgPyAob2JqZWN0W2d0a1R5cGVdIGFzIHN0cmluZykgOiBudWxsXG59XG5cbi8qKlxuICogRnVuY3Rpb24gQ29tcG9uZW50IFByb3BlcnRpZXNcbiAqL1xuZXhwb3J0IHR5cGUgRkNQcm9wczxTZWxmLCBQcm9wcz4gPSBQcm9wcyAmIHtcbiAgICAvKipcbiAgICAgKiBHdGsuQnVpbGRlciB0eXBlXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgYXMgYSBwYXJhbWV0ZXJzXG4gICAgICovXG4gICAgJHR5cGU/OiBzdHJpbmdcbiAgICAvKipcbiAgICAgKiBzZXR1cCBmdW5jdGlvblxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIGFzIGEgcGFyYW1ldGVyc1xuICAgICAqL1xuICAgICQ/KHNlbGY6IFNlbGYpOiB2b2lkXG59XG5cbi8qKlxuICogQ2xhc3MgQ29tcG9uZW50IFByb3BlcnRpZXNcbiAqL1xuZXhwb3J0IHR5cGUgQ0NQcm9wczxTZWxmIGV4dGVuZHMgR09iamVjdC5PYmplY3QsIFByb3BzPiA9IHtcbiAgICAvKipcbiAgICAgKiBAaW50ZXJuYWwgY2hpbGRyZW4gZWxlbWVudHNcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgY2hpbGRyZW4/OiBBcnJheTxOb2RlPiB8IE5vZGVcbiAgICAvKipcbiAgICAgKiBHdGsuQnVpbGRlciB0eXBlXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgICR0eXBlPzogc3RyaW5nXG4gICAgLyoqXG4gICAgICogZnVuY3Rpb24gdG8gdXNlIGFzIGEgY29uc3RydWN0b3IsXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgICRjb25zdHJ1Y3Rvcj8ocHJvcHM6IFBhcnRpYWw8UHJvcHM+KTogU2VsZlxuICAgIC8qKlxuICAgICAqIHNldHVwIGZ1bmN0aW9uLFxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkPyhzZWxmOiBTZWxmKTogdm9pZFxuICAgIC8qKlxuICAgICAqIENTUyBjbGFzcyBuYW1lc1xuICAgICAqL1xuICAgIGNsYXNzPzogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPlxuICAgIC8qKlxuICAgICAqIGlubGluZSBDU1NcbiAgICAgKi9cbiAgICBjc3M/OiBzdHJpbmcgfCBBY2Nlc3NvcjxzdHJpbmc+XG59ICYge1xuICAgIFtLIGluIGtleW9mIFByb3BzXTogQWNjZXNzb3I8Tm9uTnVsbGFibGU8UHJvcHNbS10+PiB8IFByb3BzW0tdXG59ICYge1xuICAgIFtTIGluIGtleW9mIFNlbGZbXCIkc2lnbmFsc1wiXSBhcyBTIGV4dGVuZHMgYG5vdGlmeTo6JHtpbmZlciBQfWBcbiAgICAgICAgPyBgb25Ob3RpZnkke1Bhc2NhbGlmeTxQPn1gXG4gICAgICAgIDogUyBleHRlbmRzIGAke2luZmVyIEV9Ojoke2luZmVyIER9YFxuICAgICAgICAgID8gYG9uJHtQYXNjYWxpZnk8YCR7RX06JHtEfWA+fWBcbiAgICAgICAgICA6IFMgZXh0ZW5kcyBzdHJpbmdcbiAgICAgICAgICAgID8gYG9uJHtQYXNjYWxpZnk8Uz59YFxuICAgICAgICAgICAgOiBuZXZlcl0/OiBHT2JqZWN0LlNpZ25hbENhbGxiYWNrPFNlbGYsIFNlbGZbXCIkc2lnbmFsc1wiXVtTXT5cbn1cblxuLy8gcHJldHRpZXItaWdub3JlXG50eXBlIEpzeFByb3BzPEMsIFByb3BzPiA9XG4gICAgQyBleHRlbmRzIHR5cGVvZiBGcmFnbWVudCA/IChQcm9wcyAmIHt9KVxuICAgIC8vIGludHJpbnNpY0VsZW1lbnRzIGFsd2F5cyByZXNvbHZlIGFzIEZDXG4gICAgLy8gc28gd2UgY2FuJ3QgbmFycm93IGl0IGRvd24sIGFuZCBpbiBzb21lIGNhc2VzXG4gICAgLy8gdGhlIHNldHVwIGZ1bmN0aW9uIGlzIHR5cGVkIGFzIGEgdW5pb24gb2YgT2JqZWN0IGFuZCBhY3R1YWwgdHlwZVxuICAgIC8vIGFzIGEgZml4IHVzZXJzIGNhbiBhbmQgc2hvdWxkIHVzZSBGQ1Byb3BzXG4gICAgOiBDIGV4dGVuZHMgRkMgPyBQcm9wcyAmIE9taXQ8RkNQcm9wczxSZXR1cm5UeXBlPEM+LCBQcm9wcz4sIFwiJFwiPlxuICAgIDogQyBleHRlbmRzIENDID8gQ0NQcm9wczxJbnN0YW5jZVR5cGU8Qz4sIFByb3BzPlxuICAgIDogbmV2ZXJcblxuZnVuY3Rpb24gaXNHT2JqZWN0Q3RvcihjdG9yOiBhbnkpOiBjdG9yIGlzIENDIHtcbiAgICByZXR1cm4gY3Rvci5wcm90b3R5cGUgaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdFxufVxuXG5mdW5jdGlvbiBpc0Z1bmN0aW9uQ3RvcihjdG9yOiBhbnkpOiBjdG9yIGlzIEZDIHtcbiAgICByZXR1cm4gdHlwZW9mIGN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJiAhaXNHT2JqZWN0Q3RvcihjdG9yKVxufVxuXG4vLyBvbk5vdGlmeVByb3BOYW1lIC0+IG5vdGlmeTo6cHJvcC1uYW1lXG4vLyBvblBhc2NhbE5hbWU6ZGV0YWlsTmFtZSAtPiBwYXNjYWwtbmFtZTo6ZGV0YWlsLW5hbWVcbmV4cG9ydCBmdW5jdGlvbiBzaWduYWxOYW1lKGtleTogc3RyaW5nKTogc3RyaW5nIHtcbiAgICBjb25zdCBbc2lnLCBkZXRhaWxdID0ga2ViYWJpZnkoa2V5LnNsaWNlKDIpKS5zcGxpdChcIjpcIilcblxuICAgIGlmIChzaWcuc3RhcnRzV2l0aChcIm5vdGlmeS1cIikpIHtcbiAgICAgICAgcmV0dXJuIGBub3RpZnk6OiR7c2lnLnNsaWNlKDcpfWBcbiAgICB9XG5cbiAgICByZXR1cm4gZGV0YWlsID8gYCR7c2lnfTo6JHtkZXRhaWx9YCA6IHNpZ1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlKHBhcmVudDogR09iamVjdC5PYmplY3QsIGNoaWxkOiBHT2JqZWN0Lk9iamVjdCkge1xuICAgIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBGcmFnbWVudCkge1xuICAgICAgICBwYXJlbnQucmVtb3ZlKGNoaWxkKVxuICAgICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpZiAocmVtb3ZlQ2hpbGQgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnRbcmVtb3ZlQ2hpbGRdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcGFyZW50W3JlbW92ZUNoaWxkXShjaGlsZClcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgZW52LnJlbW92ZUNoaWxkKHBhcmVudCwgY2hpbGQpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhcHBlbmQocGFyZW50OiBHT2JqZWN0Lk9iamVjdCwgY2hpbGQ6IEdPYmplY3QuT2JqZWN0KSB7XG4gICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgIHBhcmVudC5hcHBlbmQoY2hpbGQpXG4gICAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgIGZvciAoY29uc3QgY2ggb2YgY2hpbGQpIHtcbiAgICAgICAgICAgIGFwcGVuZChwYXJlbnQsIGNoKVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgYXBwZW5kSGFuZGxlciA9IGNoaWxkLmNvbm5lY3QoXCJhcHBlbmRcIiwgKF8sIGNoKSA9PiB7XG4gICAgICAgICAgICBpZiAoIShjaCBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0KSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmVycm9yKFR5cGVFcnJvcihgY2Fubm90IGFkZCAke2NofSB0byAke3BhcmVudH1gKSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGFwcGVuZChwYXJlbnQsIGNoKVxuICAgICAgICB9KVxuXG4gICAgICAgIGNvbnN0IHJlbW92ZUhhbmRsZXIgPSBjaGlsZC5jb25uZWN0KFwicmVtb3ZlXCIsIChfLCBjaCkgPT4ge1xuICAgICAgICAgICAgaWYgKCEoY2ggaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5lcnJvcihUeXBlRXJyb3IoYGNhbm5vdCByZW1vdmUgJHtjaH0gZnJvbSAke3BhcmVudH1gKSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlbW92ZShwYXJlbnQsIGNoKVxuICAgICAgICB9KVxuXG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgICAgICBjaGlsZC5kaXNjb25uZWN0KGFwcGVuZEhhbmRsZXIpXG4gICAgICAgICAgICBjaGlsZC5kaXNjb25uZWN0KHJlbW92ZUhhbmRsZXIpXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKGFwcGVuZENoaWxkIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50W2FwcGVuZENoaWxkXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHBhcmVudFthcHBlbmRDaGlsZF0oY2hpbGQsIGdldFR5cGUoY2hpbGQpKVxuICAgICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBlbnYuYXBwZW5kQ2hpbGQocGFyZW50LCBjaGlsZClcbn1cblxuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldFR5cGUob2JqZWN0OiBvYmplY3QsIHR5cGU6IHN0cmluZykge1xuICAgIGlmIChndGtUeXBlIGluIG9iamVjdCAmJiBvYmplY3RbZ3RrVHlwZV0gIT09IFwiXCIpIHtcbiAgICAgICAgY29uc29sZS53YXJuKGB0eXBlIG92ZXJyaWRlbiBmcm9tICR7b2JqZWN0W2d0a1R5cGVdfSB0byAke3R5cGV9IG9uICR7b2JqZWN0fWApXG4gICAgfVxuXG4gICAgT2JqZWN0LmFzc2lnbihvYmplY3QsIHsgW2d0a1R5cGVdOiB0eXBlIH0pXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBqc3g8VCBleHRlbmRzIChwcm9wczogYW55KSA9PiBHT2JqZWN0Lk9iamVjdD4oXG4gICAgY3RvcjogVCxcbiAgICBwcm9wczogSnN4UHJvcHM8VCwgUGFyYW1ldGVyczxUPlswXT4sXG4pOiBSZXR1cm5UeXBlPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBqc3g8VCBleHRlbmRzIG5ldyAocHJvcHM6IGFueSkgPT4gR09iamVjdC5PYmplY3Q+KFxuICAgIGN0b3I6IFQsXG4gICAgcHJvcHM6IEpzeFByb3BzPFQsIENvbnN0cnVjdG9yUGFyYW1ldGVyczxUPlswXT4sXG4pOiBJbnN0YW5jZVR5cGU8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGpzeDxUIGV4dGVuZHMgR09iamVjdC5PYmplY3Q+KFxuICAgIGN0b3I6IGtleW9mICh0eXBlb2YgZW52KVtcImludHJpbnNpY0VsZW1lbnRzXCJdIHwgKG5ldyAocHJvcHM6IGFueSkgPT4gVCkgfCAoKHByb3BzOiBhbnkpID0+IFQpLFxuICAgIGlucHJvcHM6IGFueSxcbiAgICAvLyBrZXkgaXMgYSBzcGVjaWFsIHByb3AgaW4ganN4IHdoaWNoIGlzIHBhc3NlZCBhcyBhIHRoaXJkIGFyZ3VtZW50IGFuZCBub3QgaW4gcHJvcHNcbiAgICBrZXk/OiBzdHJpbmcsXG4pOiBUIHtcbiAgICBjb25zdCB7ICQsICR0eXBlLCAkY29uc3RydWN0b3IsIGNoaWxkcmVuLCAuLi5yZXN0IH0gPSBpbnByb3BzIGFzIENDUHJvcHM8VCwgYW55PlxuICAgIGNvbnN0IHByb3BzID0gcmVzdCBhcyBSZWNvcmQ8c3RyaW5nLCBhbnk+XG5cbiAgICBpZiAoa2V5KSBPYmplY3QuYXNzaWduKHByb3BzLCB7IGtleSB9KVxuXG4gICAgY29uc3QgZGVmZXJQcm9wcyA9IGVudi5pbml0UHJvcHMoY3RvciwgcHJvcHMpID8/IFtdXG4gICAgY29uc3QgZGVmZXJyZWRQcm9wczogUmVjb3JkPHN0cmluZywgdW5rbm93bj4gPSB7fVxuXG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMocHJvcHMpKSB7XG4gICAgICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBkZWxldGUgcHJvcHNba2V5XVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGRlZmVyUHJvcHMuaW5jbHVkZXMoa2V5KSkge1xuICAgICAgICAgICAgZGVmZXJyZWRQcm9wc1trZXldID0gcHJvcHNba2V5XVxuICAgICAgICAgICAgZGVsZXRlIHByb3BzW2tleV1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0eXBlb2YgY3RvciA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBpZiAoY3RvciBpbiBlbnYuaW50cmluc2ljRWxlbWVudHMpIHtcbiAgICAgICAgICAgIGN0b3IgPSBlbnYuaW50cmluc2ljRWxlbWVudHNbY3Rvcl0gYXMgRkM8VD4gfCBDQzxUPlxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYHVua25vd24gaW50cmluc2ljIGVsZW1lbnQgXCIke2N0b3J9XCJgKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGlzRnVuY3Rpb25DdG9yKGN0b3IpKSB7XG4gICAgICAgIGNvbnN0IG9iamVjdCA9IGN0b3IoeyBjaGlsZHJlbiwgLi4ucHJvcHMgfSlcbiAgICAgICAgaWYgKCR0eXBlKSBzZXRUeXBlKG9iamVjdCwgJHR5cGUpXG4gICAgICAgICQ/LihvYmplY3QpXG4gICAgICAgIHJldHVybiBvYmplY3RcbiAgICB9XG5cbiAgICAvLyBjb2xsZWN0IGNzcyBhbmQgY2xhc3NOYW1lXG4gICAgY29uc3QgeyBjc3MsIGNsYXNzOiBjbGFzc05hbWUgfSA9IHByb3BzXG4gICAgZGVsZXRlIHByb3BzLmNzc1xuICAgIGRlbGV0ZSBwcm9wcy5jbGFzc1xuXG4gICAgY29uc3Qgc2lnbmFsczogQXJyYXk8W3N0cmluZywgKC4uLnByb3BzOiB1bmtub3duW10pID0+IHVua25vd25dPiA9IFtdXG4gICAgY29uc3QgYmluZGluZ3M6IEFycmF5PFtzdHJpbmcsIEFjY2Vzc29yPHVua25vd24+XT4gPSBbXVxuXG4gICAgLy8gY29sbGVjdCBzaWduYWxzIGFuZCBiaW5kaW5nc1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAoa2V5LnN0YXJ0c1dpdGgoXCJvblwiKSkge1xuICAgICAgICAgICAgc2lnbmFscy5wdXNoKFtrZXksIHZhbHVlIGFzICgpID0+IHVua25vd25dKVxuICAgICAgICAgICAgZGVsZXRlIHByb3BzW2tleV1cbiAgICAgICAgfVxuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgYmluZGluZ3MucHVzaChba2V5LCB2YWx1ZV0pXG4gICAgICAgICAgICBwcm9wc1trZXldID0gdmFsdWUuZ2V0KClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIGNvbnN0cnVjdFxuICAgIGNvbnN0IG9iamVjdCA9ICRjb25zdHJ1Y3RvciA/ICRjb25zdHJ1Y3Rvcihwcm9wcykgOiBuZXcgKGN0b3IgYXMgQ0M8VD4pKHByb3BzKVxuICAgIGlmICgkY29uc3RydWN0b3IpIE9iamVjdC5hc3NpZ24ob2JqZWN0LCBwcm9wcylcbiAgICBpZiAoJHR5cGUpIHNldFR5cGUob2JqZWN0LCAkdHlwZSlcblxuICAgIGlmIChjc3MpIGVudi5zZXRDc3Mob2JqZWN0LCBjc3MpXG4gICAgaWYgKGNsYXNzTmFtZSkgZW52LnNldENsYXNzKG9iamVjdCwgY2xhc3NOYW1lKVxuXG4gICAgLy8gYWRkIGNoaWxkcmVuXG4gICAgZm9yIChsZXQgY2hpbGQgb2YgQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl0pIHtcbiAgICAgICAgaWYgKGNoaWxkID09PSB0cnVlKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oRXJyb3IoXCJUcnlpbmcgdG8gYWRkIGJvb2xlYW4gdmFsdWUgb2YgYHRydWVgIGFzIGEgY2hpbGQuXCIpKVxuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkKSkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBjaCBvZiBjaGlsZCkge1xuICAgICAgICAgICAgICAgIGFwcGVuZChvYmplY3QsIGNoKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGNoaWxkKSB7XG4gICAgICAgICAgICBpZiAoIShjaGlsZCBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0KSkge1xuICAgICAgICAgICAgICAgIGNoaWxkID0gZW52LnRleHROb2RlKGNoaWxkKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXBwZW5kKG9iamVjdCwgY2hpbGQpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBoYW5kbGUgc2lnbmFsc1xuICAgIGNvbnN0IGRpc3Bvc2VIYW5kbGVycyA9IHNpZ25hbHMubWFwKChbc2lnLCBoYW5kbGVyXSkgPT4ge1xuICAgICAgICBjb25zdCBpZCA9IG9iamVjdC5jb25uZWN0KHNpZ25hbE5hbWUoc2lnKSwgaGFuZGxlcilcbiAgICAgICAgcmV0dXJuICgpID0+IG9iamVjdC5kaXNjb25uZWN0KGlkKVxuICAgIH0pXG5cbiAgICAvLyBkZWZlcnJlZCBwcm9wc1xuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKGRlZmVycmVkUHJvcHMpKSB7XG4gICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICBiaW5kaW5ncy5wdXNoKFtrZXksIHZhbHVlXSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24ob2JqZWN0LCB7IFtrZXldOiB2YWx1ZSB9KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gaGFuZGxlIGJpbmRpbmdzXG4gICAgY29uc3QgZGlzcG9zZUJpbmRpbmdzID0gYmluZGluZ3MubWFwKChbcHJvcCwgYmluZGluZ10pID0+IHtcbiAgICAgICAgY29uc3QgZGlzcG9zZSA9IGJpbmRpbmcuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgIHNldChvYmplY3QsIHByb3AsIGJpbmRpbmcuZ2V0KCkpXG4gICAgICAgIH0pXG4gICAgICAgIHNldChvYmplY3QsIHByb3AsIGJpbmRpbmcuZ2V0KCkpXG4gICAgICAgIHJldHVybiBkaXNwb3NlXG4gICAgfSlcblxuICAgIC8vIGNsZWFudXBcbiAgICBpZiAoZGlzcG9zZUJpbmRpbmdzLmxlbmd0aCA+IDAgfHwgZGlzcG9zZUhhbmRsZXJzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgb25DbGVhbnVwKCgpID0+IHtcbiAgICAgICAgICAgIGRpc3Bvc2VIYW5kbGVycy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgIGRpc3Bvc2VCaW5kaW5ncy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICAkPy4ob2JqZWN0KVxuICAgIHJldHVybiBvYmplY3Rcbn1cblxuLy8gVE9ETzogbWFrZSB1c2Ugb2YganN4c1xuZXhwb3J0IGNvbnN0IGpzeHMgPSBqc3hcblxuZGVjbGFyZSBnbG9iYWwge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbmFtZXNwYWNlXG4gICAgbmFtZXNwYWNlIEpTWCB7XG4gICAgICAgIHR5cGUgRWxlbWVudFR5cGUgPSBrZXlvZiBJbnRyaW5zaWNFbGVtZW50cyB8IEZDIHwgQ0NcbiAgICAgICAgdHlwZSBFbGVtZW50ID0gR09iamVjdC5PYmplY3RcbiAgICAgICAgdHlwZSBFbGVtZW50Q2xhc3MgPSBHT2JqZWN0Lk9iamVjdFxuXG4gICAgICAgIHR5cGUgTGlicmFyeU1hbmFnZWRBdHRyaWJ1dGVzPEMsIFByb3BzPiA9IEpzeFByb3BzPEMsIFByb3BzPiAmIHtcbiAgICAgICAgICAgIC8vIEZJWE1FOiB3aHkgZG9lcyBhbiBpbnRyaW5zaWMgZWxlbWVudCBhbHdheXMgcmVzb2x2ZSBhcyBGQz9cbiAgICAgICAgICAgIC8vIF9fdHlwZT86IEMgZXh0ZW5kcyBDQyA/IFwiQ0NcIiA6IEMgZXh0ZW5kcyBGQyA/IFwiRkNcIiA6IG5ldmVyXG4gICAgICAgIH1cblxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LW9iamVjdC10eXBlXG4gICAgICAgIGludGVyZmFjZSBJbnRyaW5zaWNFbGVtZW50cyB7XG4gICAgICAgICAgICAvLyBjYzogQ0NQcm9wczxHdGsuQm94LCBHdGsuQm94LkNvbnN0cnVjdG9yUHJvcHMsIEd0ay5Cb3guU2lnbmFsU2lnbmF0dXJlcz5cbiAgICAgICAgICAgIC8vIGZjOiBGQ1Byb3BzPEd0ay5XaWRnZXQsIEZuUHJvcHM+XG4gICAgICAgIH1cblxuICAgICAgICBpbnRlcmZhY2UgRWxlbWVudENoaWxkcmVuQXR0cmlidXRlIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktb2JqZWN0LXR5cGVcbiAgICAgICAgICAgIGNoaWxkcmVuOiB7fVxuICAgICAgICB9XG4gICAgfVxufVxuIiwgImltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuXG5pbnRlcmZhY2UgRnJhZ21lbnRTaWduYWxzPFQ+IGV4dGVuZHMgR09iamVjdC5PYmplY3QuU2lnbmFsU2lnbmF0dXJlcyB7XG4gICAgYXBwZW5kOiAoY2hpbGQ6IFQpID0+IHZvaWRcbiAgICByZW1vdmU6IChjaGlsZDogVCkgPT4gdm9pZFxufVxuXG5leHBvcnQgY2xhc3MgRnJhZ21lbnQ8VCA9IGFueT4gZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gICAgZGVjbGFyZSAkc2lnbmFsczogRnJhZ21lbnRTaWduYWxzPFQ+XG5cbiAgICBzdGF0aWMgW0dPYmplY3Quc2lnbmFsc10gPSB7XG4gICAgICAgIGFwcGVuZDogeyBwYXJhbV90eXBlczogW0dPYmplY3QuVFlQRV9PQkpFQ1RdIH0sXG4gICAgICAgIHJlbW92ZTogeyBwYXJhbV90eXBlczogW0dPYmplY3QuVFlQRV9PQkpFQ1RdIH0sXG4gICAgfVxuXG4gICAgc3RhdGljIFtHT2JqZWN0LnByb3BlcnRpZXNdID0ge1xuICAgICAgICBjaGlsZHJlbjogR09iamVjdC5QYXJhbVNwZWMuanNvYmplY3QoXCJjaGlsZHJlblwiLCBcIlwiLCBcIlwiLCBHT2JqZWN0LlBhcmFtRmxhZ3MuUkVBREFCTEUpLFxuICAgIH1cblxuICAgIHN0YXRpYyB7XG4gICAgICAgIEdPYmplY3QucmVnaXN0ZXJDbGFzcyh0aGlzKVxuICAgIH1cblxuICAgICpbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICAgICAgeWllbGQqIHRoaXMuX2NoaWxkcmVuXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBfY2hpbGRyZW46IEFycmF5PFQ+XG5cbiAgICBhcHBlbmQoY2hpbGQ6IFQpOiB2b2lkIHtcbiAgICAgICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgRnJhZ21lbnQpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBuZXN0aW5nIEZyYWdtZW50cyBhcmUgbm90IHlldCBzdXBwb3J0ZWRgKVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fY2hpbGRyZW4ucHVzaChjaGlsZClcbiAgICAgICAgdGhpcy5lbWl0KFwiYXBwZW5kXCIsIGNoaWxkKVxuICAgICAgICB0aGlzLm5vdGlmeShcImNoaWxkcmVuXCIpXG4gICAgfVxuXG4gICAgcmVtb3ZlKGNoaWxkOiBUKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5fY2hpbGRyZW4uZmluZEluZGV4KChpKSA9PiBpID09PSBjaGlsZClcbiAgICAgICAgdGhpcy5fY2hpbGRyZW4uc3BsaWNlKGluZGV4LCAxKVxuXG4gICAgICAgIHRoaXMuZW1pdChcInJlbW92ZVwiLCBjaGlsZClcbiAgICAgICAgdGhpcy5ub3RpZnkoXCJjaGlsZHJlblwiKVxuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKHsgY2hpbGRyZW4gPSBbXSB9OiBQYXJ0aWFsPHsgY2hpbGRyZW46IEFycmF5PFQ+IHwgVCB9PiA9IHt9KSB7XG4gICAgICAgIHN1cGVyKClcbiAgICAgICAgdGhpcy5fY2hpbGRyZW4gPSBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuIDogW2NoaWxkcmVuXVxuICAgIH1cblxuICAgIGNvbm5lY3Q8UyBleHRlbmRzIGtleW9mIEZyYWdtZW50U2lnbmFsczxUPj4oXG4gICAgICAgIHNpZ25hbDogUyxcbiAgICAgICAgY2FsbGJhY2s6IEdPYmplY3QuU2lnbmFsQ2FsbGJhY2s8dGhpcywgRnJhZ21lbnRTaWduYWxzPFQ+W1NdPixcbiAgICApOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gc3VwZXIuY29ubmVjdChzaWduYWwsIGNhbGxiYWNrKVxuICAgIH1cbn1cbiIsICJpbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvXCJcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWJcIlxuaW1wb3J0IHsgdHlwZSBQYXNjYWxpZnksIGNhbWVsaWZ5LCBrZWJhYmlmeSB9IGZyb20gXCIuLi91dGlsLmpzXCJcbmltcG9ydCB0eXBlIHsgRGVlcEluZmVyLCBSZWN1cnNpdmVJbmZlciB9IGZyb20gXCIuLi92YXJpYW50LmpzXCJcblxudHlwZSBTdWJzY3JpYmVDYWxsYmFjayA9ICgpID0+IHZvaWRcbnR5cGUgRGlzcG9zZUZ1bmN0aW9uID0gKCkgPT4gdm9pZFxudHlwZSBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjazogU3Vic2NyaWJlQ2FsbGJhY2spID0+IERpc3Bvc2VGdW5jdGlvblxuXG5leHBvcnQgdHlwZSBBY2Nlc3NlZDxUPiA9IFQgZXh0ZW5kcyBBY2Nlc3NvcjxpbmZlciBWPiA/IFYgOiBuZXZlclxuXG5jb25zdCBlbXB0eSA9IFN5bWJvbChcImVtcHR5IGNvbXB1dGVkIHZhbHVlXCIpXG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5zYWZlLWRlY2xhcmF0aW9uLW1lcmdpbmdcbmV4cG9ydCBjbGFzcyBBY2Nlc3NvcjxUID0gdW5rbm93bj4gZXh0ZW5kcyBGdW5jdGlvbiB7XG4gICAgc3RhdGljICRndHlwZSA9IEdPYmplY3QuVFlQRV9KU09CSkVDVCBhcyB1bmtub3duIGFzIEdPYmplY3QuR1R5cGU8QWNjZXNzb3I+XG5cbiAgICAjZ2V0OiAoKSA9PiBUXG4gICAgI3N1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb25cblxuICAgIGNvbnN0cnVjdG9yKGdldDogKCkgPT4gVCwgc3Vic2NyaWJlPzogU3Vic2NyaWJlRnVuY3Rpb24pIHtcbiAgICAgICAgc3VwZXIoXCJyZXR1cm4gYXJndW1lbnRzLmNhbGxlZS5fY2FsbC5hcHBseShhcmd1bWVudHMuY2FsbGVlLCBhcmd1bWVudHMpXCIpXG4gICAgICAgIHRoaXMuI3N1YnNjcmliZSA9IHN1YnNjcmliZSA/PyAoKCkgPT4gKCkgPT4gdm9pZCAwKVxuICAgICAgICB0aGlzLiNnZXQgPSBnZXRcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTdWJzY3JpYmUgZm9yIHZhbHVlIGNoYW5nZXMuXG4gICAgICogQHBhcmFtIGNhbGxiYWNrIFRoZSBmdW5jdGlvbiB0byBydW4gd2hlbiB0aGUgY3VycmVudCB2YWx1ZSBjaGFuZ2VzLlxuICAgICAqIEByZXR1cm5zIFVuc3Vic2NyaWJlIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIHN1YnNjcmliZShjYWxsYmFjazogU3Vic2NyaWJlQ2FsbGJhY2spOiBEaXNwb3NlRnVuY3Rpb24ge1xuICAgICAgICByZXR1cm4gdGhpcy4jc3Vic2NyaWJlKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEByZXR1cm5zIFRoZSBjdXJyZW50IHZhbHVlLlxuICAgICAqL1xuICAgIGdldCgpOiBUIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI2dldCgpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgbmV3IGBBY2Nlc3NvcmAgdGhhdCBhcHBsaWVzIGEgdHJhbnNmb3JtYXRpb24gb24gaXRzIHZhbHVlLlxuICAgICAqIEBwYXJhbSB0cmFuc2Zvcm0gVGhlIHRyYW5zZm9ybWF0aW9uIHRvIGFwcGx5LiBTaG91bGQgYmUgYSBwdXJlIGZ1bmN0aW9uLlxuICAgICAqL1xuICAgIGFzPFIgPSBUPih0cmFuc2Zvcm06ICh2YWx1ZTogVCkgPT4gUik6IEFjY2Vzc29yPFI+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiB0cmFuc2Zvcm0odGhpcy4jZ2V0KCkpLCB0aGlzLiNzdWJzY3JpYmUpXG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9jYWxsPFIgPSBUPih0cmFuc2Zvcm06ICh2YWx1ZTogVCkgPT4gUik6IEFjY2Vzc29yPFI+IHtcbiAgICAgICAgbGV0IHZhbHVlOiB0eXBlb2YgZW1wdHkgfCBSID0gZW1wdHlcbiAgICAgICAgbGV0IHVuc3ViOiBEaXNwb3NlRnVuY3Rpb25cblxuICAgICAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcblxuICAgICAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHVuc3ViID0gdGhpcy5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IHRyYW5zZm9ybSh0aGlzLmdldCgpKVxuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgIT09IG5ld1ZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IG5ld1ZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBlbXB0eVxuICAgICAgICAgICAgICAgICAgICB1bnN1YigpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgZ2V0ID0gKCk6IFIgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlICE9PSBlbXB0eSA/IHZhbHVlIDogdHJhbnNmb3JtKHRoaXMuZ2V0KCkpXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbmV3IEFjY2Vzc29yKGdldCwgc3Vic2NyaWJlKVxuICAgIH1cblxuICAgIHRvU3RyaW5nKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiBgQWNjZXNzb3I8JHt0aGlzLmdldCgpfT5gXG4gICAgfVxuXG4gICAgW1N5bWJvbC50b1ByaW1pdGl2ZV0oKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIkFjY2Vzc29yIGltcGxpY2l0bHkgY29udmVydGVkIHRvIGEgcHJpbWl0aXZlIHZhbHVlLlwiKVxuICAgICAgICByZXR1cm4gdGhpcy50b1N0cmluZygpXG4gICAgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFjY2Vzc29yPFQ+IHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBjb21wdXRlZCBgQWNjZXNzb3JgIHRoYXQgY2FjaGVzIGl0cyB0cmFuc2Zvcm1lZCB2YWx1ZS5cbiAgICAgKiBAcGFyYW0gdHJhbnNmb3JtIFRoZSB0cmFuc2Zvcm1hdGlvbiB0byBhcHBseS4gU2hvdWxkIGJlIGEgcHVyZSBmdW5jdGlvbi5cbiAgICAgKiBzZWUge0BsaW5rIGNyZWF0ZUNvbXB1dGVkfSBhbmQge0BsaW5rIGNyZWF0ZUNvbXB1dGVkUHJvZHVjZXJ9XG4gICAgICovXG4gICAgPFIgPSBUPih0cmFuc2Zvcm06ICh2YWx1ZTogVCkgPT4gUik6IEFjY2Vzc29yPFI+XG59XG5cbmV4cG9ydCB0eXBlIFNldHRlcjxUPiA9IHtcbiAgICAodmFsdWU6IFQpOiB2b2lkXG4gICAgKHZhbHVlOiAocHJldjogVCkgPT4gVCk6IHZvaWRcbn1cblxuZXhwb3J0IHR5cGUgU3RhdGU8VD4gPSBbQWNjZXNzb3I8VD4sIFNldHRlcjxUPl1cblxuLyoqXG4gKiBDcmVhdGUgYSB3cml0YWJsZSBzaWduYWwuXG4gKlxuICogQHBhcmFtIGluaXQgVGhlIGludGlhbCB2YWx1ZSBvZiB0aGUgc2lnbmFsXG4gKiBAcmV0dXJucyBBbiBgQWNjZXNzb3JgIGFuZCBhIHNldHRlciBmdW5jdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3RhdGU8VD4oaW5pdDogVCk6IFN0YXRlPFQ+IHtcbiAgICBsZXQgY3VycmVudFZhbHVlID0gaW5pdFxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG4gICAgICAgIHJldHVybiAoKSA9PiBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgfVxuXG4gICAgY29uc3Qgc2V0ID0gKG5ld1ZhbHVlOiB1bmtub3duKSA9PiB7XG4gICAgICAgIGNvbnN0IHZhbHVlOiBUID0gdHlwZW9mIG5ld1ZhbHVlID09PSBcImZ1bmN0aW9uXCIgPyBuZXdWYWx1ZShjdXJyZW50VmFsdWUpIDogbmV3VmFsdWVcbiAgICAgICAgaWYgKGN1cnJlbnRWYWx1ZSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlXG4gICAgICAgICAgICAvLyBydW5uaW5nIGNhbGxiYWNrcyBtaWdodCBtdXRhdGUgc3Vic2NyaWJlcnNcbiAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIFtuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpLCBzZXQgYXMgU2V0dGVyPFQ+XVxufVxuXG5mdW5jdGlvbiBjcmVhdGVDb21wdXRlZFByb2R1Y2VyPFQ+KGZuOiAodHJhY2s6IDxWPihzaWduYWw6IEFjY2Vzc29yPFY+KSA9PiBWKSA9PiBUKTogQWNjZXNzb3I8VD4ge1xuICAgIGxldCB2YWx1ZTogdHlwZW9mIGVtcHR5IHwgVCA9IGVtcHR5XG4gICAgbGV0IHByZXZEZXBzID0gbmV3IE1hcDxBY2Nlc3NvciwgRGlzcG9zZUZ1bmN0aW9uPigpXG5cbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcbiAgICBjb25zdCBjYWNoZSA9IG5ldyBNYXA8QWNjZXNzb3IsIHVua25vd24+KClcblxuICAgIGNvbnN0IGVmZmVjdCA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgZGVwcyA9IG5ldyBTZXQ8QWNjZXNzb3I+KClcbiAgICAgICAgY29uc3QgbmV3VmFsdWUgPSBmbigodikgPT4ge1xuICAgICAgICAgICAgZGVwcy5hZGQodilcbiAgICAgICAgICAgIHJldHVybiAoY2FjaGUuZ2V0KHYpIGFzIGFueSkgfHwgdi5nZXQoKVxuICAgICAgICB9KVxuXG4gICAgICAgIGNvbnN0IGRpZENoYW5nZSA9IHZhbHVlICE9PSBuZXdWYWx1ZVxuICAgICAgICB2YWx1ZSA9IG5ld1ZhbHVlXG5cbiAgICAgICAgY29uc3QgbmV3RGVwcyA9IG5ldyBNYXA8QWNjZXNzb3IsIERpc3Bvc2VGdW5jdGlvbj4oKVxuXG4gICAgICAgIGZvciAoY29uc3QgW2RlcCwgdW5zdWJdIG9mIHByZXZEZXBzKSB7XG4gICAgICAgICAgICBpZiAoIWRlcHMuaGFzKGRlcCkpIHtcbiAgICAgICAgICAgICAgICB1bnN1YigpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG5ld0RlcHMuc2V0KGRlcCwgdW5zdWIpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKGNvbnN0IGRlcCBvZiBkZXBzKSB7XG4gICAgICAgICAgICBpZiAoIW5ld0RlcHMuaGFzKGRlcCkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBkaXNwb3NlID0gZGVwLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZGVwLmdldCgpXG4gICAgICAgICAgICAgICAgICAgIGlmIChjYWNoZS5nZXQoZGVwKSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhY2hlLnNldChkZXAsIHZhbHVlKVxuICAgICAgICAgICAgICAgICAgICAgICAgZWZmZWN0KClcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgbmV3RGVwcy5zZXQoZGVwLCBkaXNwb3NlKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcHJldkRlcHMgPSBuZXdEZXBzXG4gICAgICAgIGlmIChkaWRDaGFuZ2UpIHtcbiAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgZWZmZWN0KClcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IGVtcHR5XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBbLCB1bnN1Yl0gb2YgcHJldkRlcHMpIHtcbiAgICAgICAgICAgICAgICAgICAgdW5zdWIoKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGdldCA9ICgpOiBUID0+IHtcbiAgICAgICAgcmV0dXJuIHZhbHVlICE9PSBlbXB0eSA/IHZhbHVlIDogZm4oKHYpID0+IHYuZ2V0KCkpXG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcihnZXQsIHN1YnNjcmliZSlcbn1cblxuZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWRBcmdzPFxuICAgIGNvbnN0IERlcHMgZXh0ZW5kcyBBcnJheTxBY2Nlc3Nvcjxhbnk+PixcbiAgICBBcmdzIGV4dGVuZHMgeyBbSyBpbiBrZXlvZiBEZXBzXTogQWNjZXNzZWQ8RGVwc1tLXT4gfSxcbiAgICBWID0gQXJncyxcbj4oZGVwczogRGVwcywgdHJhbnNmb3JtPzogKC4uLmFyZ3M6IEFyZ3MpID0+IFYpOiBBY2Nlc3NvcjxWPiB7XG4gICAgbGV0IGRpc3Bvc2U6IEFycmF5PERpc3Bvc2VGdW5jdGlvbj5cbiAgICBsZXQgdmFsdWU6IHR5cGVvZiBlbXB0eSB8IFYgPSBlbXB0eVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG4gICAgY29uc3QgY2FjaGUgPSBuZXcgQXJyYXk8dW5rbm93bj4oZGVwcy5sZW5ndGgpXG5cbiAgICBjb25zdCBjb21wdXRlID0gKCk6IFYgPT4ge1xuICAgICAgICBjb25zdCBhcmdzID0gZGVwcy5tYXAoKGRlcCwgaSkgPT4ge1xuICAgICAgICAgICAgaWYgKCFjYWNoZVtpXSkge1xuICAgICAgICAgICAgICAgIGNhY2hlW2ldID0gZGVwLmdldCgpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBjYWNoZVtpXVxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVybiB0cmFuc2Zvcm0gPyB0cmFuc2Zvcm0oLi4uKGFyZ3MgYXMgQXJncykpIDogKGFyZ3MgYXMgVilcbiAgICB9XG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBkaXNwb3NlID0gZGVwcy5tYXAoKGRlcCwgaSkgPT5cbiAgICAgICAgICAgICAgICBkZXAuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3VmFsdWUgPSBkZXAuZ2V0KClcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhY2hlW2ldICE9PSBuZXdWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGVbaV0gPSBkZXAuZ2V0KClcblxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3VmFsdWUgPSBjb21wdXRlKClcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSAhPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IG5ld1ZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIClcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IGVtcHR5XG4gICAgICAgICAgICAgICAgZGlzcG9zZS5tYXAoKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIGRpc3Bvc2UubGVuZ3RoID0gMFxuICAgICAgICAgICAgICAgIGNhY2hlLmxlbmd0aCA9IDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGdldCA9ICgpOiBWID0+IHtcbiAgICAgICAgcmV0dXJuIHZhbHVlICE9PSBlbXB0eSA/IHZhbHVlIDogY29tcHV0ZSgpXG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcihnZXQsIHN1YnNjcmliZSlcbn1cblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCBmcm9tIGEgcHJvZHVjZXIgZnVuY3Rpb24gdGhhdCB0cmFja3MgaXRzIGRlcGVuZGVuY2llcy5cbiAqXG4gKiBgYGB0cyBFeGFtcGxlXG4gKiBsZXQgYTogQWNjZXNzb3I8bnVtYmVyPlxuICogbGV0IGI6IEFjY2Vzc29yPG51bWJlcj5cbiAqIGNvbnN0IGM6IEFjY2Vzc29yPG51bWJlcj4gPSBjcmVhdGVDb21wdXRlZCgoZ2V0KSA9PiBnZXQoYSkgKyBnZXQoYikpXG4gKiBgYGBcbiAqXG4gKiBAZXhwZXJpbWVudGFsXG4gKiBAcGFyYW0gcHJvZHVjZXIgVGhlIHByb2R1Y2VyIGZ1bmN0aW9uIHdoaWNoIGxldCdzIHlvdSB0cmFjayBkZXBlbmRlbmNpZXNcbiAqIEByZXR1cm5zIFRoZSBjb21wdXRlZCBgQWNjZXNzb3JgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWQ8VD4oXG4gICAgcHJvZHVjZXI6ICh0cmFjazogPFY+KHNpZ25hbDogQWNjZXNzb3I8Vj4pID0+IFYpID0+IFQsXG4pOiBBY2Nlc3NvcjxUPlxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIHdoaWNoIGlzIGNvbXB1dGVkIGZyb20gYSBsaXN0IG9mIGdpdmVuIGBBY2Nlc3NvcmBzLlxuICpcbiAqIGBgYHRzIEV4YW1wbGVcbiAqIGxldCBhOiBBY2Nlc3NvcjxudW1iZXI+XG4gKiBsZXQgYjogQWNjZXNzb3I8c3RyaW5nPlxuICogY29uc3QgYzogQWNjZXNzb3I8W251bWJlciwgc3RyaW5nXT4gPSBjcmVhdGVDb21wdXRlZChbYSwgYl0pXG4gKiBjb25zdCBkOiBBY2Nlc3NvcjxzdHJpbmc+ID0gY3JlYXRlQ29tcHV0ZWQoW2EsIGJdLCAoYTogbnVtYmVyLCBiOiBzdHJpbmcpID0+IGAke2F9ICR7Yn1gKVxuICogYGBgXG4gKlxuICogQHBhcmFtIGRlcHMgTGlzdCBvZiBgQWNjZXNzb3JzYC5cbiAqIEBwYXJhbSB0cmFuc2Zvcm0gQW4gb3B0aW9uYWwgdHJhbnNmb3JtIGZ1bmN0aW9uLlxuICogQHJldHVybnMgVGhlIGNvbXB1dGVkIGBBY2Nlc3NvcmAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb21wdXRlZDxcbiAgICBjb25zdCBEZXBzIGV4dGVuZHMgQXJyYXk8QWNjZXNzb3I8YW55Pj4sXG4gICAgQXJncyBleHRlbmRzIHsgW0sgaW4ga2V5b2YgRGVwc106IEFjY2Vzc2VkPERlcHNbS10+IH0sXG4gICAgVCA9IEFyZ3MsXG4+KGRlcHM6IERlcHMsIHRyYW5zZm9ybT86ICguLi5hcmdzOiBBcmdzKSA9PiBUKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbXB1dGVkKFxuICAgIC4uLmFyZ3M6XG4gICAgICAgIHwgW3Byb2R1Y2VyOiAodHJhY2s6IDxWPihzaWduYWw6IEFjY2Vzc29yPFY+KSA9PiBWKSA9PiB1bmtub3duXVxuICAgICAgICB8IFtkZXBzOiBBcnJheTxBY2Nlc3Nvcj4sIHRyYW5zZm9ybT86ICguLi5hcmdzOiB1bmtub3duW10pID0+IHVua25vd25dXG4pIHtcbiAgICBjb25zdCBbZGVwc09yUHJvZHVjZXIsIHRyYW5zZm9ybV0gPSBhcmdzXG4gICAgaWYgKHR5cGVvZiBkZXBzT3JQcm9kdWNlciA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVDb21wdXRlZFByb2R1Y2VyKGRlcHNPclByb2R1Y2VyKVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVDb21wdXRlZEFyZ3MoZGVwc09yUHJvZHVjZXIsIHRyYW5zZm9ybSlcbiAgICB9XG59XG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgb24gYSBgR09iamVjdC5PYmplY3RgJ3MgYHByb3BlcnR5YC5cbiAqXG4gKiBAcGFyYW0gb2JqZWN0IFRoZSBgR09iamVjdC5PYmplY3RgIHRvIGNyZWF0ZSB0aGUgYEFjY2Vzc29yYCBvbi5cbiAqIEBwYXJhbSBwcm9wZXJ0eSBPbmUgb2YgaXRzIHJlZ2lzdGVyZWQgcHJvcGVydGllcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8VCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LCBQIGV4dGVuZHMga2V5b2YgVD4oXG4gICAgb2JqZWN0OiBULFxuICAgIHByb3BlcnR5OiBFeHRyYWN0PFAsIHN0cmluZz4sXG4pOiBBY2Nlc3NvcjxUW1BdPlxuXG4vLyBUT0RPOiBzdXBwb3J0IG5lc3RlZCBiaW5kaW5nc1xuLy8gZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8XG4vLyAgICAgVCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuLy8gICAgIFAxIGV4dGVuZHMga2V5b2YgVCxcbi8vICAgICBQMiBleHRlbmRzIGtleW9mIE5vbk51bGxhYmxlPFRbUDFdPixcbi8vID4oXG4vLyAgICAgb2JqZWN0OiBULFxuLy8gICAgIHByb3BlcnR5MTogRXh0cmFjdDxQMSwgc3RyaW5nPixcbi8vICAgICBwcm9wZXJ0eTI6IEV4dHJhY3Q8UDIsIHN0cmluZz4sXG4vLyApOiBBY2Nlc3NvcjxOb25OdWxsYWJsZTxUW1AxXT5bUDJdPlxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIG9uIGEgYEdpby5TZXR0aW5nc2AncyBga2V5YC5cbiAqIFZhbHVlcyBhcmUgcmVjdXJzaXZlbHkgdW5wYWNrZWQuXG4gKlxuICogQGRlcHJlY2F0ZWQgcHJlZmVyIHVzaW5nIHtAbGluayBjcmVhdGVTZXR0aW5nc30uXG4gKiBAcGFyYW0gb2JqZWN0IFRoZSBgR2lvLlNldHRpbmdzYCB0byBjcmVhdGUgdGhlIGBBY2Nlc3NvcmAgb24uXG4gKiBAcGFyYW0ga2V5IFRoZSBzZXR0aW5ncyBrZXlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8VD4oc2V0dGluZ3M6IEdpby5TZXR0aW5ncywga2V5OiBzdHJpbmcpOiBBY2Nlc3NvcjxUPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQmluZGluZzxUPihvYmplY3Q6IEdPYmplY3QuT2JqZWN0IHwgR2lvLlNldHRpbmdzLCBrZXk6IHN0cmluZyk6IEFjY2Vzc29yPFQ+IHtcbiAgICBjb25zdCBwcm9wID0ga2ViYWJpZnkoa2V5KSBhcyBrZXlvZiB0eXBlb2Ygb2JqZWN0XG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGNvbnN0IHNpZyA9IG9iamVjdCBpbnN0YW5jZW9mIEdpby5TZXR0aW5ncyA/IFwiY2hhbmdlZFwiIDogXCJub3RpZnlcIlxuICAgICAgICBjb25zdCBpZCA9IG9iamVjdC5jb25uZWN0KGAke3NpZ306OiR7cHJvcH1gLCAoKSA9PiBjYWxsYmFjaygpKVxuICAgICAgICByZXR1cm4gKCkgPT4gb2JqZWN0LmRpc2Nvbm5lY3QoaWQpXG4gICAgfVxuXG4gICAgY29uc3QgZ2V0ID0gKCk6IFQgPT4ge1xuICAgICAgICBpZiAob2JqZWN0IGluc3RhbmNlb2YgR2lvLlNldHRpbmdzKSB7XG4gICAgICAgICAgICByZXR1cm4gb2JqZWN0LmdldF92YWx1ZShrZXkpLnJlY3Vyc2l2ZVVucGFjaygpIGFzIFRcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChvYmplY3QgaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkge1xuICAgICAgICAgICAgY29uc3QgZ2V0dGVyID0gYGdldF8ke3Byb3AucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpfWAgYXMga2V5b2YgdHlwZW9mIG9iamVjdFxuXG4gICAgICAgICAgICBpZiAoZ2V0dGVyIGluIG9iamVjdCAmJiB0eXBlb2Ygb2JqZWN0W2dldHRlcl0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIHJldHVybiAob2JqZWN0W2dldHRlcl0gYXMgKCkgPT4gdW5rbm93bikoKSBhcyBUXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChwcm9wIGluIG9iamVjdCkgcmV0dXJuIG9iamVjdFtwcm9wXSBhcyBUXG4gICAgICAgICAgICBpZiAoa2V5IGluIG9iamVjdCkgcmV0dXJuIG9iamVjdFtrZXkgYXMga2V5b2YgdHlwZW9mIG9iamVjdF0gYXMgVFxuICAgICAgICB9XG5cbiAgICAgICAgdGhyb3cgRXJyb3IoYGNhbm5vdCBnZXQgcHJvcGVydHkgXCIke2tleX1cIiBvbiBcIiR7b2JqZWN0fVwiYClcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKGdldCwgc3Vic2NyaWJlKVxufVxuXG50eXBlIENvbm5lY3Rpb25IYW5kbGVyPFxuICAgIE8gZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTIGV4dGVuZHMga2V5b2YgT1tcIiRzaWduYWxzXCJdLFxuICAgIFQsXG4+ID0gT1tcIiRzaWduYWxzXCJdW1NdIGV4dGVuZHMgKC4uLmFyZ3M6IGFueVtdKSA9PiBpbmZlciBSXG4gICAgPyB2b2lkIGV4dGVuZHMgUlxuICAgICAgICA/ICguLi5hcmdzOiBbLi4uUGFyYW1ldGVyczxPW1wiJHNpZ25hbHNcIl1bU10+LCBjdXJyZW50VmFsdWU6IFRdKSA9PiBUXG4gICAgICAgIDogbmV2ZXJcbiAgICA6IG5ldmVyXG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgd2hpY2ggc2V0cyB1cCBhIGxpc3Qgb2YgYEdPYmplY3QuT2JqZWN0YCBzaWduYWwgY29ubmVjdGlvbnMuXG4gKlxuICogYGBgdHMgRXhhbXBsZVxuICogY29uc3QgdmFsdWU6IEFjY2Vzc29yPHN0cmluZz4gPSBjcmVhdGVDb25uZWN0aW9uKFxuICogICBcImluaXRpYWwgdmFsdWVcIixcbiAqICAgW29iajEsIFwic2lnLW5hbWVcIiwgKC4uLmFyZ3MpID0+IFwic3RyXCJdLFxuICogICBbb2JqMiwgXCJzaWctbmFtZVwiLCAoLi4uYXJncykgPT4gXCJzdHJcIl1cbiAqIClcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBpbml0IFRoZSBpbml0aWFsIHZhbHVlXG4gKiBAcGFyYW0gc2lnbmFscyBBIGxpc3Qgb2YgYEdPYmplY3QuT2JqZWN0YCwgc2lnbmFsIG5hbWUgYW5kIGNhbGxiYWNrIHBhaXJzIHRvIGNvbm5lY3QuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb25uZWN0aW9uPFxuICAgIFQsXG4gICAgTzEgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTMSBleHRlbmRzIGtleW9mIE8xW1wiJHNpZ25hbHNcIl0sXG4gICAgTzIgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTMiBleHRlbmRzIGtleW9mIE8yW1wiJHNpZ25hbHNcIl0sXG4gICAgTzMgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTMyBleHRlbmRzIGtleW9mIE8zW1wiJHNpZ25hbHNcIl0sXG4gICAgTzQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNCBleHRlbmRzIGtleW9mIE80W1wiJHNpZ25hbHNcIl0sXG4gICAgTzUgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNSBleHRlbmRzIGtleW9mIE81W1wiJHNpZ25hbHNcIl0sXG4gICAgTzYgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNiBleHRlbmRzIGtleW9mIE82W1wiJHNpZ25hbHNcIl0sXG4gICAgTzcgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTNyBleHRlbmRzIGtleW9mIE83W1wiJHNpZ25hbHNcIl0sXG4gICAgTzggZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTOCBleHRlbmRzIGtleW9mIE84W1wiJHNpZ25hbHNcIl0sXG4gICAgTzkgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbiAgICBTOSBleHRlbmRzIGtleW9mIE85W1wiJHNpZ25hbHNcIl0sXG4+KFxuICAgIGluaXQ6IFQsXG4gICAgaDE6IFtPMSwgUzEsIENvbm5lY3Rpb25IYW5kbGVyPE8xLCBTMSwgVD5dLFxuICAgIGgyPzogW08yLCBTMiwgQ29ubmVjdGlvbkhhbmRsZXI8TzIsIFMyLCBUPl0sXG4gICAgaDM/OiBbTzMsIFMzLCBDb25uZWN0aW9uSGFuZGxlcjxPMywgUzMsIFQ+XSxcbiAgICBoND86IFtPNCwgUzQsIENvbm5lY3Rpb25IYW5kbGVyPE80LCBTNCwgVD5dLFxuICAgIGg1PzogW081LCBTNSwgQ29ubmVjdGlvbkhhbmRsZXI8TzUsIFM1LCBUPl0sXG4gICAgaDY/OiBbTzYsIFM2LCBDb25uZWN0aW9uSGFuZGxlcjxPNiwgUzYsIFQ+XSxcbiAgICBoNz86IFtPNywgUzcsIENvbm5lY3Rpb25IYW5kbGVyPE83LCBTNywgVD5dLFxuICAgIGg4PzogW084LCBTOCwgQ29ubmVjdGlvbkhhbmRsZXI8TzgsIFM4LCBUPl0sXG4gICAgaDk/OiBbTzksIFM5LCBDb25uZWN0aW9uSGFuZGxlcjxPOSwgUzksIFQ+XSxcbikge1xuICAgIGxldCB2YWx1ZSA9IGluaXRcbiAgICBsZXQgZGlzcG9zZTogQXJyYXk8RGlzcG9zZUZ1bmN0aW9uPlxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuICAgIGNvbnN0IHNpZ25hbHMgPSBbaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgaDcsIGg4LCBoOV0uZmlsdGVyKChoKSA9PiBoICE9PSB1bmRlZmluZWQpXG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBkaXNwb3NlID0gc2lnbmFscy5tYXAoKFtvYmplY3QsIHNpZ25hbCwgY2FsbGJhY2tdKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgaWQgPSBHT2JqZWN0Lk9iamVjdC5wcm90b3R5cGUuY29ubmVjdC5jYWxsKFxuICAgICAgICAgICAgICAgICAgICBvYmplY3QsXG4gICAgICAgICAgICAgICAgICAgIHNpZ25hbCBhcyBzdHJpbmcsXG4gICAgICAgICAgICAgICAgICAgIChfLCAuLi5hcmdzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IGNhbGxiYWNrKC4uLmFyZ3MsIHZhbHVlKVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlICE9PSBuZXdWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gbmV3VmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICApXG5cbiAgICAgICAgICAgICAgICByZXR1cm4gKCkgPT4gR09iamVjdC5PYmplY3QucHJvdG90eXBlLmRpc2Nvbm5lY3QuY2FsbChvYmplY3QsIGlkKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBkaXNwb3NlLm1hcCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgZGlzcG9zZS5sZW5ndGggPSAwXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IHZhbHVlLCBzdWJzY3JpYmUpXG59XG5cbi8qKlxuICogQ3JlYXRlIGEgc2lnbmFsIGZyb20gYSBwcm92aWVyIGZ1bmN0aW9uLlxuICogVGhlIHByb3ZpZGVyIGlzIGNhbGxlZCB3aGVuIHRoZSBmaXJzdCBzdWJzY3JpYmVyIGFwcGVhcnMgYW5kIHRoZSByZXR1cm5lZCBkaXNwb3NlXG4gKiBmdW5jdGlvbiBmcm9tIHRoZSBwcm92aWRlciB3aWxsIGJlIGNhbGxlZCB3aGVuIHRoZSBudW1iZXIgb2Ygc3Vic2NyaWJlcnMgZHJvcCB0byB6ZXJvLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IHZhbHVlID0gY3JlYXRlRXh0ZXJuYWwoMCwgKHNldCkgPT4ge1xuICogICBjb25zdCBpbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHNldCgodikgPT4gdiArIDEpKVxuICogICByZXR1cm4gKCkgPT4gY2xlYXJJbnRlcnZhbChpbnRlcnZhbClcbiAqIH0pXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gaW5pdCBUaGUgaW5pdGlhbCB2YWx1ZVxuICogQHBhcmFtIHByb2R1Y2VyIFRoZSBwcm9kdWNlciBmdW5jdGlvbiB3aGljaCBzaG91bGQgcmV0dXJuIGEgY2xlYW51cCBmdW5jdGlvblxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRXh0ZXJuYWw8VD4oXG4gICAgaW5pdDogVCxcbiAgICBwcm9kdWNlcjogKHNldDogU2V0dGVyPFQ+KSA9PiBEaXNwb3NlRnVuY3Rpb24sXG4pOiBBY2Nlc3NvcjxUPiB7XG4gICAgbGV0IGN1cnJlbnRWYWx1ZSA9IGluaXRcbiAgICBsZXQgZGlzcG9zZTogRGlzcG9zZUZ1bmN0aW9uXG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBkaXNwb3NlID0gcHJvZHVjZXIoKHY6IHVua25vd24pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBuZXdWYWx1ZTogVCA9IHR5cGVvZiB2ID09PSBcImZ1bmN0aW9uXCIgPyB2KGN1cnJlbnRWYWx1ZSkgOiB2XG4gICAgICAgICAgICAgICAgaWYgKG5ld1ZhbHVlICE9PSBjdXJyZW50VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFZhbHVlID0gbmV3VmFsdWVcbiAgICAgICAgICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBkaXNwb3NlKClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpXG59XG5cbi8qKiBAZXhwZXJpbWVudGFsICovXG50eXBlIFNldHRpbmdzPFQgZXh0ZW5kcyBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+PiA9IHtcbiAgICBbSyBpbiBrZXlvZiBUIGFzIFVuY2FwaXRhbGl6ZTxQYXNjYWxpZnk8Sz4+XTogQWNjZXNzb3I8UmVjdXJzaXZlSW5mZXI8VFtLXT4+XG59ICYge1xuICAgIFtLIGluIGtleW9mIFQgYXMgYHNldCR7UGFzY2FsaWZ5PEs+fWBdOiBTZXR0ZXI8RGVlcEluZmVyPFRbS10+PlxufVxuXG4vKipcbiAqIEBleHBlcmltZW50YWxcbiAqXG4gKiBXcmFwIGEge0BsaW5rIEdpby5TZXR0aW5nc30gaW50byBhIGNvbGxlY3Rpb24gb2Ygc2V0dGVycyBhbmQgYWNjZXNzb3JzLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBgdHNcbiAqIGNvbnN0IHMgPSBjcmVhdGVTZXR0aW5ncyhzZXR0aW5ncywge1xuICogICBcImNvbXBsZXgta2V5XCI6IFwiYXtzYXtzc319XCIsXG4gKiAgIFwic2ltcGxlLWtleVwiOiBcInNcIixcbiAqIH0pXG4gKlxuICogcy5jb21wbGV4S2V5LnN1YnNjcmliZSgoKSA9PiB7XG4gKiAgIHByaW50KHMuY29tcGxleEtleS5nZXQoKSlcbiAqIH0pXG4gKlxuICogcy5zZXRDb21wbGV4S2V5KChwcmV2KSA9PiAoe1xuICogICAuLi5wcmV2LFxuICogICBrZXk6IHsgbmVzdGVkOiBcIlwiIH0sXG4gKiB9KSlcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU2V0dGluZ3M8Y29uc3QgVCBleHRlbmRzIFJlY29yZDxzdHJpbmcsIHN0cmluZz4+KFxuICAgIHNldHRpbmdzOiBHaW8uU2V0dGluZ3MsXG4gICAga2V5czogVCxcbik6IFNldHRpbmdzPFQ+IHtcbiAgICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKFxuICAgICAgICBPYmplY3QuZW50cmllcyhrZXlzKS5mbGF0TWFwKChba2V5LCB0eXBlXSkgPT4gW1xuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIGNhbWVsaWZ5KGtleSksXG4gICAgICAgICAgICAgICAgbmV3IEFjY2Vzc29yKFxuICAgICAgICAgICAgICAgICAgICAoKSA9PiBzZXR0aW5ncy5nZXRfdmFsdWUoa2V5KS5yZWN1cnNpdmVVbnBhY2soKSxcbiAgICAgICAgICAgICAgICAgICAgKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpZCA9IHNldHRpbmdzLmNvbm5lY3QoYGNoYW5nZWQ6OiR7a2V5fWAsIGNhbGxiYWNrKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICgpID0+IHNldHRpbmdzLmRpc2Nvbm5lY3QoaWQpXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgYHNldCR7a2V5WzBdLnRvVXBwZXJDYXNlKCkgKyBjYW1lbGlmeShrZXkpLnNsaWNlKDEpfWAsXG4gICAgICAgICAgICAgICAgKHY6IHVua25vd24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc2V0dGluZ3Muc2V0X3ZhbHVlKFxuICAgICAgICAgICAgICAgICAgICAgICAga2V5LFxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3IEdMaWIuVmFyaWFudChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGVvZiB2ID09PSBcImZ1bmN0aW9uXCIgPyB2KHNldHRpbmdzLmdldF92YWx1ZShrZXkpLmRlZXBVbnBhY2soKSkgOiB2LFxuICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdLFxuICAgICAgICBdKSxcbiAgICApXG59XG4iLCAiaW1wb3J0IHR5cGUgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IHR5cGUgQWNjZXNzb3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5cbnR5cGUgR09iaiA9IEdPYmplY3QuT2JqZWN0XG5leHBvcnQgdHlwZSBDQzxUIGV4dGVuZHMgR09iaiA9IEdPYmo+ID0geyBuZXcgKHByb3BzOiBhbnkpOiBUIH1cbmV4cG9ydCB0eXBlIEZDPFQgZXh0ZW5kcyBHT2JqID0gR09iaj4gPSAocHJvcHM6IGFueSkgPT4gVFxuXG50eXBlIENzc1NldHRlciA9IChvYmplY3Q6IEdPYmosIGNzczogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPikgPT4gdm9pZFxuXG5leHBvcnQgZnVuY3Rpb24gY29uZmlndWUoY29uZjogUGFydGlhbDxKc3hFbnY+KSB7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oZW52LCBjb25mKVxufVxuXG50eXBlIEpzeEVudiA9IHtcbiAgICBpbnRyaW5zaWNFbGVtZW50czogUmVjb3JkPHN0cmluZywgQ0MgfCBGQz5cbiAgICB0ZXh0Tm9kZShub2RlOiBzdHJpbmcgfCBudW1iZXIpOiBHT2JqXG4gICAgYXBwZW5kQ2hpbGQocGFyZW50OiBHT2JqLCBjaGlsZDogR09iaik6IHZvaWRcbiAgICByZW1vdmVDaGlsZChwYXJlbnQ6IEdPYmosIGNoaWxkOiBHT2JqKTogdm9pZFxuICAgIHNldENzczogQ3NzU2V0dGVyXG4gICAgc2V0Q2xhc3M6IENzc1NldHRlclxuICAgIC8vIHN0cmluZ1tdIGNhbiBiZSB1c2UgdG8gZGVsYXkgc2V0dGluZyBwcm9wcyBhZnRlciBjaGlsZHJlblxuICAgIC8vIGUuZyBHdGsuU3RhY2tbXCJ2aXNpYmxlQ2hpbGROYW1lXCJdIGRlcGVuZHMgb24gY2hpbGRyZW5cbiAgICBpbml0UHJvcHMoY3RvcjogdW5rbm93biwgcHJvcHM6IGFueSk6IHZvaWQgfCBzdHJpbmdbXVxuICAgIGRlZmF1bHRDbGVhbnVwKG9iamVjdDogR09iaik6IHZvaWRcbn1cblxuZnVuY3Rpb24gbWlzc2luZ0ltcGwoKTogYW55IHtcbiAgICB0aHJvdyBFcnJvcihcIm1pc3NpbmcgaW1wbFwiKVxufVxuXG5leHBvcnQgY29uc3QgZW52OiBKc3hFbnYgPSB7XG4gICAgaW50cmluc2ljRWxlbWVudHM6IHt9LFxuICAgIHRleHROb2RlOiBtaXNzaW5nSW1wbCxcbiAgICBhcHBlbmRDaGlsZDogbWlzc2luZ0ltcGwsXG4gICAgcmVtb3ZlQ2hpbGQ6IG1pc3NpbmdJbXBsLFxuICAgIHNldENzczogbWlzc2luZ0ltcGwsXG4gICAgc2V0Q2xhc3M6IG1pc3NpbmdJbXBsLFxuICAgIGluaXRQcm9wczogKCkgPT4gdm9pZCAwLFxuICAgIGRlZmF1bHRDbGVhbnVwOiAoKSA9PiB2b2lkIDAsXG59XG4iLCAiZXhwb3J0IGNsYXNzIFNjb3BlIHtcbiAgICBzdGF0aWMgY3VycmVudD86IFNjb3BlIHwgbnVsbFxuXG4gICAgcGFyZW50PzogU2NvcGUgfCBudWxsXG4gICAgY29udGV4dHMgPSBuZXcgTWFwPENvbnRleHQsIHVua25vd24+KClcblxuICAgIHByaXZhdGUgY2xlYW51cHMgPSBuZXcgU2V0PCgpID0+IHZvaWQ+KClcbiAgICBwcml2YXRlIG1vdW50cyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKVxuICAgIHByaXZhdGUgbW91bnRlZCA9IGZhbHNlXG5cbiAgICBjb25zdHJ1Y3RvcihwYXJlbnQ/OiBTY29wZSB8IG51bGwpIHtcbiAgICAgICAgdGhpcy5wYXJlbnQgPSBwYXJlbnRcbiAgICB9XG5cbiAgICBvbkNsZWFudXAoY2FsbGJhY2s6ICgpID0+IHZvaWQpIHtcbiAgICAgICAgdGhpcy5jbGVhbnVwcz8uYWRkKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIG9uTW91bnQoY2FsbGJhY2s6ICgpID0+IHZvaWQpIHtcbiAgICAgICAgaWYgKHRoaXMucGFyZW50ICYmICF0aGlzLnBhcmVudC5tb3VudGVkKSB7XG4gICAgICAgICAgICB0aGlzLnBhcmVudC5vbk1vdW50KGNhbGxiYWNrKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5tb3VudHMuYWRkKGNhbGxiYWNrKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcnVuPFQ+KGZuOiAoKSA9PiBUKSB7XG4gICAgICAgIGNvbnN0IHByZXYgPSBTY29wZS5jdXJyZW50XG4gICAgICAgIFNjb3BlLmN1cnJlbnQgPSB0aGlzXG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBmbigpXG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICB0aGlzLm1vdW50cy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgIHRoaXMubW91bnRzLmNsZWFyKClcbiAgICAgICAgICAgIHRoaXMubW91bnRlZCA9IHRydWVcbiAgICAgICAgICAgIFNjb3BlLmN1cnJlbnQgPSBwcmV2XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICB0aGlzLmNsZWFudXBzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB0aGlzLmNsZWFudXBzLmNsZWFyKClcbiAgICAgICAgdGhpcy5jb250ZXh0cy5jbGVhcigpXG4gICAgICAgIGRlbGV0ZSB0aGlzLnBhcmVudFxuICAgIH1cbn1cblxuZXhwb3J0IHR5cGUgQ29udGV4dDxUID0gYW55PiA9IHtcbiAgICB1c2UoKTogVFxuICAgIHByb3ZpZGU8Uj4odmFsdWU6IFQsIGZuOiAoKSA9PiBSKTogUlxuICAgIChwcm9wczogeyB2YWx1ZTogVDsgY2hpbGRyZW46ICgpID0+IEpTWC5FbGVtZW50IH0pOiBKU1guRWxlbWVudFxufVxuXG4vKipcbiAqIEV4YW1wbGUgVXNhZ2U6XG4gKiBgYGB0c3hcbiAqIGNvbnN0IE15Q29udGV4dCA9IGNyZWF0ZUNvbnRleHQoXCJmYWxsYmFjay12YWx1ZVwiKVxuICpcbiAqIGZ1bmN0aW9uIENvbnN1bWVyQ29tcG9uZW50KCkge1xuICogICBjb25zdCB2YWx1ZSA9IE15Q29udGV4dC51c2UoKVxuICpcbiAqICAgcmV0dXJuIDxHdGsuTGFiZWwgbGFiZWw9e3ZhbHVlfSAvPlxuICogfVxuICpcbiAqIGZ1bmN0aW9uIFByb3ZpZGVyQ29tcG9uZW50KCkge1xuICogICByZXR1cm4gKFxuICogICAgIDxHdGsuQm94PlxuICogICAgICAgPE15Q29udGV4dCB2YWx1ZT1cIm15LXZhbHVlXCI+XG4gKiAgICAgICAgIHsoKSA9PiA8Q29uc3VtZXJDb21wb25lbnQgLz59XG4gKiAgICAgICA8L015Q29udGV4dD5cbiAqICAgICA8L0d0ay5Cb3g+XG4gKiAgIClcbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29udGV4dDxUPihkZWZhdWx0VmFsdWU6IFQpOiBDb250ZXh0PFQ+IHtcbiAgICBsZXQgY3R4OiBDb250ZXh0PFQ+XG5cbiAgICBmdW5jdGlvbiBwcm92aWRlPFI+KHZhbHVlOiBULCBmbjogKCkgPT4gUik6IFIge1xuICAgICAgICBjb25zdCBzY29wZSA9IGdldFNjb3BlKClcbiAgICAgICAgc2NvcGUuY29udGV4dHMuc2V0KGN0eCwgdmFsdWUpXG4gICAgICAgIHJldHVybiBzY29wZS5ydW4oZm4pXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdXNlKCk6IFQge1xuICAgICAgICBsZXQgc2NvcGUgPSBTY29wZS5jdXJyZW50XG4gICAgICAgIHdoaWxlIChzY29wZSkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBzY29wZS5jb250ZXh0cy5nZXQoY3R4KVxuICAgICAgICAgICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpIHJldHVybiB2YWx1ZSBhcyBUXG4gICAgICAgICAgICBzY29wZSA9IHNjb3BlLnBhcmVudFxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsdWVcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb250ZXh0KHsgdmFsdWUsIGNoaWxkcmVuIH06IHsgdmFsdWU6IFQ7IGNoaWxkcmVuOiAoKSA9PiBKU1guRWxlbWVudCB9KSB7XG4gICAgICAgIHJldHVybiBwcm92aWRlKHZhbHVlLCBjaGlsZHJlbilcbiAgICB9XG5cbiAgICByZXR1cm4gKGN0eCA9IE9iamVjdC5hc3NpZ24oY29udGV4dCwge1xuICAgICAgICBwcm92aWRlLFxuICAgICAgICB1c2UsXG4gICAgfSkpXG59XG5cbi8qKlxuICogR2V0cyB0aGUgc2NvcGUgdGhhdCBvd25zIHRoZSBjdXJyZW50bHkgcnVubmluZyBjb2RlLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogY29uc3Qgc2NvcGUgPSBnZXRTY29wZSgpXG4gKiBzZXRUaW1lb3V0KCgpID0+IHtcbiAqICAgLy8gVGhpcyBjYWxsYmFjayBnZXRzIHJ1biB3aXRob3V0IGFuIG93bmVyIHNjb3BlLlxuICogICAvLyBSZXN0b3JlIG93bmVyIHZpYSBzY29wZS5ydW46XG4gKiAgIHNjb3BlLnJ1bigoKSA9PiB7XG4gKiAgICAgY29uc3QgZm9vID0gRm9vQ29udGV4dC51c2UoKVxuICogICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gKiAgICAgICBwcmludChcInNvbWUgY2xlYW51cFwiKVxuICogICAgIH0pXG4gKiAgIH0pXG4gKiB9LCAxMDAwKVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTY29wZSgpOiBTY29wZSB7XG4gICAgY29uc3Qgc2NvcGUgPSBTY29wZS5jdXJyZW50XG4gICAgaWYgKCFzY29wZSkge1xuICAgICAgICB0aHJvdyBFcnJvcihcImNhbm5vdCBnZXQgc2NvcGU6IG91dCBvZiB0cmFja2luZyBjb250ZXh0XCIpXG4gICAgfVxuXG4gICAgcmV0dXJuIHNjb3BlXG59XG5cbi8qKlxuICogQXR0YWNoIGEgY2xlYW51cCBjYWxsYmFjayB0byB0aGUgY3VycmVudCB7QGxpbmsgU2NvcGV9LlxuICovXG5leHBvcnQgZnVuY3Rpb24gb25DbGVhbnVwKGNsZWFudXA6ICgpID0+IHZvaWQpIHtcbiAgICBpZiAoIVNjb3BlLmN1cnJlbnQpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihFcnJvcihcIm91dCBvZiB0cmFja2luZyBjb250ZXh0OiB3aWxsIG5vdCBiZSBhYmxlIHRvIGNsZWFudXBcIikpXG4gICAgfVxuXG4gICAgU2NvcGUuY3VycmVudD8ub25DbGVhbnVwKGNsZWFudXApXG59XG5cbi8qKlxuICogQXR0YWNoIGEgY2FsbGJhY2sgdG8gcnVuIHdoZW4gdGhlIGN1cnJlbnRseSBydW5uaW5nIHtAbGluayBTY29wZX0gcmV0dXJucy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9uTW91bnQoY2xlYW51cDogKCkgPT4gdm9pZCkge1xuICAgIGlmICghU2NvcGUuY3VycmVudCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKEVycm9yKFwiY2Fubm90IGF0dGFjaCBvbk1vdW50OiBvdXQgb2YgdHJhY2tpbmcgY29udGV4dFwiKSlcbiAgICB9XG5cbiAgICBTY29wZS5jdXJyZW50Py5vbk1vdW50KGNsZWFudXApXG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIHJvb3Qge0BsaW5rIFNjb3BlfSB0aGF0IHdoZW4gZGlzcG9zZWQgd2lsbCByZW1vdmVcbiAqIGFueSBjaGlsZCBzaWduYWwgaGFuZGxlciBvciBzdGF0ZSBzdWJzY3JpYmVyLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c3hcbiAqIGNyZWF0ZVJvb3QoKGRpc3Bvc2UpID0+IHtcbiAqICAgbGV0IHJvb3Q6IEd0ay5XaW5kb3dcbiAqXG4gKiAgIGNvbnN0IFtzdGF0ZV0gPSBjcmVhdGVTdGF0ZShcInZhbHVlXCIpXG4gKlxuICogICBjb25zdCByZW1vdmUgPSAoKSA9PiB7XG4gKiAgICAgcm9vdC5kZXN0cm95KClcbiAqICAgICBkaXNwb3NlKClcbiAqICAgfVxuICpcbiAqICAgcmV0dXJuIChcbiAqICAgICA8R3RrLldpbmRvdyAkPXsoc2VsZikgPT4gKHJvb3QgPSBzZWxmKX0+XG4gKiAgICAgICA8R3RrLkJveD5cbiAqICAgICAgICAgPEd0ay5MYWJlbCBsYWJlbD17c3RhdGV9IC8+XG4gKiAgICAgICAgIDxHdGsuQnV0dG9uICRjbGlja2VkPXtyZW1vdmV9IC8+XG4gKiAgICAgICA8L0d0ay5Cb3g+XG4gKiAgICAgPC9HdGsuV2luZG93PlxuICogICApXG4gKiB9KVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSb290PFQ+KGZuOiAoZGlzcG9zZTogKCkgPT4gdm9pZCkgPT4gVCkge1xuICAgIGNvbnN0IHNjb3BlID0gbmV3IFNjb3BlKG51bGwpXG4gICAgcmV0dXJuIHNjb3BlLnJ1bigoKSA9PiBmbigoKSA9PiBzY29wZS5kaXNwb3NlKCkpKVxufVxuIiwgImltcG9ydCB7IEZyYWdtZW50IH0gZnJvbSBcIi4vRnJhZ21lbnQuanNcIlxuaW1wb3J0IHsgQWNjZXNzb3IsIHR5cGUgU3RhdGUsIGNyZWF0ZVN0YXRlIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuaW1wb3J0IHsgZW52IH0gZnJvbSBcIi4vZW52LmpzXCJcbmltcG9ydCB7IGdldFNjb3BlLCBvbkNsZWFudXAsIFNjb3BlIH0gZnJvbSBcIi4vc2NvcGUuanNcIlxuXG5pbnRlcmZhY2UgRm9yUHJvcHM8SXRlbSwgRWwgZXh0ZW5kcyBKU1guRWxlbWVudCwgS2V5PiB7XG4gICAgZWFjaDogQWNjZXNzb3I8SXRlcmFibGU8SXRlbT4+XG4gICAgY2hpbGRyZW46IChpdGVtOiBJdGVtLCBpbmRleDogQWNjZXNzb3I8bnVtYmVyPikgPT4gRWxcblxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRvIHJ1biBmb3IgZWFjaCByZW1vdmVkIGVsZW1lbnQuXG4gICAgICogVGhlIGRlZmF1bHQgdmFsdWUgZGVwZW5kcyBvbiB0aGUgZW52aXJvbm1lbnQ6XG4gICAgICpcbiAgICAgKiAtICoqR3RrNCoqOiBudWxsXG4gICAgICogLSAqKkd0azMqKjogR3RrLldpZGdldC5wcm90b3R5cGUuZGVzdHJveVxuICAgICAqIC0gKipHbm9tZSoqOiBDbHV0dGVyLkFjdG9yLnByb3RvdHlwZS5kZXN0cm95XG4gICAgICovXG4gICAgY2xlYW51cD86IG51bGwgfCAoKGVsZW1lbnQ6IEVsLCBpdGVtOiBJdGVtLCBpbmRleDogbnVtYmVyKSA9PiB2b2lkKVxuXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdGhhdCBnZW5lcmF0ZXMgdGhlIGtleSBmb3IgZWFjaCBpdGVtLlxuICAgICAqXG4gICAgICogQnkgZGVmYXVsdCBpdGVtcyBhcmUgbWFwcGVkIGJ5OlxuICAgICAqIC0gdmFsdWUgaW4gY2FzZSBvZiBwcmltaXRpdmUgdmFsdWVzXG4gICAgICogLSByZWZlcmVuY2Ugb3RoZXJ3aXNlXG4gICAgICovXG4gICAgaWQ/OiAoaXRlbTogSXRlbSkgPT4gS2V5IHwgSXRlbVxufVxuXG4vLyBUT0RPOiBzdXBwb3J0IEdpby5MaXN0TW9kZWxcblxuZXhwb3J0IGZ1bmN0aW9uIEZvcjxJdGVtLCBFbCBleHRlbmRzIEpTWC5FbGVtZW50LCBLZXk+KHtcbiAgICBlYWNoLFxuICAgIGNoaWxkcmVuOiBta0NoaWxkLFxuICAgIGNsZWFudXAsXG4gICAgaWQgPSAoaXRlbTogSXRlbSkgPT4gaXRlbSxcbn06IEZvclByb3BzPEl0ZW0sIEVsLCBLZXk+KTogRnJhZ21lbnQ8RWw+IHtcbiAgICB0eXBlIE1hcEl0ZW0gPSB7IGl0ZW06IEl0ZW07IGNoaWxkOiBFbDsgaW5kZXg6IFN0YXRlPG51bWJlcj47IHNjb3BlOiBTY29wZSB9XG5cbiAgICBjb25zdCBjdXJyZW50U2NvcGUgPSBnZXRTY29wZSgpXG4gICAgY29uc3QgbWFwID0gbmV3IE1hcDxJdGVtIHwgS2V5LCBNYXBJdGVtPigpXG4gICAgY29uc3QgZnJhZ21lbnQgPSBuZXcgRnJhZ21lbnQ8RWw+KClcblxuICAgIGZ1bmN0aW9uIHJlbW92ZSh7IGl0ZW0sIGNoaWxkLCBpbmRleDogW2luZGV4XSwgc2NvcGUgfTogTWFwSXRlbSkge1xuICAgICAgICBzY29wZS5kaXNwb3NlKClcbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhbnVwID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIGNsZWFudXAoY2hpbGQsIGl0ZW0sIGluZGV4LmdldCgpKVxuICAgICAgICB9IGVsc2UgaWYgKGNsZWFudXAgIT09IG51bGwpIHtcbiAgICAgICAgICAgIGVudi5kZWZhdWx0Q2xlYW51cChjaGlsZClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNhbGxiYWNrKGl0YXJlYWJsZTogSXRlcmFibGU8SXRlbT4pIHtcbiAgICAgICAgY29uc3QgaXRlbXMgPSBbLi4uaXRhcmVhYmxlXVxuICAgICAgICBjb25zdCBpZHMgPSBpdGVtcy5tYXAoaWQpXG4gICAgICAgIGNvbnN0IGlkU2V0ID0gbmV3IFNldChpZHMpXG5cbiAgICAgICAgLy8gY2xlYW51cCBjaGlsZHJlbiBtaXNzaW5nIGZyb20gYXJyXG4gICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIG1hcC5lbnRyaWVzKCkpIHtcbiAgICAgICAgICAgIC8vIHRoZXJlIGlzIG5vIGdlbmVyaWMgd2F5IHRvIGluc2VydCBjaGlsZCBhdCBpbmRleFxuICAgICAgICAgICAgLy8gc28gd2Ugc29ydCBieSByZW1vdmluZyBldmVyeSBjaGlsZCBhbmQgcmVhcHBlbmRpbmcgaW4gb3JkZXJcbiAgICAgICAgICAgIGZyYWdtZW50LnJlbW92ZSh2YWx1ZS5jaGlsZClcblxuICAgICAgICAgICAgaWYgKCFpZFNldC5oYXMoa2V5KSkge1xuICAgICAgICAgICAgICAgIHJlbW92ZSh2YWx1ZSlcbiAgICAgICAgICAgICAgICBtYXAuZGVsZXRlKGtleSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHVwZGF0ZSBpbmRleCBhbmQgYWRkIG5ldyBpdGVtc1xuICAgICAgICBpdGVtcy5tYXAoKGl0ZW0sIGkpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGtleSA9IGlkc1tpXVxuICAgICAgICAgICAgaWYgKG1hcC5oYXMoa2V5KSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgICAgICAgICAgaW5kZXg6IFssIHNldEluZGV4XSxcbiAgICAgICAgICAgICAgICAgICAgY2hpbGQsXG4gICAgICAgICAgICAgICAgfSA9IG1hcC5nZXQoa2V5KSFcbiAgICAgICAgICAgICAgICBzZXRJbmRleChpKVxuICAgICAgICAgICAgICAgIGlmIChbLi4uZnJhZ21lbnRdLnNvbWUoKGNoKSA9PiBjaCA9PT0gY2hpbGQpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihgZHVwbGljYXRlIGtleXMgZm91bmQ6ICR7a2V5fWApXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgZnJhZ21lbnQuYXBwZW5kKGNoaWxkKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc3QgW2luZGV4LCBzZXRJbmRleF0gPSBjcmVhdGVTdGF0ZShpKVxuICAgICAgICAgICAgICAgIGNvbnN0IHNjb3BlID0gbmV3IFNjb3BlKGN1cnJlbnRTY29wZSlcbiAgICAgICAgICAgICAgICBjb25zdCBjaGlsZCA9IHNjb3BlLnJ1bigoKSA9PiBta0NoaWxkKGl0ZW0sIGluZGV4KSlcbiAgICAgICAgICAgICAgICBtYXAuc2V0KGtleSwgeyBpdGVtLCBjaGlsZCwgaW5kZXg6IFtpbmRleCwgc2V0SW5kZXhdLCBzY29wZSB9KVxuICAgICAgICAgICAgICAgIGZyYWdtZW50LmFwcGVuZChjaGlsZClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBjb25zdCBkaXNwb3NlID0gZWFjaC5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICBjYWxsYmFjayhlYWNoLmdldCgpKVxuICAgIH0pXG4gICAgY2FsbGJhY2soZWFjaC5nZXQoKSlcblxuICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgIGRpc3Bvc2UoKVxuXG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgbWFwLnZhbHVlcygpKSB7XG4gICAgICAgICAgICByZW1vdmUodmFsdWUpXG4gICAgICAgIH1cblxuICAgICAgICBtYXAuY2xlYXIoKVxuICAgIH0pXG5cbiAgICByZXR1cm4gZnJhZ21lbnRcbn1cbiIsICJpbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IGVudiB9IGZyb20gXCIuL2Vudi5qc1wiXG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCIuL3N0YXRlLmpzXCJcbmltcG9ydCB7IHNldCB9IGZyb20gXCIuLi91dGlsLmpzXCJcbmltcG9ydCB7IG9uQ2xlYW51cCB9IGZyb20gXCIuL3Njb3BlLmpzXCJcbmltcG9ydCB7IGFwcGVuZCwgc2V0VHlwZSwgc2lnbmFsTmFtZSwgdHlwZSBDQ1Byb3BzIH0gZnJvbSBcIi4vanN4LmpzXCJcblxudHlwZSBUaGlzUHJvcHM8U2VsZiBleHRlbmRzIEdPYmplY3QuT2JqZWN0PiA9IFBhcnRpYWw8XG4gICAgT21pdDxDQ1Byb3BzPFNlbGYsIHsgW0sgaW4ga2V5b2YgU2VsZl06IFNlbGZbS10gfT4sIFwiJFwiIHwgXCIkY29uc3RydWN0b3JcIj5cbj4gJiB7XG4gICAgdGhpczogU2VsZlxufVxuXG4vKiogQGV4cGVyaW1lbnRhbCAqL1xuZXhwb3J0IGZ1bmN0aW9uIFRoaXM8VCBleHRlbmRzIEdPYmplY3QuT2JqZWN0Pih7XG4gICAgdGhpczogc2VsZixcbiAgICBjaGlsZHJlbixcbiAgICAkdHlwZSxcbiAgICAuLi5wcm9wc1xufTogVGhpc1Byb3BzPFQ+KSB7XG4gICAgY29uc3QgY2xlYW51cCA9IG5ldyBBcnJheTwoKSA9PiB2b2lkPigpXG5cbiAgICBpZiAoJHR5cGUpIHNldFR5cGUoc2VsZiwgJHR5cGUpXG5cbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwcm9wcykpIHtcbiAgICAgICAgaWYgKGtleSA9PT0gXCJjc3NcIikge1xuICAgICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgICAgICBlbnYuc2V0Q3NzKHNlbGYsIHZhbHVlLmdldCgpKVxuICAgICAgICAgICAgICAgIGNsZWFudXAucHVzaCh2YWx1ZS5zdWJzY3JpYmUoKCkgPT4gZW52LnNldENzcyhzZWxmLCB2YWx1ZS5nZXQoKSkpKVxuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICBlbnYuc2V0Q3NzKHNlbGYsIHZhbHVlKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGtleSA9PT0gXCJjbGFzc1wiKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDbGFzcyhzZWxmLCB2YWx1ZS5nZXQoKSlcbiAgICAgICAgICAgICAgICBjbGVhbnVwLnB1c2godmFsdWUuc3Vic2NyaWJlKCgpID0+IGVudi5zZXRDbGFzcyhzZWxmLCB2YWx1ZS5nZXQoKSkpKVxuICAgICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgICAgICBlbnYuc2V0Q2xhc3Moc2VsZiwgdmFsdWUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoa2V5LnN0YXJ0c1dpdGgoXCJvblwiKSkge1xuICAgICAgICAgICAgY29uc3QgaWQgPSBzZWxmLmNvbm5lY3Qoc2lnbmFsTmFtZShrZXkpLCB2YWx1ZSlcbiAgICAgICAgICAgIGNsZWFudXAucHVzaCgoKSA9PiBzZWxmLmRpc2Nvbm5lY3QoaWQpKVxuICAgICAgICB9IGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIGNvbnN0IGRpc3Bvc2UgPSB2YWx1ZS5zdWJzY3JpYmUoKCkgPT4gc2V0KHNlbGYsIGtleSwgdmFsdWUuZ2V0KCkpKVxuICAgICAgICAgICAgc2V0KHNlbGYsIGtleSwgdmFsdWUuZ2V0KCkpXG4gICAgICAgICAgICBjbGVhbnVwLnB1c2goZGlzcG9zZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNldChzZWxmLCBrZXksIHZhbHVlKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZm9yIChsZXQgY2hpbGQgb2YgQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl0pIHtcbiAgICAgICAgaWYgKGNoaWxkID09PSB0cnVlKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oRXJyb3IoXCJUcnlpbmcgdG8gYWRkIGJvb2xlYW4gdmFsdWUgb2YgYHRydWVgIGFzIGEgY2hpbGQuXCIpKVxuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGNoaWxkKSkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBjaCBvZiBjaGlsZCkge1xuICAgICAgICAgICAgICAgIGFwcGVuZChzZWxmLCBjaClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChjaGlsZCkge1xuICAgICAgICAgICAgaWYgKCEoY2hpbGQgaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgICAgICBjaGlsZCA9IGVudi50ZXh0Tm9kZShjaGlsZClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGFwcGVuZChzZWxmLCBjaGlsZClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChjbGVhbnVwLmxlbmd0aCA+IDApIHtcbiAgICAgICAgb25DbGVhbnVwKCgpID0+IGNsZWFudXAuZm9yRWFjaCgoY2IpID0+IGNiKCkpKVxuICAgIH1cblxuICAgIHJldHVybiBzZWxmXG59XG4iLCAiLyogVHJvcCBjb2xvcnNjaGVtZSBmb3IgQUdTICovXG4vKiB+Ly5jb25maWcvYWdzL3N0eWxlcy9jb2xvcnMuc2NzcyAqL1xuKiB7XG4gIGZvbnQtZmFtaWx5OiBcIkpldEJyYWluc01vbm9OTCBOZXJkIEZvbnRcIjtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBmb250LXdlaWdodDogNTAwO1xufVxuXG5zY2FsZSB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cbnNjYWxlIHRyb3VnaCBoaWdobGlnaHQge1xuICBtaW4taGVpZ2h0OiA2cHg7XG59XG5zY2FsZSB0cm91Z2ggc2xpZGVyIHtcbiAgYm94LXNoYWRvdzogbm9uZTtcbiAgb3V0bGluZTogdW5zZXQ7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG5tZW51YnV0dG9uIHtcbiAgcGFkZGluZzogMDtcbn1cbm1lbnVidXR0b24gYnV0dG9uIHtcbiAgcGFkZGluZzogdW5zZXQ7XG4gIG1hcmdpbjogdW5zZXQ7XG59XG5tZW51YnV0dG9uIGJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjExLCAxOTgsIDE3MCwgMC4xNSk7XG59XG5cbmJ1dHRvbiB7XG4gIHBhZGRpbmc6IHVuc2V0O1xuICBtYXJnaW46IHVuc2V0O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMgZWFzZS1pbi1vdXQ7XG59XG5idXR0b246YWN0aXZlID4gKiB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMC44NSk7XG59XG5idXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIxMSwgMTk4LCAxNzAsIDAuMTUpO1xufVxuXG53aW5kb3cuQmFyIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG53aW5kb3cuQmFyIC5iYXItY29udGFpbmVyIHtcbiAgcGFkZGluZzogMHJlbSAwLjRyZW07XG4gIG1pbi1oZWlnaHQ6IDEuNzVyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICMxNzFiMWY7XG4gIGNvbG9yOiAjZDNjNmFhO1xufVxuXG4ubW9kdWxlLWNvbnRhaW5lciAuaWNvbiB7XG4gIHBhZGRpbmc6IDAgMC4zZW07XG4gIGZvbnQtZmFtaWx5OiBcIk1hdGVyaWFsIFN5bWJvbHMgUm91bmRlZFwiO1xuICBmb250LXNpemU6IDE4cHg7XG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDAuMjVlbTtcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMC4yNWVtO1xuICBjb2xvcjogIzIzMjkyZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2IyYzk4Zjtcbn1cbi5tb2R1bGUtY29udGFpbmVyIC5sYWJlbCB7XG4gIHBhZGRpbmc6IDAgMC4zZW07XG4gIGNvbG9yOiAjZDNjNmFhO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmEzMTM3O1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMC4yNWVtO1xuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMC4yNWVtO1xufVxuXG4ud29ya3NwYWNlcyAud29ya3NwYWNlLWJ1dHRvbiB7XG4gIG1pbi1oZWlnaHQ6IDAuN3JlbTtcbiAgbWluLXdpZHRoOiAwLjdyZW07XG4gIGJvcmRlci1yYWRpdXM6IDEwMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDk0ZjQ4O1xufVxuLndvcmtzcGFjZXMgLndvcmtzcGFjZS1idXR0b24uYWN0aXZlIHtcbiAgbWluLXdpZHRoOiAxLjRyZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICNiMmM5OGY7XG59XG4ud29ya3NwYWNlcyAud29ya3NwYWNlLWJ1dHRvbi5vY2N1cGllZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNhOTllODg7XG59XG4ud29ya3NwYWNlcyAud29ya3NwYWNlLWJ1dHRvbi5vY2N1cGllZC5hY3RpdmUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjJjOThmO1xufVxuXG4udGFza2JhciAuY2xpZW50LmFjdGl2ZSAuY2xpZW50LWljb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjJjOThmO1xuICBjb2xvcjogIzIzMjkyZTtcbn1cbi50YXNrYmFyIC5jbGllbnQuYWN0aXZlIC5jbGllbnQtdGl0bGUge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMmEzMTM3O1xuICBjb2xvcjogI2IyYzk4Zjtcbn1cbi50YXNrYmFyIC5jbGllbnQtaWNvbiB7XG4gIHBhZGRpbmc6IDByZW0gMC4zcmVtO1xuICBmb250LWZhbWlseTogXCJNYXRlcmlhbCBTeW1ib2xzIFJvdW5kZWRcIjtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMC4yNWVtO1xuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwLjI1ZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICM0NDRhNGY7XG4gIGNvbG9yOiAjZDNjNmFhO1xufVxuLnRhc2tiYXIgLmNsaWVudC10aXRsZSB7XG4gIG1pbi13aWR0aDogOGVtO1xuICBwYWRkaW5nOiAwcmVtIDAuM3JlbTtcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDAuMjVlbTtcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDAuMjVlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzFlMjQyODtcbiAgY29sb3I6ICM1NTVjNTQ7XG59XG5cbi5leGl0LWJ1dHRvbiAuaWNvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNjdlODA7XG59XG4uZXhpdC1idXR0b24gLmxhYmVsIHtcbiAgY29sb3I6ICNlNjdlODA7XG59XG5cbi5jbG9jayAuaWNvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNkYmJjN2Y7XG59XG4uY2xvY2sgLmxhYmVsIHtcbiAgY29sb3I6ICNkYmJjN2Y7XG59XG5cbi5uZXR3b3JrIC5pY29uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2FkODVkNztcbn1cbi5uZXR3b3JrIC5sYWJlbCB7XG4gIGNvbG9yOiAjYWQ4NWQ3O1xufVxuXG4ubmV0c3RhdHMgLmljb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTY5ODc1O1xufVxuLm5ldHN0YXRzIC5sYWJlbCB7XG4gIGNvbG9yOiAjZTY5ODc1O1xufVxuXG4udm9sdW1lIC5pY29uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzgzYzA5Mjtcbn1cbi52b2x1bWUgLmxhYmVsIHtcbiAgY29sb3I6ICM4M2MwOTI7XG59XG5cbi5zeXN0cmF5IC5idXR0b24taWNvbiB7XG4gIGJvcmRlci1yYWRpdXM6IDAuMjVlbTtcbiAgcGFkZGluZzogMHJlbSAwLjRyZW07XG4gIG1pbi13aWR0aDogMThweDtcbiAgbWluLWhlaWdodDogMThweDtcbn1cbi5zeXN0cmF5IC5idXR0b24taWNvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiMmM5OGY7XG4gIGNvbG9yOiAjMjMyOTJlO1xufVxuXG53aW5kb3cubm90aWZpY2F0aW9uLXBvcHVwcyB7XG4gIGFsbDogdW5zZXQ7XG59XG5cbi5ub3RpZmljYXRpb24ge1xuICBib3JkZXItcmFkaXVzOiAwLjI1ZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICMxZTI0Mjg7XG4gIG1hcmdpbjogNHB4O1xuICBib3gtc2hhZG93OiAycHggM3B4IDhweCAwIGFscGhhKGJsYWNrLDAuNCk7XG4gIGJvcmRlcjogMXB0IHNvbGlkIGFscGhhKCNkM2M2YWEsMC4wMyk7XG59XG4ubm90aWZpY2F0aW9uLmNyaXRpY2FsIHtcbiAgYm9yZGVyOiAxcHQgc29saWQgYWxwaGEoI2U2N2U4MCwwLjQpO1xufVxuLm5vdGlmaWNhdGlvbi5jcml0aWNhbCAuaGVhZGVyIC5hcHAtbmFtZSB7XG4gIGNvbG9yOiBhbHBoYSgjZTY3ZTgwLDAuOCk7XG59XG4ubm90aWZpY2F0aW9uLmNyaXRpY2FsIC5oZWFkZXIgLmFwcC1pY29uIHtcbiAgY29sb3I6IGFscGhhKCNlNjdlODAsMC42KTtcbn1cbi5ub3RpZmljYXRpb24gLmhlYWRlciB7XG4gIHBhZGRpbmc6IDAuNXJlbTtcbiAgY29sb3I6IGFscGhhKCNkM2M2YWEsMC41KTtcbn1cbi5ub3RpZmljYXRpb24gLmhlYWRlciAuYXBwLWljb24ge1xuICBtYXJnaW46IDAgMC40cmVtO1xufVxuLm5vdGlmaWNhdGlvbiAuaGVhZGVyIC5hcHAtbmFtZSB7XG4gIG1hcmdpbi1yaWdodDogMC4zcmVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cbi5ub3RpZmljYXRpb24gLmhlYWRlciAuYXBwLW5hbWU6Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tbGVmdDogMC40cmVtO1xufVxuLm5vdGlmaWNhdGlvbiAuaGVhZGVyIC50aW1lIHtcbiAgbWFyZ2luOiAwIDAuNHJlbTtcbn1cbi5ub3RpZmljYXRpb24gLmhlYWRlciBidXR0b24ge1xuICBib3JkZXItcmFkaXVzOiAwLjI1ZW07XG4gIHBhZGRpbmc6IDAuMnJlbTtcbiAgbWluLXdpZHRoOiAwO1xuICBtaW4taGVpZ2h0OiAwO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTY3ZTgwO1xuICBjb2xvcjogIzFlMjQyODtcbn1cbi5ub3RpZmljYXRpb24gc2VwYXJhdG9yIHtcbiAgbWFyZ2luOiAwIDAuNHJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogYWxwaGEoI2QzYzZhYSwwLjEpO1xufVxuLm5vdGlmaWNhdGlvbiAuY29udGVudCB7XG4gIG1hcmdpbjogMXJlbTtcbiAgbWFyZ2luLXRvcDogMC41cmVtO1xufVxuLm5vdGlmaWNhdGlvbiAuY29udGVudCAuc3VtbWFyeSB7XG4gIGZvbnQtc2l6ZTogMWVtO1xuICBjb2xvcjogI2QzYzZhYTtcbn1cbi5ub3RpZmljYXRpb24gLmNvbnRlbnQgLmJvZHkge1xuICBjb2xvcjogYWxwaGEoI2QzYzZhYSwwLjYpO1xuICBmb250LXNpemU6IDFlbTtcbn1cbi5ub3RpZmljYXRpb24gLmNvbnRlbnQgLmltYWdlIHtcbiAgYm9yZGVyOiAxcHggc29saWQgYWxwaGEoI2QzYzZhYSwwLjAyKTtcbiAgbWFyZ2luLXJpZ2h0OiAwLjVyZW07XG4gIGJvcmRlci1yYWRpdXM6IDAuMjVlbTtcbiAgbWluLXdpZHRoOiAxMDBweDtcbiAgbWluLWhlaWdodDogMTAwcHg7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbn1cbi5ub3RpZmljYXRpb24gLmFjdGlvbnMge1xuICBtYXJnaW46IDFyZW07XG4gIG1hcmdpbi10b3A6IDA7XG59XG4ubm90aWZpY2F0aW9uIC5hY3Rpb25zIGJ1dHRvbiB7XG4gIG1hcmdpbjogMCAwLjNyZW07XG4gIHBhZGRpbmc6IDAuM3JlbSAwO1xuICBmb250LXNpemU6IDAuOHJlbTtcbiAgYm9yZGVyLXJhZGl1czogMC4yNWVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBhbHBoYSgjZDNjNmFhLDAuMSk7XG59XG4ubm90aWZpY2F0aW9uIC5hY3Rpb25zIGJ1dHRvbjpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuLm5vdGlmaWNhdGlvbiAuYWN0aW9ucyBidXR0b246bGFzdC1jaGlsZCB7XG4gIG1hcmdpbi1yaWdodDogMDtcbn0iLCAiaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHZGsgZnJvbSBcImdpOi8vR2RrP3ZlcnNpb249NC4wXCJcbmV4cG9ydCB7IEFzdGFsLCBHdGssIEdkayB9XG4iLCAiaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEFzdGFsIGZyb20gXCJnaTovL0FzdGFsP3ZlcnNpb249NC4wXCJcbmltcG9ydCB7IENDUHJvcHMgfSBmcm9tIFwiZ25pbVwiXG5pbXBvcnQgeyBpbnRyaW5zaWNFbGVtZW50cyB9IGZyb20gXCJnbmltL2d0azQvanN4LXJ1bnRpbWVcIlxuXG50eXBlIFByb3BzPFQgZXh0ZW5kcyBHdGsuV2lkZ2V0LCBQcm9wcz4gPSBDQ1Byb3BzPFQsIFBhcnRpYWw8UHJvcHM+PlxuXG5PYmplY3QuYXNzaWduKGludHJpbnNpY0VsZW1lbnRzLCB7XG4gICAgYm94OiBHdGsuQm94LFxuICAgIGJ1dHRvbjogR3RrLkJ1dHRvbixcbiAgICBjZW50ZXJib3g6IEd0ay5DZW50ZXJCb3gsXG4gICAgLy8gY2lyY3VsYXJwcm9ncmVzczogQXN0YWwuQ2lyY3VsYXJQcm9ncmVzcyxcbiAgICBkcmF3aW5nYXJlYTogR3RrLkRyYXdpbmdBcmVhLFxuICAgIGVudHJ5OiBHdGsuRW50cnksXG4gICAgaW1hZ2U6IEd0ay5JbWFnZSxcbiAgICBsYWJlbDogR3RrLkxhYmVsLFxuICAgIGxldmVsYmFyOiBHdGsuTGV2ZWxCYXIsXG4gICAgbWVudWJ1dHRvbjogR3RrLk1lbnVCdXR0b24sXG4gICAgb3ZlcmxheTogR3RrLk92ZXJsYXksXG4gICAgcG9wb3ZlcjogR3RrLlBvcG92ZXIsXG4gICAgcmV2ZWFsZXI6IEd0ay5SZXZlYWxlcixcbiAgICBzY3JvbGxlZHdpbmRvdzogR3RrLlNjcm9sbGVkV2luZG93LFxuICAgIHNsaWRlcjogQXN0YWwuU2xpZGVyLFxuICAgIHN0YWNrOiBHdGsuU3RhY2ssXG4gICAgc3dpdGNoOiBHdGsuU3dpdGNoLFxuICAgIHRvZ2dsZWJ1dHRvbjogR3RrLlRvZ2dsZUJ1dHRvbixcbiAgICB3aW5kb3c6IEFzdGFsLldpbmRvdyxcbn0pXG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgICBuYW1lc3BhY2UgSlNYIHtcbiAgICAgICAgaW50ZXJmYWNlIEludHJpbnNpY0VsZW1lbnRzIHtcbiAgICAgICAgICAgIGJveDogUHJvcHM8R3RrLkJveCwgR3RrLkJveC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgYnV0dG9uOiBQcm9wczxHdGsuQnV0dG9uLCBHdGsuQnV0dG9uLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBjZW50ZXJib3g6IFByb3BzPEd0ay5DZW50ZXJCb3gsIEd0ay5DZW50ZXJCb3guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIC8vIGNpcmN1bGFycHJvZ3Jlc3M6IFByb3BzPEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MsIEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGRyYXdpbmdhcmVhOiBQcm9wczxHdGsuRHJhd2luZ0FyZWEsIEd0ay5EcmF3aW5nQXJlYS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgZW50cnk6IFByb3BzPEd0ay5FbnRyeSwgR3RrLkVudHJ5LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBpbWFnZTogUHJvcHM8R3RrLkltYWdlLCBHdGsuSW1hZ2UuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGxhYmVsOiBQcm9wczxHdGsuTGFiZWwsIEd0ay5MYWJlbC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgbGV2ZWxiYXI6IFByb3BzPEd0ay5MZXZlbEJhciwgR3RrLkxldmVsQmFyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBtZW51YnV0dG9uOiBQcm9wczxHdGsuTWVudUJ1dHRvbiwgR3RrLk1lbnVCdXR0b24uQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIG92ZXJsYXk6IFByb3BzPEd0ay5PdmVybGF5LCBHdGsuT3ZlcmxheS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgcG9wb3ZlcjogUHJvcHM8R3RrLlBvcG92ZXIsIEd0ay5Qb3BvdmVyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICByZXZlYWxlcjogUHJvcHM8R3RrLlJldmVhbGVyLCBHdGsuUmV2ZWFsZXIuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHNjcm9sbGVkd2luZG93OiBQcm9wczxHdGsuU2Nyb2xsZWRXaW5kb3csIEd0ay5TY3JvbGxlZFdpbmRvdy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc2xpZGVyOiBQcm9wczxBc3RhbC5TbGlkZXIsIEFzdGFsLlNsaWRlci5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc3RhY2s6IFByb3BzPEd0ay5TdGFjaywgR3RrLlN0YWNrLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBzd2l0Y2g6IFByb3BzPEd0ay5Td2l0Y2gsIEd0ay5Td2l0Y2guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHRvZ2dsZWJ1dHRvbjogUHJvcHM8R3RrLlRvZ2dsZUJ1dHRvbiwgR3RrLlRvZ2dsZUJ1dHRvbi5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgd2luZG93OiBQcm9wczxBc3RhbC5XaW5kb3csIEFzdGFsLldpbmRvdy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgKiBmcm9tIFwiZ25pbS9ndGs0L2pzeC1ydW50aW1lXCJcbiIsICJpbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpbz92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgeyBjb25maWd1ZSB9IGZyb20gXCIuLi9qc3gvZW52LmpzXCJcbmltcG9ydCB7IGdldFR5cGUsIG9uQ2xlYW51cCwgQWNjZXNzb3IsIEZyYWdtZW50IH0gZnJvbSBcIi4uL2luZGV4LmpzXCJcblxuaW1wb3J0IHR5cGUgQWR3IGZyb20gXCJnaTovL0Fkd1wiXG5jb25zdCBhZHcgPSBhd2FpdCBpbXBvcnQoXCJnaTovL0Fkd1wiKS50aGVuKChtKSA9PiBtLmRlZmF1bHQpLmNhdGNoKCgpID0+IG51bGwpXG5cbmNvbnN0IGR1bW15QnVpbGRlciA9IG5ldyBHdGsuQnVpbGRlcigpXG5cbmNvbnN0IHsgaW50cmluc2ljRWxlbWVudHMgfSA9IGNvbmZpZ3VlKHtcbiAgICBpbml0UHJvcHMoY3Rvcikge1xuICAgICAgICBpZiAoY3RvciA9PT0gR3RrLlN0YWNrKSB7XG4gICAgICAgICAgICBjb25zdCBrZXlzOiBBcnJheTxFeHRyYWN0PGtleW9mIEd0ay5TdGFjaywgc3RyaW5nPj4gPSBbXG4gICAgICAgICAgICAgICAgXCJ2aXNpYmxlQ2hpbGROYW1lXCIsXG4gICAgICAgICAgICAgICAgXCJ2aXNpYmxlX2NoaWxkX25hbWVcIixcbiAgICAgICAgICAgIF1cbiAgICAgICAgICAgIHJldHVybiBrZXlzXG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFkdyAmJiBjdG9yID09PSBhZHcuVG9nZ2xlR3JvdXApIHtcbiAgICAgICAgICAgIGNvbnN0IGtleXM6IEFycmF5PEV4dHJhY3Q8a2V5b2YgQWR3LlRvZ2dsZUdyb3VwLCBzdHJpbmc+PiA9IFtcbiAgICAgICAgICAgICAgICBcImFjdGl2ZVwiLFxuICAgICAgICAgICAgICAgIFwiYWN0aXZlTmFtZVwiLFxuICAgICAgICAgICAgICAgIFwiYWN0aXZlX25hbWVcIixcbiAgICAgICAgICAgIF1cbiAgICAgICAgICAgIHJldHVybiBrZXlzXG4gICAgICAgIH1cbiAgICB9LFxuICAgIHNldENzcyhvYmplY3QsIGNzcykge1xuICAgICAgICBpZiAoIShvYmplY3QgaW5zdGFuY2VvZiBHdGsuV2lkZ2V0KSkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUud2FybihFcnJvcihgY2Fubm90IHNldCBjc3Mgb24gJHtvYmplY3R9YCkpXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBjdHggPSBvYmplY3QuZ2V0X3N0eWxlX2NvbnRleHQoKVxuICAgICAgICBsZXQgcHJvdmlkZXI6IEd0ay5Dc3NQcm92aWRlclxuXG4gICAgICAgIGNvbnN0IHNldHRlciA9IChjc3M6IHN0cmluZykgPT4ge1xuICAgICAgICAgICAgaWYgKCFjc3MuaW5jbHVkZXMoXCJ7XCIpIHx8ICFjc3MuaW5jbHVkZXMoXCJ9XCIpKSB7XG4gICAgICAgICAgICAgICAgY3NzID0gYCogeyAke2Nzc30gfWBcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHByb3ZpZGVyKSBjdHgucmVtb3ZlX3Byb3ZpZGVyKHByb3ZpZGVyKVxuXG4gICAgICAgICAgICBwcm92aWRlciA9IG5ldyBHdGsuQ3NzUHJvdmlkZXIoKVxuICAgICAgICAgICAgcHJvdmlkZXIubG9hZF9mcm9tX3N0cmluZyhjc3MpXG4gICAgICAgICAgICBjdHguYWRkX3Byb3ZpZGVyKHByb3ZpZGVyLCBHdGsuU1RZTEVfUFJPVklERVJfUFJJT1JJVFlfVVNFUilcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjc3MgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgc2V0dGVyKGNzcy5nZXQoKSlcbiAgICAgICAgICAgIGNvbnN0IGRpc3Bvc2UgPSBjc3Muc3Vic2NyaWJlKCgpID0+IHNldHRlcihjc3MuZ2V0KCkpKVxuICAgICAgICAgICAgb25DbGVhbnVwKGRpc3Bvc2UpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZXR0ZXIoY3NzKVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIHNldENsYXNzKG9iamVjdCwgY2xhc3NOYW1lKSB7XG4gICAgICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gY29uc29sZS53YXJuKEVycm9yKGBjYW5ub3Qgc2V0IGNsYXNzTmFtZSBvbiAke29iamVjdH1gKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjbGFzc05hbWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgb2JqZWN0LmNzc0NsYXNzZXMgPSBjbGFzc05hbWUuZ2V0KCkuc3BsaXQoL1xccysvKVxuICAgICAgICAgICAgY29uc3QgZGlzcG9zZSA9IGNsYXNzTmFtZS5zdWJzY3JpYmUoXG4gICAgICAgICAgICAgICAgKCkgPT4gKG9iamVjdC5jc3NDbGFzc2VzID0gY2xhc3NOYW1lLmdldCgpLnNwbGl0KC9cXHMrLykpLFxuICAgICAgICAgICAgKVxuICAgICAgICAgICAgb25DbGVhbnVwKGRpc3Bvc2UpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBvYmplY3Quc2V0X2Nzc19jbGFzc2VzKGNsYXNzTmFtZS5zcGxpdCgvXFxzKy8pKVxuICAgICAgICB9XG4gICAgfSxcblxuICAgIHRleHROb2RlKHRleHQpIHtcbiAgICAgICAgcmV0dXJuIEd0ay5MYWJlbC5uZXcodGV4dC50b1N0cmluZygpKVxuICAgIH0sXG5cbiAgICAvLyBgc2V0X2NoaWxkYCBhbmQgZXNwZWNpYWxseSBgcmVtb3ZlYCBtaWdodCBiZSB3YXkgdG9vIGdlbmVyaWMgYW5kIHRoZXJlIG1pZ2h0XG4gICAgLy8gYmUgY2FzZXMgd2hlcmUgaXQgZG9lcyBub3QgYWN0dWFsbHkgZG8gd2hhdCB3ZSB3YW50IGl0IHRvIGRvXG4gICAgLy9cbiAgICAvLyBpZiB0aGVyZSBpcyBhIHVzZWNhc2UgZm9yIGVpdGhlciBvZiB0aGVzZSB0d28gdGhhdCBkb2VzIHNvbWV0aGluZyBlbHNlIHRoYW5cbiAgICAvLyB3ZSBleHBlY3QgaXQgdG8gZG8gaGVyZSBpbiBhIEpTWCBjb250ZXh0IHdlIGhhdmUgdG8gY2hlY2sgZm9yIGtub3duIGluc3RhbmNlc1xuICAgIHJlbW92ZUNoaWxkKHBhcmVudCwgY2hpbGQpIHtcbiAgICAgICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQgJiYgY2hpbGQgaW5zdGFuY2VvZiBHdGsuRXZlbnRDb250cm9sbGVyKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnJlbW92ZV9jb250cm9sbGVyKGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKFwic2V0X2NoaWxkXCIgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnQuc2V0X2NoaWxkID09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC5zZXRfY2hpbGQobnVsbClcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChcInJlbW92ZVwiIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50LnJlbW92ZSA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQucmVtb3ZlKGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgdGhyb3cgRXJyb3IoYGNhbm5vdCByZW1vdmUgJHtjaGlsZH0gZnJvbSAke3BhcmVudH1gKVxuICAgIH0sXG4gICAgYXBwZW5kQ2hpbGQocGFyZW50LCBjaGlsZCkge1xuICAgICAgICBpZiAoXG4gICAgICAgICAgICBjaGlsZCBpbnN0YW5jZW9mIEd0ay5BZGp1c3RtZW50ICYmXG4gICAgICAgICAgICBcInNldF9hZGp1c3RtZW50XCIgaW4gcGFyZW50ICYmXG4gICAgICAgICAgICB0eXBlb2YgcGFyZW50LnNldF9hZGp1c3RtZW50ID09PSBcImZ1bmN0aW9uXCJcbiAgICAgICAgKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnNldF9hZGp1c3RtZW50KGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgY2hpbGQgaW5zdGFuY2VvZiBHdGsuV2lkZ2V0ICYmXG4gICAgICAgICAgICBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuU3RhY2sgJiZcbiAgICAgICAgICAgIGNoaWxkLm5hbWUgIT09IFwiXCIgJiZcbiAgICAgICAgICAgIGNoaWxkLm5hbWUgIT09IG51bGwgJiZcbiAgICAgICAgICAgIGdldFR5cGUoY2hpbGQpID09PSBcIm5hbWVkXCJcbiAgICAgICAgKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LmFkZF9uYW1lZChjaGlsZCwgY2hpbGQubmFtZSlcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0ay5Qb3BvdmVyICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5NZW51QnV0dG9uKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnNldF9wb3BvdmVyKGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgY2hpbGQgaW5zdGFuY2VvZiBHaW8uTWVudU1vZGVsICYmXG4gICAgICAgICAgICAocGFyZW50IGluc3RhbmNlb2YgR3RrLk1lbnVCdXR0b24gfHwgcGFyZW50IGluc3RhbmNlb2YgR3RrLlBvcG92ZXJNZW51KVxuICAgICAgICApIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQuc2V0X21lbnVfbW9kZWwoY2hpbGQpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHaW8uTWVudUl0ZW0gJiYgcGFyZW50IGluc3RhbmNlb2YgR2lvLk1lbnUpIHtcbiAgICAgICAgICAgIC8vIFRPRE86XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGsuV2luZG93ICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5BcHBsaWNhdGlvbikge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC5hZGRfd2luZG93KGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrLlRleHRCdWZmZXIgJiYgcGFyZW50IGluc3RhbmNlb2YgR3RrLlRleHRWaWV3KSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnNldF9idWZmZXIoY2hpbGQpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgR3RrLkJ1aWxkYWJsZSkge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC52ZnVuY19hZGRfY2hpbGQoZHVtbXlCdWlsZGVyLCBjaGlsZCwgZ2V0VHlwZShjaGlsZCkpXG4gICAgICAgIH1cblxuICAgICAgICB0aHJvdyBFcnJvcihgY2Fubm90IGFkZCAke2NoaWxkfSB0byAke3BhcmVudH1gKVxuICAgIH0sXG59KVxuXG5leHBvcnQgeyBGcmFnbWVudCwgaW50cmluc2ljRWxlbWVudHMgfVxuZXhwb3J0IHsganN4LCBqc3hzIH0gZnJvbSBcIi4uL2pzeC9qc3guanNcIlxuIiwgImltcG9ydCB7IEFjY2Vzc29yLCB0eXBlIENDUHJvcHMgfSBmcm9tIFwiYWdzXCJcbmltcG9ydCB7IEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiXG5cbnR5cGUgTW9kdWxlQ29udGFpbmVyUHJvcHMgPSBQYXJ0aWFsPFxuICBDQ1Byb3BzPEd0ay5CdXR0b24sIEd0ay5CdXR0b24uQ29uc3RydWN0b3JQcm9wcz5cbj4gJiB7XG4gIGljb24/OiBzdHJpbmcgfCBBY2Nlc3NvcjxzdHJpbmc+XG4gIGxhYmVsPzogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPlxufVxuXG5mdW5jdGlvbiBNb2R1bGVDb250YWluZXIoe1xuICBpY29uLFxuICBsYWJlbCxcbiAgY2xhc3M6IGNsYXNzTmFtZSxcbiAgLi4ucHJvcHNcbn06IE1vZHVsZUNvbnRhaW5lclByb3BzKSB7XG4gIHJldHVybiAoXG4gICAgPGJ1dHRvbiBjbGFzcz17XCJtb2R1bGUtY29udGFpbmVyXCIgKyBcIiBcIiArIGNsYXNzTmFtZX0gey4uLnByb3BzfT5cbiAgICAgIDxib3g+XG4gICAgICAgIDxsYWJlbCBjbGFzcz1cImljb25cIiBsYWJlbD17aWNvbn0gLz5cbiAgICAgICAgPGxhYmVsIGNsYXNzPVwibGFiZWxcIiBsYWJlbD17bGFiZWx9IC8+XG4gICAgICA8L2JveD5cbiAgICA8L2J1dHRvbj5cbiAgKVxufVxuXG5leHBvcnQgeyBNb2R1bGVDb250YWluZXIgfVxuIiwgImltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWJcIlxuaW1wb3J0IHsgY3JlYXRlUG9sbCB9IGZyb20gXCJhZ3MvdGltZVwiXG5cbmZ1bmN0aW9uIGZvcm1hdERhdGVUaW1lKGZvcm1hdDogc3RyaW5nID0gXCIlYSwgJWIgJWQgLSAlSDolTVwiKSB7XG4gIHJldHVybiBjcmVhdGVQb2xsKFwiXCIsIDYwMDAwLCAoKSA9PiB7XG4gICAgcmV0dXJuIEdMaWIuRGF0ZVRpbWUubmV3X25vd19sb2NhbCgpLmZvcm1hdChmb3JtYXQpIVxuICB9KVxufVxuXG5leHBvcnQgY29uc3QgY2xvY2tMYWJlbCA9IGZvcm1hdERhdGVUaW1lKFwiJUg6JU1cIilcblxuZXhwb3J0IGNvbnN0IGNsb2NrVG9vbHRpcCA9IGZvcm1hdERhdGVUaW1lKClcbiIsICJpbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpbz92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliP3ZlcnNpb249Mi4wXCJcbmltcG9ydCBHT2JqZWN0LCB7IHJlZ2lzdGVyLCBzaWduYWwgfSBmcm9tIFwiZ25pbS9nb2JqZWN0XCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcImduaW1cIlxuXG5jb25zdCBlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKClcblxuZXhwb3J0IG5hbWVzcGFjZSBQcm9jZXNzIHtcbiAgICBleHBvcnQgaW50ZXJmYWNlIFNpZ25hbFNpZ25hdHVyZXMgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdC5TaWduYWxTaWduYXR1cmVzIHtcbiAgICAgICAgc3Rkb3V0OiBQcm9jZXNzW1wic3Rkb3V0XCJdXG4gICAgICAgIHN0ZGVycjogUHJvY2Vzc1tcInN0ZGVyclwiXVxuICAgICAgICBleGl0OiBQcm9jZXNzW1wiZXhpdFwiXVxuICAgIH1cbiAgICBleHBvcnQgaW50ZXJmYWNlIENvbnN0cnVjdG9yUHJvcHMgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdC5Db25zdHJ1Y3RvclByb3BzIHtcbiAgICAgICAgYXJndjogc3RyaW5nW11cbiAgICB9XG59XG5cbkByZWdpc3RlcigpXG5leHBvcnQgY2xhc3MgUHJvY2VzcyBleHRlbmRzIEdPYmplY3QuT2JqZWN0IHtcbiAgICBAc2lnbmFsKFN0cmluZylcbiAgICBwcm90ZWN0ZWQgc3Rkb3V0KG91dDogc3RyaW5nKSB7XG4gICAgICAgIHZvaWQgb3V0XG4gICAgfVxuXG4gICAgQHNpZ25hbChTdHJpbmcpXG4gICAgcHJvdGVjdGVkIHN0ZGVycihlcnI6IHN0cmluZykge1xuICAgICAgICB2b2lkIGVyclxuICAgIH1cblxuICAgIEBzaWduYWwoTnVtYmVyLCBCb29sZWFuKVxuICAgIHByb3RlY3RlZCBleGl0KGNvZGU6IG51bWJlciwgc2lnbmFsZWQ6IGJvb2xlYW4pIHtcbiAgICAgICAgdm9pZCBbY29kZSwgc2lnbmFsZWRdXG4gICAgfVxuXG4gICAgI2VuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKVxuICAgICNvdXRTdHJlYW06IEdpby5EYXRhSW5wdXRTdHJlYW1cbiAgICAjZXJyU3RyZWFtOiBHaW8uRGF0YUlucHV0U3RyZWFtXG4gICAgI2luU3RyZWFtOiBHaW8uRGF0YU91dHB1dFN0cmVhbVxuICAgICNwcm9jZXNzOiBHaW8uU3VicHJvY2Vzc1xuXG4gICAgI3JlYWRTdHJlYW0oc3RyZWFtOiBHaW8uRGF0YUlucHV0U3RyZWFtKSB7XG4gICAgICAgIHN0cmVhbS5yZWFkX2xpbmVfYXN5bmMoR0xpYi5QUklPUklUWV9ERUZBVUxULCBudWxsLCAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IFtvdXRwdXRdID0gc3RyZWFtLnJlYWRfbGluZV9maW5pc2hfdXRmOChyZXMpXG4gICAgICAgICAgICAgICAgaWYgKG91dHB1dCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoc3RyZWFtID09PSB0aGlzLiNlcnJTdHJlYW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3RkZXJyKG91dHB1dC50cmltKCkpXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0ZG91dChvdXRwdXQudHJpbSgpKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuI3JlYWRTdHJlYW0oc3RyZWFtKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBjb25uZWN0PFMgZXh0ZW5kcyBrZXlvZiBQcm9jZXNzLlNpZ25hbFNpZ25hdHVyZXM+KFxuICAgICAgICBzaWduYWw6IFMsXG4gICAgICAgIGNhbGxiYWNrOiBHT2JqZWN0LlNpZ25hbENhbGxiYWNrPHRoaXMsIFByb2Nlc3MuU2lnbmFsU2lnbmF0dXJlc1tTXT4sXG4gICAgKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHN1cGVyLmNvbm5lY3Qoc2lnbmFsLCBjYWxsYmFjaylcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBGb3JjZSBxdWl0IHRoZSBzdWJwcm9jZXNzLlxuICAgICAqL1xuICAgIGtpbGwoKTogdm9pZCB7XG4gICAgICAgIHRoaXMuI3Byb2Nlc3MuZm9yY2VfZXhpdCgpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2VuZCBhIHNpZ25hbCB0byB0aGUgc3VicHJvY2Vzcy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBzaWduYWwgU2lnbmFsIG51bWJlciB0byBiZSBzZW50XG4gICAgICovXG4gICAgc2lnbmFsKHNpZ25hbDogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIHRoaXMuI3Byb2Nlc3Muc2VuZF9zaWduYWwoc2lnbmFsKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFdyaXRlIGEgbGluZSB0byB0aGUgc3VicHJvY2Vzcycgc3RkaW4gc3luY2hyb25vdXNseS5cbiAgICAgKiBTZWUge0BsaW5rIEdpby5EYXRhT3V0cHV0U3RyZWFtLnByb3RvdHlwZS53cml0ZV9ieXRlc19hc3luY31cbiAgICAgKlxuICAgICAqIEBwYXJhbSBzdHIgU3RyaW5nIHRvIGJlIHdyaXR0ZW4gdG8gc3RkaW5cbiAgICAgKi9cbiAgICB3cml0ZShzdHI6IHN0cmluZyk6IFByb21pc2U8W2Jvb2xlYW4sIG51bWJlcl0+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIHRoaXMuI2luU3RyZWFtLndyaXRlX2J5dGVzX2FzeW5jKFxuICAgICAgICAgICAgICAgIGVuY29kZXIuZW5jb2RlKHN0ciksXG4gICAgICAgICAgICAgICAgR0xpYi5QUklPUklUWV9ERUZBVUxULFxuICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh0aGlzLiNpblN0cmVhbS53cml0ZV9hbGxfZmluaXNoKHJlcykpXG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgKVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFdyaXRlIGEgbGluZSB0byB0aGUgc3VicHJvY2Vzcycgc3RkaW4gYXN5bmNocm9ub3VzbHkuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gc3RyIFN0cmluZyB0byBiZSB3cml0dGVuIHRvIHN0ZGluXG4gICAgICovXG4gICAgYXN5bmMgd3JpdGVBc3luYyhzdHI6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgdGhpcy4jaW5TdHJlYW0ud3JpdGVfYWxsX2FzeW5jKFxuICAgICAgICAgICAgICAgIHRoaXMuI2VuY29kZXIuZW5jb2RlKHN0ciksXG4gICAgICAgICAgICAgICAgR0xpYi5QUklPUklUWV9ERUZBVUxULFxuICAgICAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICAgICAgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh2b2lkIHRoaXMuI2luU3RyZWFtLndyaXRlX2FsbF9maW5pc2gocmVzKSlcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICApXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoeyBhcmd2IH06IFByb2Nlc3MuQ29uc3RydWN0b3JQcm9wcykge1xuICAgICAgICBzdXBlcigpXG4gICAgICAgIGNvbnN0IHByb2Nlc3MgPSAodGhpcy4jcHJvY2VzcyA9IEdpby5TdWJwcm9jZXNzLm5ldyhcbiAgICAgICAgICAgIGFyZ3YsXG4gICAgICAgICAgICBHaW8uU3VicHJvY2Vzc0ZsYWdzLlNURElOX1BJUEUgfFxuICAgICAgICAgICAgICAgIEdpby5TdWJwcm9jZXNzRmxhZ3MuU1RET1VUX1BJUEUgfFxuICAgICAgICAgICAgICAgIEdpby5TdWJwcm9jZXNzRmxhZ3MuU1RERVJSX1BJUEUsXG4gICAgICAgICkpXG5cbiAgICAgICAgdGhpcy4jaW5TdHJlYW0gPSBHaW8uRGF0YU91dHB1dFN0cmVhbS5uZXcocHJvY2Vzcy5nZXRfc3RkaW5fcGlwZSgpISlcbiAgICAgICAgdGhpcy4jb3V0U3RyZWFtID0gR2lvLkRhdGFJbnB1dFN0cmVhbS5uZXcocHJvY2Vzcy5nZXRfc3Rkb3V0X3BpcGUoKSEpXG4gICAgICAgIHRoaXMuI2VyclN0cmVhbSA9IEdpby5EYXRhSW5wdXRTdHJlYW0ubmV3KHByb2Nlc3MuZ2V0X3N0ZGVycl9waXBlKCkhKVxuXG4gICAgICAgIHRoaXMuI3JlYWRTdHJlYW0odGhpcy4jb3V0U3RyZWFtKVxuICAgICAgICB0aGlzLiNyZWFkU3RyZWFtKHRoaXMuI2VyclN0cmVhbSlcblxuICAgICAgICBwcm9jZXNzLndhaXRfYXN5bmMobnVsbCwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBwcm9jZXNzLndhaXRfZmluaXNoKHJlcylcbiAgICAgICAgICAgIH0gY2F0Y2gge1xuICAgICAgICAgICAgICAgIC8vIGlnbm9yZVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5nZXRfaWZfZXhpdGVkKCkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmV4aXQocHJvY2Vzcy5nZXRfZXhpdF9zdGF0dXMoKSwgZmFsc2UpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmdldF9pZl9zaWduYWxlZCgpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5leGl0KHByb2Nlc3MuZ2V0X3Rlcm1fc2lnKCksIHRydWUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU3RhcnQgYSBuZXcgc3VicHJvY2VzcyB3aXRoIHRoZSBnaXZlbiBjb21tYW5kLlxuICAgICAqIFRoZSBmaXJzdCBlbGVtZW50IG9mIHRoZSB2ZWN0b3IgaXMgZXhlY3V0ZWQgd2l0aCB0aGUgcmVtYWluaW5nXG4gICAgICogZWxlbWVudHMgYXMgdGhlIGFyZ3VtZW50IGxpc3QuXG4gICAgICovXG4gICAgc3RhdGljIHN1YnByb2Nlc3N2KGNtZDogc3RyaW5nW10pIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9jZXNzKHsgYXJndjogY21kIH0pXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU3RhcnQgYSBuZXcgc3VicHJvY2VzcyB3aXRoIHRoZSBnaXZlbiBjb21tYW5kXG4gICAgICogd2hpY2ggaXMgcGFyc2VkIHVzaW5nIHtAbGluayBHTGliLnNoZWxsX3BhcnNlX2FyZ3Z9LlxuICAgICAqL1xuICAgIHN0YXRpYyBzdWJwcm9jZXNzKGNtZDogc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IFssIGFyZ3ZdID0gR0xpYi5zaGVsbF9wYXJzZV9hcmd2KGNtZClcbiAgICAgICAgcmV0dXJuIFByb2Nlc3Muc3VicHJvY2Vzc3YoYXJndiEpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRXhlY3V0ZSBhIGNvbW1hbmQgc3luY2hyb25vdXNseS5cbiAgICAgKiBUaGUgZmlyc3QgZWxlbWVudCBvZiB0aGUgdmVjdG9yIGlzIGV4ZWN1dGVkIHdpdGggdGhlIHJlbWFpbmluZ1xuICAgICAqIGVsZW1lbnRzIGFzIHRoZSBhcmd1bWVudCBsaXN0LlxuICAgICAqXG4gICAgICogQHRocm93cyBzdGRlcnJcbiAgICAgKiBAcmV0dXJuIHN0ZG91dCBvZiB0aGUgc3VicHJvY2Vzc1xuICAgICAqL1xuICAgIHN0YXRpYyBleGVjdihjbWQ6IHN0cmluZ1tdKSB7XG4gICAgICAgIGNvbnN0IHByb2Nlc3MgPSBHaW8uU3VicHJvY2Vzcy5uZXcoXG4gICAgICAgICAgICBjbWQsXG4gICAgICAgICAgICBHaW8uU3VicHJvY2Vzc0ZsYWdzLlNUREVSUl9QSVBFIHwgR2lvLlN1YnByb2Nlc3NGbGFncy5TVERPVVRfUElQRSxcbiAgICAgICAgKVxuXG4gICAgICAgIGNvbnN0IFssIG91dCwgZXJyXSA9IHByb2Nlc3MuY29tbXVuaWNhdGVfdXRmOChudWxsLCBudWxsKVxuICAgICAgICBpZiAocHJvY2Vzcy5nZXRfc3VjY2Vzc2Z1bCgpKSB7XG4gICAgICAgICAgICByZXR1cm4gb3V0LnRyaW0oKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGVycilcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEV4ZWN1dGUgYSBjb21tYW5kIHN5bmNocm9ub3VzbHkuXG4gICAgICogVGhlIGNvbW1hbmQgaXMgcGFyc2VkIHVzaW5nIHtAbGluayBHTGliLnNoZWxsX3BhcnNlX2FyZ3Z9LlxuICAgICAqXG4gICAgICogQHRocm93cyBzdGRlcnJcbiAgICAgKiBAcmV0dXJuIHN0ZG91dCBvZiB0aGUgc3VicHJvY2Vzc1xuICAgICAqL1xuICAgIHN0YXRpYyBleGVjKGNtZDogc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IFssIGFyZ3ZdID0gR0xpYi5zaGVsbF9wYXJzZV9hcmd2KGNtZClcbiAgICAgICAgcmV0dXJuIFByb2Nlc3MuZXhlY3YoYXJndiEpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRXhlY3V0ZSBhIGNvbW1hbmQgYXN5bmNocm9ub3VzbHkuXG4gICAgICogVGhlIGZpcnN0IGVsZW1lbnQgb2YgdGhlIHZlY3RvciBpcyBleGVjdXRlZCB3aXRoIHRoZSByZW1haW5pbmdcbiAgICAgKiBlbGVtZW50cyBhcyB0aGUgYXJndW1lbnQgbGlzdC5cbiAgICAgKlxuICAgICAqIEB0aHJvd3Mgc3RkZXJyXG4gICAgICogQHJldHVybiBzdGRvdXQgb2YgdGhlIHN1YnByb2Nlc3NcbiAgICAgKi9cbiAgICBzdGF0aWMgZXhlY0FzeW5jdihjbWQ6IHN0cmluZ1tdKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICAgICAgY29uc3QgcHJvY2VzcyA9IEdpby5TdWJwcm9jZXNzLm5ldyhcbiAgICAgICAgICAgIGNtZCxcbiAgICAgICAgICAgIEdpby5TdWJwcm9jZXNzRmxhZ3MuU1RERVJSX1BJUEUgfCBHaW8uU3VicHJvY2Vzc0ZsYWdzLlNURE9VVF9QSVBFLFxuICAgICAgICApXG5cbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIHByb2Nlc3MuY29tbXVuaWNhdGVfdXRmOF9hc3luYyhudWxsLCBudWxsLCAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgWywgb3V0LCBlcnJdID0gcHJvY2Vzcy5jb21tdW5pY2F0ZV91dGY4X2ZpbmlzaChyZXMpXG4gICAgICAgICAgICAgICAgICAgIGlmIChwcm9jZXNzLmdldF9zdWNjZXNzZnVsKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXNvbHZlKG91dC50cmltKCkpXG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKGVyci50cmltKCkpKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRXhlY3V0ZSBhIGNvbW1hbmQgYXN5bmNocm9ub3VzbHkuXG4gICAgICogVGhlIGNvbW1hbmQgaXMgcGFyc2VkIHVzaW5nIHtAbGluayBHTGliLnNoZWxsX3BhcnNlX2FyZ3Z9LlxuICAgICAqXG4gICAgICogQHRocm93cyBzdGRlcnJcbiAgICAgKiBAcmV0dXJuIHN0ZG91dCBvZiB0aGUgc3VicHJvY2Vzc1xuICAgICAqL1xuICAgIHN0YXRpYyBleGVjQXN5bmMoY21kOiBzdHJpbmcpIHtcbiAgICAgICAgY29uc3QgWywgYXJndl0gPSBHTGliLnNoZWxsX3BhcnNlX2FyZ3YoY21kKVxuICAgICAgICByZXR1cm4gUHJvY2Vzcy5leGVjQXN5bmN2KGFyZ3YhKVxuICAgIH1cbn1cblxudHlwZSBBcmdzID0ge1xuICAgIGNtZDogc3RyaW5nIHwgc3RyaW5nW11cbiAgICBvdXQ/OiAoc3Rkb3V0OiBzdHJpbmcpID0+IHZvaWRcbiAgICBlcnI/OiAoc3RkZXJyOiBzdHJpbmcpID0+IHZvaWRcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN1YnByb2Nlc3MoYXJnczogQXJncyk6IFByb2Nlc3NcblxuZXhwb3J0IGZ1bmN0aW9uIHN1YnByb2Nlc3MoXG4gICAgY21kOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICBvbk91dD86IChzdGRvdXQ6IHN0cmluZykgPT4gdm9pZCxcbiAgICBvbkVycj86IChzdGRlcnI6IHN0cmluZykgPT4gdm9pZCxcbik6IFByb2Nlc3NcblxuZXhwb3J0IGZ1bmN0aW9uIHN1YnByb2Nlc3MoXG4gICAgYXJnc09yQ21kOiBBcmdzIHwgc3RyaW5nIHwgc3RyaW5nW10sXG4gICAgb25PdXQ6IChzdGRvdXQ6IHN0cmluZykgPT4gdm9pZCA9IHByaW50LFxuICAgIG9uRXJyOiAoc3RkZXJyOiBzdHJpbmcpID0+IHZvaWQgPSBwcmludGVycixcbikge1xuICAgIGNvbnN0IGFyZ3MgPSBBcnJheS5pc0FycmF5KGFyZ3NPckNtZCkgfHwgdHlwZW9mIGFyZ3NPckNtZCA9PT0gXCJzdHJpbmdcIlxuICAgIGNvbnN0IHsgY21kLCBlcnIsIG91dCB9ID0ge1xuICAgICAgICBjbWQ6IGFyZ3MgPyBhcmdzT3JDbWQgOiBhcmdzT3JDbWQuY21kLFxuICAgICAgICBlcnI6IGFyZ3MgPyBvbkVyciA6IGFyZ3NPckNtZC5lcnIgfHwgb25FcnIsXG4gICAgICAgIG91dDogYXJncyA/IG9uT3V0IDogYXJnc09yQ21kLm91dCB8fCBvbk91dCxcbiAgICB9XG5cbiAgICBjb25zdCBwcm9jID0gQXJyYXkuaXNBcnJheShjbWQpID8gUHJvY2Vzcy5zdWJwcm9jZXNzdihjbWQpIDogUHJvY2Vzcy5zdWJwcm9jZXNzKGNtZClcbiAgICBwcm9jLmNvbm5lY3QoXCJzdGRvdXRcIiwgKF8sIHN0ZG91dDogc3RyaW5nKSA9PiBvdXQoc3Rkb3V0KSlcbiAgICBwcm9jLmNvbm5lY3QoXCJzdGRlcnJcIiwgKF8sIHN0ZGVycjogc3RyaW5nKSA9PiBlcnIoc3RkZXJyKSlcbiAgICByZXR1cm4gcHJvY1xufVxuXG4vKiogQHRocm93cyB7RXJyb3J9IFRocm93cyBzdGRlcnIgKi9cbmV4cG9ydCBmdW5jdGlvbiBleGVjKGNtZDogc3RyaW5nIHwgc3RyaW5nW10pIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShjbWQpID8gUHJvY2Vzcy5leGVjdihjbWQpIDogUHJvY2Vzcy5leGVjKGNtZClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGV4ZWNBc3luYyhjbWQ6IHN0cmluZyB8IHN0cmluZ1tdKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShjbWQpKSB7XG4gICAgICAgIHJldHVybiBQcm9jZXNzLmV4ZWNBc3luY3YoY21kKVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBQcm9jZXNzLmV4ZWNBc3luYyhjbWQpXG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3VicHJvY2Vzcyhpbml0OiBzdHJpbmcsIGV4ZWM6IHN0cmluZyB8IHN0cmluZ1tdKTogQWNjZXNzb3I8c3RyaW5nPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3VicHJvY2VzczxUPihcbiAgICBpbml0OiBULFxuICAgIGV4ZWM6IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIHRyYW5zZm9ybTogKHN0ZG91dDogc3RyaW5nLCBwcmV2OiBUKSA9PiBULFxuKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN1YnByb2Nlc3M8VD4oXG4gICAgaW5pdDogVCxcbiAgICBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICB0cmFuc2Zvcm0/OiAoc3Rkb3V0OiBzdHJpbmcsIHByZXY6IFQpID0+IFQsXG4pOiBBY2Nlc3NvcjxUPiB7XG4gICAgbGV0IGN1cnJlbnRWYWx1ZSA9IGluaXRcbiAgICBsZXQgcHJvYzogUHJvY2VzcyB8IG51bGwgPSBudWxsXG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PCgpID0+IHZvaWQ+KClcblxuICAgIGZ1bmN0aW9uIHN1YnNjcmliZShjYWxsYmFjazogKCkgPT4gdm9pZCk6ICgpID0+IHZvaWQge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgcHJvYyA9IHN1YnByb2Nlc3MoZXhlYywgKHN0ZG91dCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdHJhbnNmb3JtID8gdHJhbnNmb3JtKHN0ZG91dCwgY3VycmVudFZhbHVlKSA6IChzdGRvdXQgYXMgVClcbiAgICAgICAgICAgICAgICBpZiAoY3VycmVudFZhbHVlICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50VmFsdWUgPSB2YWx1ZVxuICAgICAgICAgICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHByb2M/LmtpbGwoKVxuICAgICAgICAgICAgICAgIHByb2MgPSBudWxsXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IGN1cnJlbnRWYWx1ZSwgc3Vic2NyaWJlKVxufVxuIiwgImltcG9ydCBHT2JqZWN0LCB7IHJlZ2lzdGVyLCBzaWduYWwgfSBmcm9tIFwiZ25pbS9nb2JqZWN0XCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcImduaW1cIlxuaW1wb3J0IHsgZXhlY0FzeW5jIH0gZnJvbSBcIi4vcHJvY2Vzcy5qc1wiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliP3ZlcnNpb249Mi4wXCJcblxuZXhwb3J0IG5hbWVzcGFjZSBUaW1lciB7XG4gICAgZXhwb3J0IGludGVyZmFjZSBTaWduYWxTaWduYXR1cmVzIGV4dGVuZHMgR09iamVjdC5PYmplY3QuU2lnbmFsU2lnbmF0dXJlcyB7XG4gICAgICAgIG5vdygpOiB2b2lkXG4gICAgICAgIGNhbmNlbGxlZCgpOiB2b2lkXG4gICAgfVxufVxuXG5AcmVnaXN0ZXIoKVxuZXhwb3J0IGNsYXNzIFRpbWVyIGV4dGVuZHMgR09iamVjdC5PYmplY3Qge1xuICAgIGRlY2xhcmUgJHNpZ25hbHM6IFRpbWVyLlNpZ25hbFNpZ25hdHVyZXNcblxuICAgIEBzaWduYWwoKVxuICAgIHByb3RlY3RlZCBub3coKSB7fVxuXG4gICAgQHNpZ25hbCgpXG4gICAgcHJvdGVjdGVkIGNhbmNlbGxlZCgpIHt9XG5cbiAgICBzdGF0aWMgaW50ZXJ2YWwoaW50ZXJ2YWw6IG51bWJlciwgY2FsbGJhY2s/OiAoKSA9PiB2b2lkKSB7XG4gICAgICAgIGNvbnN0IHsgdGltZXIsIG5vdyB9ID0gVGltZXIubmV3KGNhbGxiYWNrLCAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoaW1tZWRpYXRlLmlzX2Rlc3Ryb3llZCgpKSBpbW1lZGlhdGUuZGVzdHJveSgpXG4gICAgICAgICAgICBpZiAoc291cmNlLmlzX2Rlc3Ryb3llZCgpKSBzb3VyY2UuZGVzdHJveSgpXG4gICAgICAgIH0pXG4gICAgICAgIGNvbnN0IGltbWVkaWF0ZSA9IHNldFRpbWVvdXQobm93KVxuICAgICAgICBjb25zdCBzb3VyY2UgPSBzZXRJbnRlcnZhbChub3csIGludGVydmFsKVxuICAgICAgICByZXR1cm4gdGltZXJcbiAgICB9XG5cbiAgICBzdGF0aWMgdGltZW91dChpbnRlcnZhbDogbnVtYmVyLCBjYWxsYmFjaz86ICgpID0+IHZvaWQpIHtcbiAgICAgICAgY29uc3QgeyB0aW1lciwgbm93IH0gPSBUaW1lci5uZXcoY2FsbGJhY2ssICgpID0+IHtcbiAgICAgICAgICAgIGlmIChzb3VyY2UuaXNfZGVzdHJveWVkKCkpIHNvdXJjZS5kZXN0cm95KClcbiAgICAgICAgfSlcbiAgICAgICAgY29uc3Qgc291cmNlID0gc2V0VGltZW91dChub3csIGludGVydmFsKVxuICAgICAgICByZXR1cm4gdGltZXJcbiAgICB9XG5cbiAgICBzdGF0aWMgaWRsZShjYWxsYmFjaz86ICgpID0+IHZvaWQpIHtcbiAgICAgICAgY29uc3QgeyB0aW1lciwgbm93IH0gPSBUaW1lci5uZXcoY2FsbGJhY2ssICgpID0+IHtcbiAgICAgICAgICAgIGlmIChzb3VyY2UuaXNfZGVzdHJveWVkKCkpIHNvdXJjZS5kZXN0cm95KClcbiAgICAgICAgfSlcbiAgICAgICAgY29uc3Qgc291cmNlID0gc2V0VGltZW91dChub3cpXG4gICAgICAgIHJldHVybiB0aW1lclxuICAgIH1cblxuICAgIHByaXZhdGUgc3RhdGljIG5ldyhvbk5vdz86ICgpID0+IHZvaWQsIG9uQ2FuY2VsbGVkPzogKCkgPT4gdm9pZCkge1xuICAgICAgICBjb25zdCB0aW1lciA9IG5ldyBUaW1lcigpXG4gICAgICAgIGNvbnN0IG5vdyA9IHRpbWVyLmNvbm5lY3QoXCJub3dcIiwgKCkgPT4gdm9pZCBvbk5vdz8uKCkpXG4gICAgICAgIGNvbnN0IGNhbmNlbGxlZCA9IHRpbWVyLmNvbm5lY3QoXCJjYW5jZWxsZWRcIiwgKCkgPT4ge1xuICAgICAgICAgICAgdGltZXIuZGlzY29ubmVjdChub3cpXG4gICAgICAgICAgICB0aW1lci5kaXNjb25uZWN0KGNhbmNlbGxlZClcbiAgICAgICAgICAgIG9uQ2FuY2VsbGVkPy4oKVxuICAgICAgICB9KVxuICAgICAgICByZXR1cm4geyB0aW1lciwgbm93OiAoKSA9PiB0aW1lci5ub3coKSB9XG4gICAgfVxuXG4gICAgY29ubmVjdDxTIGV4dGVuZHMga2V5b2YgVGltZXIuU2lnbmFsU2lnbmF0dXJlcz4oXG4gICAgICAgIHNpZ25hbDogUyxcbiAgICAgICAgY2FsbGJhY2s6IEdPYmplY3QuU2lnbmFsQ2FsbGJhY2s8dGhpcywgVGltZXIuU2lnbmFsU2lnbmF0dXJlc1tTXT4sXG4gICAgKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHN1cGVyLmNvbm5lY3Qoc2lnbmFsLCBjYWxsYmFjaylcbiAgICB9XG5cbiAgICBjYW5jZWwoKSB7XG4gICAgICAgIHRoaXMuY2FuY2VsbGVkKClcbiAgICB9XG59XG5cbmV4cG9ydCBjb25zdCB7IGludGVydmFsLCB0aW1lb3V0LCBpZGxlIH0gPSBUaW1lclxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUG9sbChcbiAgICBpbml0OiBzdHJpbmcsXG4gICAgaW50ZXJ2YWw6IG51bWJlcixcbiAgICBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSxcbik6IEFjY2Vzc29yPHN0cmluZz5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvbGw8VD4oXG4gICAgaW5pdDogVCxcbiAgICBpbnRlcnZhbDogbnVtYmVyLFxuICAgIGV4ZWM6IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIHRyYW5zZm9ybTogKHN0ZG91dDogc3RyaW5nLCBwcmV2OiBUKSA9PiBULFxuKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvbGw8VD4oXG4gICAgaW5pdDogVCxcbiAgICBpbnRlcnZhbDogbnVtYmVyLFxuICAgIGZuOiAocHJldjogVCkgPT4gVCB8IFByb21pc2U8VD4sXG4pOiBBY2Nlc3NvcjxUPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUG9sbDxUPihcbiAgICBpbml0OiBULFxuICAgIGl2YWw6IG51bWJlcixcbiAgICBleGVjT3JGbjogc3RyaW5nIHwgc3RyaW5nW10gfCAoKHByZXY6IFQpID0+IFQgfCBQcm9taXNlPFQ+KSxcbiAgICB0cmFuc2Zvcm0/OiAoc3Rkb3V0OiBzdHJpbmcsIHByZXY6IFQpID0+IFQsXG4pOiBBY2Nlc3NvcjxUPiB7XG4gICAgbGV0IGN1cnJlbnRWYWx1ZSA9IGluaXRcbiAgICBsZXQgdGltZXI6IEdMaWIuU291cmNlIHwgbnVsbCA9IG51bGxcbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKVxuXG4gICAgZnVuY3Rpb24gc2V0KHZhbHVlOiBUKSB7XG4gICAgICAgIGlmICh2YWx1ZSAhPT0gY3VycmVudFZhbHVlKSB7XG4gICAgICAgICAgICBjdXJyZW50VmFsdWUgPSB2YWx1ZVxuICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjb21wdXRlKCkge1xuICAgICAgICBpZiAodHlwZW9mIGV4ZWNPckZuID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZXhlY09yRm4oY3VycmVudFZhbHVlKVxuICAgICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgUHJvbWlzZSkge1xuICAgICAgICAgICAgICAgIHZhbHVlLnRoZW4oc2V0KVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZXQodmFsdWUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBleGVjQXN5bmMoZXhlY09yRm4pLnRoZW4oKHN0ZG91dCkgPT4ge1xuICAgICAgICAgICAgICAgIHNldCh0cmFuc2Zvcm0gPyB0cmFuc2Zvcm0oc3Rkb3V0LCBjdXJyZW50VmFsdWUpIDogKHN0ZG91dCBhcyBUKSlcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzdWJzY3JpYmUoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiAoKSA9PiB2b2lkIHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoY29tcHV0ZSlcbiAgICAgICAgICAgIHRpbWVyID0gc2V0SW50ZXJ2YWwoY29tcHV0ZSwgaXZhbClcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDAgJiYgdGltZXIpIHtcbiAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKHRpbWVyKVxuICAgICAgICAgICAgICAgIHRpbWVyID0gbnVsbFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSlcbn1cbiIsICJpbXBvcnQgeyBNb2R1bGVDb250YWluZXIgfSBmcm9tIFwiLi4vc2hhcmVkL21vZHVsZS1jb250YWluZXJcIlxuaW1wb3J0IHsgY2xvY2tMYWJlbCwgY2xvY2tUb29sdGlwIH0gZnJvbSBcIi4vaGVscGVyc1wiXG5cbmZ1bmN0aW9uIENsb2NrKCkge1xuICByZXR1cm4gKFxuICAgIDxNb2R1bGVDb250YWluZXJcbiAgICAgIGNsYXNzPVwiY2xvY2tcIlxuICAgICAgaWNvbj1cIlx1RThCNVwiXG4gICAgICBsYWJlbD17Y2xvY2tMYWJlbH1cbiAgICAgIHRvb2x0aXBUZXh0PXtjbG9ja1Rvb2x0aXB9XG4gICAgLz5cbiAgKVxufVxuXG5leHBvcnQgeyBDbG9jayB9XG4iLCAiaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCJcbmltcG9ydCBBc3RhbEh5cHJsYW5kIGZyb20gXCJnaTovL0FzdGFsSHlwcmxhbmRcIlxuaW1wb3J0IHsgcmFuZ2UgfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHNcIlxuaW1wb3J0IHsgQ0NQcm9wcywgY3JlYXRlQmluZGluZywgY3JlYXRlQ29tcHV0ZWQgfSBmcm9tIFwiYWdzXCJcblxudHlwZSBXc0J1dHRvblByb3BzID0gUGFydGlhbDxcbiAgQ0NQcm9wczxHdGsuQnV0dG9uLCBHdGsuQnV0dG9uLkNvbnN0cnVjdG9yUHJvcHM+XG4+ICYge1xuICB3czogQXN0YWxIeXBybGFuZC5Xb3Jrc3BhY2Vcbn1cblxuZnVuY3Rpb24gV3NCdXR0b24oeyB3cywgLi4ucHJvcHMgfTogV3NCdXR0b25Qcm9wcykge1xuICBjb25zdCBoeXBybGFuZCA9IEFzdGFsSHlwcmxhbmQuZ2V0X2RlZmF1bHQoKVxuICBjb25zdCBjbGFzc05hbWVzID0gY3JlYXRlQ29tcHV0ZWQoXG4gICAgW1xuICAgICAgY3JlYXRlQmluZGluZyhoeXBybGFuZCwgXCJmb2N1c2VkV29ya3NwYWNlXCIpLFxuICAgICAgY3JlYXRlQmluZGluZyhoeXBybGFuZCwgXCJjbGllbnRzXCIpLFxuICAgIF0sXG4gICAgKGZ3cywgXykgPT4ge1xuICAgICAgY29uc3QgY2xhc3NlcyA9IFtcIndvcmtzcGFjZS1idXR0b25cIl1cbiAgICAgIGNvbnN0IGFjdGl2ZSA9IGZ3cy5pZCA9PSB3cy5pZFxuICAgICAgaWYgKGFjdGl2ZSkgY2xhc3Nlcy5wdXNoKFwiYWN0aXZlXCIpXG4gICAgICBjb25zdCBvY2N1cGllZCA9IGh5cHJsYW5kLmdldF93b3Jrc3BhY2Uod3MuaWQpPy5nZXRfY2xpZW50cygpLmxlbmd0aCA+IDBcbiAgICAgIGlmIChvY2N1cGllZCkgY2xhc3Nlcy5wdXNoKFwib2NjdXBpZWRcIilcbiAgICAgIHJldHVybiBjbGFzc2VzXG4gICAgfSxcbiAgKVxuICByZXR1cm4gKFxuICAgIDxidXR0b25cbiAgICAgIGNzc0NsYXNzZXM9e2NsYXNzTmFtZXN9XG4gICAgICB2YWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICBvbkNsaWNrZWQ9eygpID0+IHdzLmZvY3VzKCl9XG4gICAgICB7Li4ucHJvcHN9XG4gICAgPjwvYnV0dG9uPlxuICApXG59XG5cbmZ1bmN0aW9uIFdvcmtzcGFjZXMoKSB7XG4gIHJldHVybiAoXG4gICAgPGJveCBjc3NDbGFzc2VzPXtbXCJ3b3Jrc3BhY2VzXCJdfSBzcGFjaW5nPXs3fT5cbiAgICAgIHtyYW5nZSg2KS5tYXAoKGkpID0+IChcbiAgICAgICAgPFdzQnV0dG9uIHdzPXtBc3RhbEh5cHJsYW5kLldvcmtzcGFjZS5kdW1teShpICsgMSwgbnVsbCl9IC8+XG4gICAgICApKX1cbiAgICA8L2JveD5cbiAgKVxufVxuXG5leHBvcnQgeyBXb3Jrc3BhY2VzIH1cbiIsICJpbXBvcnQgeyBleGVjQXN5bmMgfSBmcm9tIFwiYWdzL3Byb2Nlc3NcIlxuXG5leHBvcnQgZnVuY3Rpb24gcmFuZ2UobWF4OiBudW1iZXIpIHtcbiAgcmV0dXJuIEFycmF5LmZyb20oeyBsZW5ndGg6IG1heCB9LCAoXywgaSkgPT4gaSlcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNoKGNtZDogc3RyaW5nIHwgc3RyaW5nW10pIHtcbiAgcmV0dXJuIGV4ZWNBc3luYyhjbWQpLmNhdGNoKChlcnIpID0+IHtcbiAgICBjb25zb2xlLmVycm9yKHR5cGVvZiBjbWQgPT09IFwic3RyaW5nXCIgPyBjbWQgOiBjbWQuam9pbihcIiBcIiksIGVycilcbiAgICByZXR1cm4gXCJcIlxuICB9KVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYmFzaChzdHJpbmdzOiBzdHJpbmcgfCBzdHJpbmdbXSwgLi4udmFsdWVzOiB1bmtub3duW10pIHtcbiAgY29uc3QgY21kID1cbiAgICB0eXBlb2Ygc3RyaW5ncyA9PT0gXCJzdHJpbmdcIlxuICAgICAgPyBzdHJpbmdzXG4gICAgICA6IHN0cmluZ3MuZmxhdE1hcCgoc3RyLCBpKSA9PiBzdHIgKyBgJHt2YWx1ZXNbaV0gPz8gXCJcIn1gKS5qb2luKFwiXCIpXG5cbiAgcmV0dXJuIGV4ZWNBc3luYyhbXCJiYXNoXCIsIFwiLWNcIiwgY21kXSkuY2F0Y2goKGVycikgPT4ge1xuICAgIGNvbnNvbGUuZXJyb3IoY21kLCBlcnIpXG4gICAgcmV0dXJuIFwiXCJcbiAgfSlcbn1cblxudHlwZSBOb3RpZlVyZ2VuY3kgPSBcImxvd1wiIHwgXCJub3JtYWxcIiB8IFwiY3JpdGljYWxcIlxuZXhwb3J0IGZ1bmN0aW9uIG5vdGlmeVNlbmQoe1xuICBhcHBOYW1lLFxuICBhcHBJY29uLFxuICB1cmdlbmN5ID0gXCJub3JtYWxcIixcbiAgaW1hZ2UsXG4gIGljb24sXG4gIHN1bW1hcnksXG4gIGJvZHksXG4gIGFjdGlvbnMsXG59OiB7XG4gIGFwcE5hbWU/OiBzdHJpbmdcbiAgYXBwSWNvbj86IHN0cmluZ1xuICB1cmdlbmN5PzogTm90aWZVcmdlbmN5XG4gIGltYWdlPzogc3RyaW5nXG4gIGljb24/OiBzdHJpbmdcbiAgc3VtbWFyeTogc3RyaW5nXG4gIGJvZHk6IHN0cmluZ1xuICBhY3Rpb25zPzoge1xuICAgIFtsYWJlbDogc3RyaW5nXTogKCkgPT4gdm9pZFxuICB9XG59KSB7XG4gIGNvbnN0IGFjdGlvbnNBcnJheSA9IE9iamVjdC5lbnRyaWVzKGFjdGlvbnMgfHwge30pLm1hcChcbiAgICAoW2xhYmVsLCBjYWxsYmFja10sIGkpID0+ICh7XG4gICAgICBpZDogYCR7aX1gLFxuICAgICAgbGFiZWwsXG4gICAgICBjYWxsYmFjayxcbiAgICB9KSxcbiAgKVxuICBleGVjQXN5bmMoXG4gICAgW1xuICAgICAgXCJub3RpZnktc2VuZFwiLFxuICAgICAgYC11ICR7dXJnZW5jeX1gLFxuICAgICAgYXBwSWNvbiAmJiBgLWkgJHthcHBJY29ufWAsXG4gICAgICBgLWggXCJzdHJpbmc6aW1hZ2UtcGF0aDokeyEhaWNvbiA/IGljb24gOiBpbWFnZX1cImAsXG4gICAgICBgXCIke3N1bW1hcnkgPz8gXCJcIn1cImAsXG4gICAgICBgXCIke2JvZHkgPz8gXCJcIn1cImAsXG4gICAgICBgLWEgXCIke2FwcE5hbWUgPz8gXCJcIn1cImAsXG4gICAgICAuLi5hY3Rpb25zQXJyYXkubWFwKCh2KSA9PiBgLS1hY3Rpb249XFxcIiR7di5pZH09JHt2LmxhYmVsfVxcXCJgKSxcbiAgICBdLmpvaW4oXCIgXCIpLFxuICApXG4gICAgLnRoZW4oKG91dCkgPT4ge1xuICAgICAgaWYgKCFpc05hTihOdW1iZXIob3V0LnRyaW0oKSkpICYmIG91dC50cmltKCkgIT09IFwiXCIpIHtcbiAgICAgICAgYWN0aW9uc0FycmF5W3BhcnNlSW50KG91dCldLmNhbGxiYWNrKClcbiAgICAgIH1cbiAgICB9KVxuICAgIC5jYXRjaChjb25zb2xlLmVycm9yKVxufVxuIiwgImV4cG9ydCBjb25zdCBpY29ucyA9IHtcbiAgbXV0ZWQ6IFwiXHVFMDRGXCIsXG4gIGxvdzogXCJcdUUwNERcIixcbiAgaGlnaDogXCJcdUUwNTBcIixcbiAgb3ZlcmFtcGxpZmllZDogXCJcdUU5OEVcIixcbn1cblxuZXhwb3J0IGNvbnN0IHRocmVzaG9sZHMgPSB7XG4gIDEwMTogXCJvdmVyYW1wbGlmaWVkXCIsXG4gIDUxOiBcImhpZ2hcIixcbiAgMTogXCJsb3dcIixcbiAgMDogXCJtdXRlZFwiLFxufVxuIiwgImltcG9ydCB7IGNyZWF0ZUNvbXB1dGVkLCBjcmVhdGVCaW5kaW5nIH0gZnJvbSBcImFnc1wiXG5pbXBvcnQgeyBpY29ucywgdGhyZXNob2xkcyB9IGZyb20gXCIuL2NvbnN0YW50c1wiXG5pbXBvcnQgQXN0YWxXcCBmcm9tIFwiZ2k6Ly9Bc3RhbFdwXCJcblxuY29uc3Qgc3BlYWtlciA9IEFzdGFsV3AuZ2V0X2RlZmF1bHQoKT8uYXVkaW8hLmRlZmF1bHRfc3BlYWtlclxuXG5mdW5jdGlvbiBnZXRWb2x1bWVJY29uKHZvbHVtZTogbnVtYmVyLCBtdXRlOiBib29sZWFuKSB7XG4gIGNvbnN0IGljb24gPSBtdXRlID8gMCA6IFsxMDEsIDUxLCAxLCAwXS5maW5kKCh0cykgPT4gdHMgPD0gdm9sdW1lICogMTAwKVxuICByZXR1cm4gaWNvblxuICAgID8gaWNvbnNbdGhyZXNob2xkc1tpY29uIGFzIGtleW9mIHR5cGVvZiB0aHJlc2hvbGRzXSBhcyBrZXlvZiB0eXBlb2YgaWNvbnNdXG4gICAgOiBpY29ucy5tdXRlZFxufVxuXG5leHBvcnQgY29uc3Qgdm9sdW1lSWNvbiA9IGNyZWF0ZUNvbXB1dGVkKFxuICBbY3JlYXRlQmluZGluZyhzcGVha2VyLCBcInZvbHVtZVwiKSwgY3JlYXRlQmluZGluZyhzcGVha2VyLCBcIm11dGVcIildLFxuICAodm9sdW1lLCBtdXRlKSA9PiBnZXRWb2x1bWVJY29uKHZvbHVtZSwgbXV0ZSksXG4pXG5cbmV4cG9ydCBjb25zdCB2b2x1bWVWYWx1ZSA9IGNyZWF0ZUJpbmRpbmcoc3BlYWtlciwgXCJ2b2x1bWVcIikuYXMoKHZhbHVlKSA9PiB7XG4gIHJldHVybiAoXG4gICAgTWF0aC5mbG9vcih2YWx1ZSAqIDEwMClcbiAgICAgIC50b1N0cmluZygpXG4gICAgICAucGFkU3RhcnQoMywgXCIwXCIpICsgXCIlXCJcbiAgKVxufSlcbiIsICJpbXBvcnQgeyBNb2R1bGVDb250YWluZXIgfSBmcm9tIFwiLi4vc2hhcmVkL21vZHVsZS1jb250YWluZXJcIlxuaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCJcbmltcG9ydCB7IHZvbHVtZUljb24sIHZvbHVtZVZhbHVlIH0gZnJvbSBcIi4vaGVscGVyc1wiXG5pbXBvcnQgQXN0YWxXcCBmcm9tIFwiZ2k6Ly9Bc3RhbFdwXCJcbmltcG9ydCB7IGJhc2ggfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHNcIlxuXG5mdW5jdGlvbiBWb2x1bWUoKSB7XG4gIGNvbnN0IHNwZWFrZXIgPSBBc3RhbFdwLmdldF9kZWZhdWx0KCk/LmF1ZGlvIS5kZWZhdWx0X3NwZWFrZXJcblxuICBmdW5jdGlvbiBvbl9zY3JvbGwoXzogR3RrLkJ1dHRvbiwgX186IEd0ay5FdmVudENvbnRyb2xsZXJTY3JvbGwsIGR4OiBudW1iZXIpIHtcbiAgICBpZiAoZHggPiAwKSB7XG4gICAgICBzcGVha2VyLnNldF92b2x1bWUoc3BlYWtlci52b2x1bWUgLSAwLjAxKVxuICAgIH1cbiAgICBpZiAoZHggPCAwKSB7XG4gICAgICBzcGVha2VyLnNldF92b2x1bWUoc3BlYWtlci52b2x1bWUgKyAwLjAxKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPE1vZHVsZUNvbnRhaW5lclxuICAgICAgY2xhc3M9XCJ2b2x1bWVcIlxuICAgICAgaWNvbj17dm9sdW1lSWNvbn1cbiAgICAgIGxhYmVsPXt2b2x1bWVWYWx1ZX1cbiAgICAgIG9uQ2xpY2tlZD17KCkgPT4gYmFzaChcInBhdnVjb250cm9sXCIpfVxuICAgICAgJD17KHNlbGYpID0+IHtcbiAgICAgICAgY29uc3Qgc2Nyb2xsX2V2ZW50ID0gR3RrLkV2ZW50Q29udHJvbGxlclNjcm9sbC5uZXcoXG4gICAgICAgICAgR3RrLkV2ZW50Q29udHJvbGxlclNjcm9sbEZsYWdzLlZFUlRJQ0FMLFxuICAgICAgICApXG4gICAgICAgIHNjcm9sbF9ldmVudC5jb25uZWN0KFwic2Nyb2xsXCIsIG9uX3Njcm9sbClcbiAgICAgICAgc2VsZi5hZGRfY29udHJvbGxlcihzY3JvbGxfZXZlbnQpXG4gICAgICB9fVxuICAgIC8+XG4gIClcbn1cblxuZXhwb3J0IHsgVm9sdW1lIH1cbiIsICJpbXBvcnQgeyBjcmVhdGVCaW5kaW5nLCBGb3IgfSBmcm9tIFwiYWdzXCJcbmltcG9ydCB7IEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiXG5pbXBvcnQgQXN0YWxUcmF5IGZyb20gXCJnaTovL0FzdGFsVHJheVwiXG5cbmZ1bmN0aW9uIFN5c3RyYXkoKSB7XG4gIGNvbnN0IHRyYXkgPSBBc3RhbFRyYXkuZ2V0X2RlZmF1bHQoKVxuICBjb25zdCBpdGVtcyA9IGNyZWF0ZUJpbmRpbmcodHJheSwgXCJpdGVtc1wiKVxuXG4gIHJldHVybiAoXG4gICAgPGJveCBjbGFzcz1cInN5c3RyYXlcIiBzcGFjaW5nPXsyfT5cbiAgICAgIDxGb3IgZWFjaD17aXRlbXN9PlxuICAgICAgICB7KGl0ZW0pID0+IChcbiAgICAgICAgICA8bWVudWJ1dHRvblxuICAgICAgICAgICAgY2xhc3M9XCJidXR0b25cIlxuICAgICAgICAgICAgJD17KHNlbGY6IEd0ay5NZW51QnV0dG9uKSA9PiB7XG4gICAgICAgICAgICAgIHNlbGYuaW5zZXJ0X2FjdGlvbl9ncm91cChcImRidXNtZW51XCIsIGl0ZW0uYWN0aW9uR3JvdXApXG4gICAgICAgICAgICB9fVxuICAgICAgICAgICAgdG9vbHRpcFRleHQ9e2NyZWF0ZUJpbmRpbmcoaXRlbSwgXCJ0b29sdGlwTWFya3VwXCIpfVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxpbWFnZSBjbGFzcz1cImJ1dHRvbi1pY29uXCIgZ2ljb249e2NyZWF0ZUJpbmRpbmcoaXRlbSwgXCJnaWNvblwiKX0gLz5cbiAgICAgICAgICAgIHtHdGsuUG9wb3Zlck1lbnUubmV3X2Zyb21fbW9kZWwoaXRlbS5tZW51TW9kZWwpfVxuICAgICAgICAgIDwvbWVudWJ1dHRvbj5cbiAgICAgICAgKX1cbiAgICAgIDwvRm9yPlxuICAgIDwvYm94PlxuICApXG59XG5cbmV4cG9ydCB7IFN5c3RyYXkgfVxuIiwgImltcG9ydCB7IGJhc2ggfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHNcIlxuaW1wb3J0IHsgTW9kdWxlQ29udGFpbmVyIH0gZnJvbSBcIi4uL3NoYXJlZC9tb2R1bGUtY29udGFpbmVyXCJcblxuZnVuY3Rpb24gRXhpdEJ1dHRvbigpIHtcbiAgcmV0dXJuIChcbiAgICA8TW9kdWxlQ29udGFpbmVyXG4gICAgICBjbGFzcz1cImV4aXQtYnV0dG9uXCJcbiAgICAgIGljb249XCJcdUU4NzlcIlxuICAgICAgbGFiZWw9XCJFeGl0XCJcbiAgICAgIG9uQ2xpY2tlZD17KCkgPT4gYmFzaChcIn4vLmNvbmZpZy9oeXByL3NjcmlwdHMvZG1lbnUuc2ggcXVpdFwiKX1cbiAgICAvPlxuICApXG59XG5cbmV4cG9ydCB7IEV4aXRCdXR0b24gfVxuIiwgImltcG9ydCBhcHAgZnJvbSBcImFncy9ndGs0L2FwcFwiXG5pbXBvcnQgeyBBc3RhbCwgR2RrLCBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIlxuaW1wb3J0IHsgQ2xvY2sgfSBmcm9tIFwiLi9jbG9ja1wiXG5pbXBvcnQgeyBXb3Jrc3BhY2VzIH0gZnJvbSBcIi4vd29ya3NwYWNlc1wiXG5pbXBvcnQgeyBWb2x1bWUgfSBmcm9tIFwiLi92b2x1bWVcIlxuLy8gaW1wb3J0IHsgTmV0d29yayB9IGZyb20gXCIuL25ldHdvcmtcIlxuLy8gaW1wb3J0IHsgTmV0c3RhdHMgfSBmcm9tIFwiLi9uZXRzdGF0c1wiXG5pbXBvcnQgeyBTeXN0cmF5IH0gZnJvbSBcIi4vc3lzdHJheVwiXG5pbXBvcnQgeyBFeGl0QnV0dG9uIH0gZnJvbSBcIi4vZXhpdC1idXR0b25cIlxuXG5leHBvcnQgZnVuY3Rpb24gQmFyKGdka21vbml0b3I6IEdkay5Nb25pdG9yKSB7XG4gIGNvbnN0IHsgQk9UVE9NLCBMRUZULCBSSUdIVCB9ID0gQXN0YWwuV2luZG93QW5jaG9yXG5cbiAgcmV0dXJuIChcbiAgICA8d2luZG93XG4gICAgICB2aXNpYmxlXG4gICAgICBuYW1lPVwiYmFyXCJcbiAgICAgIGNsYXNzPVwiQmFyXCJcbiAgICAgIGdka21vbml0b3I9e2dka21vbml0b3J9XG4gICAgICBleGNsdXNpdml0eT17QXN0YWwuRXhjbHVzaXZpdHkuRVhDTFVTSVZFfVxuICAgICAgYW5jaG9yPXtCT1RUT00gfCBMRUZUIHwgUklHSFR9XG4gICAgICBhcHBsaWNhdGlvbj17YXBwfVxuICAgID5cbiAgICAgIDxjZW50ZXJib3ggY3NzQ2xhc3Nlcz17W1wiYmFyLWNvbnRhaW5lclwiXX0+XG4gICAgICAgIDxib3ggJHR5cGU9XCJzdGFydFwiIGhhbGlnbj17R3RrLkFsaWduLlNUQVJUfSBzcGFjaW5nPXs4fT5cbiAgICAgICAgICA8V29ya3NwYWNlcyAvPlxuICAgICAgICA8L2JveD5cbiAgICAgICAgPGJveCAkdHlwZT1cImVuZFwiIGhhbGlnbj17R3RrLkFsaWduLkVORH0gc3BhY2luZz17OH0+XG4gICAgICAgICAgPFN5c3RyYXkgLz5cbiAgICAgICAgICA8Vm9sdW1lIC8+XG4gICAgICAgICAgPENsb2NrIC8+XG4gICAgICAgICAgPEV4aXRCdXR0b24gLz5cbiAgICAgICAgPC9ib3g+XG4gICAgICA8L2NlbnRlcmJveD5cbiAgICA8L3dpbmRvdz5cbiAgKVxufVxuIiwgImltcG9ydCBhcHAgZnJvbSBcImFncy9ndGs0L2FwcFwiXG5pbXBvcnQgeyBBc3RhbCwgR3RrIH0gZnJvbSBcImFncy9ndGs0XCJcbmltcG9ydCBBc3RhbE5vdGlmZCBmcm9tIFwiZ2k6Ly9Bc3RhbE5vdGlmZFwiXG5pbXBvcnQgeyBOb3RpZmljYXRpb24gfSBmcm9tIFwiLi9ub3RpZmljYXRpb25cIlxuaW1wb3J0IHsgY3JlYXRlQmluZGluZywgRm9yLCBjcmVhdGVTdGF0ZSwgb25DbGVhbnVwIH0gZnJvbSBcImFnc1wiXG5cbmZ1bmN0aW9uIE5vdGlmaWNhdGlvblBvcHVwcygpIHtcbiAgY29uc3QgbW9uaXRvcnMgPSBjcmVhdGVCaW5kaW5nKGFwcCwgXCJtb25pdG9yc1wiKVxuXG4gIGNvbnN0IG5vdGlmZCA9IEFzdGFsTm90aWZkLmdldF9kZWZhdWx0KClcblxuICBjb25zdCBbbm90aWZpY2F0aW9ucywgc2V0Tm90aWZpY2F0aW9uc10gPSBjcmVhdGVTdGF0ZShcbiAgICBuZXcgQXJyYXk8QXN0YWxOb3RpZmQuTm90aWZpY2F0aW9uPigpLFxuICApXG5cbiAgY29uc3Qgbm90aWZpZWRIYW5kbGVyID0gbm90aWZkLmNvbm5lY3QoXCJub3RpZmllZFwiLCAoXywgaWQsIHJlcGxhY2VkKSA9PiB7XG4gICAgY29uc3Qgbm90aWZpY2F0aW9uID0gbm90aWZkLmdldF9ub3RpZmljYXRpb24oaWQpXG5cbiAgICBpZiAocmVwbGFjZWQgJiYgbm90aWZpY2F0aW9ucy5nZXQoKS5zb21lKChuKSA9PiBuLmlkID09PSBpZCkpIHtcbiAgICAgIHNldE5vdGlmaWNhdGlvbnMoKG5zKSA9PiBucy5tYXAoKG4pID0+IChuLmlkID09PSBpZCA/IG5vdGlmaWNhdGlvbiA6IG4pKSlcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0Tm90aWZpY2F0aW9ucygobnMpID0+IFtub3RpZmljYXRpb24sIC4uLm5zXSlcbiAgICB9XG4gIH0pXG5cbiAgY29uc3QgcmVzb2x2ZWRIYW5kbGVyID0gbm90aWZkLmNvbm5lY3QoXCJyZXNvbHZlZFwiLCAoXywgaWQpID0+IHtcbiAgICBzZXROb3RpZmljYXRpb25zKChucykgPT4gbnMuZmlsdGVyKChuKSA9PiBuLmlkICE9PSBpZCkpXG4gIH0pXG5cbiAgb25DbGVhbnVwKCgpID0+IHtcbiAgICBub3RpZmQuZGlzY29ubmVjdChub3RpZmllZEhhbmRsZXIpXG4gICAgbm90aWZkLmRpc2Nvbm5lY3QocmVzb2x2ZWRIYW5kbGVyKVxuICB9KVxuXG4gIHJldHVybiAoXG4gICAgPEZvciBlYWNoPXttb25pdG9yc30+XG4gICAgICB7KG1vbml0b3IpID0+IChcbiAgICAgICAgPHdpbmRvd1xuICAgICAgICAgICQ9eyhzZWxmKSA9PiBvbkNsZWFudXAoKCkgPT4gc2VsZi5kZXN0cm95KCkpfVxuICAgICAgICAgIGNsYXNzPVwibm90aWZpY2F0aW9uLXBvcHVwc1wiXG4gICAgICAgICAgZ2RrbW9uaXRvcj17bW9uaXRvcn1cbiAgICAgICAgICB2aXNpYmxlPXtub3RpZmljYXRpb25zKChucykgPT4gbnMubGVuZ3RoID4gMCl9XG4gICAgICAgICAgYW5jaG9yPXtBc3RhbC5XaW5kb3dBbmNob3IuQk9UVE9NIHwgQXN0YWwuV2luZG93QW5jaG9yLlJJR0hUfVxuICAgICAgICA+XG4gICAgICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgIDxGb3IgZWFjaD17bm90aWZpY2F0aW9uc30+XG4gICAgICAgICAgICAgIHsobm90aWZpY2F0aW9uKSA9PiA8Tm90aWZpY2F0aW9uIG5vdGlmaWNhdGlvbj17bm90aWZpY2F0aW9ufSAvPn1cbiAgICAgICAgICAgIDwvRm9yPlxuICAgICAgICAgIDwvYm94PlxuICAgICAgICA8L3dpbmRvdz5cbiAgICAgICl9XG4gICAgPC9Gb3I+XG4gIClcbn1cblxuZXhwb3J0IHsgTm90aWZpY2F0aW9uUG9wdXBzIH1cbiIsICJpbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR2RrIGZyb20gXCJnaTovL0dkaz92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgQWR3IGZyb20gXCJnaTovL0Fkd1wiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliXCJcbmltcG9ydCBBc3RhbE5vdGlmZCBmcm9tIFwiZ2k6Ly9Bc3RhbE5vdGlmZFwiXG5pbXBvcnQgUGFuZ28gZnJvbSBcImdpOi8vUGFuZ29cIlxuXG5mdW5jdGlvbiBpc0ljb24oaWNvbj86IHN0cmluZyB8IG51bGwpIHtcbiAgY29uc3QgaWNvblRoZW1lID0gR3RrLkljb25UaGVtZS5nZXRfZm9yX2Rpc3BsYXkoR2RrLkRpc3BsYXkuZ2V0X2RlZmF1bHQoKSEpXG4gIHJldHVybiBpY29uICYmIGljb25UaGVtZS5oYXNfaWNvbihpY29uKVxufVxuXG5mdW5jdGlvbiBmaWxlRXhpc3RzKHBhdGg6IHN0cmluZykge1xuICByZXR1cm4gR0xpYi5maWxlX3Rlc3QocGF0aCwgR0xpYi5GaWxlVGVzdC5FWElTVFMpXG59XG5cbmZ1bmN0aW9uIHRpbWUodGltZTogbnVtYmVyLCBmb3JtYXQgPSBcIiVIOiVNXCIpIHtcbiAgcmV0dXJuIEdMaWIuRGF0ZVRpbWUubmV3X2Zyb21fdW5peF9sb2NhbCh0aW1lKS5mb3JtYXQoZm9ybWF0KSFcbn1cblxuZnVuY3Rpb24gdXJnZW5jeShuOiBBc3RhbE5vdGlmZC5Ob3RpZmljYXRpb24pIHtcbiAgY29uc3QgeyBMT1csIE5PUk1BTCwgQ1JJVElDQUwgfSA9IEFzdGFsTm90aWZkLlVyZ2VuY3lcbiAgc3dpdGNoIChuLnVyZ2VuY3kpIHtcbiAgICBjYXNlIExPVzpcbiAgICAgIHJldHVybiBcImxvd1wiXG4gICAgY2FzZSBDUklUSUNBTDpcbiAgICAgIHJldHVybiBcImNyaXRpY2FsXCJcbiAgICBjYXNlIE5PUk1BTDpcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIFwibm9ybWFsXCJcbiAgfVxufVxuXG5pbnRlcmZhY2UgTm90aWZpY2F0aW9uUHJvcHMge1xuICBub3RpZmljYXRpb246IEFzdGFsTm90aWZkLk5vdGlmaWNhdGlvblxufVxuXG5mdW5jdGlvbiBOb3RpZmljYXRpb24oeyBub3RpZmljYXRpb246IG4gfTogTm90aWZpY2F0aW9uUHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICA8QWR3LkNsYW1wIG1heGltdW1TaXplPXs0MDB9PlxuICAgICAgPGJveFxuICAgICAgICB3aWR0aFJlcXVlc3Q9ezQwMH1cbiAgICAgICAgY2xhc3M9e2Bub3RpZmljYXRpb24gJHt1cmdlbmN5KG4pfWB9XG4gICAgICAgIG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9XG4gICAgICA+XG4gICAgICAgIDxib3ggY2xhc3M9XCJoZWFkZXJcIj5cbiAgICAgICAgICB7KG4uYXBwSWNvbiB8fCBpc0ljb24obi5kZXNrdG9wRW50cnkpKSAmJiAoXG4gICAgICAgICAgICA8aW1hZ2VcbiAgICAgICAgICAgICAgY2xhc3M9XCJhcHAtaWNvblwiXG4gICAgICAgICAgICAgIHZpc2libGU9e0Jvb2xlYW4obi5hcHBJY29uIHx8IG4uZGVza3RvcEVudHJ5KX1cbiAgICAgICAgICAgICAgaWNvbk5hbWU9e24uYXBwSWNvbiB8fCBuLmRlc2t0b3BFbnRyeX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgIGNsYXNzPVwiYXBwLW5hbWVcIlxuICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uU1RBUlR9XG4gICAgICAgICAgICBlbGxpcHNpemU9e1BhbmdvLkVsbGlwc2l6ZU1vZGUuRU5EfVxuICAgICAgICAgICAgbGFiZWw9e24uYXBwTmFtZSB8fCBcIlVua25vd25cIn1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgY2xhc3M9XCJ0aW1lXCJcbiAgICAgICAgICAgIGhleHBhbmRcbiAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkVORH1cbiAgICAgICAgICAgIGxhYmVsPXt0aW1lKG4udGltZSl9XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2tlZD17KCkgPT4gbi5kaXNtaXNzKCl9PlxuICAgICAgICAgICAgPGltYWdlIGljb25OYW1lPVwid2luZG93LWNsb3NlLXN5bWJvbGljXCIgLz5cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9ib3g+XG4gICAgICAgIDxHdGsuU2VwYXJhdG9yIHZpc2libGUgLz5cbiAgICAgICAgPGJveCBjbGFzcz1cImNvbnRlbnRcIj5cbiAgICAgICAgICB7bi5pbWFnZSAmJiBmaWxlRXhpc3RzKG4uaW1hZ2UpICYmIChcbiAgICAgICAgICAgIDxpbWFnZSB2YWxpZ249e0d0ay5BbGlnbi5TVEFSVH0gY2xhc3M9XCJpbWFnZVwiIGZpbGU9e24uaW1hZ2V9IC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgICB7bi5pbWFnZSAmJiBpc0ljb24obi5pbWFnZSkgJiYgKFxuICAgICAgICAgICAgPGJveCB2YWxpZ249e0d0ay5BbGlnbi5TVEFSVH0gY2xhc3M9XCJpY29uLWltYWdlXCI+XG4gICAgICAgICAgICAgIDxpbWFnZVxuICAgICAgICAgICAgICAgIGljb25OYW1lPXtuLmltYWdlfVxuICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgICAgICB2YWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICApfVxuICAgICAgICAgIDxib3ggb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgY2xhc3M9XCJzdW1tYXJ5XCJcbiAgICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uU1RBUlR9XG4gICAgICAgICAgICAgIHhhbGlnbj17MH1cbiAgICAgICAgICAgICAgbGFiZWw9e24uc3VtbWFyeX1cbiAgICAgICAgICAgICAgZWxsaXBzaXplPXtQYW5nby5FbGxpcHNpemVNb2RlLkVORH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICB7bi5ib2R5ICYmIChcbiAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJib2R5XCJcbiAgICAgICAgICAgICAgICB3cmFwXG4gICAgICAgICAgICAgICAgdXNlTWFya3VwXG4gICAgICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uU1RBUlR9XG4gICAgICAgICAgICAgICAgeGFsaWduPXswfVxuICAgICAgICAgICAgICAgIGp1c3RpZnk9e0d0ay5KdXN0aWZpY2F0aW9uLkZJTEx9XG4gICAgICAgICAgICAgICAgbGFiZWw9e24uYm9keX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9ib3g+XG4gICAgICAgIDwvYm94PlxuICAgICAgICB7bi5hY3Rpb25zLmxlbmd0aCA+IDAgJiYgKFxuICAgICAgICAgIDxib3ggY2xhc3M9XCJhY3Rpb25zXCI+XG4gICAgICAgICAgICB7bi5hY3Rpb25zLm1hcCgoeyBsYWJlbCwgaWQgfSkgPT4gKFxuICAgICAgICAgICAgICA8YnV0dG9uIGhleHBhbmQgb25DbGlja2VkPXsoKSA9PiBuLmludm9rZShpZCl9PlxuICAgICAgICAgICAgICAgIDxsYWJlbCBsYWJlbD17bGFiZWx9IGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn0gaGV4cGFuZCAvPlxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvYm94PlxuICAgICAgICApfVxuICAgICAgPC9ib3g+XG4gICAgPC9BZHcuQ2xhbXA+XG4gIClcbn1cblxuZXhwb3J0IHsgTm90aWZpY2F0aW9uIH1cbiIsICJpbXBvcnQgYXBwIGZyb20gXCJhZ3MvZ3RrNC9hcHBcIlxuaW1wb3J0IHN0eWxlcyBmcm9tIFwiLi9zdHlsZXMvc3R5bGVzLnNjc3NcIlxuaW1wb3J0IHsgQmFyIH0gZnJvbSBcIi4vY29tcG9uZW50cy9iYXJcIlxuaW1wb3J0IHsgTm90aWZpY2F0aW9uUG9wdXBzIH0gZnJvbSBcIi4vY29tcG9uZW50cy9ub3RpZmljYXRpb25zXCJcbmltcG9ydCB7IG5vdGlmeVNlbmQgfSBmcm9tIFwiLi91dGlsc1wiXG5cbmFwcC5zdGFydCh7XG4gIGNzczogc3R5bGVzLFxuICBtYWluKCkge1xuICAgIGFwcC5nZXRfbW9uaXRvcnMoKS5tYXAoQmFyKVxuICAgIE5vdGlmaWNhdGlvblBvcHVwcygpXG5cbiAgICAvLyBub3RpZnlTZW5kKHtcbiAgICAvLyAgIGFwcE5hbWU6IFwiZm9vdFwiLFxuICAgIC8vICAgYXBwSWNvbjogXCJmb290XCIsXG4gICAgLy8gICBzdW1tYXJ5OiBcIkhlbGxvIGZyb20gZm9vdFwiLFxuICAgIC8vICAgYm9keTogXCJUaGlzIGlzIGEgYm9keSBub3RpZmljYXRpb24uXCIsXG4gICAgLy8gICBhY3Rpb25zOiB7XG4gICAgLy8gICAgIFllczogKCkgPT4ge30sXG4gICAgLy8gICAgIE5vOiAoKSA9PiB7fSxcbiAgICAvLyAgICAgTGF0ZXI6ICgpID0+IHt9LFxuICAgIC8vICAgfSxcbiAgICAvLyB9KVxuICB9LFxufSlcbiJdLAogICJtYXBwaW5ncyI6ICI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTUEsU0FBUyxTQUFTLEtBQWE7QUFDM0IsU0FBTyxJQUNGLFFBQVEsbUJBQW1CLE9BQU8sRUFDbEMsV0FBVyxLQUFLLEdBQUcsRUFDbkIsWUFBWTtBQUNyQjtBQUVBLGVBQWUsU0FBWSxLQUE4QkEsUUFBdUI7QUFDNUUsU0FBTyxJQUFJLEtBQUssQ0FBQyxNQUFNQSxPQUFNLEVBQUUsT0FBTyxDQUFDLEVBQUUsTUFBTSxNQUFNLE1BQU07QUFDL0Q7QUFFQSxTQUFTLE1BQXdCLE9BQVUsTUFBZ0M7QUFDdkUsU0FBTyxlQUFlLE9BQU8sTUFBTTtBQUFBLElBQy9CLE1BQU07QUFDRixhQUFPLEtBQUssT0FBTyxTQUFTLElBQUksQ0FBQyxFQUFFLEVBQUU7QUFBQSxJQUN6QztBQUFBLEVBQ0osQ0FBQztBQUNMO0FBRUEsTUFBTSxTQUFTLE9BQU8sZ0JBQWdCLEdBQUcsQ0FBQyxFQUFF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LFVBQ2hDLDhCQUFDLE9BQUksTUFBTSxlQUNSLFdBQUMsaUJBQWlCLG9CQUFDLGdCQUFhLGNBQTRCLEdBQy9ELEdBQ0Y7QUFBQTtBQUFBLEVBQ0YsR0FFSjtBQUVKOzs7QUUvQ0EsWUFBSSxNQUFNO0FBQUEsRUFDUixLQUFLO0FBQUEsRUFDTCxPQUFPO0FBQ0wsZ0JBQUksYUFBYSxFQUFFLElBQUksR0FBRztBQUMxQix1QkFBbUI7QUFBQSxFQWFyQjtBQUNGLENBQUM7IiwKICAibmFtZXMiOiBbInBhdGNoIiwgIk5vdGlmaWNhdGlvbiIsICJzbmFrZWlmeSIsICJzbmFrZWlmeSIsICJnZXR0ZXIiLCAic2V0dGVyIiwgInNldCIsICJzaWduYWxOYW1lIiwgInNpZ25hbCIsICJHTGliIiwgIkdpbyIsICJHTGliIiwgIkdPYmplY3QiLCAiR0xpYiIsICJHT2JqZWN0IiwgInNpZ25hbCIsICJ2YWx1ZSIsICJ0aW1lb3V0IiwgInNldCIsICJuYW1lIiwgImFyZ3MiLCAiX2EiLCAiYXBwIiwgIkdPYmplY3QiLCAiR09iamVjdCIsICJfYSIsICJzaWduYWwiLCAiR09iamVjdCIsICJHaW8iLCAiR0xpYiIsICJHT2JqZWN0IiwgInNldCIsICJ2YWx1ZSIsICJuZXdWYWx1ZSIsICJHaW8iLCAiZ2V0dGVyIiwgIkdPYmplY3QiLCAia2V5IiwgIm9iamVjdCIsICJyZW1vdmUiLCAiR09iamVjdCIsICJHTGliIiwgIkFkdyIsICJfY3Vyc29yVGhlbWVfZGVjIiwgIl9pY29uVGhlbWVfZGVjIiwgIl9ndGtUaGVtZV9kZWMiLCAiX2EiLCAiX2luaXQiLCAiR2lvIiwgIl8iLCAiaWNvbnMiLCAic2lnbmFsIiwgIkd0ayIsICJHZGsiLCAiR3RrIiwgIkFzdGFsIiwgIkd0ayIsICJHaW8iLCAiR3RrIiwgInNldHRlciIsICJjc3MiLCAiR2lvIiwgIkd0ayIsICJBc3RhbCIsICJHTGliIiwgIkdpbyIsICJHTGliIiwgIl9hIiwgIl9pbml0IiwgIkdpbyIsICJzaWduYWwiLCAiR0xpYiIsICJfYSIsICJfaW5pdCIsICJpbnRlcnZhbCIsICJzaWduYWwiLCAic2V0IiwgIkdMaWIiLCAiR3RrIiwgIkFzdGFsV3AiLCAic3BlYWtlciIsICJBc3RhbFdwIiwgIkd0ayIsICJHdGsiLCAiR3RrIiwgIkFzdGFsTm90aWZkIiwgIkd0ayIsICJHZGsiLCAiR0xpYiIsICJHdGsiLCAiR2RrIiwgIkdMaWIiLCAidGltZSIsICJBc3RhbE5vdGlmZCIsICJHdGsiXQp9Cg==

EOF

LD_PRELOAD="/usr/lib/libgtk4-layer-shell.so" /usr/bin/gjs -m $file $@