#!/usr/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/dmFyIF-ags.js"

cat <<EOF | base64 --decode > $file
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __knownSymbol = (name, symbol) => (symbol = Symbol[name]) ? symbol : Symbol.for("Symbol." + name);
var __typeError = (msg) => {
  throw TypeError(msg);
};
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __decoratorStart = (base) => [, , , __create(base?.[__knownSymbol("metadata")] ?? null)];
var __decoratorStrings = ["class", "method", "getter", "setter", "accessor", "field", "value", "get", "set"];
var __expectFn = (fn) => fn !== void 0 && typeof fn !== "function" ? __typeError("Function expected") : fn;
var __decoratorContext = (kind, name, done, metadata, fns) => ({ kind: __decoratorStrings[kind], name, metadata, addInitializer: (fn) => done._ ? __typeError("Already initialized") : fns.push(__expectFn(fn || null)) });
var __decoratorMetadata = (array, target) => __defNormalProp(target, __knownSymbol("metadata"), array[3]);
var __runInitializers = (array, flags, self, value) => {
  for (var i = 0, fns = array[flags >> 1], n = fns && fns.length; i < n; i++) flags & 1 ? fns[i].call(self) : value = fns[i].call(self, value);
  return value;
};
var __decorateElement = (array, flags, name, decorators, target, extra) => {
  var fn, it, done, ctx, access, k = flags & 7, s = !!(flags & 8), p = !!(flags & 16);
  var j = k > 3 ? array.length + 1 : k ? s ? 1 : 2 : 0, key = __decoratorStrings[k + 5];
  var initializers = k > 3 && (array[j - 1] = []), extraInitializers = array[j] || (array[j] = []);
  var desc = k && (!p && !s && (target = target.prototype), k < 5 && (k > 3 || !p) && __getOwnPropDesc(k < 4 ? target : { get [name]() {
    return __privateGet(this, extra);
  }, set [name](x) {
    return __privateSet(this, extra, x);
  } }, name));
  k ? p && k < 4 && __name(extra, (k > 2 ? "set " : k > 1 ? "get " : "") + name) : __name(target, name);
  for (var i = decorators.length - 1; i >= 0; i--) {
    ctx = __decoratorContext(k, name, done = {}, array[3], extraInitializers);
    if (k) {
      ctx.static = s, ctx.private = p, access = ctx.access = { has: p ? (x) => __privateIn(target, x) : (x) => name in x };
      if (k ^ 3) access.get = p ? (x) => (k ^ 1 ? __privateGet : __privateMethod)(x, target, k ^ 4 ? extra : desc.get) : (x) => x[name];
      if (k > 2) access.set = p ? (x, y) => __privateSet(x, target, y, k ^ 4 ? extra : desc.set) : (x, y) => x[name] = y;
    }
    it = (0, decorators[i])(k ? k < 4 ? p ? extra : desc[key] : k > 4 ? void 0 : { get: desc.get, set: desc.set } : target, ctx), done._ = 1;
    if (k ^ 4 || it === void 0) __expectFn(it) && (k > 4 ? initializers.unshift(it) : k ? p ? extra = it : desc[key] = it : target = it);
    else if (typeof it !== "object" || it === null) __typeError("Object expected");
    else __expectFn(fn = it.get) && (desc.get = fn), __expectFn(fn = it.set) && (desc.set = fn), __expectFn(fn = it.init) && initializers.unshift(fn);
  }
  return k || __decoratorMetadata(array, target), desc && __defProp(target, name, desc), p ? k ^ 4 ? extra : desc : target;
};
var __accessCheck = (obj, member, msg) => member.has(obj) || __typeError("Cannot " + msg);
var __privateIn = (member, obj) => Object(obj) !== obj ? __typeError('Cannot use the "in" operator on this value') : member.has(obj);
var __privateGet = (obj, member, getter2) => (__accessCheck(obj, member, "read from private field"), getter2 ? getter2.call(obj) : member.get(obj));
var __privateAdd = (obj, member, value) => member.has(obj) ? __typeError("Cannot add the same private member more than once") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
var __privateSet = (obj, member, value, setter2) => (__accessCheck(obj, member, "write to private field"), setter2 ? setter2.call(obj, value) : member.set(obj, value), value);
var __privateMethod = (obj, member, method) => (__accessCheck(obj, member, "access private method"), method);

// ../../../../../usr/share/ags/js/lib/overrides.ts
function snakeify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1_$2").replaceAll("-", "_").toLowerCase();
}
async function suppress(mod, patch2) {
  return mod.then((m) => patch2(m.default)).catch(() => void 0);
}
function patch(proto, prop) {
  Object.defineProperty(proto, prop, {
    get() {
      return this[`get_${snakeify(prop)}`]();
    }
  });
}
await suppress(import("gi://AstalApps"), ({ Apps, Application }) => {
  patch(Apps.prototype, "list");
  patch(Application.prototype, "keywords");
  patch(Application.prototype, "categories");
});
await suppress(import("gi://AstalBattery"), ({ UPower }) => {
  patch(UPower.prototype, "devices");
});
await suppress(import("gi://AstalBluetooth"), ({ Adapter, Bluetooth, Device }) => {
  patch(Adapter.prototype, "uuids");
  patch(Bluetooth.prototype, "adapters");
  patch(Bluetooth.prototype, "devices");
  patch(Device.prototype, "uuids");
});
await suppress(import("gi://AstalHyprland"), ({ Hyprland, Monitor, Workspace }) => {
  patch(Hyprland.prototype, "binds");
  patch(Hyprland.prototype, "monitors");
  patch(Hyprland.prototype, "workspaces");
  patch(Hyprland.prototype, "clients");
  patch(Monitor.prototype, "availableModes");
  patch(Monitor.prototype, "available_modes");
  patch(Workspace.prototype, "clients");
});
await suppress(import("gi://AstalMpris"), ({ Mpris, Player }) => {
  patch(Mpris.prototype, "players");
  patch(Player.prototype, "supported_uri_schemes");
  patch(Player.prototype, "supportedUriSchemes");
  patch(Player.prototype, "supported_mime_types");
  patch(Player.prototype, "supportedMimeTypes");
  patch(Player.prototype, "comments");
});
await suppress(import("gi://AstalNetwork"), ({ Wifi }) => {
  patch(Wifi.prototype, "access_points");
  patch(Wifi.prototype, "accessPoints");
});
await suppress(import("gi://AstalNotifd"), ({ Notifd, Notification: Notification2 }) => {
  patch(Notifd.prototype, "notifications");
  patch(Notification2.prototype, "actions");
});
await suppress(import("gi://AstalPowerProfiles"), ({ PowerProfiles }) => {
  patch(PowerProfiles.prototype, "actions");
});
await suppress(import("gi://AstalWp"), ({ Wp, Audio, Video }) => {
  patch(Wp.prototype, "devices");
  patch(Audio.prototype, "streams");
  patch(Audio.prototype, "recorders");
  patch(Audio.prototype, "microphones");
  patch(Audio.prototype, "speakers");
  patch(Audio.prototype, "devices");
  patch(Video.prototype, "streams");
  patch(Video.prototype, "recorders");
  patch(Video.prototype, "sinks");
  patch(Video.prototype, "sources");
  patch(Video.prototype, "devices");
});
await suppress(import("gi://AstalTray"), ({ Tray }) => {
  patch(Tray.prototype, "items");
});

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/gobject.ts
import GObject from "gi://GObject";
import GLib from "gi://GLib";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/util.ts
function kebabify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("_", "-").toLowerCase();
}
function snakeify2(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("-", "_").toLowerCase();
}
function xml({ name, attributes, children }) {
  let builder = `<${name}`;
  const attrs = Object.entries(attributes ?? []);
  if (attrs.length > 0) {
    for (const [key, value] of attrs) {
      builder += ` ${key}="${value}"`;
    }
  }
  if (children && children.length > 0) {
    builder += ">";
    for (const node of children) {
      builder += xml(node);
    }
    builder += `</${name}>`;
  } else {
    builder += " />";
  }
  return builder;
}
function set(obj, prop, value) {
  const key = snakeify2(prop);
  const getter2 = `get_${key}`;
  const setter2 = `set_${key}`;
  let current;
  if (getter2 in obj && typeof obj[getter2] === "function") {
    current = obj[getter2]();
  } else {
    current = obj[prop];
  }
  if (current !== value) {
    if (setter2 in obj && typeof obj[setter2] === "function") {
      ;
      obj[setter2](value);
    } else {
      Object.assign(obj, { [prop]: value });
    }
  }
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/gobject.ts
var priv = Symbol("gobject private");
var { defineProperty, fromEntries, entries } = Object;
var { Object: GObj, registerClass } = GObject;
var SignalFlags = GObject.SignalFlags;
var AccumulatorType = GObject.AccumulatorType;
var ParamSpec = GObject.ParamSpec;
var ParamFlags = GObject.ParamFlags;
function assertField(ctx) {
  if (ctx.private) throw Error("private fields are not supported");
  if (ctx.static) throw Error("static fields are not supported");
  if (typeof ctx.name !== "string") {
    throw Error("only strings can be gobject property keys");
  }
  return ctx.name;
}
function getter(typeDeclaration) {
  return function(get, ctx) {
    const fieldName = assertField(ctx);
    const meta = ctx.metadata;
    const props = meta.properties ??= {};
    if (fieldName in props) {
      const { flags, type } = props[fieldName];
      props[fieldName] = { flags: flags | ParamFlags.READABLE, type };
    } else {
      props[fieldName] = { flags: ParamFlags.READABLE, type: typeDeclaration };
    }
    return get;
  };
}
function setter(typeDeclaration) {
  return function(set2, ctx) {
    const fieldName = assertField(ctx);
    const meta = ctx.metadata;
    const props = meta.properties ??= {};
    if (fieldName in props) {
      const { flags, type } = props[fieldName];
      props[fieldName] = { flags: flags | ParamFlags.WRITABLE, type };
    } else {
      props[fieldName] = { flags: ParamFlags.WRITABLE, type: typeDeclaration };
    }
    return set2;
  };
}
function signal(...args) {
  return function(method, ctx) {
    if (ctx.private) throw Error("private fields are not supported");
    if (ctx.static) throw Error("static fields are not supported");
    if (typeof ctx.name !== "string") {
      throw Error("only strings can be gobject signals");
    }
    const signalName2 = kebabify(ctx.name);
    const meta = ctx.metadata;
    const signals = meta.signals ??= {};
    if (Array.isArray(args[0])) {
      const [params, returnType, options] = args;
      signals[signalName2] = {
        method,
        default: options?.default ?? true,
        param_types: params.map((i) => "$gtype" in i ? i.$gtype : i),
        ...returnType && {
          return_type: "$gtype" in returnType ? returnType.$gtype : returnType
        },
        ...options?.flags && {
          flags: options.flags
        },
        ...typeof options?.accumulator === "number" && {
          accumulator: options.accumulator
        }
      };
    } else {
      const params = args;
      signals[signalName2] = {
        method,
        default: true,
        param_types: params.map((i) => "$gtype" in i ? i.$gtype : i)
      };
    }
    return function(...params) {
      return this.emit(signalName2, ...params);
    };
  };
}
var MAXINT = 2 ** 31 - 1;
var MININT = -(2 ** 31);
var MAXUINT = 2 ** 32 - 1;
var MAXFLOAT = 34028235e31;
var MINFLOAT = -34028235e31;
var MININT64 = Number.MIN_SAFE_INTEGER;
var MAXINT64 = Number.MAX_SAFE_INTEGER;
function pspecFromGType(type, name, flags) {
  switch (type) {
    case GObject.TYPE_BOOLEAN:
      return ParamSpec.boolean(name, "", "", flags, false);
    case GObject.TYPE_STRING:
      return ParamSpec.string(name, "", "", flags, "");
    case GObject.TYPE_INT:
      return ParamSpec.int(name, "", "", flags, MININT, MAXINT, 0);
    case GObject.TYPE_UINT:
      return ParamSpec.uint(name, "", "", flags, 0, MAXUINT, 0);
    case GObject.TYPE_INT64:
      return ParamSpec.int64(name, "", "", flags, MININT64, MAXINT64, 0);
    case GObject.TYPE_UINT64:
      return ParamSpec.uint64(name, "", "", flags, 0, Number.MAX_SAFE_INTEGER, 0);
    case GObject.TYPE_FLOAT:
      return ParamSpec.float(name, "", "", flags, MINFLOAT, MAXFLOAT, 0);
    case GObject.TYPE_DOUBLE:
      return ParamSpec.double(name, "", "", flags, Number.MIN_VALUE, Number.MIN_VALUE, 0);
    case GObject.TYPE_JSOBJECT:
      return ParamSpec.jsobject(name, "", "", flags);
    case GObject.TYPE_VARIANT:
      return ParamSpec.object(name, "", "", flags, GLib.Variant);
    case GObject.TYPE_ENUM:
    case GObject.TYPE_INTERFACE:
    case GObject.TYPE_BOXED:
    case GObject.TYPE_POINTER:
    case GObject.TYPE_PARAM:
    case GObject.type_from_name("GType"):
      throw Error(`cannot guess ParamSpec from GType "${type}"`);
    case GObject.TYPE_OBJECT:
    default:
      return ParamSpec.object(name, "", "", flags, type);
  }
}
function pspec(name, flags, declaration) {
  if (declaration instanceof ParamSpec) return declaration;
  if (declaration === Object || declaration === Function || declaration === Array) {
    return ParamSpec.jsobject(name, "", "", flags);
  }
  if (declaration === String) {
    return ParamSpec.string(name, "", "", flags, "");
  }
  if (declaration === Number) {
    return ParamSpec.double(name, "", "", flags, -Number.MAX_VALUE, Number.MAX_VALUE, 0);
  }
  if (declaration === Boolean) {
    return ParamSpec.boolean(name, "", "", flags, false);
  }
  if ("$gtype" in declaration) {
    return pspecFromGType(declaration.$gtype, name, flags);
  }
  if (typeof declaration === "function") {
    return declaration(name, flags);
  }
  throw Error("invalid PropertyTypeDeclaration");
}
function register(options = {}) {
  return function(cls, ctx) {
    const t = options.Template;
    if (typeof t === "string" && !t.startsWith("resource://") && !t.startsWith("file://")) {
      options.Template = new TextEncoder().encode(t);
    }
    const meta = ctx.metadata;
    const props = fromEntries(
      entries(meta.properties ?? {}).map(([fieldName, { flags, type }]) => {
        const key = kebabify(fieldName);
        const spec = pspec(key, flags, type);
        return [key, spec];
      })
    );
    const signals = fromEntries(
      entries(meta.signals ?? {}).map(([signalName2, { default: def, method, ...signal2 }]) => {
        if (def) {
          defineProperty(cls.prototype, `on_${signalName2.replaceAll("-", "_")}`, {
            enumerable: false,
            configurable: false,
            value: method
          });
        }
        return [signalName2, signal2];
      })
    );
    delete meta.properties;
    delete meta.signals;
    registerClass({ ...options, Properties: props, Signals: signals }, cls);
  };
}
Function.$gtype = Object.$gtype;
Array.$gtype = Object.$gtype;
Date.$gtype = Object.$gtype;
Map.$gtype = Object.$gtype;
Set.$gtype = Object.$gtype;

// ../../../../../usr/share/ags/js/lib/gtk4/app.ts
import GLib4 from "gi://GLib?version=2.0";
import Gtk from "gi://Gtk?version=4.0";
import Gdk from "gi://Gdk?version=4.0";
import Gio3 from "gi://Gio?version=2.0";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/dbus.ts
import Gio from "gi://Gio";
import GLib2 from "gi://GLib";
import GObject2 from "gi://GObject";
var DEFAULT_TIMEOUT = 1e4;
var Variant = GLib2.Variant;
var info = Symbol("dbus interface info");
var internals = Symbol("dbus interface internals");
var remoteMethod = Symbol("proxy remoteMethod");
var remoteMethodAsync = Symbol("proxy remoteMethodAsync");
var remotePropertySet = Symbol("proxy remotePropertySet");
var _a;
var Service = class extends GObject2.Object {
  constructor() {
    super();
    this[_a] = {
      priv: {},
      onStop: /* @__PURE__ */ new Set()
    };
    const service = this.constructor;
    if (!service[info]) throw Error("missing interface info");
    this.#info = service[info];
  }
  static {
    GObject2.registerClass(this);
  }
  #info;
  notify(propertyName) {
    const prop = this.#info.lookup_property(propertyName);
    if (prop && this[internals].dbusObject) {
      this[internals].dbusObject.emit_property_changed(
        propertyName,
        new GLib2.Variant(prop.signature, this[propertyName])
      );
    }
    super.notify(prop ? kebabify(propertyName) : propertyName);
  }
  emit(name, ...params) {
    const signal2 = this.#info.lookup_signal(name);
    if (signal2 && this[internals].dbusObject) {
      const signature = `(${signal2.args.map((a) => a.signature).join("")})`;
      this[internals].dbusObject.emit_signal(name, new GLib2.Variant(signature, params));
    }
    return super.emit(signal2 ? kebabify(name) : name, ...params);
  }
  // server
  #handlePropertyGet(_, propertyName) {
    const prop = this.#info.lookup_property(propertyName);
    if (!prop) {
      throw Error(`${this.constructor.name} has no exported property: "${propertyName}"`);
    }
    const value = this[propertyName];
    if (typeof value !== "undefined") {
      return new GLib2.Variant(prop.signature, value);
    } else {
      return null;
    }
  }
  // server
  #handlePropertySet(_, propertyName, value) {
    const newValue = value.deepUnpack();
    const prop = this.#info.lookup_property(propertyName);
    if (!prop) {
      throw Error(`${this.constructor.name} has no property: "${propertyName}"`);
    }
    if (this[propertyName] !== newValue) {
      this[propertyName] = value.deepUnpack();
    }
  }
  // server
  #returnError(error, invocation) {
    console.error(error);
    if (error instanceof GLib2.Error) {
      return invocation.return_gerror(error);
    }
    if (error instanceof Error) {
      return invocation.return_dbus_error(
        error.name.includes(".") ? error.name : `gjs.JSError.${error.name}`,
        error.message
      );
    }
    invocation.return_dbus_error("gjs.DBusService.UnknownError", `${error}`);
  }
  // server
  #returnValue(value, methodName, invocation) {
    if (value === null || value === void 0) {
      return invocation.return_value(new GLib2.Variant("()", []));
    }
    const args = this.#info.lookup_method(methodName)?.out_args ?? [];
    const signature = `(${args.map((arg) => arg.signature).join("")})`;
    if (!Array.isArray(value)) throw Error("value has to be a tuple");
    invocation.return_value(new GLib2.Variant(signature, value));
  }
  // server
  #handleMethodCall(_, methodName, parameters, invocation) {
    try {
      const value = this[methodName](
        ...parameters.deepUnpack()
      );
      if (value instanceof GLib2.Variant) {
        invocation.return_value(value);
      } else if (value instanceof Promise) {
        value.then((value2) => this.#returnValue(value2, methodName, invocation)).catch((error) => this.#returnError(error, invocation));
      } else {
        this.#returnValue(value, methodName, invocation);
      }
    } catch (error) {
      this.#returnError(error, invocation);
    }
  }
  // server
  async serve({
    busType = Gio.BusType.SESSION,
    name = this.#info.name,
    objectPath = "/" + this.#info.name.split(".").join("/"),
    flags = Gio.BusNameOwnerFlags.NONE,
    timeout: timeout2 = DEFAULT_TIMEOUT
  } = {}) {
    const impl = new Gio.DBusExportedObject(
      // @ts-expect-error missing constructor type
      { g_interface_info: this.#info }
    );
    impl.connect("handle-method-call", this.#handleMethodCall.bind(this));
    impl.connect("handle-property-get", this.#handlePropertyGet.bind(this));
    impl.connect("handle-property-set", this.#handlePropertySet.bind(this));
    this.#info.cache_build();
    return new Promise((resolve, reject) => {
      let source = timeout2 > 0 ? setTimeout(() => {
        reject(Error(`serve timed out`));
        source = null;
      }, timeout2) : null;
      const clear = () => {
        if (source) {
          clearTimeout(source);
          source = null;
        }
      };
      const busId = Gio.bus_own_name(
        busType,
        name,
        flags,
        (conn) => {
          try {
            impl.export(conn, objectPath);
            this[internals].dbusObject = impl;
            this[internals].onStop.add(() => {
              Gio.bus_unown_name(busId);
              impl.unexport();
              this.#info.cache_release();
              delete this[internals].dbusObject;
            });
            resolve(this);
          } catch (error) {
            reject(error);
          }
        },
        clear,
        clear
      );
    });
  }
  // proxy
  #handlePropertiesChanged(_, changed, invalidated) {
    const set2 = /* @__PURE__ */ new Set([...Object.keys(changed.deepUnpack()), ...invalidated]);
    for (const prop of set2.values()) {
      this.notify(prop);
    }
  }
  // proxy
  #handleSignal(_, _sender, signal2, parameters) {
    this.emit(kebabify(signal2), ...parameters.deepUnpack());
  }
  // proxy
  #remoteMethodParams(methodName, args) {
    const { proxy } = this[internals];
    if (!proxy) throw Error("invalid remoteMethod invocation: not a proxy");
    const method = this.#info.lookup_method(methodName);
    if (!method) throw Error("method not found");
    const signature = `(${method.in_args.map((a) => a.signature).join("")})`;
    return [
      methodName,
      new GLib2.Variant(signature, args),
      Gio.DBusCallFlags.NONE,
      DEFAULT_TIMEOUT,
      null
    ];
  }
  // proxy
  [(info, _a = internals, remoteMethod)](methodName, args) {
    const params = this.#remoteMethodParams(methodName, args);
    return this[internals].proxy.call_sync(...params);
  }
  // proxy
  [remoteMethodAsync](methodName, args) {
    return new Promise((resolve, reject) => {
      try {
        const params = this.#remoteMethodParams(methodName, args);
        this[internals].proxy.call(...params, (_, res) => {
          try {
            resolve(this[internals].proxy.call_finish(res));
          } catch (error) {
            reject(error);
          }
        });
      } catch (error) {
        reject(error);
      }
    });
  }
  // proxy
  [remotePropertySet](name, value) {
    const proxy = this[internals].proxy;
    const prop = this.#info.lookup_property(name);
    const variant = new GLib2.Variant(prop.signature, value);
    proxy.set_cached_property(name, variant);
    proxy.call(
      "org.freedesktop.DBus.Properties.Set",
      new GLib2.Variant("(ssv)", [proxy.gInterfaceName, name, variant]),
      Gio.DBusCallFlags.NONE,
      -1,
      null,
      (_, res) => {
        try {
          proxy.call_finish(res);
        } catch (e) {
          console.error(e);
        }
      }
    );
  }
  // proxy
  async proxy({
    bus = Gio.DBus.session,
    name = this.#info.name,
    objectPath = "/" + this.#info.name.split(".").join("/"),
    flags = Gio.DBusProxyFlags.NONE,
    timeout: timeout2 = DEFAULT_TIMEOUT
  } = {}) {
    const proxy = new Gio.DBusProxy({
      gConnection: bus,
      gInterfaceName: this.#info.name,
      gInterfaceInfo: this.#info,
      gName: name,
      gFlags: flags,
      gObjectPath: objectPath
    });
    return new Promise((resolve, reject) => {
      const cancallable = new Gio.Cancellable();
      let source = timeout2 > 0 ? setTimeout(() => {
        reject(Error(`proxy timed out`));
        source = null;
        cancallable.cancel();
      }, timeout2) : null;
      proxy.init_async(GLib2.PRIORITY_DEFAULT, cancallable, (_, res) => {
        try {
          if (source) {
            clearTimeout(source);
            source = null;
          }
          proxy.init_finish(res);
          this[internals].proxy = proxy;
          const ids = [
            proxy.connect("g-signal", this.#handleSignal.bind(this)),
            proxy.connect(
              "g-properties-changed",
              this.#handlePropertiesChanged.bind(this)
            )
          ];
          this[internals].onStop.add(() => {
            ids.forEach((id) => proxy.disconnect(id));
            delete this[internals].proxy;
          });
          resolve(this);
        } catch (error) {
          reject(error);
        }
      });
    });
  }
  stop() {
    const { onStop } = this[internals];
    for (const cb of onStop.values()) {
      onStop.delete(cb);
      cb();
    }
  }
};
function iface(name, options) {
  return function(cls, ctx) {
    const meta = ctx.metadata;
    if (!meta) throw Error(`${cls.name} is not an interface`);
    const { dbusMethods = {}, dbusSignals = {}, dbusProperties = {} } = meta;
    const infoXml = xml({
      name: "node",
      children: [
        {
          name: "interface",
          attributes: { name },
          children: [
            ...Object.entries(dbusMethods).map(([name2, args]) => ({
              name: "method",
              attributes: { name: name2 },
              children: args.map((arg) => ({ name: "arg", attributes: arg }))
            })),
            ...Object.entries(dbusSignals).map(([name2, args]) => ({
              name: "signal",
              attributes: { name: name2 },
              children: args.map((arg) => ({ name: "arg", attributes: arg }))
            })),
            ...Object.values(dbusProperties).map(({ name: name2, type, read, write }) => ({
              name: "property",
              attributes: {
                ...name2 && { name: name2 },
                type,
                access: (read ? "read" : "") + (write ? "write" : "")
              }
            }))
          ]
        }
      ]
    });
    Object.assign(cls, { [info]: Gio.DBusInterfaceInfo.new_for_xml(infoXml) });
    register(options)(cls, ctx);
  };
}
function installMethod(args, method, ctx) {
  const name = ctx.name;
  const meta = ctx.metadata;
  const methods = meta.dbusMethods ??= {};
  if (typeof name !== "string") {
    throw Error("only string named methods are allowed");
  }
  const [inArgs, outArgs = []] = Array.isArray(args[0]) ? args : [args];
  methods[name] = [
    ...inArgs.map((arg) => ({
      direction: "in",
      ...typeof arg === "string" ? { type: arg } : arg
    })),
    ...outArgs.map((arg) => ({
      direction: "out",
      ...typeof arg === "string" ? { type: arg } : arg
    }))
  ];
  return name;
}
function methodAsync(...args) {
  return function(method, ctx) {
    const name = installMethod(args, method, ctx);
    return async function(...args2) {
      if (this[internals].proxy) {
        const value = await this[remoteMethodAsync](name, args2);
        return value.deepUnpack();
      } else {
        return method.apply(this, args2);
      }
    };
  };
}

// ../../../../../usr/share/ags/js/lib/app/dbus.ts
var _Request_dec, _Quit_dec, _ToggleWindow_dec, _Inspector_dec, _a2, _AppDBus_decorators, _init;
_AppDBus_decorators = [iface("io.Astal.Application")];
var _AppDBus = class _AppDBus extends (_a2 = Service, _Inspector_dec = [methodAsync()], _ToggleWindow_dec = [methodAsync("s")], _Quit_dec = [methodAsync()], _Request_dec = [methodAsync(["as"], ["s"])], _a2) {
  constructor(impl) {
    super();
    __runInitializers(_init, 5, this);
    this.impl = void 0;
    this.impl = impl;
  }
  async Inspector() {
    return Promise.resolve(this.impl.insector());
  }
  async ToggleWindow(name) {
    return Promise.resolve(this.impl.toggleWindow(name));
  }
  async Quit() {
    return Promise.resolve(this.impl.quit());
  }
  async Request(argv) {
    return this.impl.request(argv).then((res) => [res]);
  }
  static proxy(instanceName) {
    const app2 = new _AppDBus({
      insector() {
      },
      toggleWindow() {
      },
      quit() {
      },
      request: () => Promise.reject()
    });
    return app2.proxy({
      name: "io.Astal." + instanceName
    });
  }
};
_init = __decoratorStart(_a2);
__decorateElement(_init, 1, "Inspector", _Inspector_dec, _AppDBus);
__decorateElement(_init, 1, "ToggleWindow", _ToggleWindow_dec, _AppDBus);
__decorateElement(_init, 1, "Quit", _Quit_dec, _AppDBus);
__decorateElement(_init, 1, "Request", _Request_dec, _AppDBus);
_AppDBus = __decorateElement(_init, 0, "AppDBus", _AppDBus_decorators, _AppDBus);
__runInitializers(_init, 1, _AppDBus);
var AppDBus = _AppDBus;

// ../../../../../usr/share/ags/js/lib/gtk4/app.ts
import { setConsoleLogDomain } from "console";
import { exit, programArgs } from "system";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
import GObject5 from "gi://GObject";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/Fragment.ts
import GObject3 from "gi://GObject";
var _a3, _b;
var Fragment = class _Fragment extends GObject3.Object {
  static {
    this[_b] = {
      append: { param_types: [GObject3.TYPE_OBJECT] },
      remove: { param_types: [GObject3.TYPE_OBJECT] }
    };
  }
  static {
    this[_a3] = {
      children: GObject3.ParamSpec.jsobject("children", "", "", GObject3.ParamFlags.READABLE)
    };
  }
  static {
    GObject3.registerClass(this);
  }
  *[(_b = GObject3.signals, _a3 = GObject3.properties, Symbol.iterator)]() {
    yield* this._children;
  }
  append(child) {
    if (child instanceof _Fragment) {
      throw Error(`nesting Fragments are not yet supported`);
    }
    this._children.push(child);
    this.emit("append", child);
    this.notify("children");
  }
  remove(child) {
    const index = this._children.findIndex((i) => i === child);
    this._children.splice(index, 1);
    this.emit("remove", child);
    this.notify("children");
  }
  constructor({ children = [] } = {}) {
    super();
    this._children = Array.isArray(children) ? children : [children];
  }
  connect(signal2, callback) {
    return super.connect(signal2, callback);
  }
};

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/state.ts
import GObject4 from "gi://GObject";
import Gio2 from "gi://Gio";
import GLib3 from "gi://GLib";
var empty = Symbol("empty computed value");
var Accessor = class _Accessor extends Function {
  static {
    this.$gtype = GObject4.TYPE_JSOBJECT;
  }
  #get;
  #subscribe;
  constructor(get, subscribe) {
    super("return arguments.callee._call.apply(arguments.callee, arguments)");
    this.#subscribe = subscribe ?? (() => () => void 0);
    this.#get = get;
  }
  /**
   * Subscribe for value changes.
   * @param callback The function to run when the current value changes.
   * @returns Unsubscribe function.
   */
  subscribe(callback) {
    return this.#subscribe(callback);
  }
  /**
   * @returns The current value.
   */
  get() {
    return this.#get();
  }
  /**
   * Create a new `Accessor` that applies a transformation on its value.
   * @param transform The transformation to apply. Should be a pure function.
   */
  as(transform) {
    return new _Accessor(() => transform(this.#get()), this.#subscribe);
  }
  _call(transform) {
    let value = empty;
    let unsub;
    const subscribers = /* @__PURE__ */ new Set();
    const subscribe = (callback) => {
      if (subscribers.size === 0) {
        unsub = this.subscribe(() => {
          const newValue = transform(this.get());
          if (value !== newValue) {
            value = newValue;
            Array.from(subscribers).forEach((cb) => cb());
          }
        });
      }
      subscribers.add(callback);
      return () => {
        subscribers.delete(callback);
        if (subscribers.size === 0) {
          value = empty;
          unsub();
        }
      };
    };
    const get = () => {
      return value !== empty ? value : transform(this.get());
    };
    return new _Accessor(get, subscribe);
  }
  toString() {
    return `Accessor<${this.get()}>`;
  }
  [Symbol.toPrimitive]() {
    console.warn("Accessor implicitly converted to a primitive value.");
    return this.toString();
  }
};
function createState(init) {
  let currentValue = init;
  const subscribers = /* @__PURE__ */ new Set();
  const subscribe = (callback) => {
    subscribers.add(callback);
    return () => subscribers.delete(callback);
  };
  const set2 = (newValue) => {
    const value = typeof newValue === "function" ? newValue(currentValue) : newValue;
    if (currentValue !== value) {
      currentValue = value;
      Array.from(subscribers).forEach((cb) => cb());
    }
  };
  return [new Accessor(() => currentValue, subscribe), set2];
}
function createComputedProducer(fn) {
  let value = empty;
  let prevDeps = /* @__PURE__ */ new Map();
  const subscribers = /* @__PURE__ */ new Set();
  const cache = /* @__PURE__ */ new Map();
  const effect = () => {
    const deps = /* @__PURE__ */ new Set();
    const newValue = fn((v) => {
      deps.add(v);
      return cache.get(v) || v.get();
    });
    const didChange = value !== newValue;
    value = newValue;
    const newDeps = /* @__PURE__ */ new Map();
    for (const [dep, unsub] of prevDeps) {
      if (!deps.has(dep)) {
        unsub();
      } else {
        newDeps.set(dep, unsub);
      }
    }
    for (const dep of deps) {
      if (!newDeps.has(dep)) {
        const dispose = dep.subscribe(() => {
          const value2 = dep.get();
          if (cache.get(dep) !== value2) {
            cache.set(dep, value2);
            effect();
          }
        });
        newDeps.set(dep, dispose);
      }
    }
    prevDeps = newDeps;
    if (didChange) {
      Array.from(subscribers).forEach((cb) => cb());
    }
  };
  const subscribe = (callback) => {
    if (subscribers.size === 0) {
      effect();
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        value = empty;
        for (const [, unsub] of prevDeps) {
          unsub();
        }
      }
    };
  };
  const get = () => {
    return value !== empty ? value : fn((v) => v.get());
  };
  return new Accessor(get, subscribe);
}
function createComputedArgs(deps, transform) {
  let dispose;
  let value = empty;
  const subscribers = /* @__PURE__ */ new Set();
  const cache = new Array(deps.length);
  const compute = () => {
    const args = deps.map((dep, i) => {
      if (!cache[i]) {
        cache[i] = dep.get();
      }
      return cache[i];
    });
    return transform ? transform(...args) : args;
  };
  const subscribe = (callback) => {
    if (subscribers.size === 0) {
      dispose = deps.map(
        (dep, i) => dep.subscribe(() => {
          const newValue = dep.get();
          if (cache[i] !== newValue) {
            cache[i] = dep.get();
            const newValue2 = compute();
            if (value !== newValue2) {
              value = newValue2;
              Array.from(subscribers).forEach((cb) => cb());
            }
          }
        })
      );
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        value = empty;
        dispose.map((cb) => cb());
        dispose.length = 0;
        cache.length = 0;
      }
    };
  };
  const get = () => {
    return value !== empty ? value : compute();
  };
  return new Accessor(get, subscribe);
}
function createComputed(...args) {
  const [depsOrProducer, transform] = args;
  if (typeof depsOrProducer === "function") {
    return createComputedProducer(depsOrProducer);
  } else {
    return createComputedArgs(depsOrProducer, transform);
  }
}
function createBinding(object, key) {
  const prop = kebabify(key);
  const subscribe = (callback) => {
    const sig = object instanceof Gio2.Settings ? "changed" : "notify";
    const id = object.connect(`${sig}::${prop}`, () => callback());
    return () => object.disconnect(id);
  };
  const get = () => {
    if (object instanceof Gio2.Settings) {
      return object.get_value(key).recursiveUnpack();
    }
    if (object instanceof GObject4.Object) {
      const getter2 = `get_${prop.replaceAll("-", "_")}`;
      if (getter2 in object && typeof object[getter2] === "function") {
        return object[getter2]();
      }
      if (prop in object) return object[prop];
      if (key in object) return object[key];
    }
    throw Error(`cannot get property "${key}" on "${object}"`);
  };
  return new Accessor(get, subscribe);
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/env.ts
function configue(conf) {
  return Object.assign(env, conf);
}
function missingImpl() {
  throw Error("missing impl");
}
var env = {
  intrinsicElements: {},
  textNode: missingImpl,
  appendChild: missingImpl,
  removeChild: missingImpl,
  setCss: missingImpl,
  setClass: missingImpl,
  initProps: () => void 0,
  defaultCleanup: () => void 0
};

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/scope.ts
var Scope = class _Scope {
  constructor(parent) {
    this.contexts = /* @__PURE__ */ new Map();
    this.cleanups = /* @__PURE__ */ new Set();
    this.mounts = /* @__PURE__ */ new Set();
    this.mounted = false;
    this.parent = parent;
  }
  onCleanup(callback) {
    this.cleanups?.add(callback);
  }
  onMount(callback) {
    if (this.parent && !this.parent.mounted) {
      this.parent.onMount(callback);
    } else {
      this.mounts.add(callback);
    }
  }
  run(fn) {
    const prev = _Scope.current;
    _Scope.current = this;
    try {
      return fn();
    } finally {
      this.mounts.forEach((cb) => cb());
      this.mounts.clear();
      this.mounted = true;
      _Scope.current = prev;
    }
  }
  dispose() {
    this.cleanups.forEach((cb) => cb());
    this.cleanups.clear();
    this.contexts.clear();
    delete this.parent;
  }
};
function getScope() {
  const scope = Scope.current;
  if (!scope) {
    throw Error("cannot get scope: out of tracking context");
  }
  return scope;
}
function onCleanup(cleanup) {
  if (!Scope.current) {
    console.error(Error("out of tracking context: will not be able to cleanup"));
  }
  Scope.current?.onCleanup(cleanup);
}
function createRoot(fn) {
  const scope = new Scope(null);
  return scope.run(() => fn(() => scope.dispose()));
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
var gtkType = Symbol("gtk builder type");
var appendChild = Symbol("JSX add child method");
var removeChild = Symbol("JSX add remove method");
function getType(object) {
  return gtkType in object ? object[gtkType] : null;
}
function isGObjectCtor(ctor) {
  return ctor.prototype instanceof GObject5.Object;
}
function isFunctionCtor(ctor) {
  return typeof ctor === "function" && !isGObjectCtor(ctor);
}
function signalName(key) {
  const [sig, detail] = kebabify(key.slice(2)).split(":");
  if (sig.startsWith("notify-")) {
    return `notify::${sig.slice(7)}`;
  }
  return detail ? `${sig}::${detail}` : sig;
}
function remove(parent, child) {
  if (parent instanceof Fragment) {
    parent.remove(child);
    return;
  }
  if (removeChild in parent && typeof parent[removeChild] === "function") {
    parent[removeChild](child);
    return;
  }
  env.removeChild(parent, child);
}
function append(parent, child) {
  if (parent instanceof Fragment) {
    parent.append(child);
    return;
  }
  if (child instanceof Fragment) {
    for (const ch of child) {
      append(parent, ch);
    }
    const appendHandler = child.connect("append", (_, ch) => {
      if (!(ch instanceof GObject5.Object)) {
        return console.error(TypeError(`cannot add ${ch} to ${parent}`));
      }
      append(parent, ch);
    });
    const removeHandler = child.connect("remove", (_, ch) => {
      if (!(ch instanceof GObject5.Object)) {
        return console.error(TypeError(`cannot remove ${ch} from ${parent}`));
      }
      remove(parent, ch);
    });
    onCleanup(() => {
      child.disconnect(appendHandler);
      child.disconnect(removeHandler);
    });
    return;
  }
  if (appendChild in parent && typeof parent[appendChild] === "function") {
    parent[appendChild](child, getType(child));
    return;
  }
  env.appendChild(parent, child);
}
function setType(object, type) {
  if (gtkType in object && object[gtkType] !== "") {
    console.warn(`type overriden from ${object[gtkType]} to ${type} on ${object}`);
  }
  Object.assign(object, { [gtkType]: type });
}
function jsx(ctor, inprops, key) {
  const { $, $type, $constructor, children, ...rest } = inprops;
  const props = rest;
  if (key) Object.assign(props, { key });
  const deferProps = env.initProps(ctor, props) ?? [];
  const deferredProps = {};
  for (const [key2, value] of Object.entries(props)) {
    if (value === void 0) {
      delete props[key2];
    }
    if (deferProps.includes(key2)) {
      deferredProps[key2] = props[key2];
      delete props[key2];
    }
  }
  if (typeof ctor === "string") {
    if (ctor in env.intrinsicElements) {
      ctor = env.intrinsicElements[ctor];
    } else {
      throw Error(`unknown intrinsic element "${ctor}"`);
    }
  }
  if (isFunctionCtor(ctor)) {
    const object2 = ctor({ children, ...props });
    if ($type) setType(object2, $type);
    $?.(object2);
    return object2;
  }
  const { css, class: className } = props;
  delete props.css;
  delete props.class;
  const signals = [];
  const bindings = [];
  for (const [key2, value] of Object.entries(props)) {
    if (key2.startsWith("on")) {
      signals.push([key2, value]);
      delete props[key2];
    }
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
      props[key2] = value.get();
    }
  }
  const object = $constructor ? $constructor(props) : new ctor(props);
  if ($constructor) Object.assign(object, props);
  if ($type) setType(object, $type);
  if (css) env.setCss(object, css);
  if (className) env.setClass(object, className);
  for (let child of Array.isArray(children) ? children : [children]) {
    if (child === true) {
      console.warn(Error("Trying to add boolean value of `true` as a child."));
      continue;
    }
    if (Array.isArray(child)) {
      for (const ch of child) {
        append(object, ch);
      }
    } else if (child) {
      if (!(child instanceof GObject5.Object)) {
        child = env.textNode(child);
      }
      append(object, child);
    }
  }
  const disposeHandlers = signals.map(([sig, handler]) => {
    const id = object.connect(signalName(sig), handler);
    return () => object.disconnect(id);
  });
  for (const [key2, value] of Object.entries(deferredProps)) {
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
    } else {
      Object.assign(object, { [key2]: value });
    }
  }
  const disposeBindings = bindings.map(([prop, binding]) => {
    const dispose = binding.subscribe(() => {
      set(object, prop, binding.get());
    });
    set(object, prop, binding.get());
    return dispose;
  });
  if (disposeBindings.length > 0 || disposeHandlers.length > 0) {
    onCleanup(() => {
      disposeHandlers.forEach((cb) => cb());
      disposeBindings.forEach((cb) => cb());
    });
  }
  $?.(object);
  return object;
}
var jsxs = jsx;

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/For.ts
function For({
  each,
  children: mkChild,
  cleanup,
  id = (item) => item
}) {
  const currentScope = getScope();
  const map = /* @__PURE__ */ new Map();
  const fragment = new Fragment();
  function remove2({ item, child, index: [index], scope }) {
    scope.dispose();
    if (typeof cleanup === "function") {
      cleanup(child, item, index.get());
    } else if (cleanup !== null) {
      env.defaultCleanup(child);
    }
  }
  function callback(itareable) {
    const items = [...itareable];
    const ids = items.map(id);
    const idSet = new Set(ids);
    for (const [key, value] of map.entries()) {
      fragment.remove(value.child);
      if (!idSet.has(key)) {
        remove2(value);
        map.delete(key);
      }
    }
    items.map((item, i) => {
      const key = ids[i];
      if (map.has(key)) {
        const {
          index: [, setIndex],
          child
        } = map.get(key);
        setIndex(i);
        if ([...fragment].some((ch) => ch === child)) {
          console.warn(`duplicate keys found: ${key}`);
        } else {
          fragment.append(child);
        }
      } else {
        const [index, setIndex] = createState(i);
        const scope = new Scope(currentScope);
        const child = scope.run(() => mkChild(item, index));
        map.set(key, { item, child, index: [index, setIndex], scope });
        fragment.append(child);
      }
    });
  }
  const dispose = each.subscribe(() => {
    callback(each.get());
  });
  callback(each.get());
  onCleanup(() => {
    dispose();
    for (const value of map.values()) {
      remove2(value);
    }
    map.clear();
  });
  return fragment;
}

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/jsx/This.ts
import GObject6 from "gi://GObject";

// ../../../../../usr/share/ags/js/lib/gtk4/app.ts
Gtk.init();
GLib4.unsetenv("LD_PRELOAD");
await import("gi://Adw?version=1").then(({ default: Adw2 }) => Adw2.init()).catch(() => void 0);
var _request_dec, _cursorTheme_dec, _cursorTheme_dec2, _iconTheme_dec, _iconTheme_dec2, _gtkTheme_dec, _gtkTheme_dec2, _windows_dec, _monitors_dec, _windowToggled_dec, _a4, _App_decorators, _instanceName, _main, _requestHandlers, _dbusService, _cssProviders, _App_instances, settings_get, display_get, _init2;
_App_decorators = [register()];
var App = class extends (_a4 = Gtk.Application, _windowToggled_dec = [signal(Gtk.Window)], _monitors_dec = [getter(Array)], _windows_dec = [getter(Array)], _gtkTheme_dec2 = [setter(String)], _gtkTheme_dec = [getter(String)], _iconTheme_dec2 = [setter(String)], _iconTheme_dec = [getter(String)], _cursorTheme_dec2 = [setter(String)], _cursorTheme_dec = [getter(String)], _request_dec = [signal(Array, Function)], _a4) {
  constructor() {
    super({ flags: Gio3.ApplicationFlags.HANDLES_COMMAND_LINE });
    __runInitializers(_init2, 5, this);
    __privateAdd(this, _App_instances);
    __privateAdd(this, _instanceName, "ags");
    __privateAdd(this, _main);
    __privateAdd(this, _requestHandlers, 0);
    __privateAdd(this, _dbusService);
    __privateAdd(this, _cssProviders, new Array());
    __privateSet(this, _dbusService, new AppDBus({
      toggleWindow: this.toggle_window.bind(this),
      quit: this.quit.bind(this),
      request: (argv) => new Promise((resolve) => this.request(argv, resolve)),
      insector: () => {
        Gtk.Window.set_interactive_debugging(true);
      }
    }));
    __privateGet(this, _App_instances, display_get).get_monitors().connect("items-changed", () => {
      this.notify("monitors");
    });
    this.connect("window-added", (_, window) => {
      const id1 = window.connect("notify::visible", () => this.windowToggled(window));
      const id2 = this.connect("window-removed", (_2, removed) => {
        if (removed == window) {
          window.disconnect(id1);
          this.disconnect(id2);
        }
      });
    });
    __privateGet(this, _App_instances, settings_get).connect("notify", (_, { name }) => {
      switch (name) {
        case "gtk-theme-name":
          this.notify("gtk-theme");
          break;
        case "gtk-icon-theme-name":
          this.notify("icon-theme");
          break;
        case "gtk-cursor-theme-name":
          this.notify("cursor-theme");
          break;
        default:
          break;
      }
    });
  }
  get instanceName() {
    return __privateGet(this, _instanceName);
  }
  /**
   * Get all monitors from {@link Gdk.Display}.
   */
  get_monitors() {
    const mons = __privateGet(this, _App_instances, display_get).get_monitors();
    const list = new Array();
    let monitor = null;
    let i = 0;
    while ((monitor = mons.get_item(i++)) !== null) {
      list.push(monitor);
    }
    return list;
  }
  windowToggled(window) {
  }
  get monitors() {
    return this.get_monitors();
  }
  get windows() {
    return this.get_windows();
  }
  set gtkTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkThemeName = name;
  }
  get gtkTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkThemeName;
  }
  set iconTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkIconThemeName = name;
  }
  get iconTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkIconThemeName;
  }
  set cursorTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkCursorThemeName = name;
  }
  get cursorTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkCursorThemeName;
  }
  /**
   * Get a window by its {@link Gtk.Widget.prototype.name} that has been added to this app
   * using {@link Gtk.Application.prototype.add_window}.
   */
  get_window(name) {
    return this.windows.find((w) => w.name === name);
  }
  /**
   * Toggle the visibility of a window by its {@link Gtk.Widget.prototype.name}
   * that has been added to this app using {@link Gtk.Application.prototype.add_window}.
   */
  toggle_window(name) {
    const win = this.get_window(name);
    if (!win) throw Error(`no window registered with name "${name}"`);
    win.visible = !win.visible;
  }
  /**
   * Reset previously set css providers with {@link App.prototype.apply_css}.
   */
  reset_css() {
    for (const provider of __privateGet(this, _cssProviders)) {
      Gtk.StyleContext.remove_provider_for_display(__privateGet(this, _App_instances, display_get), provider);
    }
  }
  /**
   * Add a new {@link Gtk.CssProvider}.
   * @param style Css string or a path to a css file.
   */
  apply_css(style, reset = false) {
    const provider = new Gtk.CssProvider();
    provider.connect("parsing-error", (_, section, error) => {
      const name = section.get_file()?.get_basename() ?? "";
      const line = section.get_start_location().lines + 1;
      const chars = section.get_start_location().line_chars + 1;
      console.error(`CSS Error ${name}:${line}:${chars} ${error.message}`);
    });
    if (reset) this.reset_css();
    if (GLib4.file_test(style, GLib4.FileTest.EXISTS)) {
      provider.load_from_path(style);
    } else if (style.startsWith("resource://")) {
      provider.load_from_resource(style.replace("resource://", ""));
    } else {
      provider.load_from_string(style);
    }
    Gtk.StyleContext.add_provider_for_display(
      __privateGet(this, _App_instances, display_get),
      provider,
      Gtk.STYLE_PROVIDER_PRIORITY_USER
    );
    __privateGet(this, _cssProviders).push(provider);
  }
  /**
   * Shortcut for {@link Gtk.IconTheme.prototype.add_search_path}.
   */
  add_icons(path) {
    Gtk.IconTheme.get_for_display(__privateGet(this, _App_instances, display_get)).add_search_path(path);
  }
  /**
   * Quit and exit the application.
   */
  quit(code = 0) {
    __privateGet(this, _dbusService).stop();
    super.quit();
    exit(code);
  }
  request(args, response) {
    if (__privateGet(this, _requestHandlers) === 0) {
      response(`instance "${this.instanceName}" has no request handler implemented`);
    }
  }
  vfunc_command_line(cmd) {
    if (cmd.isRemote) {
      this.request(cmd.get_arguments(), (str) => {
        cmd.print_literal(str + "\n");
        cmd.done();
      });
    } else {
      this.hold();
      __privateGet(this, _dbusService).serve({
        name: this.applicationId
      });
      createRoot((dispose) => {
        var _a7;
        this.connect("shutdown", dispose);
        (_a7 = __privateGet(this, _main)) == null ? void 0 : _a7.call(this, ...programArgs);
      });
    }
    return 0;
  }
  start(config) {
    const { main, requestHandler, instanceName, css, icons: icons3, ...cfg } = config;
    __privateSet(this, _main, main);
    Object.assign(this, cfg);
    if (requestHandler) {
      this.connect("request", (_, args, response) => requestHandler(args, response));
    }
    if (instanceName) __privateSet(this, _instanceName, instanceName);
    if (css) this.apply_css(css, false);
    if (icons3) app.add_icons(icons3);
    this.applicationId = "io.Astal." + this.instanceName;
    setConsoleLogDomain(this.instanceName);
    this.runAsync(programArgs);
  }
  connect(signal2, callback) {
    if (signal2 === "request") __privateSet(this, _requestHandlers, __privateGet(this, _requestHandlers) + 1);
    return super.connect(signal2, callback);
  }
};
_init2 = __decoratorStart(_a4);
_instanceName = new WeakMap();
_main = new WeakMap();
_requestHandlers = new WeakMap();
_dbusService = new WeakMap();
_cssProviders = new WeakMap();
_App_instances = new WeakSet();
settings_get = function() {
  const settings = Gtk.Settings.get_default();
  if (!settings) throw Error("could not get settings");
  return settings;
};
display_get = function() {
  const display = Gdk.Display.get_default();
  if (!display) throw Error("could not get display");
  return display;
};
__decorateElement(_init2, 1, "windowToggled", _windowToggled_dec, App);
__decorateElement(_init2, 2, "monitors", _monitors_dec, App);
__decorateElement(_init2, 2, "windows", _windows_dec, App);
__decorateElement(_init2, 3, "gtkTheme", _gtkTheme_dec2, App);
__decorateElement(_init2, 2, "gtkTheme", _gtkTheme_dec, App);
__decorateElement(_init2, 3, "iconTheme", _iconTheme_dec2, App);
__decorateElement(_init2, 2, "iconTheme", _iconTheme_dec, App);
__decorateElement(_init2, 3, "cursorTheme", _cursorTheme_dec2, App);
__decorateElement(_init2, 2, "cursorTheme", _cursorTheme_dec, App);
__decorateElement(_init2, 1, "request", _request_dec, App);
App = __decorateElement(_init2, 0, "App", _App_decorators, App);
__runInitializers(_init2, 1, App);
var app = new App();
var app_default = app;

// sass:/home/dm1nh/.dots/config/ags/styles/styles.scss
var styles_default = '/* Trop colorscheme for AGS */\n/* ~/.config/ags/styles/colors.scss */\n* {\n  font-family: "JetBrainsMonoNL Nerd Font";\n  font-size: 18px;\n  font-weight: 500;\n}\n\nscale {\n  margin: 0;\n  padding: 0;\n}\nscale trough highlight {\n  min-height: 6px;\n}\nscale trough slider {\n  box-shadow: none;\n  outline: unset;\n  background-color: transparent;\n}\n\nmenubutton {\n  padding: 0;\n}\nmenubutton button {\n  padding: unset;\n  margin: unset;\n}\nmenubutton button:hover {\n  background-color: rgba(211, 198, 170, 0.15);\n}\n\nbutton {\n  padding: unset;\n  margin: unset;\n  background-color: transparent;\n  transition: transform 0.2s ease-in-out;\n}\nbutton:active > * {\n  transform: scale(0.85);\n}\nbutton:hover {\n  background-color: rgba(211, 198, 170, 0.15);\n}\n\nwindow.Bar {\n  background: transparent;\n}\nwindow.Bar .bar-container {\n  padding: 0rem 0.4rem;\n  min-height: 1.75rem;\n  background-color: #171b1f;\n  color: #d3c6aa;\n}\n\n.module-container .icon {\n  padding: 0 0.3em;\n  font-family: "Material Symbols Rounded";\n  font-size: 18px;\n  border-top-left-radius: 0.25em;\n  border-bottom-left-radius: 0.25em;\n  color: #23292e;\n  background-color: #b2c98f;\n}\n.module-container .label {\n  padding: 0 0.3em;\n  color: #d3c6aa;\n  background-color: #2a3137;\n  border-top-right-radius: 0.25em;\n  border-bottom-right-radius: 0.25em;\n}\n\n.workspaces .workspace-button {\n  min-height: 0.8rem;\n  min-width: 0.8rem;\n  border-radius: 100px;\n  background-color: #2a3137;\n}\n.workspaces .workspace-button.active {\n  min-width: 1.2rem;\n  background-color: #b2c98f;\n}\n.workspaces .workspace-button.occupied {\n  background-color: #7a8478;\n}\n.workspaces .workspace-button.occupied.active {\n  background-color: #b2c98f;\n}\n\n.taskbar .client.active .client-icon {\n  background-color: #b2c98f;\n  color: #23292e;\n}\n.taskbar .client.active .client-title {\n  background-color: #2a3137;\n  color: #b2c98f;\n}\n.taskbar .client-icon {\n  padding: 0rem 0.3rem;\n  font-family: "Material Symbols Rounded";\n  border-top-left-radius: 0.25em;\n  border-bottom-left-radius: 0.25em;\n  background-color: #444a4f;\n  color: #d3c6aa;\n}\n.taskbar .client-title {\n  min-width: 8em;\n  padding: 0rem 0.3rem;\n  border-top-right-radius: 0.25em;\n  border-bottom-right-radius: 0.25em;\n  background-color: #1e2428;\n  color: #555c54;\n}\n\n.exit-button .icon {\n  background-color: #e67e80;\n}\n.exit-button .label {\n  color: #e67e80;\n}\n\n.clock .icon {\n  background-color: #dbbc7f;\n}\n.clock .label {\n  color: #dbbc7f;\n}\n\n.network .icon {\n  background-color: #ad85d7;\n}\n.network .label {\n  color: #ad85d7;\n}\n\n.netstats .icon {\n  background-color: #e69875;\n}\n.netstats .label {\n  color: #e69875;\n}\n\n.volume .icon {\n  background-color: #83c092;\n}\n.volume .label {\n  color: #83c092;\n}\n\n.systray .button-icon {\n  border-radius: 0.25em;\n  padding: 0rem 0.4rem;\n  min-width: 18px;\n  min-height: 18px;\n}\n.systray .button-icon:hover {\n  background-color: #b2c98f;\n  color: #23292e;\n}\n\nwindow.notification-popups {\n  all: unset;\n}\n\n.notification {\n  border-radius: 0.25em;\n  background-color: #1e2428;\n  margin: 4px;\n  box-shadow: 2px 3px 8px 0 alpha(black,0.4);\n  border: 1pt solid alpha(#d3c6aa,0.03);\n}\n.notification.critical {\n  border: 1pt solid alpha(#e67e80,0.4);\n}\n.notification.critical .header .app-name {\n  color: alpha(#e67e80,0.8);\n}\n.notification.critical .header .app-icon {\n  color: alpha(#e67e80,0.6);\n}\n.notification .header {\n  padding: 0.5rem;\n  color: alpha(#d3c6aa,0.5);\n}\n.notification .header .app-icon {\n  margin: 0 0.4rem;\n}\n.notification .header .app-name {\n  margin-right: 0.3rem;\n  font-weight: bold;\n}\n.notification .header .app-name:first-child {\n  margin-left: 0.4rem;\n}\n.notification .header .time {\n  margin: 0 0.4rem;\n}\n.notification .header button {\n  border-radius: 0.25em;\n  padding: 0.2rem;\n  min-width: 0;\n  min-height: 0;\n  background-color: #e67e80;\n  color: #1e2428;\n}\n.notification separator {\n  margin: 0 0.4rem;\n  background-color: alpha(#d3c6aa,0.1);\n}\n.notification .content {\n  margin: 1rem;\n  margin-top: 0.5rem;\n}\n.notification .content .summary {\n  font-size: 1em;\n  color: #d3c6aa;\n}\n.notification .content .body {\n  color: alpha(#d3c6aa,0.6);\n  font-size: 1em;\n}\n.notification .content .image {\n  border: 1px solid alpha(#d3c6aa,0.02);\n  margin-right: 0.5rem;\n  border-radius: 0.25em;\n  min-width: 100px;\n  min-height: 100px;\n  background-size: cover;\n  background-position: center;\n}\n.notification .actions {\n  margin: 1rem;\n  margin-top: 0;\n}\n.notification .actions button {\n  margin: 0 0.3rem;\n  padding: 0.3rem 0;\n  font-size: 0.8rem;\n  border-radius: 0.25em;\n  background-color: alpha(#d3c6aa,0.1);\n}\n.notification .actions button:first-child {\n  margin-left: 0;\n}\n.notification .actions button:last-child {\n  margin-right: 0;\n}';

// ../../../../../usr/share/ags/js/lib/gtk4/index.ts
import Astal from "gi://Astal?version=4.0";
import Gtk2 from "gi://Gtk?version=4.0";
import Gdk2 from "gi://Gdk?version=4.0";

// ../../../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
import Gtk4 from "gi://Gtk?version=4.0";
import Astal2 from "gi://Astal?version=4.0";

// ../../../../../usr/share/ags/js/node_modules/gnim/dist/gtk4/jsx-runtime.ts
import Gtk3 from "gi://Gtk?version=4.0";
import Gio4 from "gi://Gio?version=2.0";
var adw = await import("gi://Adw").then((m) => m.default).catch(() => null);
var dummyBuilder = new Gtk3.Builder();
var { intrinsicElements } = configue({
  initProps(ctor) {
    if (ctor === Gtk3.Stack) {
      const keys = [
        "visibleChildName",
        "visible_child_name"
      ];
      return keys;
    }
    if (adw && ctor === adw.ToggleGroup) {
      const keys = [
        "active",
        "activeName",
        "active_name"
      ];
      return keys;
    }
  },
  setCss(object, css) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set css on ${object}`));
    }
    const ctx = object.get_style_context();
    let provider;
    const setter2 = (css2) => {
      if (!css2.includes("{") || !css2.includes("}")) {
        css2 = `* { ${css2} }`;
      }
      if (provider) ctx.remove_provider(provider);
      provider = new Gtk3.CssProvider();
      provider.load_from_string(css2);
      ctx.add_provider(provider, Gtk3.STYLE_PROVIDER_PRIORITY_USER);
    };
    if (css instanceof Accessor) {
      setter2(css.get());
      const dispose = css.subscribe(() => setter2(css.get()));
      onCleanup(dispose);
    } else {
      setter2(css);
    }
  },
  setClass(object, className) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set className on ${object}`));
    }
    if (className instanceof Accessor) {
      object.cssClasses = className.get().split(/\s+/);
      const dispose = className.subscribe(
        () => object.cssClasses = className.get().split(/\s+/)
      );
      onCleanup(dispose);
    } else {
      object.set_css_classes(className.split(/\s+/));
    }
  },
  textNode(text) {
    return Gtk3.Label.new(text.toString());
  },
  // `set_child` and especially `remove` might be way too generic and there might
  // be cases where it does not actually do what we want it to do
  //
  // if there is a usecase for either of these two that does something else than
  // we expect it to do here in a JSX context we have to check for known instances
  removeChild(parent, child) {
    if (parent instanceof Gtk3.Widget && child instanceof Gtk3.EventController) {
      return parent.remove_controller(child);
    }
    if ("set_child" in parent && typeof parent.set_child == "function") {
      return parent.set_child(null);
    }
    if ("remove" in parent && typeof parent.remove == "function") {
      return parent.remove(child);
    }
    throw Error(`cannot remove ${child} from ${parent}`);
  },
  appendChild(parent, child) {
    if (child instanceof Gtk3.Adjustment && "set_adjustment" in parent && typeof parent.set_adjustment === "function") {
      return parent.set_adjustment(child);
    }
    if (child instanceof Gtk3.Widget && parent instanceof Gtk3.Stack && child.name !== "" && child.name !== null && getType(child) === "named") {
      return parent.add_named(child, child.name);
    }
    if (child instanceof Gtk3.Popover && parent instanceof Gtk3.MenuButton) {
      return parent.set_popover(child);
    }
    if (child instanceof Gio4.MenuModel && (parent instanceof Gtk3.MenuButton || parent instanceof Gtk3.PopoverMenu)) {
      return parent.set_menu_model(child);
    }
    if (child instanceof Gio4.MenuItem && parent instanceof Gio4.Menu) {
    }
    if (child instanceof Gtk3.Window && parent instanceof Gtk3.Application) {
      return parent.add_window(child);
    }
    if (child instanceof Gtk3.TextBuffer && parent instanceof Gtk3.TextView) {
      return parent.set_buffer(child);
    }
    if (parent instanceof Gtk3.Buildable) {
      return parent.vfunc_add_child(dummyBuilder, child, getType(child));
    }
    throw Error(`cannot add ${child} to ${parent}`);
  }
});

// ../../../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
Object.assign(intrinsicElements, {
  box: Gtk4.Box,
  button: Gtk4.Button,
  centerbox: Gtk4.CenterBox,
  // circularprogress: Astal.CircularProgress,
  drawingarea: Gtk4.DrawingArea,
  entry: Gtk4.Entry,
  image: Gtk4.Image,
  label: Gtk4.Label,
  levelbar: Gtk4.LevelBar,
  menubutton: Gtk4.MenuButton,
  overlay: Gtk4.Overlay,
  popover: Gtk4.Popover,
  revealer: Gtk4.Revealer,
  scrolledwindow: Gtk4.ScrolledWindow,
  slider: Astal2.Slider,
  stack: Gtk4.Stack,
  switch: Gtk4.Switch,
  togglebutton: Gtk4.ToggleButton,
  window: Astal2.Window
});

// components/bar/shared/module-container.tsx
function ModuleContainer({
  icon,
  label,
  class: className,
  ...props
}) {
  return /* @__PURE__ */ jsx("button", { class: "module-container " + className, ...props, children: /* @__PURE__ */ jsxs("box", { children: [
    /* @__PURE__ */ jsx("label", { class: "icon", label: icon }),
    /* @__PURE__ */ jsx("label", { class: "label", label })
  ] }) });
}

// components/bar/clock/helpers.ts
import GLib6 from "gi://GLib";

// ../../../../../usr/share/ags/js/lib/process.ts
import Gio5 from "gi://Gio?version=2.0";
import GLib5 from "gi://GLib?version=2.0";
var encoder = new TextEncoder();
var _exit_dec, _stderr_dec, _stdout_dec, _a5, _Process_decorators, _init3, _encoder, _outStream, _errStream, _inStream, _process, _Process_instances, readStream_fn;
_Process_decorators = [register()];
var _Process = class _Process extends (_a5 = GObject.Object, _stdout_dec = [signal(String)], _stderr_dec = [signal(String)], _exit_dec = [signal(Number, Boolean)], _a5) {
  constructor({ argv }) {
    super();
    __runInitializers(_init3, 5, this);
    __privateAdd(this, _Process_instances);
    __privateAdd(this, _encoder, new TextEncoder());
    __privateAdd(this, _outStream);
    __privateAdd(this, _errStream);
    __privateAdd(this, _inStream);
    __privateAdd(this, _process);
    const process = __privateSet(this, _process, Gio5.Subprocess.new(
      argv,
      Gio5.SubprocessFlags.STDIN_PIPE | Gio5.SubprocessFlags.STDOUT_PIPE | Gio5.SubprocessFlags.STDERR_PIPE
    ));
    __privateSet(this, _inStream, Gio5.DataOutputStream.new(process.get_stdin_pipe()));
    __privateSet(this, _outStream, Gio5.DataInputStream.new(process.get_stdout_pipe()));
    __privateSet(this, _errStream, Gio5.DataInputStream.new(process.get_stderr_pipe()));
    __privateMethod(this, _Process_instances, readStream_fn).call(this, __privateGet(this, _outStream));
    __privateMethod(this, _Process_instances, readStream_fn).call(this, __privateGet(this, _errStream));
    process.wait_async(null, (_, res) => {
      try {
        process.wait_finish(res);
      } catch {
      }
      if (process.get_if_exited()) {
        this.exit(process.get_exit_status(), false);
      }
      if (process.get_if_signaled()) {
        this.exit(process.get_term_sig(), true);
      }
    });
  }
  stdout(out) {
  }
  stderr(err) {
  }
  exit(code, signaled) {
  }
  connect(signal2, callback) {
    return super.connect(signal2, callback);
  }
  /**
   * Force quit the subprocess.
   */
  kill() {
    __privateGet(this, _process).force_exit();
  }
  /**
   * Send a signal to the subprocess.
   *
   * @param signal Signal number to be sent
   */
  signal(signal2) {
    __privateGet(this, _process).send_signal(signal2);
  }
  /**
   * Write a line to the subprocess' stdin synchronously.
   * See {@link Gio.DataOutputStream.prototype.write_bytes_async}
   *
   * @param str String to be written to stdin
   */
  write(str) {
    return new Promise((resolve, reject) => {
      __privateGet(this, _inStream).write_bytes_async(
        encoder.encode(str),
        GLib5.PRIORITY_DEFAULT,
        null,
        (_, res) => {
          try {
            resolve(__privateGet(this, _inStream).write_all_finish(res));
          } catch (error) {
            reject(error);
          }
        }
      );
    });
  }
  /**
   * Write a line to the subprocess' stdin asynchronously.
   *
   * @param str String to be written to stdin
   */
  async writeAsync(str) {
    return new Promise((resolve, reject) => {
      __privateGet(this, _inStream).write_all_async(
        __privateGet(this, _encoder).encode(str),
        GLib5.PRIORITY_DEFAULT,
        null,
        (_, res) => {
          try {
            resolve(void __privateGet(this, _inStream).write_all_finish(res));
          } catch (error) {
            reject(error);
          }
        }
      );
    });
  }
  /**
   * Start a new subprocess with the given command.
   * The first element of the vector is executed with the remaining
   * elements as the argument list.
   */
  static subprocessv(cmd) {
    return new _Process({ argv: cmd });
  }
  /**
   * Start a new subprocess with the given command
   * which is parsed using {@link GLib.shell_parse_argv}.
   */
  static subprocess(cmd) {
    const [, argv] = GLib5.shell_parse_argv(cmd);
    return _Process.subprocessv(argv);
  }
  /**
   * Execute a command synchronously.
   * The first element of the vector is executed with the remaining
   * elements as the argument list.
   *
   * @throws stderr
   * @return stdout of the subprocess
   */
  static execv(cmd) {
    const process = Gio5.Subprocess.new(
      cmd,
      Gio5.SubprocessFlags.STDERR_PIPE | Gio5.SubprocessFlags.STDOUT_PIPE
    );
    const [, out, err] = process.communicate_utf8(null, null);
    if (process.get_successful()) {
      return out.trim();
    } else {
      throw new Error(err);
    }
  }
  /**
   * Execute a command synchronously.
   * The command is parsed using {@link GLib.shell_parse_argv}.
   *
   * @throws stderr
   * @return stdout of the subprocess
   */
  static exec(cmd) {
    const [, argv] = GLib5.shell_parse_argv(cmd);
    return _Process.execv(argv);
  }
  /**
   * Execute a command asynchronously.
   * The first element of the vector is executed with the remaining
   * elements as the argument list.
   *
   * @throws stderr
   * @return stdout of the subprocess
   */
  static execAsyncv(cmd) {
    const process = Gio5.Subprocess.new(
      cmd,
      Gio5.SubprocessFlags.STDERR_PIPE | Gio5.SubprocessFlags.STDOUT_PIPE
    );
    return new Promise((resolve, reject) => {
      process.communicate_utf8_async(null, null, (_, res) => {
        try {
          const [, out, err] = process.communicate_utf8_finish(res);
          if (process.get_successful()) {
            return resolve(out.trim());
          } else {
            reject(new Error(err.trim()));
          }
        } catch (error) {
          reject(error);
        }
      });
    });
  }
  /**
   * Execute a command asynchronously.
   * The command is parsed using {@link GLib.shell_parse_argv}.
   *
   * @throws stderr
   * @return stdout of the subprocess
   */
  static execAsync(cmd) {
    const [, argv] = GLib5.shell_parse_argv(cmd);
    return _Process.execAsyncv(argv);
  }
};
_init3 = __decoratorStart(_a5);
_encoder = new WeakMap();
_outStream = new WeakMap();
_errStream = new WeakMap();
_inStream = new WeakMap();
_process = new WeakMap();
_Process_instances = new WeakSet();
readStream_fn = function(stream) {
  stream.read_line_async(GLib5.PRIORITY_DEFAULT, null, (_, res) => {
    try {
      const [output] = stream.read_line_finish_utf8(res);
      if (output !== null) {
        if (stream === __privateGet(this, _errStream)) {
          this.stderr(output.trim());
        } else {
          this.stdout(output.trim());
        }
        __privateMethod(this, _Process_instances, readStream_fn).call(this, stream);
      }
    } catch (error) {
      console.error(error);
    }
  });
};
__decorateElement(_init3, 1, "stdout", _stdout_dec, _Process);
__decorateElement(_init3, 1, "stderr", _stderr_dec, _Process);
__decorateElement(_init3, 1, "exit", _exit_dec, _Process);
_Process = __decorateElement(_init3, 0, "Process", _Process_decorators, _Process);
__runInitializers(_init3, 1, _Process);
var Process = _Process;
function execAsync(cmd) {
  if (Array.isArray(cmd)) {
    return Process.execAsyncv(cmd);
  } else {
    return Process.execAsync(cmd);
  }
}

// ../../../../../usr/share/ags/js/lib/time.ts
var _cancelled_dec, _now_dec, _a6, _Timer_decorators, _init4;
_Timer_decorators = [register()];
var _Timer = class _Timer extends (_a6 = GObject.Object, _now_dec = [signal()], _cancelled_dec = [signal()], _a6) {
  constructor() {
    super(...arguments);
    __runInitializers(_init4, 5, this);
  }
  now() {
  }
  cancelled() {
  }
  static interval(interval3, callback) {
    const { timer, now } = _Timer.new(callback, () => {
      if (immediate.is_destroyed()) immediate.destroy();
      if (source.is_destroyed()) source.destroy();
    });
    const immediate = setTimeout(now);
    const source = setInterval(now, interval3);
    return timer;
  }
  static timeout(interval3, callback) {
    const { timer, now } = _Timer.new(callback, () => {
      if (source.is_destroyed()) source.destroy();
    });
    const source = setTimeout(now, interval3);
    return timer;
  }
  static idle(callback) {
    const { timer, now } = _Timer.new(callback, () => {
      if (source.is_destroyed()) source.destroy();
    });
    const source = setTimeout(now);
    return timer;
  }
  static new(onNow, onCancelled) {
    const timer = new _Timer();
    const now = timer.connect("now", () => void onNow?.());
    const cancelled = timer.connect("cancelled", () => {
      timer.disconnect(now);
      timer.disconnect(cancelled);
      onCancelled?.();
    });
    return { timer, now: () => timer.now() };
  }
  connect(signal2, callback) {
    return super.connect(signal2, callback);
  }
  cancel() {
    this.cancelled();
  }
};
_init4 = __decoratorStart(_a6);
__decorateElement(_init4, 1, "now", _now_dec, _Timer);
__decorateElement(_init4, 1, "cancelled", _cancelled_dec, _Timer);
_Timer = __decorateElement(_init4, 0, "Timer", _Timer_decorators, _Timer);
__runInitializers(_init4, 1, _Timer);
var Timer = _Timer;
var { interval, timeout, idle } = Timer;
function createPoll(init, ival, execOrFn, transform) {
  let currentValue = init;
  let timer = null;
  const subscribers = /* @__PURE__ */ new Set();
  function set2(value) {
    if (value !== currentValue) {
      currentValue = value;
      Array.from(subscribers).forEach((cb) => cb());
    }
  }
  function compute() {
    if (typeof execOrFn === "function") {
      const value = execOrFn(currentValue);
      if (value instanceof Promise) {
        value.then(set2);
      } else {
        set2(value);
      }
    } else {
      execAsync(execOrFn).then((stdout) => {
        set2(transform ? transform(stdout, currentValue) : stdout);
      });
    }
  }
  function subscribe(callback) {
    if (subscribers.size === 0) {
      setTimeout(compute);
      timer = setInterval(compute, ival);
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0 && timer) {
        clearInterval(timer);
        timer = null;
      }
    };
  }
  return new Accessor(() => currentValue, subscribe);
}

// components/bar/clock/helpers.ts
function formatDateTime(format = "%a, %b %d - %H:%M") {
  return createPoll("", 6e4, () => {
    return GLib6.DateTime.new_now_local().format(format);
  });
}
var clockLabel = formatDateTime("%H:%M");
var clockTooltip = formatDateTime();

// components/bar/clock/index.tsx
function Clock() {
  return /* @__PURE__ */ jsx(
    ModuleContainer,
    {
      class: "clock",
      icon: "\uE8B5",
      label: clockLabel,
      tooltipText: clockTooltip
    }
  );
}

// components/bar/workspaces/index.tsx
import AstalHyprland from "gi://AstalHyprland";

// utils/index.ts
function range(max) {
  return Array.from({ length: max }, (_, i) => i);
}
async function bash(strings, ...values) {
  const cmd = typeof strings === "string" ? strings : strings.flatMap((str, i) => str + `${values[i] ?? ""}`).join("");
  return execAsync(["bash", "-c", cmd]).catch((err) => {
    console.error(cmd, err);
    return "";
  });
}

// components/bar/workspaces/index.tsx
function WsButton({ ws, ...props }) {
  const hyprland = AstalHyprland.get_default();
  const classNames = createComputed(
    [
      createBinding(hyprland, "focusedWorkspace"),
      createBinding(hyprland, "clients")
    ],
    (fws, _) => {
      const classes = ["workspace-button"];
      const active = fws.id == ws.id;
      if (active) classes.push("active");
      const occupied = hyprland.get_workspace(ws.id)?.get_clients().length > 0;
      if (occupied) classes.push("occupied");
      return classes;
    }
  );
  return /* @__PURE__ */ jsx(
    "button",
    {
      cssClasses: classNames,
      valign: Gtk2.Align.CENTER,
      halign: Gtk2.Align.CENTER,
      onClicked: () => ws.focus(),
      ...props
    }
  );
}
function Workspaces() {
  return /* @__PURE__ */ jsx("box", { cssClasses: ["workspaces"], spacing: 8, children: range(6).map((i) => /* @__PURE__ */ jsx(WsButton, { ws: AstalHyprland.Workspace.dummy(i + 1, null) })) });
}

// components/bar/volume/helpers/constants.ts
var icons = {
  muted: "\uE04F",
  low: "\uE04D",
  high: "\uE050",
  overamplified: "\uE98E"
};
var thresholds = {
  101: "overamplified",
  51: "high",
  1: "low",
  0: "muted"
};

// components/bar/volume/helpers/index.ts
import AstalWp from "gi://AstalWp";
var speaker = AstalWp.get_default()?.audio.default_speaker;
function getVolumeIcon(volume, mute) {
  const icon = mute ? 0 : [101, 51, 1, 0].find((ts) => ts <= volume * 100);
  return icon ? icons[thresholds[icon]] : icons.muted;
}
var volumeIcon = createComputed(
  [createBinding(speaker, "volume"), createBinding(speaker, "mute")],
  (volume, mute) => getVolumeIcon(volume, mute)
);
var volumeValue = createBinding(speaker, "volume").as((value) => {
  return Math.floor(value * 100).toString().padStart(3, "0") + "%";
});

// components/bar/volume/index.tsx
import AstalWp2 from "gi://AstalWp";
function Volume() {
  const speaker2 = AstalWp2.get_default()?.audio.default_speaker;
  function on_scroll(_, __, dx) {
    if (dx > 0) {
      speaker2.set_volume(speaker2.volume - 0.01);
    }
    if (dx < 0) {
      speaker2.set_volume(speaker2.volume + 0.01);
    }
  }
  return /* @__PURE__ */ jsx(
    ModuleContainer,
    {
      class: "volume",
      icon: volumeIcon,
      label: volumeValue,
      onClicked: () => bash("pavucontrol"),
      $: (self) => {
        const scroll_event = Gtk2.EventControllerScroll.new(
          Gtk2.EventControllerScrollFlags.VERTICAL
        );
        scroll_event.connect("scroll", on_scroll);
        self.add_controller(scroll_event);
      }
    }
  );
}

// components/bar/network/helpers/index.ts
import AstalNetwork from "gi://AstalNetwork";

// components/bar/network/helpers/constants.ts
var icons2 = {
  disconnected: "\uE1DA",
  wired: "\uEFE6",
  wifi_0: "\uF0B0",
  wifi_1: "\uEBE4",
  wifi_2: "\uEBD6",
  wifi_3: "\uEBE1",
  wifi_4: "\uE1D8"
};
var thresholds2 = {
  0: "wifi_0",
  20: "wifi_1",
  40: "wifi_2",
  60: "wifi_3",
  80: "wifi_4"
};

// components/bar/network/helpers/index.ts
var network = AstalNetwork.get_default();
function getNetworkIcon(primary, wifi) {
  if (primary === AstalNetwork.Primary.WIRED) {
    return icons2.wired;
  }
  if (primary === AstalNetwork.Primary.WIFI) {
    const iconThreshold = [80, 60, 40, 20, 0].find((ts) => ts <= wifi.strength);
    return icons2[thresholds2[iconThreshold]];
  }
  return icons2.disconnected;
}
var networkIcon = createComputed(
  [createBinding(network, "primary"), createBinding(network, "wifi")],
  (primary, wifi) => getNetworkIcon(primary, wifi)
);
var networkLabelAndTooltip = createComputed(
  [
    createBinding(network, "primary"),
    createBinding(network, "state"),
    createBinding(network, "connectivity"),
    ...network.wifi ? [createBinding(network.wifi, "enabled")] : []
  ],
  (primary) => {
    if (primary === AstalNetwork.Primary.WIRED) {
      return {
        label: network.wired.device.interface,
        tooltip: "Connected"
      };
    }
    if (primary === AstalNetwork.Primary.WIFI) {
      return {
        label: network.wifi.active_access_point.ssid,
        tooltip: formatWifiInfo(network.wifi)
      };
    }
    return { label: "Unavailable", tooltip: "No Internet" };
  }
);
var formatFrequency = (frequency) => {
  return `${(frequency / 1e3).toFixed(2)}MHz`;
};
var formatWifiInfo = (wifi) => {
  return `Network: ${wifi.ssid} 
Signal Strength: ${wifi.strength}% 
Frequency: ${formatFrequency(wifi.frequency)}`;
};

// components/bar/network/index.tsx
function Network() {
  return /* @__PURE__ */ jsx(
    ModuleContainer,
    {
      class: "network",
      icon: networkIcon,
      label: networkLabelAndTooltip((value) => value.label),
      tooltipText: networkLabelAndTooltip((value) => value.tooltip),
      onClicked: () => bash("nm-connection-editor")
    }
  );
}

// components/bar/netstats/helpers/index.ts
var interval2 = 5e3;
var lastTotalDownBytes = 0;
var lastTotalUpBytes = 0;
var networkSpeed = createPoll(
  {
    download: 0,
    upload: 0
  },
  interval2,
  ["cat", "/proc/net/dev"],
  (content, _) => {
    const lines = content.split("\n");
    let totalDownBytes = 0;
    let totalUpBytes = 0;
    for (let i = 0; i < lines.length; ++i) {
      const fields = lines[i].trim().split(/\W+/);
      if (fields.length <= 2) {
        continue;
      }
      const interfce = fields[0];
      const currentInterfaceDownBytes = Number.parseInt(fields[1]);
      const currentInterfaceUpBytes = Number.parseInt(fields[9]);
      if (interfce === "lo" || // Created by python-based bandwidth manager "traffictoll".
      interfce.match(/^ifb[0-9]+/) || // Created by lxd container manager.
      interfce.match(/^lxdbr[0-9]+/) || interfce.match(/^virbr[0-9]+/) || interfce.match(/^br[0-9]+/) || interfce.match(/^vnet[0-9]+/) || interfce.match(/^tun[0-9]+/) || interfce.match(/^tap[0-9]+/) || isNaN(currentInterfaceDownBytes) || isNaN(currentInterfaceUpBytes)) {
        continue;
      }
      totalDownBytes += currentInterfaceDownBytes;
      totalUpBytes += currentInterfaceUpBytes;
    }
    if (lastTotalDownBytes === 0) {
      lastTotalDownBytes = totalDownBytes;
    }
    if (lastTotalUpBytes === 0) {
      lastTotalUpBytes = totalUpBytes;
    }
    const downloadSpeed = (totalDownBytes - lastTotalDownBytes) / interval2;
    const uploadSpeed = (totalUpBytes - lastTotalUpBytes) / interval2;
    lastTotalDownBytes = totalDownBytes;
    lastTotalUpBytes = totalUpBytes;
    return {
      download: downloadSpeed,
      upload: uploadSpeed
    };
  }
);
var helpers_default = networkSpeed;

// components/bar/netstats/index.tsx
function Netstats() {
  return /* @__PURE__ */ jsx(
    ModuleContainer,
    {
      class: "netstats",
      icon: "\uE640",
      label: helpers_default((value) => {
        const downloadSpeed = value.download;
        const uploadSpeed = value.upload;
        const higherSpeed = downloadSpeed >= uploadSpeed ? downloadSpeed : uploadSpeed;
        const speed = (higherSpeed / 1e3).toFixed(2);
        const symbol = downloadSpeed >= uploadSpeed ? "\uF0D7" : "\uF0D8";
        return `${speed} MB/s ${symbol}`;
      })
    }
  );
}

// components/bar/systray/index.tsx
import AstalTray from "gi://AstalTray";
function Systray() {
  const tray = AstalTray.get_default();
  const items = createBinding(tray, "items");
  return /* @__PURE__ */ jsx("box", { class: "systray", spacing: 2, children: /* @__PURE__ */ jsx(For, { each: items, children: (item) => /* @__PURE__ */ jsxs(
    "menubutton",
    {
      class: "button",
      $: (self) => {
        self.insert_action_group("dbusmenu", item.actionGroup);
      },
      tooltipText: createBinding(item, "tooltipMarkup"),
      children: [
        /* @__PURE__ */ jsx("image", { class: "button-icon", gicon: createBinding(item, "gicon") }),
        Gtk2.PopoverMenu.new_from_model(item.menuModel)
      ]
    }
  ) }) });
}

// components/bar/exit-button/index.tsx
function ExitButton() {
  return /* @__PURE__ */ jsx(
    ModuleContainer,
    {
      class: "exit-button",
      icon: "\uE879",
      label: "Exit",
      onClicked: () => bash("~/.config/hypr/scripts/dmenu.sh quit")
    }
  );
}

// components/bar/index.tsx
function Bar(gdkmonitor) {
  const { BOTTOM, LEFT, RIGHT } = Astal.WindowAnchor;
  return /* @__PURE__ */ jsx(
    "window",
    {
      visible: true,
      name: "bar",
      class: "Bar",
      gdkmonitor,
      exclusivity: Astal.Exclusivity.EXCLUSIVE,
      anchor: BOTTOM | LEFT | RIGHT,
      application: app_default,
      children: /* @__PURE__ */ jsxs("centerbox", { cssClasses: ["bar-container"], children: [
        /* @__PURE__ */ jsx("box", { $type: "start", halign: Gtk2.Align.START, spacing: 8, children: /* @__PURE__ */ jsx(Workspaces, {}) }),
        /* @__PURE__ */ jsxs("box", { $type: "end", halign: Gtk2.Align.END, spacing: 4, children: [
          /* @__PURE__ */ jsx(Systray, {}),
          /* @__PURE__ */ jsx(Volume, {}),
          /* @__PURE__ */ jsx(Network, {}),
          /* @__PURE__ */ jsx(Netstats, {}),
          /* @__PURE__ */ jsx(Clock, {}),
          /* @__PURE__ */ jsx(ExitButton, {})
        ] })
      ] })
    }
  );
}

// components/notifications/index.tsx
import AstalNotifd2 from "gi://AstalNotifd";

// components/notifications/notification.tsx
import Gtk5 from "gi://Gtk?version=4.0";
import Gdk4 from "gi://Gdk?version=4.0";
import Adw from "gi://Adw";
import GLib7 from "gi://GLib";
import AstalNotifd from "gi://AstalNotifd";
import Pango from "gi://Pango";
function isIcon(icon) {
  const iconTheme = Gtk5.IconTheme.get_for_display(Gdk4.Display.get_default());
  return icon && iconTheme.has_icon(icon);
}
function fileExists(path) {
  return GLib7.file_test(path, GLib7.FileTest.EXISTS);
}
function time(time2, format = "%H:%M") {
  return GLib7.DateTime.new_from_unix_local(time2).format(format);
}
function urgency(n) {
  const { LOW, NORMAL, CRITICAL } = AstalNotifd.Urgency;
  switch (n.urgency) {
    case LOW:
      return "low";
    case CRITICAL:
      return "critical";
    case NORMAL:
    default:
      return "normal";
  }
}
function Notification({ notification: n }) {
  return /* @__PURE__ */ jsx(Adw.Clamp, { maximumSize: 400, children: /* @__PURE__ */ jsxs(
    "box",
    {
      widthRequest: 400,
      class: `notification ${urgency(n)}`,
      orientation: Gtk5.Orientation.VERTICAL,
      children: [
        /* @__PURE__ */ jsxs("box", { class: "header", children: [
          (n.appIcon || isIcon(n.desktopEntry)) && /* @__PURE__ */ jsx(
            "image",
            {
              class: "app-icon",
              visible: Boolean(n.appIcon || n.desktopEntry),
              iconName: n.appIcon || n.desktopEntry
            }
          ),
          /* @__PURE__ */ jsx(
            "label",
            {
              class: "app-name",
              halign: Gtk5.Align.START,
              ellipsize: Pango.EllipsizeMode.END,
              label: n.appName || "Unknown"
            }
          ),
          /* @__PURE__ */ jsx(
            "label",
            {
              class: "time",
              hexpand: true,
              halign: Gtk5.Align.END,
              label: time(n.time)
            }
          ),
          /* @__PURE__ */ jsx("button", { onClicked: () => n.dismiss(), children: /* @__PURE__ */ jsx("image", { iconName: "window-close-symbolic" }) })
        ] }),
        /* @__PURE__ */ jsx(Gtk5.Separator, { visible: true }),
        /* @__PURE__ */ jsxs("box", { class: "content", children: [
          n.image && fileExists(n.image) && /* @__PURE__ */ jsx("image", { valign: Gtk5.Align.START, class: "image", file: n.image }),
          n.image && isIcon(n.image) && /* @__PURE__ */ jsx("box", { valign: Gtk5.Align.START, class: "icon-image", children: /* @__PURE__ */ jsx(
            "image",
            {
              iconName: n.image,
              halign: Gtk5.Align.CENTER,
              valign: Gtk5.Align.CENTER
            }
          ) }),
          /* @__PURE__ */ jsxs("box", { orientation: Gtk5.Orientation.VERTICAL, children: [
            /* @__PURE__ */ jsx(
              "label",
              {
                class: "summary",
                halign: Gtk5.Align.START,
                xalign: 0,
                label: n.summary,
                ellipsize: Pango.EllipsizeMode.END
              }
            ),
            n.body && /* @__PURE__ */ jsx(
              "label",
              {
                class: "body",
                wrap: true,
                useMarkup: true,
                halign: Gtk5.Align.START,
                xalign: 0,
                justify: Gtk5.Justification.FILL,
                label: n.body
              }
            )
          ] })
        ] }),
        n.actions.length > 0 && /* @__PURE__ */ jsx("box", { class: "actions", children: n.actions.map(({ label, id }) => /* @__PURE__ */ jsx("button", { hexpand: true, onClicked: () => n.invoke(id), children: /* @__PURE__ */ jsx("label", { label, halign: Gtk5.Align.CENTER, hexpand: true }) })) })
      ]
    }
  ) });
}

// components/notifications/index.tsx
function NotificationPopups() {
  const monitors = createBinding(app_default, "monitors");
  const notifd = AstalNotifd2.get_default();
  const [notifications, setNotifications] = createState(
    new Array()
  );
  const notifiedHandler = notifd.connect("notified", (_, id, replaced) => {
    const notification = notifd.get_notification(id);
    if (replaced && notifications.get().some((n) => n.id === id)) {
      setNotifications((ns) => ns.map((n) => n.id === id ? notification : n));
    } else {
      setNotifications((ns) => [notification, ...ns]);
    }
  });
  const resolvedHandler = notifd.connect("resolved", (_, id) => {
    setNotifications((ns) => ns.filter((n) => n.id !== id));
  });
  onCleanup(() => {
    notifd.disconnect(notifiedHandler);
    notifd.disconnect(resolvedHandler);
  });
  return /* @__PURE__ */ jsx(For, { each: monitors, children: (monitor) => /* @__PURE__ */ jsx(
    "window",
    {
      $: (self) => onCleanup(() => self.destroy()),
      class: "notification-popups",
      gdkmonitor: monitor,
      visible: notifications((ns) => ns.length > 0),
      anchor: Astal.WindowAnchor.BOTTOM | Astal.WindowAnchor.RIGHT,
      children: /* @__PURE__ */ jsx("box", { orientation: Gtk2.Orientation.VERTICAL, children: /* @__PURE__ */ jsx(For, { each: notifications, children: (notification) => /* @__PURE__ */ jsx(Notification, { notification }) }) })
    }
  ) });
}

// app.ts
app_default.start({
  css: styles_default,
  main() {
    app_default.get_monitors().map(Bar);
    NotificationPopups();
  }
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvb3ZlcnJpZGVzLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9nb2JqZWN0LnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC91dGlsLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2d0azQvYXBwLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9kYnVzLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2FwcC9kYnVzLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvanN4LnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvRnJhZ21lbnQudHMiLCAiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9zdGF0ZS50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L2Vudi50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L3Njb3BlLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvRm9yLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvVGhpcy50cyIsICJzYXNzOi9ob21lL2RtMW5oLy5kb3RzL2NvbmZpZy9hZ3Mvc3R5bGVzL3N0eWxlcy5zY3NzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2d0azQvaW5kZXgudHMiLCAiLi4vLi4vLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvZ3RrNC9qc3gtcnVudGltZS50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvZ3RrNC9qc3gtcnVudGltZS50cyIsICJjb21wb25lbnRzL2Jhci9zaGFyZWQvbW9kdWxlLWNvbnRhaW5lci50c3giLCAiY29tcG9uZW50cy9iYXIvY2xvY2svaGVscGVycy50cyIsICIuLi8uLi8uLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi9wcm9jZXNzLnRzIiwgIi4uLy4uLy4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL3RpbWUudHMiLCAiY29tcG9uZW50cy9iYXIvY2xvY2svaW5kZXgudHN4IiwgImNvbXBvbmVudHMvYmFyL3dvcmtzcGFjZXMvaW5kZXgudHN4IiwgInV0aWxzL2luZGV4LnRzIiwgImNvbXBvbmVudHMvYmFyL3ZvbHVtZS9oZWxwZXJzL2NvbnN0YW50cy50cyIsICJjb21wb25lbnRzL2Jhci92b2x1bWUvaGVscGVycy9pbmRleC50cyIsICJjb21wb25lbnRzL2Jhci92b2x1bWUvaW5kZXgudHN4IiwgImNvbXBvbmVudHMvYmFyL25ldHdvcmsvaGVscGVycy9pbmRleC50cyIsICJjb21wb25lbnRzL2Jhci9uZXR3b3JrL2hlbHBlcnMvY29uc3RhbnRzLnRzIiwgImNvbXBvbmVudHMvYmFyL25ldHdvcmsvaW5kZXgudHN4IiwgImNvbXBvbmVudHMvYmFyL25ldHN0YXRzL2hlbHBlcnMvaW5kZXgudHMiLCAiY29tcG9uZW50cy9iYXIvbmV0c3RhdHMvaW5kZXgudHN4IiwgImNvbXBvbmVudHMvYmFyL3N5c3RyYXkvaW5kZXgudHN4IiwgImNvbXBvbmVudHMvYmFyL2V4aXQtYnV0dG9uL2luZGV4LnRzeCIsICJjb21wb25lbnRzL2Jhci9pbmRleC50c3giLCAiY29tcG9uZW50cy9ub3RpZmljYXRpb25zL2luZGV4LnRzeCIsICJjb21wb25lbnRzL25vdGlmaWNhdGlvbnMvbm90aWZpY2F0aW9uLnRzeCIsICJhcHAudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbIi8qKlxuICogV29ya2Fyb3VuZCBmb3IgXCJDYW4ndCBjb252ZXJ0IG5vbi1udWxsIHBvaW50ZXIgdG8gSlMgdmFsdWUgXCJcbiAqL1xuXG5leHBvcnQge31cblxuZnVuY3Rpb24gc25ha2VpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyXG4gICAgICAgIC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxXyQyXCIpXG4gICAgICAgIC5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIilcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbn1cblxuYXN5bmMgZnVuY3Rpb24gc3VwcHJlc3M8VD4obW9kOiBQcm9taXNlPHsgZGVmYXVsdDogVCB9PiwgcGF0Y2g6IChtOiBUKSA9PiB2b2lkKSB7XG4gICAgcmV0dXJuIG1vZC50aGVuKChtKSA9PiBwYXRjaChtLmRlZmF1bHQpKS5jYXRjaCgoKSA9PiB2b2lkIDApXG59XG5cbmZ1bmN0aW9uIHBhdGNoPFAgZXh0ZW5kcyBvYmplY3Q+KHByb3RvOiBQLCBwcm9wOiBFeHRyYWN0PGtleW9mIFAsIHN0cmluZz4pIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkocHJvdG8sIHByb3AsIHtcbiAgICAgICAgZ2V0KCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXNbYGdldF8ke3NuYWtlaWZ5KHByb3ApfWBdKClcbiAgICAgICAgfSxcbiAgICB9KVxufVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsQXBwc1wiKSwgKHsgQXBwcywgQXBwbGljYXRpb24gfSkgPT4ge1xuICAgIHBhdGNoKEFwcHMucHJvdG90eXBlLCBcImxpc3RcIilcbiAgICBwYXRjaChBcHBsaWNhdGlvbi5wcm90b3R5cGUsIFwia2V5d29yZHNcIilcbiAgICBwYXRjaChBcHBsaWNhdGlvbi5wcm90b3R5cGUsIFwiY2F0ZWdvcmllc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEJhdHRlcnlcIiksICh7IFVQb3dlciB9KSA9PiB7XG4gICAgcGF0Y2goVVBvd2VyLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsQmx1ZXRvb3RoXCIpLCAoeyBBZGFwdGVyLCBCbHVldG9vdGgsIERldmljZSB9KSA9PiB7XG4gICAgcGF0Y2goQWRhcHRlci5wcm90b3R5cGUsIFwidXVpZHNcIilcbiAgICBwYXRjaChCbHVldG9vdGgucHJvdG90eXBlLCBcImFkYXB0ZXJzXCIpXG4gICAgcGF0Y2goQmx1ZXRvb3RoLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG4gICAgcGF0Y2goRGV2aWNlLnByb3RvdHlwZSwgXCJ1dWlkc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbEh5cHJsYW5kXCIpLCAoeyBIeXBybGFuZCwgTW9uaXRvciwgV29ya3NwYWNlIH0pID0+IHtcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwiYmluZHNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwibW9uaXRvcnNcIilcbiAgICBwYXRjaChIeXBybGFuZC5wcm90b3R5cGUsIFwid29ya3NwYWNlc1wiKVxuICAgIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgXCJjbGllbnRzXCIpXG4gICAgcGF0Y2goTW9uaXRvci5wcm90b3R5cGUsIFwiYXZhaWxhYmxlTW9kZXNcIilcbiAgICBwYXRjaChNb25pdG9yLnByb3RvdHlwZSwgXCJhdmFpbGFibGVfbW9kZXNcIilcbiAgICBwYXRjaChXb3Jrc3BhY2UucHJvdG90eXBlLCBcImNsaWVudHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxNcHJpc1wiKSwgKHsgTXByaXMsIFBsYXllciB9KSA9PiB7XG4gICAgcGF0Y2goTXByaXMucHJvdG90eXBlLCBcInBsYXllcnNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZF91cmlfc2NoZW1lc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkVXJpU2NoZW1lc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkX21pbWVfdHlwZXNcIilcbiAgICBwYXRjaChQbGF5ZXIucHJvdG90eXBlLCBcInN1cHBvcnRlZE1pbWVUeXBlc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwiY29tbWVudHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxOZXR3b3JrXCIpLCAoeyBXaWZpIH0pID0+IHtcbiAgICBwYXRjaChXaWZpLnByb3RvdHlwZSwgXCJhY2Nlc3NfcG9pbnRzXCIpXG4gICAgcGF0Y2goV2lmaS5wcm90b3R5cGUsIFwiYWNjZXNzUG9pbnRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsTm90aWZkXCIpLCAoeyBOb3RpZmQsIE5vdGlmaWNhdGlvbiB9KSA9PiB7XG4gICAgcGF0Y2goTm90aWZkLnByb3RvdHlwZSwgXCJub3RpZmljYXRpb25zXCIpXG4gICAgcGF0Y2goTm90aWZpY2F0aW9uLnByb3RvdHlwZSwgXCJhY3Rpb25zXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsUG93ZXJQcm9maWxlc1wiKSwgKHsgUG93ZXJQcm9maWxlcyB9KSA9PiB7XG4gICAgcGF0Y2goUG93ZXJQcm9maWxlcy5wcm90b3R5cGUsIFwiYWN0aW9uc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbFdwXCIpLCAoeyBXcCwgQXVkaW8sIFZpZGVvIH0pID0+IHtcbiAgICBwYXRjaChXcC5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJzdHJlYW1zXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcInJlY29yZGVyc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJtaWNyb3Bob25lc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJzcGVha2Vyc1wiKVxuICAgIHBhdGNoKEF1ZGlvLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInN0cmVhbXNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwicmVjb3JkZXJzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInNpbmtzXCIpXG4gICAgcGF0Y2goVmlkZW8ucHJvdG90eXBlLCBcInNvdXJjZXNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwiZGV2aWNlc1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbFRyYXlcIiksICh7IFRyYXkgfSkgPT4ge1xuICAgIHBhdGNoKFRyYXkucHJvdG90eXBlLCBcIml0ZW1zXCIpXG59KVxuIiwgIi8qKlxuICogSW4gdGhlIGZ1dHVyZSBJIHdvdWxkIGxpa2UgdG8gbWFrZSB0eXBlIGRlY2xhcmF0aW9uIGluIGRlY29yYXRvcnMgb3B0aW9uYWxcbiAqIGFuZCBpbmZlciBpdCBmcm9tIHR5cGVzY3JpcHQgdHlwZXMgYXQgdHJhbnNwaWxlIHRpbWUuIEN1cnJlbnRseSwgd2UgY291bGRcbiAqIGVpdGhlciB1c2Ugc3RhZ2UgMiBkZWNvcmF0b3JzIHdpdGggdGhlIFwiZW1pdERlY29yYXRvck1ldGFkYXRhXCIgYW5kXG4gKiBcImV4cGVyaW1lbnRhbERlY29yYXRvcnNcIiB0c2NvbmZpZyBvcHRpb25zLiBIb3dldmVyLCBtZXRhZGF0YSBpcyBub3Qgc3VwcG9ydGVkXG4gKiBieSBlc2J1aWxkIHdoaWNoIGlzIHdoYXQgSSdtIG1vc3RseSB0YXJnZXRpbmcgYXMgdGhlIGJ1bmRsZXIgZm9yIHBlcmZvcm1hbmNlXG4gKiByZWFzb25zLiBodHRwczovL2dpdGh1Yi5jb20vZXZhbncvZXNidWlsZC9pc3N1ZXMvMjU3XG4gKiBIb3dldmVyLCBJIGJlbGlldmUgdGhhdCB3ZSBzaG91bGQgbm90IHVzZSBzdGFnZSAyIGFueW1vcmUsXG4gKiBzbyBJJ20gd2FpdGluZyBmb3IgYSBiZXR0ZXIgYWx0ZXJuYXRpdmUuXG4gKi9cblxuaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliXCJcbmltcG9ydCB7IGRlZmluZVByb3BlcnR5R2V0dGVyLCBrZWJhYmlmeSB9IGZyb20gXCIuL3V0aWwuanNcIlxuXG5jb25zdCBwcml2ID0gU3ltYm9sKFwiZ29iamVjdCBwcml2YXRlXCIpXG5jb25zdCB7IGRlZmluZVByb3BlcnR5LCBmcm9tRW50cmllcywgZW50cmllcyB9ID0gT2JqZWN0XG5jb25zdCB7IE9iamVjdDogR09iaiwgcmVnaXN0ZXJDbGFzcyB9ID0gR09iamVjdFxuXG5leHBvcnQgeyBHT2JqZWN0IGFzIGRlZmF1bHQgfVxuZXhwb3J0IHsgR09iaiBhcyBPYmplY3QgfVxuXG5leHBvcnQgY29uc3QgU2lnbmFsRmxhZ3MgPSBHT2JqZWN0LlNpZ25hbEZsYWdzXG5leHBvcnQgdHlwZSBTaWduYWxGbGFncyA9IEdPYmplY3QuU2lnbmFsRmxhZ3NcblxuZXhwb3J0IGNvbnN0IEFjY3VtdWxhdG9yVHlwZSA9IEdPYmplY3QuQWNjdW11bGF0b3JUeXBlXG5leHBvcnQgdHlwZSBBY2N1bXVsYXRvclR5cGUgPSBHT2JqZWN0LkFjY3VtdWxhdG9yVHlwZVxuXG5leHBvcnQgdHlwZSBQYXJhbVNwZWM8VCA9IHVua25vd24+ID0gR09iamVjdC5QYXJhbVNwZWM8VD5cbmV4cG9ydCBjb25zdCBQYXJhbVNwZWMgPSBHT2JqZWN0LlBhcmFtU3BlY1xuXG5leHBvcnQgdHlwZSBQYXJhbUZsYWdzID0gR09iamVjdC5QYXJhbUZsYWdzXG5leHBvcnQgY29uc3QgUGFyYW1GbGFncyA9IEdPYmplY3QuUGFyYW1GbGFnc1xuXG5leHBvcnQgdHlwZSBHVHlwZTxUID0gdW5rbm93bj4gPSBHT2JqZWN0LkdUeXBlPFQ+XG5cbnR5cGUgR09iaiA9IEdPYmplY3QuT2JqZWN0XG5cbmludGVyZmFjZSBHT2JqUHJpdmF0ZSBleHRlbmRzIEdPYmoge1xuICAgIFtwcml2XTogUmVjb3JkPHN0cmluZywgYW55PlxufVxuXG50eXBlIE1ldGEgPSB7XG4gICAgcHJvcGVydGllcz86IHtcbiAgICAgICAgW2ZpZWxkTmFtZTogc3RyaW5nXToge1xuICAgICAgICAgICAgZmxhZ3M6IFBhcmFtRmxhZ3NcbiAgICAgICAgICAgIHR5cGU6IFByb3BlcnR5VHlwZURlY2xhcmF0aW9uPHVua25vd24+XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2lnbmFscz86IHtcbiAgICAgICAgW2tleTogc3RyaW5nXToge1xuICAgICAgICAgICAgZGVmYXVsdD86IGJvb2xlYW5cbiAgICAgICAgICAgIGZsYWdzPzogU2lnbmFsRmxhZ3NcbiAgICAgICAgICAgIGFjY3VtdWxhdG9yPzogQWNjdW11bGF0b3JUeXBlXG4gICAgICAgICAgICByZXR1cm5fdHlwZT86IEdUeXBlXG4gICAgICAgICAgICBwYXJhbV90eXBlcz86IEFycmF5PEdUeXBlPlxuICAgICAgICAgICAgbWV0aG9kOiAoLi4uYXJnOiBhbnlbXSkgPT4gdW5rbm93blxuICAgICAgICB9XG4gICAgfVxufVxuXG50eXBlIENvbnRleHQgPSB7IHByaXZhdGU6IGZhbHNlOyBzdGF0aWM6IGZhbHNlOyBuYW1lOiBzdHJpbmcgfVxudHlwZSBQcm9wZXJ0eUNvbnRleHQ8VD4gPSBDbGFzc0ZpZWxkRGVjb3JhdG9yQ29udGV4dDxHT2JqLCBUPiAmIENvbnRleHRcbnR5cGUgR2V0dGVyQ29udGV4dDxUPiA9IENsYXNzR2V0dGVyRGVjb3JhdG9yQ29udGV4dDxHT2JqLCBUPiAmIENvbnRleHRcbnR5cGUgU2V0dGVyQ29udGV4dDxUPiA9IENsYXNzU2V0dGVyRGVjb3JhdG9yQ29udGV4dDxHT2JqLCBUPiAmIENvbnRleHRcbnR5cGUgU2lnbmFsQ29udGV4dDxUIGV4dGVuZHMgKCkgPT4gYW55PiA9IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxHT2JqLCBUPiAmIENvbnRleHRcblxudHlwZSBTaWduYWxPcHRpb25zID0ge1xuICAgIGRlZmF1bHQ/OiBib29sZWFuXG4gICAgZmxhZ3M/OiBTaWduYWxGbGFnc1xuICAgIGFjY3VtdWxhdG9yPzogQWNjdW11bGF0b3JUeXBlXG59XG5cbnR5cGUgUHJvcGVydHlUeXBlRGVjbGFyYXRpb248VD4gPVxuICAgIHwgKChuYW1lOiBzdHJpbmcsIGZsYWdzOiBQYXJhbUZsYWdzKSA9PiBQYXJhbVNwZWM8VD4pXG4gICAgfCBQYXJhbVNwZWM8VD5cbiAgICB8IHsgJGd0eXBlOiBHVHlwZTxUPiB9XG5cbmZ1bmN0aW9uIGFzc2VydEZpZWxkKFxuICAgIGN0eDogQ2xhc3NGaWVsZERlY29yYXRvckNvbnRleHQgfCBDbGFzc0dldHRlckRlY29yYXRvckNvbnRleHQgfCBDbGFzc1NldHRlckRlY29yYXRvckNvbnRleHQsXG4pOiBzdHJpbmcge1xuICAgIGlmIChjdHgucHJpdmF0ZSkgdGhyb3cgRXJyb3IoXCJwcml2YXRlIGZpZWxkcyBhcmUgbm90IHN1cHBvcnRlZFwiKVxuICAgIGlmIChjdHguc3RhdGljKSB0aHJvdyBFcnJvcihcInN0YXRpYyBmaWVsZHMgYXJlIG5vdCBzdXBwb3J0ZWRcIilcblxuICAgIGlmICh0eXBlb2YgY3R4Lm5hbWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJvbmx5IHN0cmluZ3MgY2FuIGJlIGdvYmplY3QgcHJvcGVydHkga2V5c1wiKVxuICAgIH1cblxuICAgIHJldHVybiBjdHgubmFtZVxufVxuXG4vKipcbiAqIERlZmluZXMgYSByZWFkYWJsZSAqYW5kKiB3cml0ZWFibGUgcHJvcGVydHkgdG8gYmUgcmVnaXN0ZXJlZCB3aGVuIHVzaW5nIHRoZSB7QGxpbmsgcmVnaXN0ZXJ9IGRlY29yYXRvci5cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHNcbiAqIGNsYXNzIHtcbiAqICAgICBcXEBwcm9wZXJ0eShTdHJpbmcpIG15UHJvcCA9IFwiXCJcbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gcHJvcGVydHk8VD4odHlwZURlY2xhcmF0aW9uOiBQcm9wZXJ0eVR5cGVEZWNsYXJhdGlvbjxUPikge1xuICAgIHJldHVybiBmdW5jdGlvbiAoXG4gICAgICAgIF86IHZvaWQsXG4gICAgICAgIGN0eDogUHJvcGVydHlDb250ZXh0PFQ+LFxuICAgICAgICBvcHRpb25zPzogeyBtZXRhT25seTogdHJ1ZSB9LFxuICAgICk6ICh0aGlzOiBHT2JqLCBpbml0OiBUKSA9PiBhbnkge1xuICAgICAgICBjb25zdCBmaWVsZE5hbWUgPSBhc3NlcnRGaWVsZChjdHgpXG4gICAgICAgIGNvbnN0IGtleSA9IGtlYmFiaWZ5KGZpZWxkTmFtZSlcbiAgICAgICAgY29uc3QgbWV0YTogUGFydGlhbDxNZXRhPiA9IGN0eC5tZXRhZGF0YSFcblxuICAgICAgICBtZXRhLnByb3BlcnRpZXMgPz89IHt9XG4gICAgICAgIG1ldGEucHJvcGVydGllc1tmaWVsZE5hbWVdID0geyBmbGFnczogUGFyYW1GbGFncy5SRUFEV1JJVEUsIHR5cGU6IHR5cGVEZWNsYXJhdGlvbiB9XG5cbiAgICAgICAgY3R4LmFkZEluaXRpYWxpemVyKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGRlZmluZVByb3BlcnR5R2V0dGVyKHRoaXMsIGZpZWxkTmFtZSBhcyBFeHRyYWN0PGtleW9mIEdPYmosIHN0cmluZz4pXG5cbiAgICAgICAgICAgIGlmIChvcHRpb25zICYmIG9wdGlvbnMubWV0YU9ubHkpIHJldHVyblxuXG4gICAgICAgICAgICBkZWZpbmVQcm9wZXJ0eSh0aGlzLCBmaWVsZE5hbWUsIHtcbiAgICAgICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgc2V0KHY6IFQpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXNbcHJpdl1ba2V5XSAhPT0gdikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1twcml2XVtrZXldID0gdlxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5ub3RpZnkoa2V5KVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQoKTogVCB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzW3ByaXZdW2tleV1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSBzYXRpc2ZpZXMgVGhpc1R5cGU8R09ialByaXZhdGU+KVxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoaW5pdDogVCkge1xuICAgICAgICAgICAgY29uc3QgZGljdCA9ICgodGhpcyBhcyBHT2JqUHJpdmF0ZSlbcHJpdl0gPz89IHt9KVxuICAgICAgICAgICAgZGljdFtrZXldID0gaW5pdFxuICAgICAgICAgICAgcmV0dXJuIGluaXRcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLyoqXG4gKiBEZWZpbmVzIGEgcmVhZC1vbmx5IHByb3BlcnR5IHRvIGJlIHJlZ2lzdGVyZWQgd2hlbiB1c2luZyB0aGUge0BsaW5rIHJlZ2lzdGVyfSBkZWNvcmF0b3IuXG4gKiBJZiB0aGUgZ2V0dGVyIGhhcyBhIHNldHRlciBwYWlyIGRlY29yYXRlZCB3aXRoIHRoZSB7QGxpbmsgc2V0dGVyfSBkZWNvcmF0b3IgdGhlIHByb3BlcnR5IHdpbGwgYmUgcmVhZGFibGUgKmFuZCogd3JpdGVhYmxlLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogY2xhc3Mge1xuICogICAgIFxcQHNldHRlcihTdHJpbmcpXG4gKiAgICAgc2V0IG15UHJvcCh2YWx1ZTogc3RyaW5nKSB7XG4gKiAgICAgICAgIC8vXG4gKiAgICAgfVxuICpcbiAqICAgICBcXEBnZXR0ZXIoU3RyaW5nKVxuICogICAgIGdldCBteVByb3AoKTogc3RyaW5nIHtcbiAqICAgICAgICAgcmV0dXJuIFwiXCJcbiAqICAgICB9XG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldHRlcjxUPih0eXBlRGVjbGFyYXRpb246IFByb3BlcnR5VHlwZURlY2xhcmF0aW9uPFQ+KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChnZXQ6ICh0aGlzOiBHT2JqKSA9PiBhbnksIGN0eDogR2V0dGVyQ29udGV4dDxUPikge1xuICAgICAgICBjb25zdCBmaWVsZE5hbWUgPSBhc3NlcnRGaWVsZChjdHgpXG4gICAgICAgIGNvbnN0IG1ldGE6IFBhcnRpYWw8TWV0YT4gPSBjdHgubWV0YWRhdGEhXG4gICAgICAgIGNvbnN0IHByb3BzID0gKG1ldGEucHJvcGVydGllcyA/Pz0ge30pXG4gICAgICAgIGlmIChmaWVsZE5hbWUgaW4gcHJvcHMpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgZmxhZ3MsIHR5cGUgfSA9IHByb3BzW2ZpZWxkTmFtZV1cbiAgICAgICAgICAgIHByb3BzW2ZpZWxkTmFtZV0gPSB7IGZsYWdzOiBmbGFncyB8IFBhcmFtRmxhZ3MuUkVBREFCTEUsIHR5cGUgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcHJvcHNbZmllbGROYW1lXSA9IHsgZmxhZ3M6IFBhcmFtRmxhZ3MuUkVBREFCTEUsIHR5cGU6IHR5cGVEZWNsYXJhdGlvbiB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGdldFxuICAgIH1cbn1cblxuLyoqXG4gKiBEZWZpbmVzIGEgd3JpdGUtb25seSBwcm9wZXJ0eSB0byBiZSByZWdpc3RlcmVkIHdoZW4gdXNpbmcgdGhlIHtAbGluayByZWdpc3Rlcn0gZGVjb3JhdG9yLlxuICogSWYgdGhlIHNldHRlciBoYXMgYSBnZXR0ZXIgcGFpciBkZWNvcmF0ZWQgd2l0aCB0aGUge0BsaW5rIGdldHRlcn0gZGVjb3JhdG9yIHRoZSBwcm9wZXJ0eSB3aWxsIGJlIHdyaXRlYWJsZSAqYW5kKiByZWFkYWJsZS5cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHNcbiAqIGNsYXNzIHtcbiAqICAgICBcXEBzZXR0ZXIoU3RyaW5nKVxuICogICAgIHNldCBteVByb3AodmFsdWU6IHN0cmluZykge1xuICogICAgICAgICAvL1xuICogICAgIH1cbiAqXG4gKiAgICAgXFxAZ2V0dGVyKFN0cmluZylcbiAqICAgICBnZXQgbXlQcm9wKCk6IHN0cmluZyB7XG4gKiAgICAgICAgIHJldHVybiBcIlwiXG4gKiAgICAgfVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXR0ZXI8VD4odHlwZURlY2xhcmF0aW9uOiBQcm9wZXJ0eVR5cGVEZWNsYXJhdGlvbjxUPikge1xuICAgIHJldHVybiBmdW5jdGlvbiAoc2V0OiAodGhpczogR09iaiwgdmFsdWU6IGFueSkgPT4gdm9pZCwgY3R4OiBTZXR0ZXJDb250ZXh0PFQ+KSB7XG4gICAgICAgIGNvbnN0IGZpZWxkTmFtZSA9IGFzc2VydEZpZWxkKGN0eClcbiAgICAgICAgY29uc3QgbWV0YTogUGFydGlhbDxNZXRhPiA9IGN0eC5tZXRhZGF0YSFcbiAgICAgICAgY29uc3QgcHJvcHMgPSAobWV0YS5wcm9wZXJ0aWVzID8/PSB7fSlcbiAgICAgICAgaWYgKGZpZWxkTmFtZSBpbiBwcm9wcykge1xuICAgICAgICAgICAgY29uc3QgeyBmbGFncywgdHlwZSB9ID0gcHJvcHNbZmllbGROYW1lXVxuICAgICAgICAgICAgcHJvcHNbZmllbGROYW1lXSA9IHsgZmxhZ3M6IGZsYWdzIHwgUGFyYW1GbGFncy5XUklUQUJMRSwgdHlwZSB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwcm9wc1tmaWVsZE5hbWVdID0geyBmbGFnczogUGFyYW1GbGFncy5XUklUQUJMRSwgdHlwZTogdHlwZURlY2xhcmF0aW9uIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2V0XG4gICAgfVxufVxuXG50eXBlIFBhcmFtVHlwZTxQPiA9IFAgZXh0ZW5kcyB7ICRndHlwZTogR1R5cGU8aW5mZXIgVD4gfSA/IFQgOiBQIGV4dGVuZHMgR1R5cGU8aW5mZXIgVD4gPyBUIDogbmV2ZXJcblxudHlwZSBQYXJhbVR5cGVzPFBhcmFtcz4gPSB7XG4gICAgW0sgaW4ga2V5b2YgUGFyYW1zXTogUGFyYW1UeXBlPFBhcmFtc1tLXT5cbn1cblxuLyoqXG4gKiBEZWZpbmVzIGEgc2lnbmFsIHRvIGJlIHJlZ2lzdGVyZWQgd2hlbiB1c2luZyB0aGUge0BsaW5rIHJlZ2lzdGVyfSBkZWNvcmF0b3IuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjbGFzcyB7XG4gKiAgICAgXFxAc2lnbmFsKFtTdHJpbmcsIE51bWJlcl0sIEJvb2xlYW4sIHtcbiAqICAgICAgICAgYWNjdW11bGF0b3I6IEFjY3VtdWxhdG9yVHlwZS5GSVJTVF9XSU5TXG4gKiAgICAgfSlcbiAqICAgICBteVNpZ25hbChzdHI6IHN0cmluZywgbjogbnVtYmVyKTogYm9vbGVhbiB7XG4gKiAgICAgICAgIC8vIGRlZmF1bHQgaGFuZGxlclxuICogICAgICAgICByZXR1cm4gZmFsc2VcbiAqICAgICB9XG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNpZ25hbDxcbiAgICBjb25zdCBQYXJhbXMgZXh0ZW5kcyBBcnJheTx7ICRndHlwZTogR1R5cGUgfSB8IEdUeXBlPixcbiAgICBSZXR1cm4gZXh0ZW5kcyB7ICRndHlwZTogR1R5cGUgfSB8IEdUeXBlLFxuPihcbiAgICBwYXJhbXM6IFBhcmFtcyxcbiAgICByZXR1cm5UeXBlOiBSZXR1cm4sXG4gICAgb3B0aW9ucz86IFNpZ25hbE9wdGlvbnMsXG4pOiAoXG4gICAgbWV0aG9kOiAodGhpczogR09iaiwgLi4uYXJnczogYW55KSA9PiBQYXJhbVR5cGU8UmV0dXJuPixcbiAgICBjdHg6IFNpZ25hbENvbnRleHQ8dHlwZW9mIG1ldGhvZD4sXG4pID0+ICh0aGlzOiBHT2JqLCAuLi5hcmdzOiBQYXJhbVR5cGVzPFBhcmFtcz4pID0+IGFueVxuXG4vKipcbiAqIERlZmluZXMgYSBzaWduYWwgdG8gYmUgcmVnaXN0ZXJlZCB3aGVuIHVzaW5nIHRoZSB7QGxpbmsgcmVnaXN0ZXJ9IGRlY29yYXRvci5cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHNcbiAqIGNsYXNzIHtcbiAqICAgICBcXEBzaWduYWwoU3RyaW5nLCBOdW1iZXIpXG4gKiAgICAgbXlTaWduYWwoc3RyOiBzdHJpbmcsIG46IG51bWJlcik6IHZvaWQge1xuICogICAgICAgICAvLyBkZWZhdWx0IGhhbmRsZXJcbiAqICAgICB9XG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNpZ25hbDxQYXJhbXMgZXh0ZW5kcyBBcnJheTx7ICRndHlwZTogR1R5cGUgfSB8IEdUeXBlPj4oXG4gICAgLi4ucGFyYW1zOiBQYXJhbXNcbik6IChcbiAgICBtZXRob2Q6ICh0aGlzOiBHT2JqZWN0Lk9iamVjdCwgLi4uYXJnczogYW55KSA9PiB2b2lkLFxuICAgIGN0eDogU2lnbmFsQ29udGV4dDx0eXBlb2YgbWV0aG9kPixcbikgPT4gKHRoaXM6IEdPYmplY3QuT2JqZWN0LCAuLi5hcmdzOiBQYXJhbVR5cGVzPFBhcmFtcz4pID0+IHZvaWRcblxuZXhwb3J0IGZ1bmN0aW9uIHNpZ25hbDxcbiAgICBQYXJhbXMgZXh0ZW5kcyBBcnJheTx7ICRndHlwZTogR1R5cGUgfSB8IEdUeXBlPixcbiAgICBSZXR1cm4gZXh0ZW5kcyB7ICRndHlwZTogR1R5cGUgfSB8IEdUeXBlLFxuPihcbiAgICAuLi5hcmdzOiBQYXJhbXMgfCBbcGFyYW1zOiBQYXJhbXMsIHJldHVyblR5cGU/OiBSZXR1cm4sIG9wdGlvbnM/OiBTaWduYWxPcHRpb25zXVxuKTogKFxuICAgIG1ldGhvZDogKHRoaXM6IEdPYmosIC4uLmFyZ3M6IFBhcmFtVHlwZXM8UGFyYW1zPikgPT4gUGFyYW1UeXBlPFJldHVybj4gfCB2b2lkLFxuICAgIGN0eDogU2lnbmFsQ29udGV4dDx0eXBlb2YgbWV0aG9kPixcbikgPT4gdHlwZW9mIG1ldGhvZCB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChtZXRob2QsIGN0eCkge1xuICAgICAgICBpZiAoY3R4LnByaXZhdGUpIHRocm93IEVycm9yKFwicHJpdmF0ZSBmaWVsZHMgYXJlIG5vdCBzdXBwb3J0ZWRcIilcbiAgICAgICAgaWYgKGN0eC5zdGF0aWMpIHRocm93IEVycm9yKFwic3RhdGljIGZpZWxkcyBhcmUgbm90IHN1cHBvcnRlZFwiKVxuXG4gICAgICAgIGlmICh0eXBlb2YgY3R4Lm5hbWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKFwib25seSBzdHJpbmdzIGNhbiBiZSBnb2JqZWN0IHNpZ25hbHNcIilcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHNpZ25hbE5hbWUgPSBrZWJhYmlmeShjdHgubmFtZSlcbiAgICAgICAgY29uc3QgbWV0YTogUGFydGlhbDxNZXRhPiA9IGN0eC5tZXRhZGF0YSFcbiAgICAgICAgY29uc3Qgc2lnbmFscyA9IChtZXRhLnNpZ25hbHMgPz89IHt9KVxuXG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGFyZ3NbMF0pKSB7XG4gICAgICAgICAgICBjb25zdCBbcGFyYW1zLCByZXR1cm5UeXBlLCBvcHRpb25zXSA9IGFyZ3MgYXMgW1xuICAgICAgICAgICAgICAgIHBhcmFtczogUGFyYW1zLFxuICAgICAgICAgICAgICAgIHJldHVyblR5cGU/OiBSZXR1cm4sXG4gICAgICAgICAgICAgICAgb3B0aW9ucz86IFNpZ25hbE9wdGlvbnMsXG4gICAgICAgICAgICBdXG5cbiAgICAgICAgICAgIHNpZ25hbHNbc2lnbmFsTmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgbWV0aG9kLFxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6IG9wdGlvbnM/LmRlZmF1bHQgPz8gdHJ1ZSxcbiAgICAgICAgICAgICAgICBwYXJhbV90eXBlczogcGFyYW1zLm1hcCgoaSkgPT4gKFwiJGd0eXBlXCIgaW4gaSA/IGkuJGd0eXBlIDogaSkpLFxuICAgICAgICAgICAgICAgIC4uLihyZXR1cm5UeXBlICYmIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuX3R5cGU6IFwiJGd0eXBlXCIgaW4gcmV0dXJuVHlwZSA/IHJldHVyblR5cGUuJGd0eXBlIDogcmV0dXJuVHlwZSxcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAuLi4ob3B0aW9ucz8uZmxhZ3MgJiYge1xuICAgICAgICAgICAgICAgICAgICBmbGFnczogb3B0aW9ucy5mbGFncyxcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAuLi4odHlwZW9mIG9wdGlvbnM/LmFjY3VtdWxhdG9yID09PSBcIm51bWJlclwiICYmIHtcbiAgICAgICAgICAgICAgICAgICAgYWNjdW11bGF0b3I6IG9wdGlvbnMuYWNjdW11bGF0b3IsXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBwYXJhbXMgPSBhcmdzIGFzIFBhcmFtc1xuICAgICAgICAgICAgc2lnbmFsc1tzaWduYWxOYW1lXSA9IHtcbiAgICAgICAgICAgICAgICBtZXRob2QsXG4gICAgICAgICAgICAgICAgZGVmYXVsdDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBwYXJhbV90eXBlczogcGFyYW1zLm1hcCgoaSkgPT4gKFwiJGd0eXBlXCIgaW4gaSA/IGkuJGd0eXBlIDogaSkpLFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICguLi5wYXJhbXMpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmVtaXQoc2lnbmFsTmFtZSwgLi4ucGFyYW1zKSBhcyBQYXJhbVR5cGU8UmV0dXJuPlxuICAgICAgICB9XG4gICAgfVxufVxuXG5jb25zdCBNQVhJTlQgPSAyICoqIDMxIC0gMVxuY29uc3QgTUlOSU5UID0gLSgyICoqIDMxKVxuY29uc3QgTUFYVUlOVCA9IDIgKiogMzIgLSAxXG5jb25zdCBNQVhGTE9BVCA9IDMuNDAyODIzNWUzOFxuY29uc3QgTUlORkxPQVQgPSAtMy40MDI4MjM1ZTM4XG5jb25zdCBNSU5JTlQ2NCA9IE51bWJlci5NSU5fU0FGRV9JTlRFR0VSXG5jb25zdCBNQVhJTlQ2NCA9IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSXG5cbmZ1bmN0aW9uIHBzcGVjRnJvbUdUeXBlKHR5cGU6IEdUeXBlPHVua25vd24+LCBuYW1lOiBzdHJpbmcsIGZsYWdzOiBQYXJhbUZsYWdzKSB7XG4gICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0JPT0xFQU46XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmJvb2xlYW4obmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIGZhbHNlKVxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9TVFJJTkc6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLnN0cmluZyhuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgXCJcIilcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfSU5UOlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5pbnQobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIE1JTklOVCwgTUFYSU5ULCAwKVxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9VSU5UOlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy51aW50KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCAwLCBNQVhVSU5ULCAwKVxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9JTlQ2NDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMuaW50NjQobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIE1JTklOVDY0LCBNQVhJTlQ2NCwgMClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfVUlOVDY0OlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy51aW50NjQobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIDAsIE51bWJlci5NQVhfU0FGRV9JTlRFR0VSLCAwKVxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9GTE9BVDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMuZmxvYXQobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIE1JTkZMT0FULCBNQVhGTE9BVCwgMClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfRE9VQkxFOlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5kb3VibGUobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIE51bWJlci5NSU5fVkFMVUUsIE51bWJlci5NSU5fVkFMVUUsIDApXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0pTT0JKRUNUOlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5qc29iamVjdChuYW1lLCBcIlwiLCBcIlwiLCBmbGFncylcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfVkFSSUFOVDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMub2JqZWN0KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzIGFzIGFueSwgR0xpYi5WYXJpYW50KVxuXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0VOVU06XG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0lOVEVSRkFDRTpcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfQk9YRUQ6XG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX1BPSU5URVI6XG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX1BBUkFNOlxuICAgICAgICBjYXNlIEdPYmplY3QudHlwZV9mcm9tX25hbWUoXCJHVHlwZVwiKTpcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBjYW5ub3QgZ3Vlc3MgUGFyYW1TcGVjIGZyb20gR1R5cGUgXCIke3R5cGV9XCJgKVxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9PQkpFQ1Q6XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLm9iamVjdChuYW1lLCBcIlwiLCBcIlwiLCBmbGFncyBhcyBhbnksIHR5cGUpXG4gICAgfVxufVxuXG5mdW5jdGlvbiBwc3BlYyhuYW1lOiBzdHJpbmcsIGZsYWdzOiBQYXJhbUZsYWdzLCBkZWNsYXJhdGlvbjogUHJvcGVydHlUeXBlRGVjbGFyYXRpb248dW5rbm93bj4pIHtcbiAgICBpZiAoZGVjbGFyYXRpb24gaW5zdGFuY2VvZiBQYXJhbVNwZWMpIHJldHVybiBkZWNsYXJhdGlvblxuXG4gICAgaWYgKGRlY2xhcmF0aW9uID09PSBPYmplY3QgfHwgZGVjbGFyYXRpb24gPT09IEZ1bmN0aW9uIHx8IGRlY2xhcmF0aW9uID09PSBBcnJheSkge1xuICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmpzb2JqZWN0KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzKVxuICAgIH1cblxuICAgIGlmIChkZWNsYXJhdGlvbiA9PT0gU3RyaW5nKSB7XG4gICAgICAgIHJldHVybiBQYXJhbVNwZWMuc3RyaW5nKG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBcIlwiKVxuICAgIH1cblxuICAgIGlmIChkZWNsYXJhdGlvbiA9PT0gTnVtYmVyKSB7XG4gICAgICAgIHJldHVybiBQYXJhbVNwZWMuZG91YmxlKG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCAtTnVtYmVyLk1BWF9WQUxVRSwgTnVtYmVyLk1BWF9WQUxVRSwgMClcbiAgICB9XG5cbiAgICBpZiAoZGVjbGFyYXRpb24gPT09IEJvb2xlYW4pIHtcbiAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5ib29sZWFuKG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBmYWxzZSlcbiAgICB9XG5cbiAgICBpZiAoXCIkZ3R5cGVcIiBpbiBkZWNsYXJhdGlvbikge1xuICAgICAgICByZXR1cm4gcHNwZWNGcm9tR1R5cGUoZGVjbGFyYXRpb24uJGd0eXBlLCBuYW1lLCBmbGFncylcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGRlY2xhcmF0aW9uID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIGRlY2xhcmF0aW9uKG5hbWUsIGZsYWdzKVxuICAgIH1cblxuICAgIHRocm93IEVycm9yKFwiaW52YWxpZCBQcm9wZXJ0eVR5cGVEZWNsYXJhdGlvblwiKVxufVxuXG50eXBlIE1ldGFJbmZvID0gR09iamVjdC5NZXRhSW5mbzxuZXZlciwgQXJyYXk8eyAkZ3R5cGU6IEdUeXBlPHVua25vd24+IH0+LCBuZXZlcj5cblxuLyoqXG4gKiBSZXBsYWNlbWVudCBmb3Ige0BsaW5rIEdPYmplY3QucmVnaXN0ZXJDbGFzc31cbiAqIFRoaXMgZGVjb3JhdG9yIGNvbnN1bWVzIG1ldGFkYXRhIG5lZWRlZCB0byByZWdpc3RlciB0eXBlcyB3aGVyZSB0aGUgcHJvdmlkZWQgZGVjb3JhdG9ycyBhcmUgdXNlZDpcbiAqIC0ge0BsaW5rIHNpZ25hbH1cbiAqIC0ge0BsaW5rIHByb3BlcnR5fVxuICogLSB7QGxpbmsgZ2V0dGVyfVxuICogLSB7QGxpbmsgc2V0dGVyfVxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogXFxAcmVnaXN0ZXIoeyBHVHlwZU5hbWU6IFwiTXlDbGFzc1wiIH0pXG4gKiBjbGFzcyBNeUNsYXNzIGV4dGVuZHMgR09iamVjdC5PYmplY3QgeyB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyPENscyBleHRlbmRzIHsgbmV3ICguLi5hcmdzOiBhbnkpOiBHT2JqIH0+KG9wdGlvbnM6IE1ldGFJbmZvID0ge30pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGNsczogQ2xzLCBjdHg6IENsYXNzRGVjb3JhdG9yQ29udGV4dDxDbHM+KSB7XG4gICAgICAgIGNvbnN0IHQgPSBvcHRpb25zLlRlbXBsYXRlXG5cbiAgICAgICAgaWYgKHR5cGVvZiB0ID09PSBcInN0cmluZ1wiICYmICF0LnN0YXJ0c1dpdGgoXCJyZXNvdXJjZTovL1wiKSAmJiAhdC5zdGFydHNXaXRoKFwiZmlsZTovL1wiKSkge1xuICAgICAgICAgICAgb3B0aW9ucy5UZW1wbGF0ZSA9IG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZSh0KVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgbWV0YSA9IGN0eC5tZXRhZGF0YSEgYXMgTWV0YVxuXG4gICAgICAgIGNvbnN0IHByb3BzOiBSZWNvcmQ8c3RyaW5nLCBQYXJhbVNwZWM8dW5rbm93bj4+ID0gZnJvbUVudHJpZXMoXG4gICAgICAgICAgICBlbnRyaWVzKG1ldGEucHJvcGVydGllcyA/PyB7fSkubWFwKChbZmllbGROYW1lLCB7IGZsYWdzLCB0eXBlIH1dKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3Qga2V5ID0ga2ViYWJpZnkoZmllbGROYW1lKVxuICAgICAgICAgICAgICAgIGNvbnN0IHNwZWMgPSBwc3BlYyhrZXksIGZsYWdzLCB0eXBlKVxuICAgICAgICAgICAgICAgIHJldHVybiBba2V5LCBzcGVjXVxuICAgICAgICAgICAgfSksXG4gICAgICAgIClcblxuICAgICAgICBjb25zdCBzaWduYWxzID0gZnJvbUVudHJpZXMoXG4gICAgICAgICAgICBlbnRyaWVzKG1ldGEuc2lnbmFscyA/PyB7fSkubWFwKChbc2lnbmFsTmFtZSwgeyBkZWZhdWx0OiBkZWYsIG1ldGhvZCwgLi4uc2lnbmFsIH1dKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGRlZikge1xuICAgICAgICAgICAgICAgICAgICBkZWZpbmVQcm9wZXJ0eShjbHMucHJvdG90eXBlLCBgb25fJHtzaWduYWxOYW1lLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKX1gLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogbWV0aG9kLFxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gW3NpZ25hbE5hbWUsIHNpZ25hbF1cbiAgICAgICAgICAgIH0pLFxuICAgICAgICApXG5cbiAgICAgICAgZGVsZXRlIG1ldGEucHJvcGVydGllc1xuICAgICAgICBkZWxldGUgbWV0YS5zaWduYWxzXG5cbiAgICAgICAgcmVnaXN0ZXJDbGFzcyh7IC4uLm9wdGlvbnMsIFByb3BlcnRpZXM6IHByb3BzLCBTaWduYWxzOiBzaWduYWxzIH0sIGNscylcbiAgICB9XG59XG5cbi8qKlxuICogQGV4cGVyaW1lbnRhbFxuICogQXNzZXJ0cyBhIGd0eXBlIGluIGNhc2VzIHdoZXJlIHRoZSB0eXBlIGlzIHRvbyBsb29zZS9zdHJpY3QuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiB0eXBlIFR1cGxlID0gW251bWJlciwgbnVtYmVyXVxuICogY29uc3QgVHVwbGUgPSBndHlwZTxUdXBsZT4oQXJyYXkpXG4gKlxuICogY2xhc3Mge1xuICogICBcXEBwcm9wZXJ0eShUdXBsZSkgdmFsdWUgPSBbMSwgMl0gYXMgVHVwbGVcbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ3R5cGU8QXNzZXJ0Pih0eXBlOiBHVHlwZTxhbnk+IHwgeyAkZ3R5cGU6IEdUeXBlPGFueT4gfSk6IHtcbiAgICAkZ3R5cGU6IEdUeXBlPEFzc2VydD5cbn0ge1xuICAgIHJldHVybiBcIiRndHlwZVwiIGluIHR5cGUgPyB0eXBlIDogeyAkZ3R5cGU6IHR5cGUgfVxufVxuXG5kZWNsYXJlIGdsb2JhbCB7XG4gICAgaW50ZXJmYWNlIEZ1bmN0aW9uQ29uc3RydWN0b3Ige1xuICAgICAgICAkZ3R5cGU6IEdUeXBlPCguLi5hcmdzOiBhbnlbXSkgPT4gYW55PlxuICAgIH1cblxuICAgIGludGVyZmFjZSBBcnJheUNvbnN0cnVjdG9yIHtcbiAgICAgICAgJGd0eXBlOiBHVHlwZTxhbnlbXT5cbiAgICB9XG5cbiAgICBpbnRlcmZhY2UgRGF0ZUNvbnN0cnVjdG9yIHtcbiAgICAgICAgJGd0eXBlOiBHVHlwZTxEYXRlPlxuICAgIH1cblxuICAgIGludGVyZmFjZSBNYXBDb25zdHJ1Y3RvciB7XG4gICAgICAgICRndHlwZTogR1R5cGU8TWFwPGFueSwgYW55Pj5cbiAgICB9XG5cbiAgICBpbnRlcmZhY2UgU2V0Q29uc3RydWN0b3Ige1xuICAgICAgICAkZ3R5cGU6IEdUeXBlPFNldDxhbnk+PlxuICAgIH1cbn1cblxuRnVuY3Rpb24uJGd0eXBlID0gT2JqZWN0LiRndHlwZSBhcyBGdW5jdGlvbkNvbnN0cnVjdG9yW1wiJGd0eXBlXCJdXG5BcnJheS4kZ3R5cGUgPSBPYmplY3QuJGd0eXBlIGFzIEFycmF5Q29uc3RydWN0b3JbXCIkZ3R5cGVcIl1cbkRhdGUuJGd0eXBlID0gT2JqZWN0LiRndHlwZSBhcyBEYXRlQ29uc3RydWN0b3JbXCIkZ3R5cGVcIl1cbk1hcC4kZ3R5cGUgPSBPYmplY3QuJGd0eXBlIGFzIE1hcENvbnN0cnVjdG9yW1wiJGd0eXBlXCJdXG5TZXQuJGd0eXBlID0gT2JqZWN0LiRndHlwZSBhcyBTZXRDb25zdHJ1Y3RvcltcIiRndHlwZVwiXVxuIiwgImltcG9ydCB0eXBlIEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5cbmV4cG9ydCBmdW5jdGlvbiBrZWJhYmlmeShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHJcbiAgICAgICAgLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csIFwiJDEtJDJcIilcbiAgICAgICAgLnJlcGxhY2VBbGwoXCJfXCIsIFwiLVwiKVxuICAgICAgICAudG9Mb3dlckNhc2UoKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc25ha2VpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyXG4gICAgICAgIC5yZXBsYWNlKC8oW2Etel0pKFtBLVpdKS9nLCBcIiQxLSQyXCIpXG4gICAgICAgIC5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIilcbiAgICAgICAgLnRvTG93ZXJDYXNlKClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhbWVsaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0ci5yZXBsYWNlKC9bLV9dKC4pL2csIChfLCBjaGFyKSA9PiBjaGFyLnRvVXBwZXJDYXNlKCkpXG59XG5cbmV4cG9ydCB0eXBlIFBhc2NhbGlmeTxTPiA9IFMgZXh0ZW5kcyBgJHtpbmZlciBIZWFkfSR7XCItXCIgfCBcIl9cIn0ke2luZmVyIFRhaWx9YFxuICAgID8gYCR7Q2FwaXRhbGl6ZTxIZWFkPn0ke1Bhc2NhbGlmeTxUYWlsPn1gXG4gICAgOiBTIGV4dGVuZHMgc3RyaW5nXG4gICAgICA/IENhcGl0YWxpemU8Uz5cbiAgICAgIDogbmV2ZXJcblxuZXhwb3J0IHR5cGUgWG1sTm9kZSA9IHtcbiAgICBuYW1lOiBzdHJpbmdcbiAgICBhdHRyaWJ1dGVzPzogUmVjb3JkPHN0cmluZywgc3RyaW5nPlxuICAgIGNoaWxkcmVuPzogQXJyYXk8WG1sTm9kZT5cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHhtbCh7IG5hbWUsIGF0dHJpYnV0ZXMsIGNoaWxkcmVuIH06IFhtbE5vZGUpIHtcbiAgICBsZXQgYnVpbGRlciA9IGA8JHtuYW1lfWBcblxuICAgIGNvbnN0IGF0dHJzID0gT2JqZWN0LmVudHJpZXMoYXR0cmlidXRlcyA/PyBbXSlcblxuICAgIGlmIChhdHRycy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIGF0dHJzKSB7XG4gICAgICAgICAgICBidWlsZGVyICs9IGAgJHtrZXl9PVwiJHt2YWx1ZX1cImBcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChjaGlsZHJlbiAmJiBjaGlsZHJlbi5sZW5ndGggPiAwKSB7XG4gICAgICAgIGJ1aWxkZXIgKz0gXCI+XCJcbiAgICAgICAgZm9yIChjb25zdCBub2RlIG9mIGNoaWxkcmVuKSB7XG4gICAgICAgICAgICBidWlsZGVyICs9IHhtbChub2RlKVxuICAgICAgICB9XG4gICAgICAgIGJ1aWxkZXIgKz0gYDwvJHtuYW1lfT5gXG4gICAgfSBlbHNlIHtcbiAgICAgICAgYnVpbGRlciArPSBcIiAvPlwiXG4gICAgfVxuXG4gICAgcmV0dXJuIGJ1aWxkZXJcbn1cblxuLy8gQmluZGluZ3Mgd29yayBvdmVyIHByb3BlcnRpZXMgaW4ga2ViYWItY2FzZSBiZWNhdXNlIHRoYXRzIHRoZSBjb252ZW50aW9uIG9mIGdvYmplY3Rcbi8vIGhvd2V2ZXIgaW4ganMgaXRzIGVpdGhlciBzbmFrZV9jYXNlIG9yIGNhbWVsQ2FzZVxuLy8gYWxzbyBvbiBEQnVzIGludGVyZmFjZXMgaXRzIFBhc2NhbENhc2UgYnkgY29udmVudGlvblxuLy8gc28gYXMgYSB3b3JrYXJvdW5kIHdlIHVzZSBnZXRfcHJvcGVydHlfbmFtZSBhbmQgb25seSB1c2UgdGhlIHByb3BlcnR5IGZpZWxkIGFzIGEgZmFsbGJhY2tcbmV4cG9ydCBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eUdldHRlcjxUIGV4dGVuZHMgb2JqZWN0PihvYmplY3Q6IFQsIHByb3A6IEV4dHJhY3Q8a2V5b2YgVCwgc3RyaW5nPikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmplY3QsIGBnZXRfJHtrZWJhYmlmeShwcm9wKS5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIil9YCwge1xuICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogKCkgPT4gb2JqZWN0W3Byb3BdLFxuICAgIH0pXG59XG5cbi8vIGF0dGVtcHQgc2V0dGluZyBhIHByb3BlcnR5IG9mIEdPYmplY3QuT2JqZWN0XG5leHBvcnQgZnVuY3Rpb24gc2V0KG9iajogR09iamVjdC5PYmplY3QsIHByb3A6IHN0cmluZywgdmFsdWU6IGFueSkge1xuICAgIGNvbnN0IGtleSA9IHNuYWtlaWZ5KHByb3ApXG4gICAgY29uc3QgZ2V0dGVyID0gYGdldF8ke2tleX1gIGFzIGtleW9mIHR5cGVvZiBvYmpcbiAgICBjb25zdCBzZXR0ZXIgPSBgc2V0XyR7a2V5fWAgYXMga2V5b2YgdHlwZW9mIG9ialxuXG4gICAgbGV0IGN1cnJlbnQ6IHVua25vd25cblxuICAgIGlmIChnZXR0ZXIgaW4gb2JqICYmIHR5cGVvZiBvYmpbZ2V0dGVyXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGN1cnJlbnQgPSAob2JqW2dldHRlcl0gYXMgKCkgPT4gdW5rbm93bikoKVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGN1cnJlbnQgPSBvYmpbcHJvcCBhcyBrZXlvZiB0eXBlb2Ygb2JqXVxuICAgIH1cblxuICAgIGlmIChjdXJyZW50ICE9PSB2YWx1ZSkge1xuICAgICAgICBpZiAoc2V0dGVyIGluIG9iaiAmJiB0eXBlb2Ygb2JqW3NldHRlcl0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgOyhvYmpbc2V0dGVyXSBhcyAodjogYW55KSA9PiB2b2lkKSh2YWx1ZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24ob2JqLCB7IFtwcm9wXTogdmFsdWUgfSlcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsICJpbXBvcnQgXCIuLi9vdmVycmlkZXMuanNcIlxuaW1wb3J0IEdPYmplY3QsIHsgcmVnaXN0ZXIsIHNpZ25hbCwgc2V0dGVyIH0gZnJvbSBcImduaW0vZ29iamVjdFwiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliP3ZlcnNpb249Mi4wXCJcbmltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHZGsgZnJvbSBcImdpOi8vR2RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvP3ZlcnNpb249Mi4wXCJcbmltcG9ydCB7IGdldHRlciB9IGZyb20gXCJnbmltL2dvYmplY3RcIlxuaW1wb3J0IHsgQXBwREJ1cyB9IGZyb20gXCIuLi9hcHAvZGJ1cy5qc1wiXG5pbXBvcnQgeyBzZXRDb25zb2xlTG9nRG9tYWluIH0gZnJvbSBcImNvbnNvbGVcIlxuaW1wb3J0IHsgZXhpdCwgcHJvZ3JhbUFyZ3MgfSBmcm9tIFwic3lzdGVtXCJcbmltcG9ydCB7IGNyZWF0ZVJvb3QgfSBmcm9tIFwiZ25pbVwiXG5cbkd0ay5pbml0KClcblxuLy8gc3RvcCB0aGlzIGZyb20gbGVha2luZyBpbnRvIHN1YnByb2Nlc3Nlc1xuLy8gYW5kIGdpbyBsYXVuY2ggaW52b2NhdGlvbnNcbkdMaWIudW5zZXRlbnYoXCJMRF9QUkVMT0FEXCIpXG5cbi8vIHVzZXJzIG1pZ2h0IHdhbnQgdG8gdXNlIEFkd2FpdGEgaW4gd2hpY2ggY2FzZSBpdCBoYXMgdG8gYmUgaW5pdGlhbGl6ZWRcbi8vIGl0IG1pZ2h0IGJlIGNvbW1vbiBwaXRmYWxsIHRvIGZvcmdldCBpdCBiZWNhdXNlIGBBcHBgIGlzIG5vdCBgQWR3LkFwcGxpY2F0aW9uYFxuYXdhaXQgaW1wb3J0KFwiZ2k6Ly9BZHc/dmVyc2lvbj0xXCIpLnRoZW4oKHsgZGVmYXVsdDogQWR3IH0pID0+IEFkdy5pbml0KCkpLmNhdGNoKCgpID0+IHZvaWQgMClcblxudHlwZSBTdGFydENvbmZpZyA9IFBhcnRpYWw8e1xuICAgIGluc3RhbmNlTmFtZTogc3RyaW5nXG4gICAgY3NzOiBzdHJpbmdcbiAgICBpY29uczogc3RyaW5nXG4gICAgZ3RrVGhlbWU6IHN0cmluZ1xuICAgIGljb25UaGVtZTogc3RyaW5nXG4gICAgY3Vyc29yVGhlbWU6IHN0cmluZ1xuICAgIG1haW4oLi4uYXJndjogc3RyaW5nW10pOiB2b2lkXG4gICAgcmVxdWVzdEhhbmRsZXIoYXJndjogc3RyaW5nW10sIHJlczogKHJlc3BvbnNlOiBhbnkpID0+IHZvaWQpOiB2b2lkXG59PlxuXG5pbnRlcmZhY2UgQXBwU2lnbmFscyBleHRlbmRzIEd0ay5BcHBsaWNhdGlvbi5TaWduYWxTaWduYXR1cmVzIHtcbiAgICBcInJlcXVlc3RcIjogQXBwW1wicmVxdWVzdFwiXVxuICAgIFwid2luZG93LXRvZ2dsZWRcIjogQXBwW1wid2luZG93VG9nZ2xlZFwiXVxufVxuXG5AcmVnaXN0ZXIoKVxuY2xhc3MgQXBwIGV4dGVuZHMgR3RrLkFwcGxpY2F0aW9uIHtcbiAgICBkZWNsYXJlICRzaWduYWxzOiBBcHBTaWduYWxzXG5cbiAgICAjaW5zdGFuY2VOYW1lID0gXCJhZ3NcIlxuICAgICNtYWluPzogKC4uLmFyZ3Y6IHN0cmluZ1tdKSA9PiB2b2lkXG4gICAgI3JlcXVlc3RIYW5kbGVycyA9IDBcbiAgICAjZGJ1c1NlcnZpY2U6IEFwcERCdXNcbiAgICAjY3NzUHJvdmlkZXJzID0gbmV3IEFycmF5PEd0ay5Dc3NQcm92aWRlcj4oKVxuXG4gICAgZ2V0ICNzZXR0aW5ncygpOiBHdGsuU2V0dGluZ3Mge1xuICAgICAgICBjb25zdCBzZXR0aW5ncyA9IEd0ay5TZXR0aW5ncy5nZXRfZGVmYXVsdCgpXG4gICAgICAgIGlmICghc2V0dGluZ3MpIHRocm93IEVycm9yKFwiY291bGQgbm90IGdldCBzZXR0aW5nc1wiKVxuICAgICAgICByZXR1cm4gc2V0dGluZ3NcbiAgICB9XG5cbiAgICBnZXQgI2Rpc3BsYXkoKTogR2RrLkRpc3BsYXkge1xuICAgICAgICBjb25zdCBkaXNwbGF5ID0gR2RrLkRpc3BsYXkuZ2V0X2RlZmF1bHQoKVxuICAgICAgICBpZiAoIWRpc3BsYXkpIHRocm93IEVycm9yKFwiY291bGQgbm90IGdldCBkaXNwbGF5XCIpXG4gICAgICAgIHJldHVybiBkaXNwbGF5XG4gICAgfVxuXG4gICAgZ2V0IGluc3RhbmNlTmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI2luc3RhbmNlTmFtZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCBhbGwgbW9uaXRvcnMgZnJvbSB7QGxpbmsgR2RrLkRpc3BsYXl9LlxuICAgICAqL1xuICAgIGdldF9tb25pdG9ycygpIHtcbiAgICAgICAgY29uc3QgbW9ucyA9IHRoaXMuI2Rpc3BsYXkuZ2V0X21vbml0b3JzKCkgYXMgR2lvLkxpc3RNb2RlbDxHZGsuTW9uaXRvcj5cbiAgICAgICAgY29uc3QgbGlzdCA9IG5ldyBBcnJheTxHZGsuTW9uaXRvcj4oKVxuXG4gICAgICAgIGxldCBtb25pdG9yOiBHZGsuTW9uaXRvciB8IG51bGwgPSBudWxsXG4gICAgICAgIGxldCBpID0gMFxuXG4gICAgICAgIHdoaWxlICgobW9uaXRvciA9IG1vbnMuZ2V0X2l0ZW0oaSsrKSkgIT09IG51bGwpIHtcbiAgICAgICAgICAgIGxpc3QucHVzaChtb25pdG9yKVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGxpc3RcbiAgICB9XG5cbiAgICBAc2lnbmFsKEd0ay5XaW5kb3cpXG4gICAgcHJpdmF0ZSB3aW5kb3dUb2dnbGVkKHdpbmRvdzogR3RrLldpbmRvdykge1xuICAgICAgICB2b2lkIHdpbmRvd1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCBhbGwgbW9uaXRvcnMgZnJvbSB7QGxpbmsgR2RrLkRpc3BsYXl9LlxuICAgICAqL1xuICAgIEBnZXR0ZXIoQXJyYXkpXG4gICAgZ2V0IG1vbml0b3JzKCk6IEFycmF5PEdkay5Nb25pdG9yPiB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldF9tb25pdG9ycygpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogV2luZG93cyB0aGF0IGhhcyBiZWVuIGFkZGVkIHRvIHRoaXMgYXBwXG4gICAgICogdXNpbmcge0BsaW5rIEd0ay5BcHBsaWNhdGlvbi5wcm90b3R5cGUuYWRkX3dpbmRvd30uXG4gICAgICovXG4gICAgQGdldHRlcihBcnJheSlcbiAgICBnZXQgd2luZG93cygpOiBBcnJheTxHdGsuV2luZG93PiB7XG4gICAgICAgIHJldHVybiB0aGlzLmdldF93aW5kb3dzKClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaG9ydGN1dCBmb3Ige0BsaW5rIEd0ay5TZXR0aW5ncy5wcm90b3R5cGUuZ3RrVGhlbWVOYW1lfVxuICAgICAqL1xuICAgIEBzZXR0ZXIoU3RyaW5nKVxuICAgIHNldCBndGtUaGVtZShuYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy4jc2V0dGluZ3MuZ3RrVGhlbWVOYW1lID0gbmFtZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3J0Y3V0IGZvciB7QGxpbmsgR3RrLlNldHRpbmdzLnByb3RvdHlwZS5ndGtUaGVtZU5hbWV9XG4gICAgICovXG4gICAgQGdldHRlcihTdHJpbmcpXG4gICAgZ2V0IGd0a1RoZW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jc2V0dGluZ3MuZ3RrVGhlbWVOYW1lXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2hvcnRjdXQgZm9yIHtAbGluayBHdGsuU2V0dGluZ3MucHJvdG90eXBlLmd0a0ljb25UaGVtZU5hbWV9XG4gICAgICovXG4gICAgQHNldHRlcihTdHJpbmcpXG4gICAgc2V0IGljb25UaGVtZShuYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy4jc2V0dGluZ3MuZ3RrSWNvblRoZW1lTmFtZSA9IG5hbWVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaG9ydGN1dCBmb3Ige0BsaW5rIEd0ay5TZXR0aW5ncy5wcm90b3R5cGUuZ3RrSWNvblRoZW1lTmFtZX1cbiAgICAgKi9cbiAgICBAZ2V0dGVyKFN0cmluZylcbiAgICBnZXQgaWNvblRoZW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jc2V0dGluZ3MuZ3RrSWNvblRoZW1lTmFtZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3J0Y3V0IGZvciB7QGxpbmsgR3RrLlNldHRpbmdzLnByb3RvdHlwZS5ndGtDdXJzb3JUaGVtZU5hbWV9XG4gICAgICovXG4gICAgQHNldHRlcihTdHJpbmcpXG4gICAgc2V0IGN1cnNvclRoZW1lKG5hbWU6IHN0cmluZykge1xuICAgICAgICB0aGlzLiNzZXR0aW5ncy5ndGtDdXJzb3JUaGVtZU5hbWUgPSBuYW1lXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2hvcnRjdXQgZm9yIHtAbGluayBHdGsuU2V0dGluZ3MucHJvdG90eXBlLmd0a0N1cnNvclRoZW1lTmFtZX1cbiAgICAgKi9cbiAgICBAZ2V0dGVyKFN0cmluZylcbiAgICBnZXQgY3Vyc29yVGhlbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiNzZXR0aW5ncy5ndGtDdXJzb3JUaGVtZU5hbWVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXQgYSB3aW5kb3cgYnkgaXRzIHtAbGluayBHdGsuV2lkZ2V0LnByb3RvdHlwZS5uYW1lfSB0aGF0IGhhcyBiZWVuIGFkZGVkIHRvIHRoaXMgYXBwXG4gICAgICogdXNpbmcge0BsaW5rIEd0ay5BcHBsaWNhdGlvbi5wcm90b3R5cGUuYWRkX3dpbmRvd30uXG4gICAgICovXG4gICAgZ2V0X3dpbmRvdyhuYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMud2luZG93cy5maW5kKCh3KSA9PiB3Lm5hbWUgPT09IG5hbWUpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVG9nZ2xlIHRoZSB2aXNpYmlsaXR5IG9mIGEgd2luZG93IGJ5IGl0cyB7QGxpbmsgR3RrLldpZGdldC5wcm90b3R5cGUubmFtZX1cbiAgICAgKiB0aGF0IGhhcyBiZWVuIGFkZGVkIHRvIHRoaXMgYXBwIHVzaW5nIHtAbGluayBHdGsuQXBwbGljYXRpb24ucHJvdG90eXBlLmFkZF93aW5kb3d9LlxuICAgICAqL1xuICAgIHRvZ2dsZV93aW5kb3cobmFtZTogc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IHdpbiA9IHRoaXMuZ2V0X3dpbmRvdyhuYW1lKVxuICAgICAgICBpZiAoIXdpbikgdGhyb3cgRXJyb3IoYG5vIHdpbmRvdyByZWdpc3RlcmVkIHdpdGggbmFtZSBcIiR7bmFtZX1cImApXG4gICAgICAgIHdpbi52aXNpYmxlID0gIXdpbi52aXNpYmxlXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmVzZXQgcHJldmlvdXNseSBzZXQgY3NzIHByb3ZpZGVycyB3aXRoIHtAbGluayBBcHAucHJvdG90eXBlLmFwcGx5X2Nzc30uXG4gICAgICovXG4gICAgcmVzZXRfY3NzKCkge1xuICAgICAgICBmb3IgKGNvbnN0IHByb3ZpZGVyIG9mIHRoaXMuI2Nzc1Byb3ZpZGVycykge1xuICAgICAgICAgICAgR3RrLlN0eWxlQ29udGV4dC5yZW1vdmVfcHJvdmlkZXJfZm9yX2Rpc3BsYXkodGhpcy4jZGlzcGxheSwgcHJvdmlkZXIpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBZGQgYSBuZXcge0BsaW5rIEd0ay5Dc3NQcm92aWRlcn0uXG4gICAgICogQHBhcmFtIHN0eWxlIENzcyBzdHJpbmcgb3IgYSBwYXRoIHRvIGEgY3NzIGZpbGUuXG4gICAgICovXG4gICAgYXBwbHlfY3NzKHN0eWxlOiBzdHJpbmcsIHJlc2V0ID0gZmFsc2UpIHtcbiAgICAgICAgY29uc3QgcHJvdmlkZXIgPSBuZXcgR3RrLkNzc1Byb3ZpZGVyKClcblxuICAgICAgICBwcm92aWRlci5jb25uZWN0KFwicGFyc2luZy1lcnJvclwiLCAoXywgc2VjdGlvbiwgZXJyb3IpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBzZWN0aW9uLmdldF9maWxlKCk/LmdldF9iYXNlbmFtZSgpID8/IFwiXCJcbiAgICAgICAgICAgIGNvbnN0IGxpbmUgPSBzZWN0aW9uLmdldF9zdGFydF9sb2NhdGlvbigpLmxpbmVzICsgMVxuICAgICAgICAgICAgY29uc3QgY2hhcnMgPSBzZWN0aW9uLmdldF9zdGFydF9sb2NhdGlvbigpLmxpbmVfY2hhcnMgKyAxXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGBDU1MgRXJyb3IgJHtuYW1lfToke2xpbmV9OiR7Y2hhcnN9ICR7ZXJyb3IubWVzc2FnZX1gKVxuICAgICAgICB9KVxuXG4gICAgICAgIGlmIChyZXNldCkgdGhpcy5yZXNldF9jc3MoKVxuXG4gICAgICAgIGlmIChHTGliLmZpbGVfdGVzdChzdHlsZSwgR0xpYi5GaWxlVGVzdC5FWElTVFMpKSB7XG4gICAgICAgICAgICBwcm92aWRlci5sb2FkX2Zyb21fcGF0aChzdHlsZSlcbiAgICAgICAgfSBlbHNlIGlmIChzdHlsZS5zdGFydHNXaXRoKFwicmVzb3VyY2U6Ly9cIikpIHtcbiAgICAgICAgICAgIHByb3ZpZGVyLmxvYWRfZnJvbV9yZXNvdXJjZShzdHlsZS5yZXBsYWNlKFwicmVzb3VyY2U6Ly9cIiwgXCJcIikpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwcm92aWRlci5sb2FkX2Zyb21fc3RyaW5nKHN0eWxlKVxuICAgICAgICB9XG5cbiAgICAgICAgR3RrLlN0eWxlQ29udGV4dC5hZGRfcHJvdmlkZXJfZm9yX2Rpc3BsYXkoXG4gICAgICAgICAgICB0aGlzLiNkaXNwbGF5LFxuICAgICAgICAgICAgcHJvdmlkZXIsXG4gICAgICAgICAgICBHdGsuU1RZTEVfUFJPVklERVJfUFJJT1JJVFlfVVNFUixcbiAgICAgICAgKVxuXG4gICAgICAgIHRoaXMuI2Nzc1Byb3ZpZGVycy5wdXNoKHByb3ZpZGVyKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3J0Y3V0IGZvciB7QGxpbmsgR3RrLkljb25UaGVtZS5wcm90b3R5cGUuYWRkX3NlYXJjaF9wYXRofS5cbiAgICAgKi9cbiAgICBhZGRfaWNvbnMocGF0aDogc3RyaW5nKSB7XG4gICAgICAgIEd0ay5JY29uVGhlbWUuZ2V0X2Zvcl9kaXNwbGF5KHRoaXMuI2Rpc3BsYXkpLmFkZF9zZWFyY2hfcGF0aChwYXRoKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFF1aXQgYW5kIGV4aXQgdGhlIGFwcGxpY2F0aW9uLlxuICAgICAqL1xuICAgIHF1aXQoY29kZSA9IDApIHtcbiAgICAgICAgdGhpcy4jZGJ1c1NlcnZpY2Uuc3RvcCgpXG4gICAgICAgIHN1cGVyLnF1aXQoKVxuICAgICAgICBleGl0KGNvZGUpXG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKHsgZmxhZ3M6IEdpby5BcHBsaWNhdGlvbkZsYWdzLkhBTkRMRVNfQ09NTUFORF9MSU5FIH0pXG5cbiAgICAgICAgdGhpcy4jZGJ1c1NlcnZpY2UgPSBuZXcgQXBwREJ1cyh7XG4gICAgICAgICAgICB0b2dnbGVXaW5kb3c6IHRoaXMudG9nZ2xlX3dpbmRvdy5iaW5kKHRoaXMpLFxuICAgICAgICAgICAgcXVpdDogdGhpcy5xdWl0LmJpbmQodGhpcyksXG4gICAgICAgICAgICByZXF1ZXN0OiAoYXJndikgPT4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHRoaXMucmVxdWVzdChhcmd2LCByZXNvbHZlKSksXG4gICAgICAgICAgICBpbnNlY3RvcjogKCkgPT4ge1xuICAgICAgICAgICAgICAgIEd0ay5XaW5kb3cuc2V0X2ludGVyYWN0aXZlX2RlYnVnZ2luZyh0cnVlKVxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSlcblxuICAgICAgICB0aGlzLiNkaXNwbGF5LmdldF9tb25pdG9ycygpLmNvbm5lY3QoXCJpdGVtcy1jaGFuZ2VkXCIsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMubm90aWZ5KFwibW9uaXRvcnNcIilcbiAgICAgICAgfSlcblxuICAgICAgICB0aGlzLmNvbm5lY3QoXCJ3aW5kb3ctYWRkZWRcIiwgKF8sIHdpbmRvdykgPT4ge1xuICAgICAgICAgICAgY29uc3QgaWQxID0gd2luZG93LmNvbm5lY3QoXCJub3RpZnk6OnZpc2libGVcIiwgKCkgPT4gdGhpcy53aW5kb3dUb2dnbGVkKHdpbmRvdykpXG4gICAgICAgICAgICBjb25zdCBpZDIgPSB0aGlzLmNvbm5lY3QoXCJ3aW5kb3ctcmVtb3ZlZFwiLCAoXywgcmVtb3ZlZCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChyZW1vdmVkID09IHdpbmRvdykge1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuZGlzY29ubmVjdChpZDEpXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGlzY29ubmVjdChpZDIpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcblxuICAgICAgICB0aGlzLiNzZXR0aW5ncy5jb25uZWN0KFwibm90aWZ5XCIsIChfLCB7IG5hbWUgfSkgPT4ge1xuICAgICAgICAgICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICAgICAgICAgICAgY2FzZSBcImd0ay10aGVtZS1uYW1lXCI6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubm90aWZ5KFwiZ3RrLXRoZW1lXCIpXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICAgICAgY2FzZSBcImd0ay1pY29uLXRoZW1lLW5hbWVcIjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ub3RpZnkoXCJpY29uLXRoZW1lXCIpXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICAgICAgY2FzZSBcImd0ay1jdXJzb3ItdGhlbWUtbmFtZVwiOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeShcImN1cnNvci10aGVtZVwiKVxuICAgICAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgQHNpZ25hbChBcnJheSwgRnVuY3Rpb24pXG4gICAgcHJpdmF0ZSByZXF1ZXN0KGFyZ3M6IHN0cmluZ1tdLCByZXNwb25zZTogKHJlc3BvbnNlOiBzdHJpbmcpID0+IHZvaWQpIHtcbiAgICAgICAgaWYgKHRoaXMuI3JlcXVlc3RIYW5kbGVycyA9PT0gMCkge1xuICAgICAgICAgICAgcmVzcG9uc2UoYGluc3RhbmNlIFwiJHt0aGlzLmluc3RhbmNlTmFtZX1cIiBoYXMgbm8gcmVxdWVzdCBoYW5kbGVyIGltcGxlbWVudGVkYClcbiAgICAgICAgfVxuICAgICAgICB2b2lkIGFyZ3NcbiAgICB9XG5cbiAgICB2ZnVuY19jb21tYW5kX2xpbmUoY21kOiBHaW8uQXBwbGljYXRpb25Db21tYW5kTGluZSk6IG51bWJlciB7XG4gICAgICAgIGlmIChjbWQuaXNSZW1vdGUpIHtcbiAgICAgICAgICAgIHRoaXMucmVxdWVzdChjbWQuZ2V0X2FyZ3VtZW50cygpLCAoc3RyKSA9PiB7XG4gICAgICAgICAgICAgICAgY21kLnByaW50X2xpdGVyYWwoc3RyICsgXCJcXG5cIilcbiAgICAgICAgICAgICAgICBjbWQuZG9uZSgpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5ob2xkKClcbiAgICAgICAgICAgIHRoaXMuI2RidXNTZXJ2aWNlLnNlcnZlKHtcbiAgICAgICAgICAgICAgICBuYW1lOiB0aGlzLmFwcGxpY2F0aW9uSWQsXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgY3JlYXRlUm9vdCgoZGlzcG9zZSkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuY29ubmVjdChcInNodXRkb3duXCIsIGRpc3Bvc2UpXG4gICAgICAgICAgICAgICAgdGhpcy4jbWFpbj8uKC4uLnByb2dyYW1BcmdzKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAwXG4gICAgfVxuXG4gICAgc3RhcnQoY29uZmlnOiBTdGFydENvbmZpZykge1xuICAgICAgICBjb25zdCB7IG1haW4sIHJlcXVlc3RIYW5kbGVyLCBpbnN0YW5jZU5hbWUsIGNzcywgaWNvbnMsIC4uLmNmZyB9ID0gY29uZmlnXG5cbiAgICAgICAgdGhpcy4jbWFpbiA9IG1haW5cbiAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLCBjZmcpXG5cbiAgICAgICAgaWYgKHJlcXVlc3RIYW5kbGVyKSB7XG4gICAgICAgICAgICB0aGlzLmNvbm5lY3QoXCJyZXF1ZXN0XCIsIChfLCBhcmdzLCByZXNwb25zZSkgPT4gcmVxdWVzdEhhbmRsZXIoYXJncywgcmVzcG9uc2UpKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGluc3RhbmNlTmFtZSkgdGhpcy4jaW5zdGFuY2VOYW1lID0gaW5zdGFuY2VOYW1lXG4gICAgICAgIGlmIChjc3MpIHRoaXMuYXBwbHlfY3NzKGNzcywgZmFsc2UpXG4gICAgICAgIGlmIChpY29ucykgYXBwLmFkZF9pY29ucyhpY29ucylcblxuICAgICAgICB0aGlzLmFwcGxpY2F0aW9uSWQgPSBcImlvLkFzdGFsLlwiICsgdGhpcy5pbnN0YW5jZU5hbWVcbiAgICAgICAgc2V0Q29uc29sZUxvZ0RvbWFpbih0aGlzLmluc3RhbmNlTmFtZSlcbiAgICAgICAgdGhpcy5ydW5Bc3luYyhwcm9ncmFtQXJncylcbiAgICB9XG5cbiAgICBjb25uZWN0PFMgZXh0ZW5kcyBrZXlvZiBBcHBTaWduYWxzPihcbiAgICAgICAgc2lnbmFsOiBTLFxuICAgICAgICBjYWxsYmFjazogR09iamVjdC5TaWduYWxDYWxsYmFjazx0aGlzLCBBcHBTaWduYWxzW1NdPixcbiAgICApOiBudW1iZXIge1xuICAgICAgICBpZiAoc2lnbmFsID09PSBcInJlcXVlc3RcIikgdGhpcy4jcmVxdWVzdEhhbmRsZXJzICs9IDFcbiAgICAgICAgcmV0dXJuIHN1cGVyLmNvbm5lY3Qoc2lnbmFsLCBjYWxsYmFjaylcbiAgICB9XG59XG5cbmNvbnN0IGFwcCA9IG5ldyBBcHAoKVxuZXhwb3J0IGRlZmF1bHQgYXBwXG4iLCAiLyoqXG4gKiBBIHtAbGluayBTZXJ2aWNlfSBjdXJyZW50bHkgb25seSBhbGxvd3MgaW50ZXJmYWNpbmcgd2l0aCBhIHNpbmdsZSBpbnRlcmZhY2Ugb2YgYSByZW1vdGUgb2JqZWN0LlxuICogSW4gdGhlIGZ1dHVyZSBJIHdhbnQgdG8gY29tZSB1cCB3aXRoIGFuIEFQSSB0byBiZSBhYmxlIHRvIGNyZWF0ZSBTZXJ2aWNlIG9iamVjdHMgZm9yIG11bHRpcGxlXG4gKiBpbnRlcmZhY2VzIG9mIGFuIG9iamVjdCBhdCB0aGUgc2FtZSB0aW1lLiBFeGFtcGxlIHVzYWdlIHdvdWxkIGJlIGZvciBleGFtcGxlIGNvbWJpbmluZ1xuICogXCJvcmcubXByaXMuTWVkaWFQbGF5ZXIyXCIgYW5kIFwib3JnLm1wcmlzLk1lZGlhUGxheWVyMi5QbGF5ZXJcIiBpbnRvIGEgc2luZ2xlIG9iamVjdC5cbiAqL1xuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW9cIlxuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYlwiXG5pbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IGRlZmluZVByb3BlcnR5R2V0dGVyLCBrZWJhYmlmeSwgeG1sIH0gZnJvbSBcIi4vdXRpbC5qc1wiXG5pbXBvcnQgdHlwZSB7IERlZXBJbmZlciB9IGZyb20gXCIuL3ZhcmlhbnQuanNcIlxuaW1wb3J0IHtcbiAgICByZWdpc3RlcixcbiAgICBwcm9wZXJ0eSBhcyBncHJvcGVydHksXG4gICAgc2lnbmFsIGFzIGdzaWduYWwsXG4gICAgZ2V0dGVyIGFzIGdnZXR0ZXIsXG4gICAgc2V0dGVyIGFzIGdzZXR0ZXIsXG59IGZyb20gXCIuL2dvYmplY3QuanNcIlxuXG5jb25zdCBERUZBVUxUX1RJTUVPVVQgPSAxMF8wMDBcblxuZXhwb3J0IGNvbnN0IFZhcmlhbnQgPSBHTGliLlZhcmlhbnRcbmV4cG9ydCB0eXBlIFZhcmlhbnQ8VCBleHRlbmRzIHN0cmluZz4gPSBHTGliLlZhcmlhbnQ8VD5cblxuY29uc3QgaW5mbyA9IFN5bWJvbChcImRidXMgaW50ZXJmYWNlIGluZm9cIilcbmNvbnN0IGludGVybmFscyA9IFN5bWJvbChcImRidXMgaW50ZXJmYWNlIGludGVybmFsc1wiKVxuY29uc3QgcmVtb3RlTWV0aG9kID0gU3ltYm9sKFwicHJveHkgcmVtb3RlTWV0aG9kXCIpXG5jb25zdCByZW1vdGVNZXRob2RBc3luYyA9IFN5bWJvbChcInByb3h5IHJlbW90ZU1ldGhvZEFzeW5jXCIpXG5jb25zdCByZW1vdGVQcm9wZXJ0eVNldCA9IFN5bWJvbChcInByb3h5IHJlbW90ZVByb3BlcnR5U2V0XCIpXG5cbnR5cGUgQ3R4ID0geyBwcml2YXRlOiBmYWxzZTsgc3RhdGljOiBmYWxzZTsgbmFtZTogc3RyaW5nIH1cblxuLyoqXG4gKiBCYXNlIHR5cGUgZm9yIERCdXMgc2VydmljZXMgYW5kIHByb3hpZXMuIEludGVyZmFjZSBuYW1lIGlzIHNldCB3aXRoXG4gKiB0aGUge0BsaW5rIGlmYWNlfSBkZWNvcmF0b3Igd2hpY2ggYWxzbyByZWdpc3RlciBpdCBhcyBhIEdPYmplY3QgdHlwZS5cbiAqL1xuZXhwb3J0IGNsYXNzIFNlcnZpY2UgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gICAgc3RhdGljIFtpbmZvXT86IEdpby5EQnVzSW50ZXJmYWNlSW5mb1xuXG4gICAgc3RhdGljIHtcbiAgICAgICAgR09iamVjdC5yZWdpc3RlckNsYXNzKHRoaXMpXG4gICAgfVxuXG4gICAgW2ludGVybmFsc106IHtcbiAgICAgICAgZGJ1c09iamVjdD86IEdpby5EQnVzRXhwb3J0ZWRPYmplY3RcbiAgICAgICAgcHJveHk/OiBHaW8uREJ1c1Byb3h5XG4gICAgICAgIHByaXY6IFJlY29yZDxzdHJpbmcgfCBzeW1ib2wsIHVua25vd24+XG4gICAgICAgIG9uU3RvcDogU2V0PCgpID0+IHZvaWQ+XG4gICAgfSA9IHtcbiAgICAgICAgcHJpdjoge30sXG4gICAgICAgIG9uU3RvcDogbmV3IFNldDwoKSA9PiB2b2lkPigpLFxuICAgIH1cblxuICAgICNpbmZvOiBHaW8uREJ1c0ludGVyZmFjZUluZm9cblxuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpXG4gICAgICAgIGNvbnN0IHNlcnZpY2UgPSB0aGlzLmNvbnN0cnVjdG9yIGFzIHVua25vd24gYXMgdHlwZW9mIFNlcnZpY2VcbiAgICAgICAgaWYgKCFzZXJ2aWNlW2luZm9dKSB0aHJvdyBFcnJvcihcIm1pc3NpbmcgaW50ZXJmYWNlIGluZm9cIilcbiAgICAgICAgdGhpcy4jaW5mbyA9IHNlcnZpY2VbaW5mb11cbiAgICB9XG5cbiAgICBub3RpZnkocHJvcGVydHlOYW1lOiBFeHRyYWN0PGtleW9mIHRoaXMsIHN0cmluZz4gfCAoc3RyaW5nICYge30pKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IHByb3AgPSB0aGlzLiNpbmZvLmxvb2t1cF9wcm9wZXJ0eShwcm9wZXJ0eU5hbWUpXG5cbiAgICAgICAgaWYgKHByb3AgJiYgdGhpc1tpbnRlcm5hbHNdLmRidXNPYmplY3QpIHtcbiAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0LmVtaXRfcHJvcGVydHlfY2hhbmdlZChcbiAgICAgICAgICAgICAgICBwcm9wZXJ0eU5hbWUsXG4gICAgICAgICAgICAgICAgbmV3IEdMaWIuVmFyaWFudChwcm9wLnNpZ25hdHVyZSwgdGhpc1twcm9wZXJ0eU5hbWUgYXMga2V5b2YgdGhpc10pLFxuICAgICAgICAgICAgKVxuICAgICAgICB9XG5cbiAgICAgICAgc3VwZXIubm90aWZ5KHByb3AgPyBrZWJhYmlmeShwcm9wZXJ0eU5hbWUpIDogcHJvcGVydHlOYW1lKVxuICAgIH1cblxuICAgIGVtaXQobmFtZTogc3RyaW5nLCAuLi5wYXJhbXM6IHVua25vd25bXSk6IHZvaWQge1xuICAgICAgICBjb25zdCBzaWduYWwgPSB0aGlzLiNpbmZvLmxvb2t1cF9zaWduYWwobmFtZSlcblxuICAgICAgICBpZiAoc2lnbmFsICYmIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0KSB7XG4gICAgICAgICAgICBjb25zdCBzaWduYXR1cmUgPSBgKCR7c2lnbmFsLmFyZ3MubWFwKChhKSA9PiBhLnNpZ25hdHVyZSkuam9pbihcIlwiKX0pYFxuICAgICAgICAgICAgdGhpc1tpbnRlcm5hbHNdLmRidXNPYmplY3QuZW1pdF9zaWduYWwobmFtZSwgbmV3IEdMaWIuVmFyaWFudChzaWduYXR1cmUsIHBhcmFtcykpXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gc3VwZXIuZW1pdChzaWduYWwgPyBrZWJhYmlmeShuYW1lKSA6IG5hbWUsIC4uLnBhcmFtcylcbiAgICB9XG5cbiAgICAvLyBzZXJ2ZXJcbiAgICAjaGFuZGxlUHJvcGVydHlHZXQoXzogR2lvLkRCdXNFeHBvcnRlZE9iamVjdCwgcHJvcGVydHlOYW1lOiBFeHRyYWN0PGtleW9mIHRoaXMsIHN0cmluZz4pIHtcbiAgICAgICAgY29uc3QgcHJvcCA9IHRoaXMuI2luZm8ubG9va3VwX3Byb3BlcnR5KHByb3BlcnR5TmFtZSlcblxuICAgICAgICBpZiAoIXByb3ApIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGAke3RoaXMuY29uc3RydWN0b3IubmFtZX0gaGFzIG5vIGV4cG9ydGVkIHByb3BlcnR5OiBcIiR7cHJvcGVydHlOYW1lfVwiYClcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHZhbHVlID0gdGhpc1twcm9wZXJ0eU5hbWVdXG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgR0xpYi5WYXJpYW50KHByb3Auc2lnbmF0dXJlLCB2YWx1ZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBzZXJ2ZXJcbiAgICAjaGFuZGxlUHJvcGVydHlTZXQoXG4gICAgICAgIF86IEdpby5EQnVzRXhwb3J0ZWRPYmplY3QsXG4gICAgICAgIHByb3BlcnR5TmFtZTogRXh0cmFjdDxrZXlvZiB0aGlzLCBzdHJpbmc+LFxuICAgICAgICB2YWx1ZTogR0xpYi5WYXJpYW50LFxuICAgICkge1xuICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IHZhbHVlLmRlZXBVbnBhY2soKVxuICAgICAgICBjb25zdCBwcm9wID0gdGhpcy4jaW5mby5sb29rdXBfcHJvcGVydHkocHJvcGVydHlOYW1lKVxuXG4gICAgICAgIGlmICghcHJvcCkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYCR7dGhpcy5jb25zdHJ1Y3Rvci5uYW1lfSBoYXMgbm8gcHJvcGVydHk6IFwiJHtwcm9wZXJ0eU5hbWV9XCJgKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXNbcHJvcGVydHlOYW1lXSAhPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXNbcHJvcGVydHlOYW1lXSA9IHZhbHVlLmRlZXBVbnBhY2s8YW55PigpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBzZXJ2ZXJcbiAgICAjcmV0dXJuRXJyb3IoZXJyb3I6IHVua25vd24sIGludm9jYXRpb246IEdpby5EQnVzTWV0aG9kSW52b2NhdGlvbikge1xuICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKVxuICAgICAgICBpZiAoZXJyb3IgaW5zdGFuY2VvZiBHTGliLkVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gaW52b2NhdGlvbi5yZXR1cm5fZ2Vycm9yKGVycm9yKVxuICAgICAgICB9XG4gICAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgICAgICByZXR1cm4gaW52b2NhdGlvbi5yZXR1cm5fZGJ1c19lcnJvcihcbiAgICAgICAgICAgICAgICBlcnJvci5uYW1lLmluY2x1ZGVzKFwiLlwiKSA/IGVycm9yLm5hbWUgOiBgZ2pzLkpTRXJyb3IuJHtlcnJvci5uYW1lfWAsXG4gICAgICAgICAgICAgICAgZXJyb3IubWVzc2FnZSxcbiAgICAgICAgICAgIClcbiAgICAgICAgfVxuICAgICAgICBpbnZvY2F0aW9uLnJldHVybl9kYnVzX2Vycm9yKFwiZ2pzLkRCdXNTZXJ2aWNlLlVua25vd25FcnJvclwiLCBgJHtlcnJvcn1gKVxuICAgIH1cblxuICAgIC8vIHNlcnZlclxuICAgICNyZXR1cm5WYWx1ZSh2YWx1ZTogdW5rbm93biwgbWV0aG9kTmFtZTogc3RyaW5nLCBpbnZvY2F0aW9uOiBHaW8uREJ1c01ldGhvZEludm9jYXRpb24pIHtcbiAgICAgICAgaWYgKHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBpbnZvY2F0aW9uLnJldHVybl92YWx1ZShuZXcgR0xpYi5WYXJpYW50KFwiKClcIiwgW10pKVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgYXJncyA9IHRoaXMuI2luZm8ubG9va3VwX21ldGhvZChtZXRob2ROYW1lKT8ub3V0X2FyZ3MgPz8gW11cbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gYCgke2FyZ3MubWFwKChhcmcpID0+IGFyZy5zaWduYXR1cmUpLmpvaW4oXCJcIil9KWBcbiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlKSkgdGhyb3cgRXJyb3IoXCJ2YWx1ZSBoYXMgdG8gYmUgYSB0dXBsZVwiKVxuICAgICAgICBpbnZvY2F0aW9uLnJldHVybl92YWx1ZShuZXcgR0xpYi5WYXJpYW50KHNpZ25hdHVyZSwgdmFsdWUpKVxuICAgIH1cblxuICAgIC8vIHNlcnZlclxuICAgICNoYW5kbGVNZXRob2RDYWxsKFxuICAgICAgICBfOiBHaW8uREJ1c0V4cG9ydGVkT2JqZWN0LFxuICAgICAgICBtZXRob2ROYW1lOiBFeHRyYWN0PGtleW9mIHRoaXMsIHN0cmluZz4sXG4gICAgICAgIHBhcmFtZXRlcnM6IEdMaWIuVmFyaWFudCxcbiAgICAgICAgaW52b2NhdGlvbjogR2lvLkRCdXNNZXRob2RJbnZvY2F0aW9uLFxuICAgICk6IHZvaWQge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSAodGhpc1ttZXRob2ROYW1lXSBhcyAoLi4uYXJnczogdW5rbm93bltdKSA9PiB1bmtub3duKShcbiAgICAgICAgICAgICAgICAuLi5wYXJhbWV0ZXJzLmRlZXBVbnBhY2s8QXJyYXk8dW5rbm93bj4+KCksXG4gICAgICAgICAgICApXG5cbiAgICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEdMaWIuVmFyaWFudCkge1xuICAgICAgICAgICAgICAgIGludm9jYXRpb24ucmV0dXJuX3ZhbHVlKHZhbHVlKVxuICAgICAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZVxuICAgICAgICAgICAgICAgICAgICAudGhlbigodmFsdWUpID0+IHRoaXMuI3JldHVyblZhbHVlKHZhbHVlLCBtZXRob2ROYW1lLCBpbnZvY2F0aW9uKSlcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gdGhpcy4jcmV0dXJuRXJyb3IoZXJyb3IsIGludm9jYXRpb24pKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLiNyZXR1cm5WYWx1ZSh2YWx1ZSwgbWV0aG9kTmFtZSwgaW52b2NhdGlvbilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHRoaXMuI3JldHVybkVycm9yKGVycm9yLCBpbnZvY2F0aW9uKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gc2VydmVyXG4gICAgYXN5bmMgc2VydmUoe1xuICAgICAgICBidXNUeXBlID0gR2lvLkJ1c1R5cGUuU0VTU0lPTixcbiAgICAgICAgbmFtZSA9IHRoaXMuI2luZm8ubmFtZSxcbiAgICAgICAgb2JqZWN0UGF0aCA9IFwiL1wiICsgdGhpcy4jaW5mby5uYW1lLnNwbGl0KFwiLlwiKS5qb2luKFwiL1wiKSxcbiAgICAgICAgZmxhZ3MgPSBHaW8uQnVzTmFtZU93bmVyRmxhZ3MuTk9ORSxcbiAgICAgICAgdGltZW91dCA9IERFRkFVTFRfVElNRU9VVCxcbiAgICB9OiB7XG4gICAgICAgIGJ1c1R5cGU/OiBHaW8uQnVzVHlwZVxuICAgICAgICBuYW1lPzogc3RyaW5nXG4gICAgICAgIG9iamVjdFBhdGg/OiBzdHJpbmdcbiAgICAgICAgZmxhZ3M/OiBHaW8uQnVzTmFtZU93bmVyRmxhZ3NcbiAgICAgICAgdGltZW91dD86IG51bWJlclxuICAgIH0gPSB7fSk6IFByb21pc2U8dGhpcz4ge1xuICAgICAgICBjb25zdCBpbXBsID0gbmV3IEdpby5EQnVzRXhwb3J0ZWRPYmplY3QoXG4gICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIG1pc3NpbmcgY29uc3RydWN0b3IgdHlwZVxuICAgICAgICAgICAgeyBnX2ludGVyZmFjZV9pbmZvOiB0aGlzLiNpbmZvIH0sXG4gICAgICAgIClcblxuICAgICAgICBpbXBsLmNvbm5lY3QoXCJoYW5kbGUtbWV0aG9kLWNhbGxcIiwgdGhpcy4jaGFuZGxlTWV0aG9kQ2FsbC5iaW5kKHRoaXMpKVxuICAgICAgICBpbXBsLmNvbm5lY3QoXCJoYW5kbGUtcHJvcGVydHktZ2V0XCIsIHRoaXMuI2hhbmRsZVByb3BlcnR5R2V0LmJpbmQodGhpcykpXG4gICAgICAgIGltcGwuY29ubmVjdChcImhhbmRsZS1wcm9wZXJ0eS1zZXRcIiwgdGhpcy4jaGFuZGxlUHJvcGVydHlTZXQuYmluZCh0aGlzKSlcblxuICAgICAgICB0aGlzLiNpbmZvLmNhY2hlX2J1aWxkKClcblxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgbGV0IHNvdXJjZSA9XG4gICAgICAgICAgICAgICAgdGltZW91dCA+IDBcbiAgICAgICAgICAgICAgICAgICAgPyBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KEVycm9yKGBzZXJ2ZSB0aW1lZCBvdXRgKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc291cmNlID0gbnVsbFxuICAgICAgICAgICAgICAgICAgICAgIH0sIHRpbWVvdXQpXG4gICAgICAgICAgICAgICAgICAgIDogbnVsbFxuXG4gICAgICAgICAgICBjb25zdCBjbGVhciA9ICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoc291cmNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dChzb3VyY2UpXG4gICAgICAgICAgICAgICAgICAgIHNvdXJjZSA9IG51bGxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGNvbnN0IGJ1c0lkID0gR2lvLmJ1c19vd25fbmFtZShcbiAgICAgICAgICAgICAgICBidXNUeXBlLFxuICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICAgICAgZmxhZ3MsXG4gICAgICAgICAgICAgICAgKGNvbm46IEdpby5EQnVzQ29ubmVjdGlvbikgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW1wbC5leHBvcnQoY29ubiwgb2JqZWN0UGF0aClcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0ID0gaW1wbFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1tpbnRlcm5hbHNdLm9uU3RvcC5hZGQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEdpby5idXNfdW5vd25fbmFtZShidXNJZClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbXBsLnVuZXhwb3J0KClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiNpbmZvLmNhY2hlX3JlbGVhc2UoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzW2ludGVybmFsc10uZGJ1c09iamVjdFxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh0aGlzKVxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjbGVhcixcbiAgICAgICAgICAgICAgICBjbGVhcixcbiAgICAgICAgICAgIClcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICAvLyBwcm94eVxuICAgICNoYW5kbGVQcm9wZXJ0aWVzQ2hhbmdlZChcbiAgICAgICAgXzogR2lvLkRCdXNQcm94eSxcbiAgICAgICAgY2hhbmdlZDogR0xpYi5WYXJpYW50PFwiYXtzdn1cIj4sXG4gICAgICAgIGludmFsaWRhdGVkOiBzdHJpbmdbXSxcbiAgICApIHtcbiAgICAgICAgY29uc3Qgc2V0ID0gbmV3IFNldChbLi4uT2JqZWN0LmtleXMoY2hhbmdlZC5kZWVwVW5wYWNrKCkpLCAuLi5pbnZhbGlkYXRlZF0pXG4gICAgICAgIGZvciAoY29uc3QgcHJvcCBvZiBzZXQudmFsdWVzKCkpIHtcbiAgICAgICAgICAgIHRoaXMubm90aWZ5KHByb3AgYXMgRXh0cmFjdDxrZXlvZiB0aGlzLCBzdHJpbmc+KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gcHJveHlcbiAgICAjaGFuZGxlU2lnbmFsKFxuICAgICAgICBfOiBHaW8uREJ1c1Byb3h5LFxuICAgICAgICBfc2VuZGVyOiBzdHJpbmcgfCBudWxsLFxuICAgICAgICBzaWduYWw6IHN0cmluZyxcbiAgICAgICAgcGFyYW1ldGVyczogR0xpYi5WYXJpYW50LFxuICAgICkge1xuICAgICAgICB0aGlzLmVtaXQoa2ViYWJpZnkoc2lnbmFsKSwgLi4ucGFyYW1ldGVycy5kZWVwVW5wYWNrPEFycmF5PHVua25vd24+PigpKVxuICAgIH1cblxuICAgIC8vIHByb3h5XG4gICAgI3JlbW90ZU1ldGhvZFBhcmFtcyhcbiAgICAgICAgbWV0aG9kTmFtZTogc3RyaW5nLFxuICAgICAgICBhcmdzOiB1bmtub3duW10sXG4gICAgKTogUGFyYW1ldGVyczxHaW8uREJ1c1Byb3h5W1wiY2FsbF9zeW5jXCJdPiB7XG4gICAgICAgIGNvbnN0IHsgcHJveHkgfSA9IHRoaXNbaW50ZXJuYWxzXVxuICAgICAgICBpZiAoIXByb3h5KSB0aHJvdyBFcnJvcihcImludmFsaWQgcmVtb3RlTWV0aG9kIGludm9jYXRpb246IG5vdCBhIHByb3h5XCIpXG5cbiAgICAgICAgY29uc3QgbWV0aG9kID0gdGhpcy4jaW5mby5sb29rdXBfbWV0aG9kKG1ldGhvZE5hbWUpXG4gICAgICAgIGlmICghbWV0aG9kKSB0aHJvdyBFcnJvcihcIm1ldGhvZCBub3QgZm91bmRcIilcblxuICAgICAgICBjb25zdCBzaWduYXR1cmUgPSBgKCR7bWV0aG9kLmluX2FyZ3MubWFwKChhKSA9PiBhLnNpZ25hdHVyZSkuam9pbihcIlwiKX0pYFxuXG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBtZXRob2ROYW1lLFxuICAgICAgICAgICAgbmV3IEdMaWIuVmFyaWFudChzaWduYXR1cmUsIGFyZ3MpLFxuICAgICAgICAgICAgR2lvLkRCdXNDYWxsRmxhZ3MuTk9ORSxcbiAgICAgICAgICAgIERFRkFVTFRfVElNRU9VVCxcbiAgICAgICAgICAgIG51bGwsXG4gICAgICAgIF1cbiAgICB9XG5cbiAgICAvLyBwcm94eVxuICAgIFtyZW1vdGVNZXRob2RdKG1ldGhvZE5hbWU6IHN0cmluZywgYXJnczogdW5rbm93bltdKTogR0xpYi5WYXJpYW50IHtcbiAgICAgICAgY29uc3QgcGFyYW1zID0gdGhpcy4jcmVtb3RlTWV0aG9kUGFyYW1zKG1ldGhvZE5hbWUsIGFyZ3MpXG4gICAgICAgIHJldHVybiB0aGlzW2ludGVybmFsc10ucHJveHkhLmNhbGxfc3luYyguLi5wYXJhbXMpXG4gICAgfVxuXG4gICAgLy8gcHJveHlcbiAgICBbcmVtb3RlTWV0aG9kQXN5bmNdKG1ldGhvZE5hbWU6IHN0cmluZywgYXJnczogdW5rbm93bltdKTogUHJvbWlzZTxHTGliLlZhcmlhbnQ+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcGFyYW1zID0gdGhpcy4jcmVtb3RlTWV0aG9kUGFyYW1zKG1ldGhvZE5hbWUsIGFyZ3MpXG4gICAgICAgICAgICAgICAgdGhpc1tpbnRlcm5hbHNdLnByb3h5IS5jYWxsKC4uLnBhcmFtcywgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh0aGlzW2ludGVybmFsc10ucHJveHkhLmNhbGxfZmluaXNoKHJlcykpXG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgLy8gcHJveHlcbiAgICBbcmVtb3RlUHJvcGVydHlTZXRdKG5hbWU6IHN0cmluZywgdmFsdWU6IHVua25vd24pIHtcbiAgICAgICAgY29uc3QgcHJveHkgPSB0aGlzW2ludGVybmFsc10ucHJveHkhXG4gICAgICAgIGNvbnN0IHByb3AgPSB0aGlzLiNpbmZvLmxvb2t1cF9wcm9wZXJ0eShuYW1lKSFcblxuICAgICAgICBjb25zdCB2YXJpYW50ID0gbmV3IEdMaWIuVmFyaWFudChwcm9wLnNpZ25hdHVyZSwgdmFsdWUpXG4gICAgICAgIHByb3h5LnNldF9jYWNoZWRfcHJvcGVydHkobmFtZSwgdmFyaWFudClcblxuICAgICAgICBwcm94eS5jYWxsKFxuICAgICAgICAgICAgXCJvcmcuZnJlZWRlc2t0b3AuREJ1cy5Qcm9wZXJ0aWVzLlNldFwiLFxuICAgICAgICAgICAgbmV3IEdMaWIuVmFyaWFudChcIihzc3YpXCIsIFtwcm94eS5nSW50ZXJmYWNlTmFtZSwgbmFtZSwgdmFyaWFudF0pLFxuICAgICAgICAgICAgR2lvLkRCdXNDYWxsRmxhZ3MuTk9ORSxcbiAgICAgICAgICAgIC0xLFxuICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBwcm94eS5jYWxsX2ZpbmlzaChyZXMpXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGUpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgKVxuICAgIH1cblxuICAgIC8vIHByb3h5XG4gICAgYXN5bmMgcHJveHkoe1xuICAgICAgICBidXMgPSBHaW8uREJ1cy5zZXNzaW9uLFxuICAgICAgICBuYW1lID0gdGhpcy4jaW5mby5uYW1lLFxuICAgICAgICBvYmplY3RQYXRoID0gXCIvXCIgKyB0aGlzLiNpbmZvLm5hbWUuc3BsaXQoXCIuXCIpLmpvaW4oXCIvXCIpLFxuICAgICAgICBmbGFncyA9IEdpby5EQnVzUHJveHlGbGFncy5OT05FLFxuICAgICAgICB0aW1lb3V0ID0gREVGQVVMVF9USU1FT1VULFxuICAgIH06IHtcbiAgICAgICAgYnVzPzogR2lvLkRCdXNDb25uZWN0aW9uXG4gICAgICAgIG5hbWU/OiBzdHJpbmdcbiAgICAgICAgb2JqZWN0UGF0aD86IHN0cmluZ1xuICAgICAgICBmbGFncz86IEdpby5EQnVzUHJveHlGbGFnc1xuICAgICAgICB0aW1lb3V0PzogbnVtYmVyXG4gICAgfSA9IHt9KTogUHJvbWlzZTx0aGlzPiB7XG4gICAgICAgIGNvbnN0IHByb3h5ID0gbmV3IEdpby5EQnVzUHJveHkoe1xuICAgICAgICAgICAgZ0Nvbm5lY3Rpb246IGJ1cyxcbiAgICAgICAgICAgIGdJbnRlcmZhY2VOYW1lOiB0aGlzLiNpbmZvLm5hbWUsXG4gICAgICAgICAgICBnSW50ZXJmYWNlSW5mbzogdGhpcy4jaW5mbyxcbiAgICAgICAgICAgIGdOYW1lOiBuYW1lLFxuICAgICAgICAgICAgZ0ZsYWdzOiBmbGFncyxcbiAgICAgICAgICAgIGdPYmplY3RQYXRoOiBvYmplY3RQYXRoLFxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjYW5jYWxsYWJsZSA9IG5ldyBHaW8uQ2FuY2VsbGFibGUoKVxuXG4gICAgICAgICAgICBsZXQgc291cmNlID1cbiAgICAgICAgICAgICAgICB0aW1lb3V0ID4gMFxuICAgICAgICAgICAgICAgICAgICA/IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoRXJyb3IoYHByb3h5IHRpbWVkIG91dGApKVxuICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2UgPSBudWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGNhbmNhbGxhYmxlLmNhbmNlbCgpXG4gICAgICAgICAgICAgICAgICAgICAgfSwgdGltZW91dClcbiAgICAgICAgICAgICAgICAgICAgOiBudWxsXG5cbiAgICAgICAgICAgIHByb3h5LmluaXRfYXN5bmMoR0xpYi5QUklPUklUWV9ERUZBVUxULCBjYW5jYWxsYWJsZSwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzb3VyY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFyVGltZW91dChzb3VyY2UpXG4gICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2UgPSBudWxsXG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBwcm94eS5pbml0X2ZpbmlzaChyZXMpXG4gICAgICAgICAgICAgICAgICAgIHRoaXNbaW50ZXJuYWxzXS5wcm94eSA9IHByb3h5XG5cbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaWRzID0gW1xuICAgICAgICAgICAgICAgICAgICAgICAgcHJveHkuY29ubmVjdChcImctc2lnbmFsXCIsIHRoaXMuI2hhbmRsZVNpZ25hbC5iaW5kKHRoaXMpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3h5LmNvbm5lY3QoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJnLXByb3BlcnRpZXMtY2hhbmdlZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuI2hhbmRsZVByb3BlcnRpZXNDaGFuZ2VkLmJpbmQodGhpcyksXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICBdXG5cbiAgICAgICAgICAgICAgICAgICAgdGhpc1tpbnRlcm5hbHNdLm9uU3RvcC5hZGQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWRzLmZvckVhY2goKGlkKSA9PiBwcm94eS5kaXNjb25uZWN0KGlkKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSB0aGlzW2ludGVybmFsc10ucHJveHlcbiAgICAgICAgICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHRoaXMpXG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgc3RvcCgpIHtcbiAgICAgICAgY29uc3QgeyBvblN0b3AgfSA9IHRoaXNbaW50ZXJuYWxzXVxuICAgICAgICBmb3IgKGNvbnN0IGNiIG9mIG9uU3RvcC52YWx1ZXMoKSkge1xuICAgICAgICAgICAgb25TdG9wLmRlbGV0ZShjYilcbiAgICAgICAgICAgIGNiKClcbiAgICAgICAgfVxuICAgIH1cbn1cblxudHlwZSBJbnRlcmZhY2VNZXRhID0ge1xuICAgIGRidXNNZXRob2RzPzogUmVjb3JkPFxuICAgICAgICBzdHJpbmcsXG4gICAgICAgIEFycmF5PHtcbiAgICAgICAgICAgIG5hbWU/OiBzdHJpbmdcbiAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xuICAgICAgICAgICAgZGlyZWN0aW9uOiBcImluXCIgfCBcIm91dFwiXG4gICAgICAgIH0+XG4gICAgPlxuICAgIGRidXNTaWduYWxzPzogUmVjb3JkPFxuICAgICAgICBzdHJpbmcsXG4gICAgICAgIEFycmF5PHtcbiAgICAgICAgICAgIG5hbWU/OiBzdHJpbmdcbiAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xuICAgICAgICB9PlxuICAgID5cbiAgICBkYnVzUHJvcGVydGllcz86IFJlY29yZDxcbiAgICAgICAgc3RyaW5nLFxuICAgICAgICB7XG4gICAgICAgICAgICBuYW1lOiBzdHJpbmdcbiAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xuICAgICAgICAgICAgcmVhZD86IHRydWVcbiAgICAgICAgICAgIHdyaXRlPzogdHJ1ZVxuICAgICAgICB9XG4gICAgPlxufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIHtAbGluayBTZXJ2aWNlfSBhcyBhIGRidXMgaW50ZXJmYWNlLlxuICpcbiAqIEBwYXJhbSBuYW1lIEludGVyZmFjZSBuYW1lIG9mIHRoZSBvYmplY3QuIEZvciBleGFtcGxlIFwib3JnLmdub21lLlNoZWxsLlNlYXJjaFByb3ZpZGVyMlwiXG4gKiBAcGFyYW0gb3B0aW9ucyBvcHRpb25hbCBwcm9wZXJ0aWVzIHRvIHBhc3MgdG8ge0BsaW5rIHJlZ2lzdGVyfVxuICovXG5leHBvcnQgZnVuY3Rpb24gaWZhY2UobmFtZTogc3RyaW5nLCBvcHRpb25zPzogUGFyYW1ldGVyczx0eXBlb2YgcmVnaXN0ZXI+WzBdKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChjbHM6IHsgbmV3ICguLi5hcmdzOiBhbnlbXSk6IFNlcnZpY2UgfSwgY3R4OiBDbGFzc0RlY29yYXRvckNvbnRleHQpIHtcbiAgICAgICAgY29uc3QgbWV0YSA9IGN0eC5tZXRhZGF0YVxuICAgICAgICBpZiAoIW1ldGEpIHRocm93IEVycm9yKGAke2Nscy5uYW1lfSBpcyBub3QgYW4gaW50ZXJmYWNlYClcblxuICAgICAgICBjb25zdCB7IGRidXNNZXRob2RzID0ge30sIGRidXNTaWduYWxzID0ge30sIGRidXNQcm9wZXJ0aWVzID0ge30gfSA9IG1ldGEgYXMgSW50ZXJmYWNlTWV0YVxuXG4gICAgICAgIGNvbnN0IGluZm9YbWwgPSB4bWwoe1xuICAgICAgICAgICAgbmFtZTogXCJub2RlXCIsXG4gICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJpbnRlcmZhY2VcIixcbiAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlczogeyBuYW1lIH0sXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAuLi5PYmplY3QuZW50cmllcyhkYnVzTWV0aG9kcykubWFwKChbbmFtZSwgYXJnc10pID0+ICh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJtZXRob2RcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB7IG5hbWUgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGlsZHJlbjogYXJncy5tYXAoKGFyZykgPT4gKHsgbmFtZTogXCJhcmdcIiwgYXR0cmlidXRlczogYXJnIH0pKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLk9iamVjdC5lbnRyaWVzKGRidXNTaWduYWxzKS5tYXAoKFtuYW1lLCBhcmdzXSkgPT4gKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcInNpZ25hbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHsgbmFtZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBhcmdzLm1hcCgoYXJnKSA9PiAoeyBuYW1lOiBcImFyZ1wiLCBhdHRyaWJ1dGVzOiBhcmcgfSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgLi4uT2JqZWN0LnZhbHVlcyhkYnVzUHJvcGVydGllcykubWFwKCh7IG5hbWUsIHR5cGUsIHJlYWQsIHdyaXRlIH0pID0+ICh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJwcm9wZXJ0eVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uKG5hbWUgJiYgeyBuYW1lIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY2Nlc3M6IChyZWFkID8gXCJyZWFkXCIgOiBcIlwiKSArICh3cml0ZSA/IFwid3JpdGVcIiA6IFwiXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSksXG4gICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIH0pXG5cbiAgICAgICAgT2JqZWN0LmFzc2lnbihjbHMsIHsgW2luZm9dOiBHaW8uREJ1c0ludGVyZmFjZUluZm8ubmV3X2Zvcl94bWwoaW5mb1htbCkgfSlcbiAgICAgICAgcmVnaXN0ZXIob3B0aW9ucykoY2xzLCBjdHgpXG4gICAgfVxufVxuXG50eXBlIERCdXNUeXBlID0gc3RyaW5nIHwgeyB0eXBlOiBzdHJpbmc7IG5hbWU6IHN0cmluZyB9XG5cbnR5cGUgSW5mZXJWYXJpYW50VHlwZXM8VCBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4gPSB7XG4gICAgW0sgaW4ga2V5b2YgVF06IFRbS10gZXh0ZW5kcyBzdHJpbmdcbiAgICAgICAgPyBEZWVwSW5mZXI8VFtLXT5cbiAgICAgICAgOiBUW0tdIGV4dGVuZHMgeyB0eXBlOiBpbmZlciBTIH1cbiAgICAgICAgICA/IFMgZXh0ZW5kcyBzdHJpbmdcbiAgICAgICAgICAgICAgPyBEZWVwSW5mZXI8Uz5cbiAgICAgICAgICAgICAgOiBuZXZlclxuICAgICAgICAgIDogdW5rbm93blxufVxuXG5mdW5jdGlvbiBpbnN0YWxsTWV0aG9kPEFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4+KFxuICAgIGFyZ3M6IEFyZ3MgfCBbQXJncywgQXJncz9dLFxuICAgIG1ldGhvZDogKC4uLmFyZ3M6IGFueVtdKSA9PiB1bmtub3duLFxuICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuKSB7XG4gICAgY29uc3QgbmFtZSA9IGN0eC5uYW1lXG4gICAgY29uc3QgbWV0YSA9IGN0eC5tZXRhZGF0YSEgYXMgSW50ZXJmYWNlTWV0YVxuICAgIGNvbnN0IG1ldGhvZHMgPSAobWV0YS5kYnVzTWV0aG9kcyA/Pz0ge30pXG5cbiAgICBpZiAodHlwZW9mIG5hbWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJvbmx5IHN0cmluZyBuYW1lZCBtZXRob2RzIGFyZSBhbGxvd2VkXCIpXG4gICAgfVxuXG4gICAgY29uc3QgW2luQXJncywgb3V0QXJncyA9IFtdXSA9IChBcnJheS5pc0FycmF5KGFyZ3NbMF0pID8gYXJncyA6IFthcmdzXSkgYXMgW0FyZ3MsIEFyZ3NdXG5cbiAgICBtZXRob2RzW25hbWVdID0gW1xuICAgICAgICAuLi5pbkFyZ3MubWFwKChhcmcpID0+ICh7XG4gICAgICAgICAgICBkaXJlY3Rpb246IFwiaW5cIiBhcyBjb25zdCxcbiAgICAgICAgICAgIC4uLih0eXBlb2YgYXJnID09PSBcInN0cmluZ1wiID8geyB0eXBlOiBhcmcgfSA6IGFyZyksXG4gICAgICAgIH0pKSxcbiAgICAgICAgLi4ub3V0QXJncy5tYXAoKGFyZykgPT4gKHtcbiAgICAgICAgICAgIGRpcmVjdGlvbjogXCJvdXRcIiBhcyBjb25zdCxcbiAgICAgICAgICAgIC4uLih0eXBlb2YgYXJnID09PSBcInN0cmluZ1wiID8geyB0eXBlOiBhcmcgfSA6IGFyZyksXG4gICAgICAgIH0pKSxcbiAgICBdXG5cbiAgICByZXR1cm4gbmFtZVxufVxuXG5mdW5jdGlvbiBpbnN0YWxsUHJvcGVydHk8VCBleHRlbmRzIHN0cmluZz4oXG4gICAgdHlwZTogVCxcbiAgICBjdHg6IENsYXNzRmllbGREZWNvcmF0b3JDb250ZXh0IHwgQ2xhc3NHZXR0ZXJEZWNvcmF0b3JDb250ZXh0IHwgQ2xhc3NTZXR0ZXJEZWNvcmF0b3JDb250ZXh0LFxuKSB7XG4gICAgY29uc3Qga2luZCA9IGN0eC5raW5kXG4gICAgY29uc3QgbmFtZSA9IGN0eC5uYW1lXG4gICAgY29uc3QgbWV0YSA9IGN0eC5tZXRhZGF0YSEgYXMgSW50ZXJmYWNlTWV0YVxuICAgIGNvbnN0IHByb3BlcnRpZXMgPSAobWV0YS5kYnVzUHJvcGVydGllcyA/Pz0ge30pXG5cbiAgICBpZiAodHlwZW9mIG5hbWUgIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJvbmx5IHN0cmluZyBuYW1lZCBwcm9wZXJ0aWVzIGFyZSBhbGxvd2VkXCIpXG4gICAgfVxuXG4gICAgY29uc3QgcmVhZCA9IGtpbmQgPT09IFwiZmllbGRcIiB8fCBraW5kID09PSBcImdldHRlclwiXG4gICAgY29uc3Qgd3JpdGUgPSBraW5kID09PSBcImZpZWxkXCIgfHwga2luZCA9PT0gXCJzZXR0ZXJcIlxuXG4gICAgaWYgKG5hbWUgaW4gcHJvcGVydGllcykge1xuICAgICAgICBpZiAod3JpdGUpIHByb3BlcnRpZXNbbmFtZV0ud3JpdGUgPSB0cnVlXG4gICAgICAgIGlmIChyZWFkKSBwcm9wZXJ0aWVzW25hbWVdLnJlYWQgPSB0cnVlXG4gICAgfSBlbHNlIHtcbiAgICAgICAgcHJvcGVydGllc1tuYW1lXSA9IHtcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgLi4uKHJlYWQgJiYgeyByZWFkIH0pLFxuICAgICAgICAgICAgLi4uKHdyaXRlICYmIHsgd3JpdGUgfSksXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmFtZVxufVxuXG5mdW5jdGlvbiBpbnN0YWxsU2lnbmFsPFBhcmFtcyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oXG4gICAgcGFyYW1zOiBQYXJhbXMsXG4gICAgY3R4OiBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8U2VydmljZT4sXG4pIHtcbiAgICBjb25zdCBuYW1lID0gY3R4Lm5hbWVcbiAgICBjb25zdCBtZXRhID0gY3R4Lm1ldGFkYXRhISBhcyBJbnRlcmZhY2VNZXRhXG4gICAgY29uc3Qgc2lnbmFscyA9IChtZXRhLmRidXNTaWduYWxzID8/PSB7fSlcblxuICAgIGlmICh0eXBlb2YgbmFtZSA9PT0gXCJzeW1ib2xcIikge1xuICAgICAgICB0aHJvdyBFcnJvcihcInN5bWJvbHMgYXJlIG5vdCB2YWxpZCBzaWduYWxzXCIpXG4gICAgfVxuXG4gICAgc2lnbmFsc1tuYW1lXSA9IHBhcmFtcy5tYXAoKGFyZykgPT4gKHR5cGVvZiBhcmcgPT09IFwic3RyaW5nXCIgPyB7IHR5cGU6IGFyZyB9IDogYXJnKSlcblxuICAgIHJldHVybiBuYW1lXG59XG5cbmZ1bmN0aW9uIGluZmVyR1R5cGVGcm9tVmFyaWFudCh0eXBlOiBEQnVzVHlwZSk6IEdPYmplY3QuR1R5cGU8YW55PiB7XG4gICAgaWYgKHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiKSByZXR1cm4gaW5mZXJHVHlwZUZyb21WYXJpYW50KHR5cGUudHlwZSlcblxuICAgIGlmICh0eXBlLnN0YXJ0c1dpdGgoXCJhXCIpIHx8IHR5cGUuc3RhcnRzV2l0aChcIihcIikpIHtcbiAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9KU09CSkVDVFxuICAgIH1cblxuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlIFwidlwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9WQVJJQU5UXG4gICAgICAgIGNhc2UgXCJiXCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX0JPT0xFQU5cbiAgICAgICAgY2FzZSBcInlcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfVUlOVFxuICAgICAgICBjYXNlIFwiblwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9JTlRcbiAgICAgICAgY2FzZSBcInFcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfVUlOVFxuICAgICAgICBjYXNlIFwiaVwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9JTlRcbiAgICAgICAgY2FzZSBcInVcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfVUlOVFxuICAgICAgICBjYXNlIFwieFwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9JTlQ2NFxuICAgICAgICBjYXNlIFwidFwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9VSU5UNjRcbiAgICAgICAgY2FzZSBcImhcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfSU5UXG4gICAgICAgIGNhc2UgXCJkXCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX0RPVUJMRVxuICAgICAgICBjYXNlIFwic1wiOlxuICAgICAgICBjYXNlIFwiZ1wiOlxuICAgICAgICBjYXNlIFwib1wiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9TVFJJTkdcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGJyZWFrXG4gICAgfVxuXG4gICAgdGhyb3cgRXJyb3IoYGNhbm5vdCBpbmZlciBHVHlwZSBmcm9tIHZhcmlhbnQgXCIke3R5cGV9XCJgKVxufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIG1ldGhvZC5cbiAqIFlvdSBzaG91bGQgcHJlZmVyIHVzaW5nIHtAbGluayBtZXRob2RBc3luY30gd2hlbiBwcm94eWluZywgZHVlIHRvIElPIGJsb2NraW5nLlxuICogTm90ZSB0aGF0IHRoaXMgaXMgZnVuY3Rpb25hbGx5IHRoZSBzYW1lIGFzIHtAbGluayBtZXRob2RBc3luY30gb24gZXhwb3J0ZWQgb2JqZWN0cy5cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gbWV0aG9kPGNvbnN0IEluQXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPiwgY29uc3QgT3V0QXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oXG4gICAgaW5BcmdzOiBJbkFyZ3MsXG4gICAgb3V0QXJnczogT3V0QXJncyxcbik6IChcbiAgICBtZXRob2Q6ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBhbnlbXSkgPT4gSW5mZXJWYXJpYW50VHlwZXM8T3V0QXJncz4sXG4gICAgY3R4OiBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8U2VydmljZSwgdHlwZW9mIG1ldGhvZD4sXG4pID0+ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+KSA9PiBhbnlcblxuLyoqXG4gKiBSZWdpc3RlcnMgYSBtZXRob2QuXG4gKiBZb3Ugc2hvdWxkIHByZWZlciB1c2luZyB7QGxpbmsgbWV0aG9kQXN5bmN9IHdoZW4gcHJveHlpbmcsIGR1ZSB0byBJTyBibG9ja2luZy5cbiAqIE5vdGUgdGhhdCB0aGlzIGlzIGZ1bmN0aW9uYWxseSB0aGUgc2FtZSBhcyB7QGxpbmsgbWV0aG9kQXN5bmN9IG9uIGV4cG9ydGVkIG9iamVjdHMuXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1ldGhvZDxjb25zdCBJbkFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4+KFxuICAgIC4uLmluQXJnczogSW5BcmdzXG4pOiAoXG4gICAgbWV0aG9kOiAodGhpczogU2VydmljZSwgLi4uYXJnczogYW55W10pID0+IHZvaWQsXG4gICAgY3R4OiBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8U2VydmljZSwgdHlwZW9mIG1ldGhvZD4sXG4pID0+ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+KSA9PiB2b2lkXG5cbmV4cG9ydCBmdW5jdGlvbiBtZXRob2Q8Y29uc3QgSW5BcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+LCBjb25zdCBPdXRBcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+PihcbiAgICAuLi5hcmdzOiBJbkFyZ3MgfCBbaW5BcmdzOiBJbkFyZ3MsIG91dEFyZ3M/OiBPdXRBcmdzXVxuKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChcbiAgICAgICAgbWV0aG9kOiAoXG4gICAgICAgICAgICB0aGlzOiBTZXJ2aWNlLFxuICAgICAgICAgICAgLi4uYXJnczogSW5mZXJWYXJpYW50VHlwZXM8SW5BcmdzPlxuICAgICAgICApID0+IEluZmVyVmFyaWFudFR5cGVzPE91dEFyZ3M+IHwgdm9pZCxcbiAgICAgICAgY3R4OiBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8U2VydmljZSwgdHlwZW9mIG1ldGhvZD4sXG4gICAgKTogKHRoaXM6IFNlcnZpY2UsIC4uLmFyZ3M6IEluZmVyVmFyaWFudFR5cGVzPEluQXJncz4pID0+IGFueSB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBpbnN0YWxsTWV0aG9kKGFyZ3MsIG1ldGhvZCwgY3R4KVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoLi4uYXJncykge1xuICAgICAgICAgICAgaWYgKHRoaXNbaW50ZXJuYWxzXS5wcm94eSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpc1tyZW1vdGVNZXRob2RdKG5hbWUsIGFyZ3MpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlLmRlZXBVbnBhY2s8SW5mZXJWYXJpYW50VHlwZXM8T3V0QXJncz4+KClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1ldGhvZC5hcHBseSh0aGlzLCBhcmdzKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIG1ldGhvZC5cbiAqIFlvdSBzaG91bGQgcHJlZmVyIHVzaW5nIHRoaXMgb3ZlciB7QGxpbmsgbWV0aG9kfSB3aGVuIHByb3h5aW5nLCBzaW5jZSB0aGlzIGRvZXMgbm90IGJsb2NrIElPLlxuICogTm90ZSB0aGF0IHRoaXMgaXMgZnVuY3Rpb25hbGx5IHRoZSBzYW1lIGFzIHtAbGluayBtZXRob2R9IG9uIGV4cG9ydGVkIG9iamVjdHMuXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1ldGhvZEFzeW5jPFxuICAgIGNvbnN0IEluQXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPixcbiAgICBjb25zdCBPdXRBcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+LFxuPihcbiAgICBpbkFyZ3M6IEluQXJncyxcbiAgICBvdXRBcmdzOiBPdXRBcmdzLFxuKTogKFxuICAgIG1ldGhvZDogKHRoaXM6IFNlcnZpY2UsIC4uLmFyZ3M6IGFueVtdKSA9PiBQcm9taXNlPEluZmVyVmFyaWFudFR5cGVzPE91dEFyZ3M+PixcbiAgICBjdHg6IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCB0eXBlb2YgbWV0aG9kPixcbikgPT4gKHRoaXM6IFNlcnZpY2UsIC4uLmFyZ3M6IEluZmVyVmFyaWFudFR5cGVzPEluQXJncz4pID0+IFByb21pc2U8YW55PlxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIG1ldGhvZC5cbiAqIFlvdSBzaG91bGQgcHJlZmVyIHVzaW5nIHRoaXMgb3ZlciB7QGxpbmsgbWV0aG9kfSB3aGVuIHByb3h5aW5nLCBzaW5jZSB0aGlzIGRvZXMgbm90IGJsb2NrIElPLlxuICogTm90ZSB0aGF0IHRoaXMgaXMgZnVuY3Rpb25hbGx5IHRoZSBzYW1lIGFzIHtAbGluayBtZXRob2R9IG9uIGV4cG9ydGVkIG9iamVjdHMuXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1ldGhvZEFzeW5jPGNvbnN0IEluQXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oXG4gICAgLi4uaW5BcmdzOiBJbkFyZ3Ncbik6IChcbiAgICBtZXRob2Q6ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBhbnlbXSkgPT4gUHJvbWlzZTx2b2lkPixcbiAgICBjdHg6IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCB0eXBlb2YgbWV0aG9kPixcbikgPT4gKHRoaXM6IFNlcnZpY2UsIC4uLmFyZ3M6IEluZmVyVmFyaWFudFR5cGVzPEluQXJncz4pID0+IFByb21pc2U8dm9pZD5cblxuZXhwb3J0IGZ1bmN0aW9uIG1ldGhvZEFzeW5jPFxuICAgIGNvbnN0IEluQXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPixcbiAgICBjb25zdCBPdXRBcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+LFxuPiguLi5hcmdzOiBJbkFyZ3MgfCBbaW5BcmdzOiBJbkFyZ3MsIG91dEFyZ3M/OiBPdXRBcmdzXSkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoXG4gICAgICAgIG1ldGhvZDogKFxuICAgICAgICAgICAgdGhpczogU2VydmljZSxcbiAgICAgICAgICAgIC4uLmFyZ3M6IEluZmVyVmFyaWFudFR5cGVzPEluQXJncz5cbiAgICAgICAgKSA9PiBQcm9taXNlPEluZmVyVmFyaWFudFR5cGVzPE91dEFyZ3M+IHwgdm9pZD4sXG4gICAgICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuICAgICk6ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+KSA9PiBQcm9taXNlPGFueT4ge1xuICAgICAgICBjb25zdCBuYW1lID0gaW5zdGFsbE1ldGhvZChhcmdzLCBtZXRob2QsIGN0eClcblxuICAgICAgICByZXR1cm4gYXN5bmMgZnVuY3Rpb24gKC4uLmFyZ3MpIHtcbiAgICAgICAgICAgIGlmICh0aGlzW2ludGVybmFsc10ucHJveHkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGF3YWl0IHRoaXNbcmVtb3RlTWV0aG9kQXN5bmNdKG5hbWUsIGFyZ3MpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlLmRlZXBVbnBhY2s8SW5mZXJWYXJpYW50VHlwZXM8T3V0QXJncz4+KClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1ldGhvZC5hcHBseSh0aGlzLCBhcmdzKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIHJlYWQtd3JpdGUgcHJvcGVydHkuIFdoZW4gYSBuZXcgdmFsdWUgaXMgYXNzaWduZWQgdGhlIG5vdGlmeSBzaWduYWxcbiAqIGlzIGF1dG9tYXRpY2FsbHkgZW1pdHRlZCBvbiB0aGUgbG9jYWwgYW5kIGV4cG9ydGVkIG9iamVjdC5cbiAqXG4gKiBOb3RlIHRoYXQgbmV3IHZhbHVlcyBhcmUgY2hlY2tlZCBieSByZWZlcmVuY2Ugc28gYXNzaWduaW5nIHRoZSBzYW1lIG9iamVjdCB3aWxsXG4gKiBub3QgZW1pdCB0aGUgbm90aWZ5IHNpZ25hbC5cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gcHJvcGVydHk8VCBleHRlbmRzIHN0cmluZz4odHlwZTogVCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoXG4gICAgICAgIF86IHZvaWQsXG4gICAgICAgIGN0eDogQ2xhc3NGaWVsZERlY29yYXRvckNvbnRleHQ8U2VydmljZSwgRGVlcEluZmVyPFQ+PixcbiAgICApOiAodGhpczogU2VydmljZSwgaW5pdDogRGVlcEluZmVyPFQ+KSA9PiBhbnkge1xuICAgICAgICBjb25zdCBuYW1lID0gaW5zdGFsbFByb3BlcnR5KHR5cGUsIGN0eClcblxuICAgICAgICB2b2lkIGdwcm9wZXJ0eSh7ICRndHlwZTogaW5mZXJHVHlwZUZyb21WYXJpYW50KHR5cGUpIH0pKFxuICAgICAgICAgICAgXyxcbiAgICAgICAgICAgIGN0eCBhcyBDbGFzc0ZpZWxkRGVjb3JhdG9yQ29udGV4dDxHT2JqZWN0Lk9iamVjdD4gJiBDdHgsXG4gICAgICAgICAgICB7IG1ldGFPbmx5OiB0cnVlIH0sXG4gICAgICAgIClcblxuICAgICAgICBjdHguYWRkSW5pdGlhbGl6ZXIoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIG5hbWUsIHtcbiAgICAgICAgICAgICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgc2V0KHZhbHVlOiBEZWVwSW5mZXI8VD4pIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBwcm94eSwgcHJpdiB9ID0gdGhpc1tpbnRlcm5hbHNdXG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHByb3h5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzW3JlbW90ZVByb3BlcnR5U2V0XShuYW1lLCB2YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKHByaXZbbmFtZV0gIT09IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcml2W25hbWVdID0gdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubm90aWZ5KG5hbWUgYXMgRXh0cmFjdDxrZXlvZiBTZXJ2aWNlLCBzdHJpbmc+KVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQoKTogRGVlcEluZmVyPFQ+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBwcm94eSwgcHJpdiB9ID0gdGhpc1tpbnRlcm5hbHNdXG5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3h5XG4gICAgICAgICAgICAgICAgICAgICAgICA/IHByb3h5LmdldF9jYWNoZWRfcHJvcGVydHkobmFtZSkhLmRlZXBVbnBhY2s8RGVlcEluZmVyPFQ+PigpXG4gICAgICAgICAgICAgICAgICAgICAgICA6IChwcml2W25hbWVdIGFzIERlZXBJbmZlcjxUPilcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSBzYXRpc2ZpZXMgVGhpc1R5cGU8U2VydmljZT4pXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChpbml0KSB7XG4gICAgICAgICAgICBjb25zdCBwcml2ID0gdGhpc1tpbnRlcm5hbHNdLnByaXZcbiAgICAgICAgICAgIHByaXZbbmFtZV0gPSBpbml0XG4gICAgICAgICAgICAvLyB3ZSBkb24ndCBuZWVkIHRvIHN0b3JlIHRoZSB2YWx1ZSBvbiB0aGUgb2JqZWN0IGl0c2VsZlxuICAgICAgICB9XG4gICAgfVxufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIHJlYWQtb25seSBwcm9wZXJ0eS4gQ2FuIGJlIHVzZWQgaW4gY29uanVjdGlvbiB3aXRoIHtAbGluayBzZXR0ZXJ9IHRvIGRlZmluZVxuICogcmVhZC13cml0ZSBwcm9wZXJ0aWVzIGFzIGFjY2Vzc29ycy5cbiAqXG4gKiBOb3RlIHRoYXQgeW91IHdpbGwgbmVlZCB0byBleHBsaWNpdGx5IGVtaXQgdGhlIG5vdGlmeSBzaWduYWwuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXR0ZXI8VCBleHRlbmRzIHN0cmluZz4odHlwZTogVCkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoXG4gICAgICAgIG1ldGhvZDogKHRoaXM6IFNlcnZpY2UpID0+IERlZXBJbmZlcjxUPixcbiAgICAgICAgY3R4OiBDbGFzc0dldHRlckRlY29yYXRvckNvbnRleHQ8U2VydmljZSwgRGVlcEluZmVyPFQ+PixcbiAgICApOiAodGhpczogU2VydmljZSkgPT4gYW55IHtcbiAgICAgICAgY29uc3QgbmFtZSA9IGluc3RhbGxQcm9wZXJ0eSh0eXBlLCBjdHgpXG5cbiAgICAgICAgY3R4LmFkZEluaXRpYWxpemVyKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGRlZmluZVByb3BlcnR5R2V0dGVyKHRoaXMsIG5hbWUgYXMgRXh0cmFjdDxrZXlvZiBTZXJ2aWNlLCBzdHJpbmc+KVxuICAgICAgICB9KVxuXG4gICAgICAgIHZvaWQgZ2dldHRlcih7ICRndHlwZTogaW5mZXJHVHlwZUZyb21WYXJpYW50KHR5cGUpIH0pKFxuICAgICAgICAgICAgKCkgPT4ge30sXG4gICAgICAgICAgICBjdHggYXMgQ2xhc3NHZXR0ZXJEZWNvcmF0b3JDb250ZXh0PEdPYmplY3QuT2JqZWN0PiAmIEN0eCxcbiAgICAgICAgKVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiBnZXQoKTogRGVlcEluZmVyPFQ+IHtcbiAgICAgICAgICAgIGNvbnN0IHsgcHJveHkgfSA9IHRoaXNbaW50ZXJuYWxzXVxuICAgICAgICAgICAgcmV0dXJuIHByb3h5XG4gICAgICAgICAgICAgICAgPyBwcm94eS5nZXRfY2FjaGVkX3Byb3BlcnR5KG5hbWUpIS5kZWVwVW5wYWNrPERlZXBJbmZlcjxUPj4oKVxuICAgICAgICAgICAgICAgIDogbWV0aG9kLmNhbGwodGhpcylcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLyoqXG4gKiBSZWdpc3RlcnMgYSB3cml0ZS1vbmx5IHByb3BlcnR5LiBDYW4gYmUgdXNlZCBpbiBjb25qdWN0aW9uIHdpdGgge0BsaW5rIGdldHRlcn0gdG8gZGVmaW5lXG4gKiByZWFkLXdyaXRlIHByb3BlcnRpZXMgYXMgYWNjZXNzb3JzLlxuICpcbiAqIE5vdGUgdGhhdCB5b3Ugd2lsbCBuZWVkIHRvIGV4cGxpY2l0bHkgZW1pdCB0aGUgbm90aWZ5IHNpZ25hbC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldHRlcjxUIGV4dGVuZHMgc3RyaW5nPih0eXBlOiBUKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChcbiAgICAgICAgc2V0dGVyOiAodGhpczogU2VydmljZSwgdmFsdWU6IGFueSkgPT4gdm9pZCxcbiAgICAgICAgY3R4OiBDbGFzc1NldHRlckRlY29yYXRvckNvbnRleHQ8U2VydmljZSwgRGVlcEluZmVyPFQ+PixcbiAgICApOiAodGhpczogU2VydmljZSwgdmFsdWU6IERlZXBJbmZlcjxUPikgPT4gdm9pZCB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBpbnN0YWxsUHJvcGVydHkodHlwZSwgY3R4KVxuXG4gICAgICAgIHZvaWQgZ3NldHRlcih7ICRndHlwZTogaW5mZXJHVHlwZUZyb21WYXJpYW50KHR5cGUpIH0pKFxuICAgICAgICAgICAgKCkgPT4ge30sXG4gICAgICAgICAgICBjdHggYXMgQ2xhc3NTZXR0ZXJEZWNvcmF0b3JDb250ZXh0PEdPYmplY3QuT2JqZWN0PiAmIEN0eCxcbiAgICAgICAgKVxuXG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAodmFsdWU6IERlZXBJbmZlcjxUPikge1xuICAgICAgICAgICAgY29uc3QgeyBwcm94eSB9ID0gdGhpc1tpbnRlcm5hbHNdXG5cbiAgICAgICAgICAgIGlmIChwcm94eSkge1xuICAgICAgICAgICAgICAgIHRoaXNbcmVtb3RlUHJvcGVydHlTZXRdKG5hbWUsIHZhbHVlKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBzZXR0ZXIuY2FsbCh0aGlzLCB2YWx1ZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuLyoqXG4gKiBSZWdpc3RlcnMgYSBzaWduYWwgd2hpY2ggd2hlbiBpbnZva2VkIHdpbGwgZW1pdCB0aGUgc2lnbmFsXG4gKiBvbiB0aGUgbG9jYWwgb2JqZWN0IGFuZCB0aGUgZXhwb3J0ZWQgb2JqZWN0LlxuICpcbiAqICoqTm90ZSoqOiBpdHMgbm90IHBvc3NpYmxlIHRvIGVtaXQgc2lnbmFscyBvbiByZW1vdGUgb2JqZWN0cyB0aHJvdWdoIHByb3hpZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzaWduYWw8Y29uc3QgUGFyYW1zIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+PiguLi5wYXJhbXM6IFBhcmFtcykge1xuICAgIHJldHVybiBmdW5jdGlvbiAoXG4gICAgICAgIG1ldGhvZDogKHRoaXM6IFNlcnZpY2UsIC4uLnBhcmFtczogYW55KSA9PiB2b2lkLFxuICAgICAgICBjdHg6IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCB0eXBlb2YgbWV0aG9kPixcbiAgICApOiAodGhpczogU2VydmljZSwgLi4ucGFyYW1zOiBJbmZlclZhcmlhbnRUeXBlczxQYXJhbXM+KSA9PiB2b2lkIHtcbiAgICAgICAgY29uc3QgbmFtZSA9IGluc3RhbGxTaWduYWwocGFyYW1zLCBjdHgpXG5cbiAgICAgICAgdm9pZCBnc2lnbmFsKC4uLnBhcmFtcy5tYXAoaW5mZXJHVHlwZUZyb21WYXJpYW50KSkoXG4gICAgICAgICAgICAoKSA9PiB7fSxcbiAgICAgICAgICAgIGN0eCBhcyBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8R09iamVjdC5PYmplY3Q+ICYgQ3R4LFxuICAgICAgICApXG5cbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICguLi5wYXJhbXMpIHtcbiAgICAgICAgICAgIGlmICh0aGlzW2ludGVybmFsc10ucHJveHkpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oYGNhbm5vdCBlbWl0IHNpZ25hbCBcIiR7bmFtZX1cIiBvbiByZW1vdGUgb2JqZWN0YClcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0IHx8ICF0aGlzW2ludGVybmFsc10ucHJveHkpIHtcbiAgICAgICAgICAgICAgICBtZXRob2QuYXBwbHkodGhpcywgcGFyYW1zKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5lbWl0KG5hbWUsIC4uLnBhcmFtcylcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsICJpbXBvcnQgeyBTZXJ2aWNlLCBpZmFjZSwgbWV0aG9kQXN5bmMgfSBmcm9tIFwiZ25pbS9kYnVzXCJcblxuZXhwb3J0IGludGVyZmFjZSBBcHBEQnVzSW1wbCB7XG4gICAgaW5zZWN0b3IoKTogdm9pZFxuICAgIHRvZ2dsZVdpbmRvdyhuYW1lOiBzdHJpbmcpOiB2b2lkXG4gICAgcXVpdCgpOiB2b2lkXG4gICAgcmVxdWVzdChhcmd2OiBzdHJpbmdbXSk6IFByb21pc2U8c3RyaW5nPlxufVxuXG5AaWZhY2UoXCJpby5Bc3RhbC5BcHBsaWNhdGlvblwiKVxuZXhwb3J0IGNsYXNzIEFwcERCdXMgZXh0ZW5kcyBTZXJ2aWNlIHtcbiAgICBwcml2YXRlIGltcGw6IEFwcERCdXNJbXBsXG5cbiAgICBAbWV0aG9kQXN5bmMoKVxuICAgIGFzeW5jIEluc3BlY3RvcigpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLmltcGwuaW5zZWN0b3IoKSlcbiAgICB9XG5cbiAgICBAbWV0aG9kQXN5bmMoXCJzXCIpXG4gICAgYXN5bmMgVG9nZ2xlV2luZG93KG5hbWU6IHN0cmluZyk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuaW1wbC50b2dnbGVXaW5kb3cobmFtZSkpXG4gICAgfVxuXG4gICAgQG1ldGhvZEFzeW5jKClcbiAgICBhc3luYyBRdWl0KCk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuaW1wbC5xdWl0KCkpXG4gICAgfVxuXG4gICAgQG1ldGhvZEFzeW5jKFtcImFzXCJdLCBbXCJzXCJdKVxuICAgIGFzeW5jIFJlcXVlc3QoYXJndjogc3RyaW5nW10pOiBQcm9taXNlPFtzdHJpbmddPiB7XG4gICAgICAgIHJldHVybiB0aGlzLmltcGwucmVxdWVzdChhcmd2KS50aGVuKChyZXMpID0+IFtyZXNdKVxuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKGltcGw6IEFwcERCdXNJbXBsKSB7XG4gICAgICAgIHN1cGVyKClcbiAgICAgICAgdGhpcy5pbXBsID0gaW1wbFxuICAgIH1cblxuICAgIHN0YXRpYyBwcm94eShpbnN0YW5jZU5hbWU6IHN0cmluZykge1xuICAgICAgICBjb25zdCBhcHAgPSBuZXcgQXBwREJ1cyh7XG4gICAgICAgICAgICBpbnNlY3RvcigpIHt9LFxuICAgICAgICAgICAgdG9nZ2xlV2luZG93KCkge30sXG4gICAgICAgICAgICBxdWl0KCkge30sXG4gICAgICAgICAgICByZXF1ZXN0OiAoKSA9PiBQcm9taXNlLnJlamVjdCgpLFxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVybiBhcHAucHJveHkoe1xuICAgICAgICAgICAgbmFtZTogXCJpby5Bc3RhbC5cIiArIGluc3RhbmNlTmFtZSxcbiAgICAgICAgfSlcbiAgICB9XG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gXCIuL0ZyYWdtZW50LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuaW1wb3J0IHsgdHlwZSBDQywgdHlwZSBGQywgZW52IH0gZnJvbSBcIi4vZW52LmpzXCJcbmltcG9ydCB7IGtlYmFiaWZ5LCB0eXBlIFBhc2NhbGlmeSwgc2V0IH0gZnJvbSBcIi4uL3V0aWwuanNcIlxuaW1wb3J0IHsgb25DbGVhbnVwIH0gZnJvbSBcIi4vc2NvcGUuanNcIlxuXG4vKipcbiAqIFJlcHJlc2VudHMgYWxsIG9mIHRoZSB0aGluZ3MgdGhhdCBjYW4gYmUgcGFzc2VkIGFzIGEgY2hpbGQgdG8gY2xhc3MgY29tcG9uZW50cy5cbiAqL1xuZXhwb3J0IHR5cGUgTm9kZSA9XG4gICAgfCBBcnJheTxHT2JqZWN0Lk9iamVjdD5cbiAgICB8IEdPYmplY3QuT2JqZWN0XG4gICAgfCBudW1iZXJcbiAgICB8IHN0cmluZ1xuICAgIHwgYm9vbGVhblxuICAgIHwgbnVsbFxuICAgIHwgdW5kZWZpbmVkXG5cbmV4cG9ydCBjb25zdCBndGtUeXBlID0gU3ltYm9sKFwiZ3RrIGJ1aWxkZXIgdHlwZVwiKVxuXG4vKipcbiAqIFNwZWNpYWwgc3ltYm9sIHdoaWNoIGxldHMgeW91IGltcGxlbWVudCBob3cgd2lkZ2V0cyBhcmUgYXBwZW5kZWQgaW4gSlNYLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBgdHNcbiAqIGNsYXNzIE15Q29tcG9uZW50IGV4dGVuZHMgR09iamVjdC5PYmplY3Qge1xuICogICBbYXBwZW5kQ2hpbGRdKGNoaWxkOiBHT2JqZWN0Lk9iamVjdCwgdHlwZTogc3RyaW5nIHwgbnVsbCkge1xuICogICAgIC8vIGltcGxlbWVudFxuICogICB9XG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNvbnN0IGFwcGVuZENoaWxkID0gU3ltYm9sKFwiSlNYIGFkZCBjaGlsZCBtZXRob2RcIilcblxuLyoqXG4gKiBTcGVjaWFsIHN5bWJvbCB3aGljaCBsZXRzIHlvdSBpbXBsZW1lbnQgaG93IHdpZGdldHMgYXJlIHJlbW92ZWQgaW4gSlNYLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBgdHNcbiAqIGNsYXNzIE15Q29tcG9uZW50IGV4dGVuZHMgR09iamVjdC5PYmplY3Qge1xuICogICBbcmVtb3ZlQ2hpbGRdKGNoaWxkOiBHT2JqZWN0Lk9iamVjdCkge1xuICogICAgIC8vIGltcGxlbWVudFxuICogICB9XG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGNvbnN0IHJlbW92ZUNoaWxkID0gU3ltYm9sKFwiSlNYIGFkZCByZW1vdmUgbWV0aG9kXCIpXG5cbi8qKlxuICogR2V0IHRoZSB0eXBlIG9mIHRoZSBvYmplY3Qgc3BlY2lmaWVkIHRocm91Z2ggdGhlIGAkdHlwZWAgcHJvcGVydHlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFR5cGUob2JqZWN0OiBHT2JqZWN0Lk9iamVjdCkge1xuICAgIHJldHVybiBndGtUeXBlIGluIG9iamVjdCA/IChvYmplY3RbZ3RrVHlwZV0gYXMgc3RyaW5nKSA6IG51bGxcbn1cblxuLyoqXG4gKiBGdW5jdGlvbiBDb21wb25lbnQgUHJvcGVydGllc1xuICovXG5leHBvcnQgdHlwZSBGQ1Byb3BzPFNlbGYsIFByb3BzPiA9IFByb3BzICYge1xuICAgIC8qKlxuICAgICAqIEd0ay5CdWlsZGVyIHR5cGVcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCBhcyBhIHBhcmFtZXRlcnNcbiAgICAgKi9cbiAgICAkdHlwZT86IHN0cmluZ1xuICAgIC8qKlxuICAgICAqIHNldHVwIGZ1bmN0aW9uXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgYXMgYSBwYXJhbWV0ZXJzXG4gICAgICovXG4gICAgJD8oc2VsZjogU2VsZik6IHZvaWRcbn1cblxuLyoqXG4gKiBDbGFzcyBDb21wb25lbnQgUHJvcGVydGllc1xuICovXG5leHBvcnQgdHlwZSBDQ1Byb3BzPFNlbGYgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCwgUHJvcHM+ID0ge1xuICAgIC8qKlxuICAgICAqIEBpbnRlcm5hbCBjaGlsZHJlbiBlbGVtZW50c1xuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICBjaGlsZHJlbj86IEFycmF5PE5vZGU+IHwgTm9kZVxuICAgIC8qKlxuICAgICAqIEd0ay5CdWlsZGVyIHR5cGVcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgJHR5cGU/OiBzdHJpbmdcbiAgICAvKipcbiAgICAgKiBmdW5jdGlvbiB0byB1c2UgYXMgYSBjb25zdHJ1Y3RvcixcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgJGNvbnN0cnVjdG9yPyhwcm9wczogUGFydGlhbDxQcm9wcz4pOiBTZWxmXG4gICAgLyoqXG4gICAgICogc2V0dXAgZnVuY3Rpb24sXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgICQ/KHNlbGY6IFNlbGYpOiB2b2lkXG4gICAgLyoqXG4gICAgICogQ1NTIGNsYXNzIG5hbWVzXG4gICAgICovXG4gICAgY2xhc3M/OiBzdHJpbmcgfCBBY2Nlc3NvcjxzdHJpbmc+XG4gICAgLyoqXG4gICAgICogaW5saW5lIENTU1xuICAgICAqL1xuICAgIGNzcz86IHN0cmluZyB8IEFjY2Vzc29yPHN0cmluZz5cbn0gJiB7XG4gICAgW0sgaW4ga2V5b2YgUHJvcHNdOiBBY2Nlc3NvcjxOb25OdWxsYWJsZTxQcm9wc1tLXT4+IHwgUHJvcHNbS11cbn0gJiB7XG4gICAgW1MgaW4ga2V5b2YgU2VsZltcIiRzaWduYWxzXCJdIGFzIFMgZXh0ZW5kcyBgbm90aWZ5Ojoke2luZmVyIFB9YFxuICAgICAgICA/IGBvbk5vdGlmeSR7UGFzY2FsaWZ5PFA+fWBcbiAgICAgICAgOiBTIGV4dGVuZHMgYCR7aW5mZXIgRX06OiR7aW5mZXIgRH1gXG4gICAgICAgICAgPyBgb24ke1Bhc2NhbGlmeTxgJHtFfToke0R9YD59YFxuICAgICAgICAgIDogUyBleHRlbmRzIHN0cmluZ1xuICAgICAgICAgICAgPyBgb24ke1Bhc2NhbGlmeTxTPn1gXG4gICAgICAgICAgICA6IG5ldmVyXT86IEdPYmplY3QuU2lnbmFsQ2FsbGJhY2s8U2VsZiwgU2VsZltcIiRzaWduYWxzXCJdW1NdPlxufVxuXG4vLyBwcmV0dGllci1pZ25vcmVcbnR5cGUgSnN4UHJvcHM8QywgUHJvcHM+ID1cbiAgICBDIGV4dGVuZHMgdHlwZW9mIEZyYWdtZW50ID8gKFByb3BzICYge30pXG4gICAgLy8gaW50cmluc2ljRWxlbWVudHMgYWx3YXlzIHJlc29sdmUgYXMgRkNcbiAgICAvLyBzbyB3ZSBjYW4ndCBuYXJyb3cgaXQgZG93biwgYW5kIGluIHNvbWUgY2FzZXNcbiAgICAvLyB0aGUgc2V0dXAgZnVuY3Rpb24gaXMgdHlwZWQgYXMgYSB1bmlvbiBvZiBPYmplY3QgYW5kIGFjdHVhbCB0eXBlXG4gICAgLy8gYXMgYSBmaXggdXNlcnMgY2FuIGFuZCBzaG91bGQgdXNlIEZDUHJvcHNcbiAgICA6IEMgZXh0ZW5kcyBGQyA/IFByb3BzICYgT21pdDxGQ1Byb3BzPFJldHVyblR5cGU8Qz4sIFByb3BzPiwgXCIkXCI+XG4gICAgOiBDIGV4dGVuZHMgQ0MgPyBDQ1Byb3BzPEluc3RhbmNlVHlwZTxDPiwgUHJvcHM+XG4gICAgOiBuZXZlclxuXG5mdW5jdGlvbiBpc0dPYmplY3RDdG9yKGN0b3I6IGFueSk6IGN0b3IgaXMgQ0Mge1xuICAgIHJldHVybiBjdG9yLnByb3RvdHlwZSBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0XG59XG5cbmZ1bmN0aW9uIGlzRnVuY3Rpb25DdG9yKGN0b3I6IGFueSk6IGN0b3IgaXMgRkMge1xuICAgIHJldHVybiB0eXBlb2YgY3RvciA9PT0gXCJmdW5jdGlvblwiICYmICFpc0dPYmplY3RDdG9yKGN0b3IpXG59XG5cbi8vIG9uTm90aWZ5UHJvcE5hbWUgLT4gbm90aWZ5Ojpwcm9wLW5hbWVcbi8vIG9uUGFzY2FsTmFtZTpkZXRhaWxOYW1lIC0+IHBhc2NhbC1uYW1lOjpkZXRhaWwtbmFtZVxuZXhwb3J0IGZ1bmN0aW9uIHNpZ25hbE5hbWUoa2V5OiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIGNvbnN0IFtzaWcsIGRldGFpbF0gPSBrZWJhYmlmeShrZXkuc2xpY2UoMikpLnNwbGl0KFwiOlwiKVxuXG4gICAgaWYgKHNpZy5zdGFydHNXaXRoKFwibm90aWZ5LVwiKSkge1xuICAgICAgICByZXR1cm4gYG5vdGlmeTo6JHtzaWcuc2xpY2UoNyl9YFxuICAgIH1cblxuICAgIHJldHVybiBkZXRhaWwgPyBgJHtzaWd9Ojoke2RldGFpbH1gIDogc2lnXG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmUocGFyZW50OiBHT2JqZWN0Lk9iamVjdCwgY2hpbGQ6IEdPYmplY3QuT2JqZWN0KSB7XG4gICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgIHBhcmVudC5yZW1vdmUoY2hpbGQpXG4gICAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGlmIChyZW1vdmVDaGlsZCBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudFtyZW1vdmVDaGlsZF0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICBwYXJlbnRbcmVtb3ZlQ2hpbGRdKGNoaWxkKVxuICAgICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBlbnYucmVtb3ZlQ2hpbGQocGFyZW50LCBjaGlsZClcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFwcGVuZChwYXJlbnQ6IEdPYmplY3QuT2JqZWN0LCBjaGlsZDogR09iamVjdC5PYmplY3QpIHtcbiAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgRnJhZ21lbnQpIHtcbiAgICAgICAgcGFyZW50LmFwcGVuZChjaGlsZClcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgRnJhZ21lbnQpIHtcbiAgICAgICAgZm9yIChjb25zdCBjaCBvZiBjaGlsZCkge1xuICAgICAgICAgICAgYXBwZW5kKHBhcmVudCwgY2gpXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBhcHBlbmRIYW5kbGVyID0gY2hpbGQuY29ubmVjdChcImFwcGVuZFwiLCAoXywgY2gpID0+IHtcbiAgICAgICAgICAgIGlmICghKGNoIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3QpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoVHlwZUVycm9yKGBjYW5ub3QgYWRkICR7Y2h9IHRvICR7cGFyZW50fWApKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXBwZW5kKHBhcmVudCwgY2gpXG4gICAgICAgIH0pXG5cbiAgICAgICAgY29uc3QgcmVtb3ZlSGFuZGxlciA9IGNoaWxkLmNvbm5lY3QoXCJyZW1vdmVcIiwgKF8sIGNoKSA9PiB7XG4gICAgICAgICAgICBpZiAoIShjaCBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0KSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmVycm9yKFR5cGVFcnJvcihgY2Fubm90IHJlbW92ZSAke2NofSBmcm9tICR7cGFyZW50fWApKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmVtb3ZlKHBhcmVudCwgY2gpXG4gICAgICAgIH0pXG5cbiAgICAgICAgb25DbGVhbnVwKCgpID0+IHtcbiAgICAgICAgICAgIGNoaWxkLmRpc2Nvbm5lY3QoYXBwZW5kSGFuZGxlcilcbiAgICAgICAgICAgIGNoaWxkLmRpc2Nvbm5lY3QocmVtb3ZlSGFuZGxlcilcbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpZiAoYXBwZW5kQ2hpbGQgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnRbYXBwZW5kQ2hpbGRdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcGFyZW50W2FwcGVuZENoaWxkXShjaGlsZCwgZ2V0VHlwZShjaGlsZCkpXG4gICAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGVudi5hcHBlbmRDaGlsZChwYXJlbnQsIGNoaWxkKVxufVxuXG4vKiogQGludGVybmFsICovXG5leHBvcnQgZnVuY3Rpb24gc2V0VHlwZShvYmplY3Q6IG9iamVjdCwgdHlwZTogc3RyaW5nKSB7XG4gICAgaWYgKGd0a1R5cGUgaW4gb2JqZWN0ICYmIG9iamVjdFtndGtUeXBlXSAhPT0gXCJcIikge1xuICAgICAgICBjb25zb2xlLndhcm4oYHR5cGUgb3ZlcnJpZGVuIGZyb20gJHtvYmplY3RbZ3RrVHlwZV19IHRvICR7dHlwZX0gb24gJHtvYmplY3R9YClcbiAgICB9XG5cbiAgICBPYmplY3QuYXNzaWduKG9iamVjdCwgeyBbZ3RrVHlwZV06IHR5cGUgfSlcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGpzeDxUIGV4dGVuZHMgKHByb3BzOiBhbnkpID0+IEdPYmplY3QuT2JqZWN0PihcbiAgICBjdG9yOiBULFxuICAgIHByb3BzOiBKc3hQcm9wczxULCBQYXJhbWV0ZXJzPFQ+WzBdPixcbik6IFJldHVyblR5cGU8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGpzeDxUIGV4dGVuZHMgbmV3IChwcm9wczogYW55KSA9PiBHT2JqZWN0Lk9iamVjdD4oXG4gICAgY3RvcjogVCxcbiAgICBwcm9wczogSnN4UHJvcHM8VCwgQ29uc3RydWN0b3JQYXJhbWV0ZXJzPFQ+WzBdPixcbik6IEluc3RhbmNlVHlwZTxUPlxuXG5leHBvcnQgZnVuY3Rpb24ganN4PFQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdD4oXG4gICAgY3Rvcjoga2V5b2YgKHR5cGVvZiBlbnYpW1wiaW50cmluc2ljRWxlbWVudHNcIl0gfCAobmV3IChwcm9wczogYW55KSA9PiBUKSB8ICgocHJvcHM6IGFueSkgPT4gVCksXG4gICAgaW5wcm9wczogYW55LFxuICAgIC8vIGtleSBpcyBhIHNwZWNpYWwgcHJvcCBpbiBqc3ggd2hpY2ggaXMgcGFzc2VkIGFzIGEgdGhpcmQgYXJndW1lbnQgYW5kIG5vdCBpbiBwcm9wc1xuICAgIGtleT86IHN0cmluZyxcbik6IFQge1xuICAgIGNvbnN0IHsgJCwgJHR5cGUsICRjb25zdHJ1Y3RvciwgY2hpbGRyZW4sIC4uLnJlc3QgfSA9IGlucHJvcHMgYXMgQ0NQcm9wczxULCBhbnk+XG4gICAgY29uc3QgcHJvcHMgPSByZXN0IGFzIFJlY29yZDxzdHJpbmcsIGFueT5cblxuICAgIGlmIChrZXkpIE9iamVjdC5hc3NpZ24ocHJvcHMsIHsga2V5IH0pXG5cbiAgICBjb25zdCBkZWZlclByb3BzID0gZW52LmluaXRQcm9wcyhjdG9yLCBwcm9wcykgPz8gW11cbiAgICBjb25zdCBkZWZlcnJlZFByb3BzOiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPiA9IHt9XG5cbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwcm9wcykpIHtcbiAgICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGRlbGV0ZSBwcm9wc1trZXldXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZGVmZXJQcm9wcy5pbmNsdWRlcyhrZXkpKSB7XG4gICAgICAgICAgICBkZWZlcnJlZFByb3BzW2tleV0gPSBwcm9wc1trZXldXG4gICAgICAgICAgICBkZWxldGUgcHJvcHNba2V5XVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBjdG9yID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGlmIChjdG9yIGluIGVudi5pbnRyaW5zaWNFbGVtZW50cykge1xuICAgICAgICAgICAgY3RvciA9IGVudi5pbnRyaW5zaWNFbGVtZW50c1tjdG9yXSBhcyBGQzxUPiB8IENDPFQ+XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgdW5rbm93biBpbnRyaW5zaWMgZWxlbWVudCBcIiR7Y3Rvcn1cImApXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoaXNGdW5jdGlvbkN0b3IoY3RvcikpIHtcbiAgICAgICAgY29uc3Qgb2JqZWN0ID0gY3Rvcih7IGNoaWxkcmVuLCAuLi5wcm9wcyB9KVxuICAgICAgICBpZiAoJHR5cGUpIHNldFR5cGUob2JqZWN0LCAkdHlwZSlcbiAgICAgICAgJD8uKG9iamVjdClcbiAgICAgICAgcmV0dXJuIG9iamVjdFxuICAgIH1cblxuICAgIC8vIGNvbGxlY3QgY3NzIGFuZCBjbGFzc05hbWVcbiAgICBjb25zdCB7IGNzcywgY2xhc3M6IGNsYXNzTmFtZSB9ID0gcHJvcHNcbiAgICBkZWxldGUgcHJvcHMuY3NzXG4gICAgZGVsZXRlIHByb3BzLmNsYXNzXG5cbiAgICBjb25zdCBzaWduYWxzOiBBcnJheTxbc3RyaW5nLCAoLi4ucHJvcHM6IHVua25vd25bXSkgPT4gdW5rbm93bl0+ID0gW11cbiAgICBjb25zdCBiaW5kaW5nczogQXJyYXk8W3N0cmluZywgQWNjZXNzb3I8dW5rbm93bj5dPiA9IFtdXG5cbiAgICAvLyBjb2xsZWN0IHNpZ25hbHMgYW5kIGJpbmRpbmdzXG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMocHJvcHMpKSB7XG4gICAgICAgIGlmIChrZXkuc3RhcnRzV2l0aChcIm9uXCIpKSB7XG4gICAgICAgICAgICBzaWduYWxzLnB1c2goW2tleSwgdmFsdWUgYXMgKCkgPT4gdW5rbm93bl0pXG4gICAgICAgICAgICBkZWxldGUgcHJvcHNba2V5XVxuICAgICAgICB9XG4gICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICBiaW5kaW5ncy5wdXNoKFtrZXksIHZhbHVlXSlcbiAgICAgICAgICAgIHByb3BzW2tleV0gPSB2YWx1ZS5nZXQoKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gY29uc3RydWN0XG4gICAgY29uc3Qgb2JqZWN0ID0gJGNvbnN0cnVjdG9yID8gJGNvbnN0cnVjdG9yKHByb3BzKSA6IG5ldyAoY3RvciBhcyBDQzxUPikocHJvcHMpXG4gICAgaWYgKCRjb25zdHJ1Y3RvcikgT2JqZWN0LmFzc2lnbihvYmplY3QsIHByb3BzKVxuICAgIGlmICgkdHlwZSkgc2V0VHlwZShvYmplY3QsICR0eXBlKVxuXG4gICAgaWYgKGNzcykgZW52LnNldENzcyhvYmplY3QsIGNzcylcbiAgICBpZiAoY2xhc3NOYW1lKSBlbnYuc2V0Q2xhc3Mob2JqZWN0LCBjbGFzc05hbWUpXG5cbiAgICAvLyBhZGQgY2hpbGRyZW5cbiAgICBmb3IgKGxldCBjaGlsZCBvZiBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuIDogW2NoaWxkcmVuXSkge1xuICAgICAgICBpZiAoY2hpbGQgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihFcnJvcihcIlRyeWluZyB0byBhZGQgYm9vbGVhbiB2YWx1ZSBvZiBgdHJ1ZWAgYXMgYSBjaGlsZC5cIikpXG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGQpKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGNoIG9mIGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgYXBwZW5kKG9iamVjdCwgY2gpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoY2hpbGQpIHtcbiAgICAgICAgICAgIGlmICghKGNoaWxkIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3QpKSB7XG4gICAgICAgICAgICAgICAgY2hpbGQgPSBlbnYudGV4dE5vZGUoY2hpbGQpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhcHBlbmQob2JqZWN0LCBjaGlsZClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIGhhbmRsZSBzaWduYWxzXG4gICAgY29uc3QgZGlzcG9zZUhhbmRsZXJzID0gc2lnbmFscy5tYXAoKFtzaWcsIGhhbmRsZXJdKSA9PiB7XG4gICAgICAgIGNvbnN0IGlkID0gb2JqZWN0LmNvbm5lY3Qoc2lnbmFsTmFtZShzaWcpLCBoYW5kbGVyKVxuICAgICAgICByZXR1cm4gKCkgPT4gb2JqZWN0LmRpc2Nvbm5lY3QoaWQpXG4gICAgfSlcblxuICAgIC8vIGRlZmVycmVkIHByb3BzXG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoZGVmZXJyZWRQcm9wcykpIHtcbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIGJpbmRpbmdzLnB1c2goW2tleSwgdmFsdWVdKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihvYmplY3QsIHsgW2tleV06IHZhbHVlIH0pXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBoYW5kbGUgYmluZGluZ3NcbiAgICBjb25zdCBkaXNwb3NlQmluZGluZ3MgPSBiaW5kaW5ncy5tYXAoKFtwcm9wLCBiaW5kaW5nXSkgPT4ge1xuICAgICAgICBjb25zdCBkaXNwb3NlID0gYmluZGluZy5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgc2V0KG9iamVjdCwgcHJvcCwgYmluZGluZy5nZXQoKSlcbiAgICAgICAgfSlcbiAgICAgICAgc2V0KG9iamVjdCwgcHJvcCwgYmluZGluZy5nZXQoKSlcbiAgICAgICAgcmV0dXJuIGRpc3Bvc2VcbiAgICB9KVxuXG4gICAgLy8gY2xlYW51cFxuICAgIGlmIChkaXNwb3NlQmluZGluZ3MubGVuZ3RoID4gMCB8fCBkaXNwb3NlSGFuZGxlcnMubGVuZ3RoID4gMCkge1xuICAgICAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICAgICAgZGlzcG9zZUhhbmRsZXJzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgZGlzcG9zZUJpbmRpbmdzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB9KVxuICAgIH1cblxuICAgICQ/LihvYmplY3QpXG4gICAgcmV0dXJuIG9iamVjdFxufVxuXG4vLyBUT0RPOiBtYWtlIHVzZSBvZiBqc3hzXG5leHBvcnQgY29uc3QganN4cyA9IGpzeFxuXG5kZWNsYXJlIGdsb2JhbCB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1uYW1lc3BhY2VcbiAgICBuYW1lc3BhY2UgSlNYIHtcbiAgICAgICAgdHlwZSBFbGVtZW50VHlwZSA9IGtleW9mIEludHJpbnNpY0VsZW1lbnRzIHwgRkMgfCBDQ1xuICAgICAgICB0eXBlIEVsZW1lbnQgPSBHT2JqZWN0Lk9iamVjdFxuICAgICAgICB0eXBlIEVsZW1lbnRDbGFzcyA9IEdPYmplY3QuT2JqZWN0XG5cbiAgICAgICAgdHlwZSBMaWJyYXJ5TWFuYWdlZEF0dHJpYnV0ZXM8QywgUHJvcHM+ID0gSnN4UHJvcHM8QywgUHJvcHM+ICYge1xuICAgICAgICAgICAgLy8gRklYTUU6IHdoeSBkb2VzIGFuIGludHJpbnNpYyBlbGVtZW50IGFsd2F5cyByZXNvbHZlIGFzIEZDP1xuICAgICAgICAgICAgLy8gX190eXBlPzogQyBleHRlbmRzIENDID8gXCJDQ1wiIDogQyBleHRlbmRzIEZDID8gXCJGQ1wiIDogbmV2ZXJcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktb2JqZWN0LXR5cGVcbiAgICAgICAgaW50ZXJmYWNlIEludHJpbnNpY0VsZW1lbnRzIHtcbiAgICAgICAgICAgIC8vIGNjOiBDQ1Byb3BzPEd0ay5Cb3gsIEd0ay5Cb3guQ29uc3RydWN0b3JQcm9wcywgR3RrLkJveC5TaWduYWxTaWduYXR1cmVzPlxuICAgICAgICAgICAgLy8gZmM6IEZDUHJvcHM8R3RrLldpZGdldCwgRm5Qcm9wcz5cbiAgICAgICAgfVxuXG4gICAgICAgIGludGVyZmFjZSBFbGVtZW50Q2hpbGRyZW5BdHRyaWJ1dGUge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1vYmplY3QtdHlwZVxuICAgICAgICAgICAgY2hpbGRyZW46IHt9XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5cbmludGVyZmFjZSBGcmFnbWVudFNpZ25hbHM8VD4gZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdC5TaWduYWxTaWduYXR1cmVzIHtcbiAgICBhcHBlbmQ6IChjaGlsZDogVCkgPT4gdm9pZFxuICAgIHJlbW92ZTogKGNoaWxkOiBUKSA9PiB2b2lkXG59XG5cbmV4cG9ydCBjbGFzcyBGcmFnbWVudDxUID0gYW55PiBleHRlbmRzIEdPYmplY3QuT2JqZWN0IHtcbiAgICBkZWNsYXJlICRzaWduYWxzOiBGcmFnbWVudFNpZ25hbHM8VD5cblxuICAgIHN0YXRpYyBbR09iamVjdC5zaWduYWxzXSA9IHtcbiAgICAgICAgYXBwZW5kOiB7IHBhcmFtX3R5cGVzOiBbR09iamVjdC5UWVBFX09CSkVDVF0gfSxcbiAgICAgICAgcmVtb3ZlOiB7IHBhcmFtX3R5cGVzOiBbR09iamVjdC5UWVBFX09CSkVDVF0gfSxcbiAgICB9XG5cbiAgICBzdGF0aWMgW0dPYmplY3QucHJvcGVydGllc10gPSB7XG4gICAgICAgIGNoaWxkcmVuOiBHT2JqZWN0LlBhcmFtU3BlYy5qc29iamVjdChcImNoaWxkcmVuXCIsIFwiXCIsIFwiXCIsIEdPYmplY3QuUGFyYW1GbGFncy5SRUFEQUJMRSksXG4gICAgfVxuXG4gICAgc3RhdGljIHtcbiAgICAgICAgR09iamVjdC5yZWdpc3RlckNsYXNzKHRoaXMpXG4gICAgfVxuXG4gICAgKltTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgICAgICB5aWVsZCogdGhpcy5fY2hpbGRyZW5cbiAgICB9XG5cbiAgICBwcml2YXRlIF9jaGlsZHJlbjogQXJyYXk8VD5cblxuICAgIGFwcGVuZChjaGlsZDogVCk6IHZvaWQge1xuICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBGcmFnbWVudCkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYG5lc3RpbmcgRnJhZ21lbnRzIGFyZSBub3QgeWV0IHN1cHBvcnRlZGApXG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9jaGlsZHJlbi5wdXNoKGNoaWxkKVxuICAgICAgICB0aGlzLmVtaXQoXCJhcHBlbmRcIiwgY2hpbGQpXG4gICAgICAgIHRoaXMubm90aWZ5KFwiY2hpbGRyZW5cIilcbiAgICB9XG5cbiAgICByZW1vdmUoY2hpbGQ6IFQpOiB2b2lkIHtcbiAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLl9jaGlsZHJlbi5maW5kSW5kZXgoKGkpID0+IGkgPT09IGNoaWxkKVxuICAgICAgICB0aGlzLl9jaGlsZHJlbi5zcGxpY2UoaW5kZXgsIDEpXG5cbiAgICAgICAgdGhpcy5lbWl0KFwicmVtb3ZlXCIsIGNoaWxkKVxuICAgICAgICB0aGlzLm5vdGlmeShcImNoaWxkcmVuXCIpXG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoeyBjaGlsZHJlbiA9IFtdIH06IFBhcnRpYWw8eyBjaGlsZHJlbjogQXJyYXk8VD4gfCBUIH0+ID0ge30pIHtcbiAgICAgICAgc3VwZXIoKVxuICAgICAgICB0aGlzLl9jaGlsZHJlbiA9IEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW4gOiBbY2hpbGRyZW5dXG4gICAgfVxuXG4gICAgY29ubmVjdDxTIGV4dGVuZHMga2V5b2YgRnJhZ21lbnRTaWduYWxzPFQ+PihcbiAgICAgICAgc2lnbmFsOiBTLFxuICAgICAgICBjYWxsYmFjazogR09iamVjdC5TaWduYWxDYWxsYmFjazx0aGlzLCBGcmFnbWVudFNpZ25hbHM8VD5bU10+LFxuICAgICk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiBzdXBlci5jb25uZWN0KHNpZ25hbCwgY2FsbGJhY2spXG4gICAgfVxufVxuIiwgImltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW9cIlxuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYlwiXG5pbXBvcnQgeyB0eXBlIFBhc2NhbGlmeSwgY2FtZWxpZnksIGtlYmFiaWZ5IH0gZnJvbSBcIi4uL3V0aWwuanNcIlxuaW1wb3J0IHR5cGUgeyBEZWVwSW5mZXIsIFJlY3Vyc2l2ZUluZmVyIH0gZnJvbSBcIi4uL3ZhcmlhbnQuanNcIlxuXG50eXBlIFN1YnNjcmliZUNhbGxiYWNrID0gKCkgPT4gdm9pZFxudHlwZSBEaXNwb3NlRnVuY3Rpb24gPSAoKSA9PiB2b2lkXG50eXBlIFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrOiBTdWJzY3JpYmVDYWxsYmFjaykgPT4gRGlzcG9zZUZ1bmN0aW9uXG5cbmV4cG9ydCB0eXBlIEFjY2Vzc2VkPFQ+ID0gVCBleHRlbmRzIEFjY2Vzc29yPGluZmVyIFY+ID8gViA6IG5ldmVyXG5cbmNvbnN0IGVtcHR5ID0gU3ltYm9sKFwiZW1wdHkgY29tcHV0ZWQgdmFsdWVcIilcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtZGVjbGFyYXRpb24tbWVyZ2luZ1xuZXhwb3J0IGNsYXNzIEFjY2Vzc29yPFQgPSB1bmtub3duPiBleHRlbmRzIEZ1bmN0aW9uIHtcbiAgICBzdGF0aWMgJGd0eXBlID0gR09iamVjdC5UWVBFX0pTT0JKRUNUIGFzIHVua25vd24gYXMgR09iamVjdC5HVHlwZTxBY2Nlc3Nvcj5cblxuICAgICNnZXQ6ICgpID0+IFRcbiAgICAjc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvblxuXG4gICAgY29uc3RydWN0b3IoZ2V0OiAoKSA9PiBULCBzdWJzY3JpYmU/OiBTdWJzY3JpYmVGdW5jdGlvbikge1xuICAgICAgICBzdXBlcihcInJldHVybiBhcmd1bWVudHMuY2FsbGVlLl9jYWxsLmFwcGx5KGFyZ3VtZW50cy5jYWxsZWUsIGFyZ3VtZW50cylcIilcbiAgICAgICAgdGhpcy4jc3Vic2NyaWJlID0gc3Vic2NyaWJlID8/ICgoKSA9PiAoKSA9PiB2b2lkIDApXG4gICAgICAgIHRoaXMuI2dldCA9IGdldFxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFN1YnNjcmliZSBmb3IgdmFsdWUgY2hhbmdlcy5cbiAgICAgKiBAcGFyYW0gY2FsbGJhY2sgVGhlIGZ1bmN0aW9uIHRvIHJ1biB3aGVuIHRoZSBjdXJyZW50IHZhbHVlIGNoYW5nZXMuXG4gICAgICogQHJldHVybnMgVW5zdWJzY3JpYmUgZnVuY3Rpb24uXG4gICAgICovXG4gICAgc3Vic2NyaWJlKGNhbGxiYWNrOiBTdWJzY3JpYmVDYWxsYmFjayk6IERpc3Bvc2VGdW5jdGlvbiB7XG4gICAgICAgIHJldHVybiB0aGlzLiNzdWJzY3JpYmUoY2FsbGJhY2spXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHJldHVybnMgVGhlIGN1cnJlbnQgdmFsdWUuXG4gICAgICovXG4gICAgZ2V0KCk6IFQge1xuICAgICAgICByZXR1cm4gdGhpcy4jZ2V0KClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgYSBuZXcgYEFjY2Vzc29yYCB0aGF0IGFwcGxpZXMgYSB0cmFuc2Zvcm1hdGlvbiBvbiBpdHMgdmFsdWUuXG4gICAgICogQHBhcmFtIHRyYW5zZm9ybSBUaGUgdHJhbnNmb3JtYXRpb24gdG8gYXBwbHkuIFNob3VsZCBiZSBhIHB1cmUgZnVuY3Rpb24uXG4gICAgICovXG4gICAgYXM8UiA9IFQ+KHRyYW5zZm9ybTogKHZhbHVlOiBUKSA9PiBSKTogQWNjZXNzb3I8Uj4ge1xuICAgICAgICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IHRyYW5zZm9ybSh0aGlzLiNnZXQoKSksIHRoaXMuI3N1YnNjcmliZSlcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2NhbGw8UiA9IFQ+KHRyYW5zZm9ybTogKHZhbHVlOiBUKSA9PiBSKTogQWNjZXNzb3I8Uj4ge1xuICAgICAgICBsZXQgdmFsdWU6IHR5cGVvZiBlbXB0eSB8IFIgPSBlbXB0eVxuICAgICAgICBsZXQgdW5zdWI6IERpc3Bvc2VGdW5jdGlvblxuXG4gICAgICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuXG4gICAgICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdW5zdWIgPSB0aGlzLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld1ZhbHVlID0gdHJhbnNmb3JtKHRoaXMuZ2V0KCkpXG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSAhPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gbmV3VmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IGVtcHR5XG4gICAgICAgICAgICAgICAgICAgIHVuc3ViKClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBnZXQgPSAoKTogUiA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUgIT09IGVtcHR5ID8gdmFsdWUgOiB0cmFuc2Zvcm0odGhpcy5nZXQoKSlcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBuZXcgQWNjZXNzb3IoZ2V0LCBzdWJzY3JpYmUpXG4gICAgfVxuXG4gICAgdG9TdHJpbmcoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIGBBY2Nlc3Nvcjwke3RoaXMuZ2V0KCl9PmBcbiAgICB9XG5cbiAgICBbU3ltYm9sLnRvUHJpbWl0aXZlXSgpIHtcbiAgICAgICAgY29uc29sZS53YXJuKFwiQWNjZXNzb3IgaW1wbGljaXRseSBjb252ZXJ0ZWQgdG8gYSBwcmltaXRpdmUgdmFsdWUuXCIpXG4gICAgICAgIHJldHVybiB0aGlzLnRvU3RyaW5nKClcbiAgICB9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQWNjZXNzb3I8VD4ge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIGNvbXB1dGVkIGBBY2Nlc3NvcmAgdGhhdCBjYWNoZXMgaXRzIHRyYW5zZm9ybWVkIHZhbHVlLlxuICAgICAqIEBwYXJhbSB0cmFuc2Zvcm0gVGhlIHRyYW5zZm9ybWF0aW9uIHRvIGFwcGx5LiBTaG91bGQgYmUgYSBwdXJlIGZ1bmN0aW9uLlxuICAgICAqIHNlZSB7QGxpbmsgY3JlYXRlQ29tcHV0ZWR9IGFuZCB7QGxpbmsgY3JlYXRlQ29tcHV0ZWRQcm9kdWNlcn1cbiAgICAgKi9cbiAgICA8UiA9IFQ+KHRyYW5zZm9ybTogKHZhbHVlOiBUKSA9PiBSKTogQWNjZXNzb3I8Uj5cbn1cblxuZXhwb3J0IHR5cGUgU2V0dGVyPFQ+ID0ge1xuICAgICh2YWx1ZTogVCk6IHZvaWRcbiAgICAodmFsdWU6IChwcmV2OiBUKSA9PiBUKTogdm9pZFxufVxuXG5leHBvcnQgdHlwZSBTdGF0ZTxUPiA9IFtBY2Nlc3NvcjxUPiwgU2V0dGVyPFQ+XVxuXG4vKipcbiAqIENyZWF0ZSBhIHdyaXRhYmxlIHNpZ25hbC5cbiAqXG4gKiBAcGFyYW0gaW5pdCBUaGUgaW50aWFsIHZhbHVlIG9mIHRoZSBzaWduYWxcbiAqIEByZXR1cm5zIEFuIGBBY2Nlc3NvcmAgYW5kIGEgc2V0dGVyIGZ1bmN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdGF0ZTxUPihpbml0OiBUKTogU3RhdGU8VD4ge1xuICAgIGxldCBjdXJyZW50VmFsdWUgPSBpbml0XG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcbiAgICAgICAgcmV0dXJuICgpID0+IHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICB9XG5cbiAgICBjb25zdCBzZXQgPSAobmV3VmFsdWU6IHVua25vd24pID0+IHtcbiAgICAgICAgY29uc3QgdmFsdWU6IFQgPSB0eXBlb2YgbmV3VmFsdWUgPT09IFwiZnVuY3Rpb25cIiA/IG5ld1ZhbHVlKGN1cnJlbnRWYWx1ZSkgOiBuZXdWYWx1ZVxuICAgICAgICBpZiAoY3VycmVudFZhbHVlICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgY3VycmVudFZhbHVlID0gdmFsdWVcbiAgICAgICAgICAgIC8vIHJ1bm5pbmcgY2FsbGJhY2tzIG1pZ2h0IG11dGF0ZSBzdWJzY3JpYmVyc1xuICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gW25ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSksIHNldCBhcyBTZXR0ZXI8VD5dXG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbXB1dGVkUHJvZHVjZXI8VD4oZm46ICh0cmFjazogPFY+KHNpZ25hbDogQWNjZXNzb3I8Vj4pID0+IFYpID0+IFQpOiBBY2Nlc3NvcjxUPiB7XG4gICAgbGV0IHZhbHVlOiB0eXBlb2YgZW1wdHkgfCBUID0gZW1wdHlcbiAgICBsZXQgcHJldkRlcHMgPSBuZXcgTWFwPEFjY2Vzc29yLCBEaXNwb3NlRnVuY3Rpb24+KClcblxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuICAgIGNvbnN0IGNhY2hlID0gbmV3IE1hcDxBY2Nlc3NvciwgdW5rbm93bj4oKVxuXG4gICAgY29uc3QgZWZmZWN0ID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBkZXBzID0gbmV3IFNldDxBY2Nlc3Nvcj4oKVxuICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IGZuKCh2KSA9PiB7XG4gICAgICAgICAgICBkZXBzLmFkZCh2KVxuICAgICAgICAgICAgcmV0dXJuIChjYWNoZS5nZXQodikgYXMgYW55KSB8fCB2LmdldCgpXG4gICAgICAgIH0pXG5cbiAgICAgICAgY29uc3QgZGlkQ2hhbmdlID0gdmFsdWUgIT09IG5ld1ZhbHVlXG4gICAgICAgIHZhbHVlID0gbmV3VmFsdWVcblxuICAgICAgICBjb25zdCBuZXdEZXBzID0gbmV3IE1hcDxBY2Nlc3NvciwgRGlzcG9zZUZ1bmN0aW9uPigpXG5cbiAgICAgICAgZm9yIChjb25zdCBbZGVwLCB1bnN1Yl0gb2YgcHJldkRlcHMpIHtcbiAgICAgICAgICAgIGlmICghZGVwcy5oYXMoZGVwKSkge1xuICAgICAgICAgICAgICAgIHVuc3ViKClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgbmV3RGVwcy5zZXQoZGVwLCB1bnN1YilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAoY29uc3QgZGVwIG9mIGRlcHMpIHtcbiAgICAgICAgICAgIGlmICghbmV3RGVwcy5oYXMoZGVwKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGRpc3Bvc2UgPSBkZXAuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBkZXAuZ2V0KClcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNhY2hlLmdldChkZXApICE9PSB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FjaGUuc2V0KGRlcCwgdmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICBlZmZlY3QoKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICBuZXdEZXBzLnNldChkZXAsIGRpc3Bvc2UpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBwcmV2RGVwcyA9IG5ld0RlcHNcbiAgICAgICAgaWYgKGRpZENoYW5nZSkge1xuICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBlZmZlY3QoKVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHZhbHVlID0gZW1wdHlcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFssIHVuc3ViXSBvZiBwcmV2RGVwcykge1xuICAgICAgICAgICAgICAgICAgICB1bnN1YigpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgZ2V0ID0gKCk6IFQgPT4ge1xuICAgICAgICByZXR1cm4gdmFsdWUgIT09IGVtcHR5ID8gdmFsdWUgOiBmbigodikgPT4gdi5nZXQoKSlcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKGdldCwgc3Vic2NyaWJlKVxufVxuXG5mdW5jdGlvbiBjcmVhdGVDb21wdXRlZEFyZ3M8XG4gICAgY29uc3QgRGVwcyBleHRlbmRzIEFycmF5PEFjY2Vzc29yPGFueT4+LFxuICAgIEFyZ3MgZXh0ZW5kcyB7IFtLIGluIGtleW9mIERlcHNdOiBBY2Nlc3NlZDxEZXBzW0tdPiB9LFxuICAgIFYgPSBBcmdzLFxuPihkZXBzOiBEZXBzLCB0cmFuc2Zvcm0/OiAoLi4uYXJnczogQXJncykgPT4gVik6IEFjY2Vzc29yPFY+IHtcbiAgICBsZXQgZGlzcG9zZTogQXJyYXk8RGlzcG9zZUZ1bmN0aW9uPlxuICAgIGxldCB2YWx1ZTogdHlwZW9mIGVtcHR5IHwgViA9IGVtcHR5XG5cbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcbiAgICBjb25zdCBjYWNoZSA9IG5ldyBBcnJheTx1bmtub3duPihkZXBzLmxlbmd0aClcblxuICAgIGNvbnN0IGNvbXB1dGUgPSAoKTogViA9PiB7XG4gICAgICAgIGNvbnN0IGFyZ3MgPSBkZXBzLm1hcCgoZGVwLCBpKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWNhY2hlW2ldKSB7XG4gICAgICAgICAgICAgICAgY2FjaGVbaV0gPSBkZXAuZ2V0KClcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlW2ldXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuIHRyYW5zZm9ybSA/IHRyYW5zZm9ybSguLi4oYXJncyBhcyBBcmdzKSkgOiAoYXJncyBhcyBWKVxuICAgIH1cblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIGRpc3Bvc2UgPSBkZXBzLm1hcCgoZGVwLCBpKSA9PlxuICAgICAgICAgICAgICAgIGRlcC5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IGRlcC5nZXQoKVxuICAgICAgICAgICAgICAgICAgICBpZiAoY2FjaGVbaV0gIT09IG5ld1ZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWNoZVtpXSA9IGRlcC5nZXQoKVxuXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IGNvbXB1dGUoKVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlICE9PSBuZXdWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlID0gbmV3VmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgKVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHZhbHVlID0gZW1wdHlcbiAgICAgICAgICAgICAgICBkaXNwb3NlLm1hcCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgZGlzcG9zZS5sZW5ndGggPSAwXG4gICAgICAgICAgICAgICAgY2FjaGUubGVuZ3RoID0gMFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgZ2V0ID0gKCk6IFYgPT4ge1xuICAgICAgICByZXR1cm4gdmFsdWUgIT09IGVtcHR5ID8gdmFsdWUgOiBjb21wdXRlKClcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKGdldCwgc3Vic2NyaWJlKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIGZyb20gYSBwcm9kdWNlciBmdW5jdGlvbiB0aGF0IHRyYWNrcyBpdHMgZGVwZW5kZW5jaWVzLlxuICpcbiAqIGBgYHRzIEV4YW1wbGVcbiAqIGxldCBhOiBBY2Nlc3NvcjxudW1iZXI+XG4gKiBsZXQgYjogQWNjZXNzb3I8bnVtYmVyPlxuICogY29uc3QgYzogQWNjZXNzb3I8bnVtYmVyPiA9IGNyZWF0ZUNvbXB1dGVkKChnZXQpID0+IGdldChhKSArIGdldChiKSlcbiAqIGBgYFxuICpcbiAqIEBleHBlcmltZW50YWxcbiAqIEBwYXJhbSBwcm9kdWNlciBUaGUgcHJvZHVjZXIgZnVuY3Rpb24gd2hpY2ggbGV0J3MgeW91IHRyYWNrIGRlcGVuZGVuY2llc1xuICogQHJldHVybnMgVGhlIGNvbXB1dGVkIGBBY2Nlc3NvcmAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb21wdXRlZDxUPihcbiAgICBwcm9kdWNlcjogKHRyYWNrOiA8Vj4oc2lnbmFsOiBBY2Nlc3NvcjxWPikgPT4gVikgPT4gVCxcbik6IEFjY2Vzc29yPFQ+XG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgd2hpY2ggaXMgY29tcHV0ZWQgZnJvbSBhIGxpc3Qgb2YgZ2l2ZW4gYEFjY2Vzc29yYHMuXG4gKlxuICogYGBgdHMgRXhhbXBsZVxuICogbGV0IGE6IEFjY2Vzc29yPG51bWJlcj5cbiAqIGxldCBiOiBBY2Nlc3NvcjxzdHJpbmc+XG4gKiBjb25zdCBjOiBBY2Nlc3NvcjxbbnVtYmVyLCBzdHJpbmddPiA9IGNyZWF0ZUNvbXB1dGVkKFthLCBiXSlcbiAqIGNvbnN0IGQ6IEFjY2Vzc29yPHN0cmluZz4gPSBjcmVhdGVDb21wdXRlZChbYSwgYl0sIChhOiBudW1iZXIsIGI6IHN0cmluZykgPT4gYCR7YX0gJHtifWApXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gZGVwcyBMaXN0IG9mIGBBY2Nlc3NvcnNgLlxuICogQHBhcmFtIHRyYW5zZm9ybSBBbiBvcHRpb25hbCB0cmFuc2Zvcm0gZnVuY3Rpb24uXG4gKiBAcmV0dXJucyBUaGUgY29tcHV0ZWQgYEFjY2Vzc29yYC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbXB1dGVkPFxuICAgIGNvbnN0IERlcHMgZXh0ZW5kcyBBcnJheTxBY2Nlc3Nvcjxhbnk+PixcbiAgICBBcmdzIGV4dGVuZHMgeyBbSyBpbiBrZXlvZiBEZXBzXTogQWNjZXNzZWQ8RGVwc1tLXT4gfSxcbiAgICBUID0gQXJncyxcbj4oZGVwczogRGVwcywgdHJhbnNmb3JtPzogKC4uLmFyZ3M6IEFyZ3MpID0+IFQpOiBBY2Nlc3NvcjxUPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWQoXG4gICAgLi4uYXJnczpcbiAgICAgICAgfCBbcHJvZHVjZXI6ICh0cmFjazogPFY+KHNpZ25hbDogQWNjZXNzb3I8Vj4pID0+IFYpID0+IHVua25vd25dXG4gICAgICAgIHwgW2RlcHM6IEFycmF5PEFjY2Vzc29yPiwgdHJhbnNmb3JtPzogKC4uLmFyZ3M6IHVua25vd25bXSkgPT4gdW5rbm93bl1cbikge1xuICAgIGNvbnN0IFtkZXBzT3JQcm9kdWNlciwgdHJhbnNmb3JtXSA9IGFyZ3NcbiAgICBpZiAodHlwZW9mIGRlcHNPclByb2R1Y2VyID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXB1dGVkUHJvZHVjZXIoZGVwc09yUHJvZHVjZXIpXG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGNyZWF0ZUNvbXB1dGVkQXJncyhkZXBzT3JQcm9kdWNlciwgdHJhbnNmb3JtKVxuICAgIH1cbn1cblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCBvbiBhIGBHT2JqZWN0Lk9iamVjdGAncyBgcHJvcGVydHlgLlxuICpcbiAqIEBwYXJhbSBvYmplY3QgVGhlIGBHT2JqZWN0Lk9iamVjdGAgdG8gY3JlYXRlIHRoZSBgQWNjZXNzb3JgIG9uLlxuICogQHBhcmFtIHByb3BlcnR5IE9uZSBvZiBpdHMgcmVnaXN0ZXJlZCBwcm9wZXJ0aWVzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQmluZGluZzxUIGV4dGVuZHMgR09iamVjdC5PYmplY3QsIFAgZXh0ZW5kcyBrZXlvZiBUPihcbiAgICBvYmplY3Q6IFQsXG4gICAgcHJvcGVydHk6IEV4dHJhY3Q8UCwgc3RyaW5nPixcbik6IEFjY2Vzc29yPFRbUF0+XG5cbi8vIFRPRE86IHN1cHBvcnQgbmVzdGVkIGJpbmRpbmdzXG4vLyBleHBvcnQgZnVuY3Rpb24gY3JlYXRlQmluZGluZzxcbi8vICAgICBUIGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4vLyAgICAgUDEgZXh0ZW5kcyBrZXlvZiBULFxuLy8gICAgIFAyIGV4dGVuZHMga2V5b2YgTm9uTnVsbGFibGU8VFtQMV0+LFxuLy8gPihcbi8vICAgICBvYmplY3Q6IFQsXG4vLyAgICAgcHJvcGVydHkxOiBFeHRyYWN0PFAxLCBzdHJpbmc+LFxuLy8gICAgIHByb3BlcnR5MjogRXh0cmFjdDxQMiwgc3RyaW5nPixcbi8vICk6IEFjY2Vzc29yPE5vbk51bGxhYmxlPFRbUDFdPltQMl0+XG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgb24gYSBgR2lvLlNldHRpbmdzYCdzIGBrZXlgLlxuICogVmFsdWVzIGFyZSByZWN1cnNpdmVseSB1bnBhY2tlZC5cbiAqXG4gKiBAZGVwcmVjYXRlZCBwcmVmZXIgdXNpbmcge0BsaW5rIGNyZWF0ZVNldHRpbmdzfS5cbiAqIEBwYXJhbSBvYmplY3QgVGhlIGBHaW8uU2V0dGluZ3NgIHRvIGNyZWF0ZSB0aGUgYEFjY2Vzc29yYCBvbi5cbiAqIEBwYXJhbSBrZXkgVGhlIHNldHRpbmdzIGtleVxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQmluZGluZzxUPihzZXR0aW5nczogR2lvLlNldHRpbmdzLCBrZXk6IHN0cmluZyk6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5kaW5nPFQ+KG9iamVjdDogR09iamVjdC5PYmplY3QgfCBHaW8uU2V0dGluZ3MsIGtleTogc3RyaW5nKTogQWNjZXNzb3I8VD4ge1xuICAgIGNvbnN0IHByb3AgPSBrZWJhYmlmeShrZXkpIGFzIGtleW9mIHR5cGVvZiBvYmplY3RcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgY29uc3Qgc2lnID0gb2JqZWN0IGluc3RhbmNlb2YgR2lvLlNldHRpbmdzID8gXCJjaGFuZ2VkXCIgOiBcIm5vdGlmeVwiXG4gICAgICAgIGNvbnN0IGlkID0gb2JqZWN0LmNvbm5lY3QoYCR7c2lnfTo6JHtwcm9wfWAsICgpID0+IGNhbGxiYWNrKCkpXG4gICAgICAgIHJldHVybiAoKSA9PiBvYmplY3QuZGlzY29ubmVjdChpZClcbiAgICB9XG5cbiAgICBjb25zdCBnZXQgPSAoKTogVCA9PiB7XG4gICAgICAgIGlmIChvYmplY3QgaW5zdGFuY2VvZiBHaW8uU2V0dGluZ3MpIHtcbiAgICAgICAgICAgIHJldHVybiBvYmplY3QuZ2V0X3ZhbHVlKGtleSkucmVjdXJzaXZlVW5wYWNrKCkgYXMgVFxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG9iamVjdCBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0KSB7XG4gICAgICAgICAgICBjb25zdCBnZXR0ZXIgPSBgZ2V0XyR7cHJvcC5yZXBsYWNlQWxsKFwiLVwiLCBcIl9cIil9YCBhcyBrZXlvZiB0eXBlb2Ygb2JqZWN0XG5cbiAgICAgICAgICAgIGlmIChnZXR0ZXIgaW4gb2JqZWN0ICYmIHR5cGVvZiBvYmplY3RbZ2V0dGVyXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIChvYmplY3RbZ2V0dGVyXSBhcyAoKSA9PiB1bmtub3duKSgpIGFzIFRcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHByb3AgaW4gb2JqZWN0KSByZXR1cm4gb2JqZWN0W3Byb3BdIGFzIFRcbiAgICAgICAgICAgIGlmIChrZXkgaW4gb2JqZWN0KSByZXR1cm4gb2JqZWN0W2tleSBhcyBrZXlvZiB0eXBlb2Ygb2JqZWN0XSBhcyBUXG4gICAgICAgIH1cblxuICAgICAgICB0aHJvdyBFcnJvcihgY2Fubm90IGdldCBwcm9wZXJ0eSBcIiR7a2V5fVwiIG9uIFwiJHtvYmplY3R9XCJgKVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoZ2V0LCBzdWJzY3JpYmUpXG59XG5cbnR5cGUgQ29ubmVjdGlvbkhhbmRsZXI8XG4gICAgTyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMgZXh0ZW5kcyBrZXlvZiBPW1wiJHNpZ25hbHNcIl0sXG4gICAgVCxcbj4gPSBPW1wiJHNpZ25hbHNcIl1bU10gZXh0ZW5kcyAoLi4uYXJnczogYW55W10pID0+IGluZmVyIFJcbiAgICA/IHZvaWQgZXh0ZW5kcyBSXG4gICAgICAgID8gKC4uLmFyZ3M6IFsuLi5QYXJhbWV0ZXJzPE9bXCIkc2lnbmFsc1wiXVtTXT4sIGN1cnJlbnRWYWx1ZTogVF0pID0+IFRcbiAgICAgICAgOiBuZXZlclxuICAgIDogbmV2ZXJcblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCB3aGljaCBzZXRzIHVwIGEgbGlzdCBvZiBgR09iamVjdC5PYmplY3RgIHNpZ25hbCBjb25uZWN0aW9ucy5cbiAqXG4gKiBgYGB0cyBFeGFtcGxlXG4gKiBjb25zdCB2YWx1ZTogQWNjZXNzb3I8c3RyaW5nPiA9IGNyZWF0ZUNvbm5lY3Rpb24oXG4gKiAgIFwiaW5pdGlhbCB2YWx1ZVwiLFxuICogICBbb2JqMSwgXCJzaWctbmFtZVwiLCAoLi4uYXJncykgPT4gXCJzdHJcIl0sXG4gKiAgIFtvYmoyLCBcInNpZy1uYW1lXCIsICguLi5hcmdzKSA9PiBcInN0clwiXVxuICogKVxuICogYGBgXG4gKlxuICogQHBhcmFtIGluaXQgVGhlIGluaXRpYWwgdmFsdWVcbiAqIEBwYXJhbSBzaWduYWxzIEEgbGlzdCBvZiBgR09iamVjdC5PYmplY3RgLCBzaWduYWwgbmFtZSBhbmQgY2FsbGJhY2sgcGFpcnMgdG8gY29ubmVjdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbm5lY3Rpb248XG4gICAgVCxcbiAgICBPMSBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMxIGV4dGVuZHMga2V5b2YgTzFbXCIkc2lnbmFsc1wiXSxcbiAgICBPMiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMyIGV4dGVuZHMga2V5b2YgTzJbXCIkc2lnbmFsc1wiXSxcbiAgICBPMyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFMzIGV4dGVuZHMga2V5b2YgTzNbXCIkc2lnbmFsc1wiXSxcbiAgICBPNCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM0IGV4dGVuZHMga2V5b2YgTzRbXCIkc2lnbmFsc1wiXSxcbiAgICBPNSBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM1IGV4dGVuZHMga2V5b2YgTzVbXCIkc2lnbmFsc1wiXSxcbiAgICBPNiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM2IGV4dGVuZHMga2V5b2YgTzZbXCIkc2lnbmFsc1wiXSxcbiAgICBPNyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM3IGV4dGVuZHMga2V5b2YgTzdbXCIkc2lnbmFsc1wiXSxcbiAgICBPOCBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM4IGV4dGVuZHMga2V5b2YgTzhbXCIkc2lnbmFsc1wiXSxcbiAgICBPOSBleHRlbmRzIEdPYmplY3QuT2JqZWN0LFxuICAgIFM5IGV4dGVuZHMga2V5b2YgTzlbXCIkc2lnbmFsc1wiXSxcbj4oXG4gICAgaW5pdDogVCxcbiAgICBoMTogW08xLCBTMSwgQ29ubmVjdGlvbkhhbmRsZXI8TzEsIFMxLCBUPl0sXG4gICAgaDI/OiBbTzIsIFMyLCBDb25uZWN0aW9uSGFuZGxlcjxPMiwgUzIsIFQ+XSxcbiAgICBoMz86IFtPMywgUzMsIENvbm5lY3Rpb25IYW5kbGVyPE8zLCBTMywgVD5dLFxuICAgIGg0PzogW080LCBTNCwgQ29ubmVjdGlvbkhhbmRsZXI8TzQsIFM0LCBUPl0sXG4gICAgaDU/OiBbTzUsIFM1LCBDb25uZWN0aW9uSGFuZGxlcjxPNSwgUzUsIFQ+XSxcbiAgICBoNj86IFtPNiwgUzYsIENvbm5lY3Rpb25IYW5kbGVyPE82LCBTNiwgVD5dLFxuICAgIGg3PzogW083LCBTNywgQ29ubmVjdGlvbkhhbmRsZXI8TzcsIFM3LCBUPl0sXG4gICAgaDg/OiBbTzgsIFM4LCBDb25uZWN0aW9uSGFuZGxlcjxPOCwgUzgsIFQ+XSxcbiAgICBoOT86IFtPOSwgUzksIENvbm5lY3Rpb25IYW5kbGVyPE85LCBTOSwgVD5dLFxuKSB7XG4gICAgbGV0IHZhbHVlID0gaW5pdFxuICAgIGxldCBkaXNwb3NlOiBBcnJheTxEaXNwb3NlRnVuY3Rpb24+XG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG4gICAgY29uc3Qgc2lnbmFscyA9IFtoMSwgaDIsIGgzLCBoNCwgaDUsIGg2LCBoNywgaDgsIGg5XS5maWx0ZXIoKGgpID0+IGggIT09IHVuZGVmaW5lZClcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIGRpc3Bvc2UgPSBzaWduYWxzLm1hcCgoW29iamVjdCwgc2lnbmFsLCBjYWxsYmFja10pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBpZCA9IEdPYmplY3QuT2JqZWN0LnByb3RvdHlwZS5jb25uZWN0LmNhbGwoXG4gICAgICAgICAgICAgICAgICAgIG9iamVjdCxcbiAgICAgICAgICAgICAgICAgICAgc2lnbmFsIGFzIHN0cmluZyxcbiAgICAgICAgICAgICAgICAgICAgKF8sIC4uLmFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld1ZhbHVlID0gY2FsbGJhY2soLi4uYXJncywgdmFsdWUpXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgIT09IG5ld1ZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBuZXdWYWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIClcblxuICAgICAgICAgICAgICAgIHJldHVybiAoKSA9PiBHT2JqZWN0Lk9iamVjdC5wcm90b3R5cGUuZGlzY29ubmVjdC5jYWxsKG9iamVjdCwgaWQpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGRpc3Bvc2UubWFwKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICBkaXNwb3NlLmxlbmd0aCA9IDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gdmFsdWUsIHN1YnNjcmliZSlcbn1cblxuLyoqXG4gKiBDcmVhdGUgYSBzaWduYWwgZnJvbSBhIHByb3ZpZXIgZnVuY3Rpb24uXG4gKiBUaGUgcHJvdmlkZXIgaXMgY2FsbGVkIHdoZW4gdGhlIGZpcnN0IHN1YnNjcmliZXIgYXBwZWFycyBhbmQgdGhlIHJldHVybmVkIGRpc3Bvc2VcbiAqIGZ1bmN0aW9uIGZyb20gdGhlIHByb3ZpZGVyIHdpbGwgYmUgY2FsbGVkIHdoZW4gdGhlIG51bWJlciBvZiBzdWJzY3JpYmVycyBkcm9wIHRvIHplcm8uXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGB0c1xuICogY29uc3QgdmFsdWUgPSBjcmVhdGVFeHRlcm5hbCgwLCAoc2V0KSA9PiB7XG4gKiAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4gc2V0KCh2KSA9PiB2ICsgMSkpXG4gKiAgIHJldHVybiAoKSA9PiBjbGVhckludGVydmFsKGludGVydmFsKVxuICogfSlcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBpbml0IFRoZSBpbml0aWFsIHZhbHVlXG4gKiBAcGFyYW0gcHJvZHVjZXIgVGhlIHByb2R1Y2VyIGZ1bmN0aW9uIHdoaWNoIHNob3VsZCByZXR1cm4gYSBjbGVhbnVwIGZ1bmN0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVFeHRlcm5hbDxUPihcbiAgICBpbml0OiBULFxuICAgIHByb2R1Y2VyOiAoc2V0OiBTZXR0ZXI8VD4pID0+IERpc3Bvc2VGdW5jdGlvbixcbik6IEFjY2Vzc29yPFQ+IHtcbiAgICBsZXQgY3VycmVudFZhbHVlID0gaW5pdFxuICAgIGxldCBkaXNwb3NlOiBEaXNwb3NlRnVuY3Rpb25cbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIGRpc3Bvc2UgPSBwcm9kdWNlcigodjogdW5rbm93bikgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5ld1ZhbHVlOiBUID0gdHlwZW9mIHYgPT09IFwiZnVuY3Rpb25cIiA/IHYoY3VycmVudFZhbHVlKSA6IHZcbiAgICAgICAgICAgICAgICBpZiAobmV3VmFsdWUgIT09IGN1cnJlbnRWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50VmFsdWUgPSBuZXdWYWx1ZVxuICAgICAgICAgICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGRpc3Bvc2UoKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSlcbn1cblxuLyoqIEBleHBlcmltZW50YWwgKi9cbnR5cGUgU2V0dGluZ3M8VCBleHRlbmRzIFJlY29yZDxzdHJpbmcsIHN0cmluZz4+ID0ge1xuICAgIFtLIGluIGtleW9mIFQgYXMgVW5jYXBpdGFsaXplPFBhc2NhbGlmeTxLPj5dOiBBY2Nlc3NvcjxSZWN1cnNpdmVJbmZlcjxUW0tdPj5cbn0gJiB7XG4gICAgW0sgaW4ga2V5b2YgVCBhcyBgc2V0JHtQYXNjYWxpZnk8Sz59YF06IFNldHRlcjxEZWVwSW5mZXI8VFtLXT4+XG59XG5cbi8qKlxuICogQGV4cGVyaW1lbnRhbFxuICpcbiAqIFdyYXAgYSB7QGxpbmsgR2lvLlNldHRpbmdzfSBpbnRvIGEgY29sbGVjdGlvbiBvZiBzZXR0ZXJzIGFuZCBhY2Nlc3NvcnMuXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGB0c1xuICogY29uc3QgcyA9IGNyZWF0ZVNldHRpbmdzKHNldHRpbmdzLCB7XG4gKiAgIFwiY29tcGxleC1rZXlcIjogXCJhe3Nhe3NzfX1cIixcbiAqICAgXCJzaW1wbGUta2V5XCI6IFwic1wiLFxuICogfSlcbiAqXG4gKiBzLmNvbXBsZXhLZXkuc3Vic2NyaWJlKCgpID0+IHtcbiAqICAgcHJpbnQocy5jb21wbGV4S2V5LmdldCgpKVxuICogfSlcbiAqXG4gKiBzLnNldENvbXBsZXhLZXkoKHByZXYpID0+ICh7XG4gKiAgIC4uLnByZXYsXG4gKiAgIGtleTogeyBuZXN0ZWQ6IFwiXCIgfSxcbiAqIH0pKVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTZXR0aW5nczxjb25zdCBUIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgc3RyaW5nPj4oXG4gICAgc2V0dGluZ3M6IEdpby5TZXR0aW5ncyxcbiAgICBrZXlzOiBULFxuKTogU2V0dGluZ3M8VD4ge1xuICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoXG4gICAgICAgIE9iamVjdC5lbnRyaWVzKGtleXMpLmZsYXRNYXAoKFtrZXksIHR5cGVdKSA9PiBbXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgY2FtZWxpZnkoa2V5KSxcbiAgICAgICAgICAgICAgICBuZXcgQWNjZXNzb3IoXG4gICAgICAgICAgICAgICAgICAgICgpID0+IHNldHRpbmdzLmdldF92YWx1ZShrZXkpLnJlY3Vyc2l2ZVVucGFjaygpLFxuICAgICAgICAgICAgICAgICAgICAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlkID0gc2V0dGluZ3MuY29ubmVjdChgY2hhbmdlZDo6JHtrZXl9YCwgY2FsbGJhY2spXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKCkgPT4gc2V0dGluZ3MuZGlzY29ubmVjdChpZClcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICBgc2V0JHtrZXlbMF0udG9VcHBlckNhc2UoKSArIGNhbWVsaWZ5KGtleSkuc2xpY2UoMSl9YCxcbiAgICAgICAgICAgICAgICAodjogdW5rbm93bikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBzZXR0aW5ncy5zZXRfdmFsdWUoXG4gICAgICAgICAgICAgICAgICAgICAgICBrZXksXG4gICAgICAgICAgICAgICAgICAgICAgICBuZXcgR0xpYi5WYXJpYW50KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIHYgPT09IFwiZnVuY3Rpb25cIiA/IHYoc2V0dGluZ3MuZ2V0X3ZhbHVlKGtleSkuZGVlcFVucGFjaygpKSA6IHYsXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIF0pLFxuICAgIClcbn1cbiIsICJpbXBvcnQgdHlwZSBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgdHlwZSBBY2Nlc3NvciB9IGZyb20gXCIuL3N0YXRlLmpzXCJcblxudHlwZSBHT2JqID0gR09iamVjdC5PYmplY3RcbmV4cG9ydCB0eXBlIENDPFQgZXh0ZW5kcyBHT2JqID0gR09iaj4gPSB7IG5ldyAocHJvcHM6IGFueSk6IFQgfVxuZXhwb3J0IHR5cGUgRkM8VCBleHRlbmRzIEdPYmogPSBHT2JqPiA9IChwcm9wczogYW55KSA9PiBUXG5cbnR5cGUgQ3NzU2V0dGVyID0gKG9iamVjdDogR09iaiwgY3NzOiBzdHJpbmcgfCBBY2Nlc3NvcjxzdHJpbmc+KSA9PiB2b2lkXG5cbmV4cG9ydCBmdW5jdGlvbiBjb25maWd1ZShjb25mOiBQYXJ0aWFsPEpzeEVudj4pIHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihlbnYsIGNvbmYpXG59XG5cbnR5cGUgSnN4RW52ID0ge1xuICAgIGludHJpbnNpY0VsZW1lbnRzOiBSZWNvcmQ8c3RyaW5nLCBDQyB8IEZDPlxuICAgIHRleHROb2RlKG5vZGU6IHN0cmluZyB8IG51bWJlcik6IEdPYmpcbiAgICBhcHBlbmRDaGlsZChwYXJlbnQ6IEdPYmosIGNoaWxkOiBHT2JqKTogdm9pZFxuICAgIHJlbW92ZUNoaWxkKHBhcmVudDogR09iaiwgY2hpbGQ6IEdPYmopOiB2b2lkXG4gICAgc2V0Q3NzOiBDc3NTZXR0ZXJcbiAgICBzZXRDbGFzczogQ3NzU2V0dGVyXG4gICAgLy8gc3RyaW5nW10gY2FuIGJlIHVzZSB0byBkZWxheSBzZXR0aW5nIHByb3BzIGFmdGVyIGNoaWxkcmVuXG4gICAgLy8gZS5nIEd0ay5TdGFja1tcInZpc2libGVDaGlsZE5hbWVcIl0gZGVwZW5kcyBvbiBjaGlsZHJlblxuICAgIGluaXRQcm9wcyhjdG9yOiB1bmtub3duLCBwcm9wczogYW55KTogdm9pZCB8IHN0cmluZ1tdXG4gICAgZGVmYXVsdENsZWFudXAob2JqZWN0OiBHT2JqKTogdm9pZFxufVxuXG5mdW5jdGlvbiBtaXNzaW5nSW1wbCgpOiBhbnkge1xuICAgIHRocm93IEVycm9yKFwibWlzc2luZyBpbXBsXCIpXG59XG5cbmV4cG9ydCBjb25zdCBlbnY6IEpzeEVudiA9IHtcbiAgICBpbnRyaW5zaWNFbGVtZW50czoge30sXG4gICAgdGV4dE5vZGU6IG1pc3NpbmdJbXBsLFxuICAgIGFwcGVuZENoaWxkOiBtaXNzaW5nSW1wbCxcbiAgICByZW1vdmVDaGlsZDogbWlzc2luZ0ltcGwsXG4gICAgc2V0Q3NzOiBtaXNzaW5nSW1wbCxcbiAgICBzZXRDbGFzczogbWlzc2luZ0ltcGwsXG4gICAgaW5pdFByb3BzOiAoKSA9PiB2b2lkIDAsXG4gICAgZGVmYXVsdENsZWFudXA6ICgpID0+IHZvaWQgMCxcbn1cbiIsICJleHBvcnQgY2xhc3MgU2NvcGUge1xuICAgIHN0YXRpYyBjdXJyZW50PzogU2NvcGUgfCBudWxsXG5cbiAgICBwYXJlbnQ/OiBTY29wZSB8IG51bGxcbiAgICBjb250ZXh0cyA9IG5ldyBNYXA8Q29udGV4dCwgdW5rbm93bj4oKVxuXG4gICAgcHJpdmF0ZSBjbGVhbnVwcyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKVxuICAgIHByaXZhdGUgbW91bnRzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG4gICAgcHJpdmF0ZSBtb3VudGVkID0gZmFsc2VcblxuICAgIGNvbnN0cnVjdG9yKHBhcmVudD86IFNjb3BlIHwgbnVsbCkge1xuICAgICAgICB0aGlzLnBhcmVudCA9IHBhcmVudFxuICAgIH1cblxuICAgIG9uQ2xlYW51cChjYWxsYmFjazogKCkgPT4gdm9pZCkge1xuICAgICAgICB0aGlzLmNsZWFudXBzPy5hZGQoY2FsbGJhY2spXG4gICAgfVxuXG4gICAgb25Nb3VudChjYWxsYmFjazogKCkgPT4gdm9pZCkge1xuICAgICAgICBpZiAodGhpcy5wYXJlbnQgJiYgIXRoaXMucGFyZW50Lm1vdW50ZWQpIHtcbiAgICAgICAgICAgIHRoaXMucGFyZW50Lm9uTW91bnQoY2FsbGJhY2spXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLm1vdW50cy5hZGQoY2FsbGJhY2spXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBydW48VD4oZm46ICgpID0+IFQpIHtcbiAgICAgICAgY29uc3QgcHJldiA9IFNjb3BlLmN1cnJlbnRcbiAgICAgICAgU2NvcGUuY3VycmVudCA9IHRoaXNcblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGZuKClcbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIHRoaXMubW91bnRzLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgdGhpcy5tb3VudHMuY2xlYXIoKVxuICAgICAgICAgICAgdGhpcy5tb3VudGVkID0gdHJ1ZVxuICAgICAgICAgICAgU2NvcGUuY3VycmVudCA9IHByZXZcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGRpc3Bvc2UoKSB7XG4gICAgICAgIHRoaXMuY2xlYW51cHMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgIHRoaXMuY2xlYW51cHMuY2xlYXIoKVxuICAgICAgICB0aGlzLmNvbnRleHRzLmNsZWFyKClcbiAgICAgICAgZGVsZXRlIHRoaXMucGFyZW50XG4gICAgfVxufVxuXG5leHBvcnQgdHlwZSBDb250ZXh0PFQgPSBhbnk+ID0ge1xuICAgIHVzZSgpOiBUXG4gICAgcHJvdmlkZTxSPih2YWx1ZTogVCwgZm46ICgpID0+IFIpOiBSXG4gICAgKHByb3BzOiB7IHZhbHVlOiBUOyBjaGlsZHJlbjogKCkgPT4gSlNYLkVsZW1lbnQgfSk6IEpTWC5FbGVtZW50XG59XG5cbi8qKlxuICogRXhhbXBsZSBVc2FnZTpcbiAqIGBgYHRzeFxuICogY29uc3QgTXlDb250ZXh0ID0gY3JlYXRlQ29udGV4dChcImZhbGxiYWNrLXZhbHVlXCIpXG4gKlxuICogZnVuY3Rpb24gQ29uc3VtZXJDb21wb25lbnQoKSB7XG4gKiAgIGNvbnN0IHZhbHVlID0gTXlDb250ZXh0LnVzZSgpXG4gKlxuICogICByZXR1cm4gPEd0ay5MYWJlbCBsYWJlbD17dmFsdWV9IC8+XG4gKiB9XG4gKlxuICogZnVuY3Rpb24gUHJvdmlkZXJDb21wb25lbnQoKSB7XG4gKiAgIHJldHVybiAoXG4gKiAgICAgPEd0ay5Cb3g+XG4gKiAgICAgICA8TXlDb250ZXh0IHZhbHVlPVwibXktdmFsdWVcIj5cbiAqICAgICAgICAgeygpID0+IDxDb25zdW1lckNvbXBvbmVudCAvPn1cbiAqICAgICAgIDwvTXlDb250ZXh0PlxuICogICAgIDwvR3RrLkJveD5cbiAqICAgKVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb250ZXh0PFQ+KGRlZmF1bHRWYWx1ZTogVCk6IENvbnRleHQ8VD4ge1xuICAgIGxldCBjdHg6IENvbnRleHQ8VD5cblxuICAgIGZ1bmN0aW9uIHByb3ZpZGU8Uj4odmFsdWU6IFQsIGZuOiAoKSA9PiBSKTogUiB7XG4gICAgICAgIGNvbnN0IHNjb3BlID0gZ2V0U2NvcGUoKVxuICAgICAgICBzY29wZS5jb250ZXh0cy5zZXQoY3R4LCB2YWx1ZSlcbiAgICAgICAgcmV0dXJuIHNjb3BlLnJ1bihmbilcbiAgICB9XG5cbiAgICBmdW5jdGlvbiB1c2UoKTogVCB7XG4gICAgICAgIGxldCBzY29wZSA9IFNjb3BlLmN1cnJlbnRcbiAgICAgICAgd2hpbGUgKHNjb3BlKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHNjb3BlLmNvbnRleHRzLmdldChjdHgpXG4gICAgICAgICAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCkgcmV0dXJuIHZhbHVlIGFzIFRcbiAgICAgICAgICAgIHNjb3BlID0gc2NvcGUucGFyZW50XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNvbnRleHQoeyB2YWx1ZSwgY2hpbGRyZW4gfTogeyB2YWx1ZTogVDsgY2hpbGRyZW46ICgpID0+IEpTWC5FbGVtZW50IH0pIHtcbiAgICAgICAgcmV0dXJuIHByb3ZpZGUodmFsdWUsIGNoaWxkcmVuKVxuICAgIH1cblxuICAgIHJldHVybiAoY3R4ID0gT2JqZWN0LmFzc2lnbihjb250ZXh0LCB7XG4gICAgICAgIHByb3ZpZGUsXG4gICAgICAgIHVzZSxcbiAgICB9KSlcbn1cblxuLyoqXG4gKiBHZXRzIHRoZSBzY29wZSB0aGF0IG93bnMgdGhlIGN1cnJlbnRseSBydW5uaW5nIGNvZGUuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjb25zdCBzY29wZSA9IGdldFNjb3BlKClcbiAqIHNldFRpbWVvdXQoKCkgPT4ge1xuICogICAvLyBUaGlzIGNhbGxiYWNrIGdldHMgcnVuIHdpdGhvdXQgYW4gb3duZXIgc2NvcGUuXG4gKiAgIC8vIFJlc3RvcmUgb3duZXIgdmlhIHNjb3BlLnJ1bjpcbiAqICAgc2NvcGUucnVuKCgpID0+IHtcbiAqICAgICBjb25zdCBmb28gPSBGb29Db250ZXh0LnVzZSgpXG4gKiAgICAgb25DbGVhbnVwKCgpID0+IHtcbiAqICAgICAgIHByaW50KFwic29tZSBjbGVhbnVwXCIpXG4gKiAgICAgfSlcbiAqICAgfSlcbiAqIH0sIDEwMDApXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFNjb3BlKCk6IFNjb3BlIHtcbiAgICBjb25zdCBzY29wZSA9IFNjb3BlLmN1cnJlbnRcbiAgICBpZiAoIXNjb3BlKSB7XG4gICAgICAgIHRocm93IEVycm9yKFwiY2Fubm90IGdldCBzY29wZTogb3V0IG9mIHRyYWNraW5nIGNvbnRleHRcIilcbiAgICB9XG5cbiAgICByZXR1cm4gc2NvcGVcbn1cblxuLyoqXG4gKiBBdHRhY2ggYSBjbGVhbnVwIGNhbGxiYWNrIHRvIHRoZSBjdXJyZW50IHtAbGluayBTY29wZX0uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBvbkNsZWFudXAoY2xlYW51cDogKCkgPT4gdm9pZCkge1xuICAgIGlmICghU2NvcGUuY3VycmVudCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKEVycm9yKFwib3V0IG9mIHRyYWNraW5nIGNvbnRleHQ6IHdpbGwgbm90IGJlIGFibGUgdG8gY2xlYW51cFwiKSlcbiAgICB9XG5cbiAgICBTY29wZS5jdXJyZW50Py5vbkNsZWFudXAoY2xlYW51cClcbn1cblxuLyoqXG4gKiBBdHRhY2ggYSBjYWxsYmFjayB0byBydW4gd2hlbiB0aGUgY3VycmVudGx5IHJ1bm5pbmcge0BsaW5rIFNjb3BlfSByZXR1cm5zLlxuICovXG5leHBvcnQgZnVuY3Rpb24gb25Nb3VudChjbGVhbnVwOiAoKSA9PiB2b2lkKSB7XG4gICAgaWYgKCFTY29wZS5jdXJyZW50KSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoRXJyb3IoXCJjYW5ub3QgYXR0YWNoIG9uTW91bnQ6IG91dCBvZiB0cmFja2luZyBjb250ZXh0XCIpKVxuICAgIH1cblxuICAgIFNjb3BlLmN1cnJlbnQ/Lm9uTW91bnQoY2xlYW51cClcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgcm9vdCB7QGxpbmsgU2NvcGV9IHRoYXQgd2hlbiBkaXNwb3NlZCB3aWxsIHJlbW92ZVxuICogYW55IGNoaWxkIHNpZ25hbCBoYW5kbGVyIG9yIHN0YXRlIHN1YnNjcmliZXIuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzeFxuICogY3JlYXRlUm9vdCgoZGlzcG9zZSkgPT4ge1xuICogICBsZXQgcm9vdDogR3RrLldpbmRvd1xuICpcbiAqICAgY29uc3QgW3N0YXRlXSA9IGNyZWF0ZVN0YXRlKFwidmFsdWVcIilcbiAqXG4gKiAgIGNvbnN0IHJlbW92ZSA9ICgpID0+IHtcbiAqICAgICByb290LmRlc3Ryb3koKVxuICogICAgIGRpc3Bvc2UoKVxuICogICB9XG4gKlxuICogICByZXR1cm4gKFxuICogICAgIDxHdGsuV2luZG93ICQ9eyhzZWxmKSA9PiAocm9vdCA9IHNlbGYpfT5cbiAqICAgICAgIDxHdGsuQm94PlxuICogICAgICAgICA8R3RrLkxhYmVsIGxhYmVsPXtzdGF0ZX0gLz5cbiAqICAgICAgICAgPEd0ay5CdXR0b24gJGNsaWNrZWQ9e3JlbW92ZX0gLz5cbiAqICAgICAgIDwvR3RrLkJveD5cbiAqICAgICA8L0d0ay5XaW5kb3c+XG4gKiAgIClcbiAqIH0pXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVJvb3Q8VD4oZm46IChkaXNwb3NlOiAoKSA9PiB2b2lkKSA9PiBUKSB7XG4gICAgY29uc3Qgc2NvcGUgPSBuZXcgU2NvcGUobnVsbClcbiAgICByZXR1cm4gc2NvcGUucnVuKCgpID0+IGZuKCgpID0+IHNjb3BlLmRpc3Bvc2UoKSkpXG59XG4iLCAiaW1wb3J0IHsgRnJhZ21lbnQgfSBmcm9tIFwiLi9GcmFnbWVudC5qc1wiXG5pbXBvcnQgeyBBY2Nlc3NvciwgdHlwZSBTdGF0ZSwgY3JlYXRlU3RhdGUgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5pbXBvcnQgeyBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsgZ2V0U2NvcGUsIG9uQ2xlYW51cCwgU2NvcGUgfSBmcm9tIFwiLi9zY29wZS5qc1wiXG5cbmludGVyZmFjZSBGb3JQcm9wczxJdGVtLCBFbCBleHRlbmRzIEpTWC5FbGVtZW50LCBLZXk+IHtcbiAgICBlYWNoOiBBY2Nlc3NvcjxJdGVyYWJsZTxJdGVtPj5cbiAgICBjaGlsZHJlbjogKGl0ZW06IEl0ZW0sIGluZGV4OiBBY2Nlc3NvcjxudW1iZXI+KSA9PiBFbFxuXG4gICAgLyoqXG4gICAgICogRnVuY3Rpb24gdG8gcnVuIGZvciBlYWNoIHJlbW92ZWQgZWxlbWVudC5cbiAgICAgKiBUaGUgZGVmYXVsdCB2YWx1ZSBkZXBlbmRzIG9uIHRoZSBlbnZpcm9ubWVudDpcbiAgICAgKlxuICAgICAqIC0gKipHdGs0Kio6IG51bGxcbiAgICAgKiAtICoqR3RrMyoqOiBHdGsuV2lkZ2V0LnByb3RvdHlwZS5kZXN0cm95XG4gICAgICogLSAqKkdub21lKio6IENsdXR0ZXIuQWN0b3IucHJvdG90eXBlLmRlc3Ryb3lcbiAgICAgKi9cbiAgICBjbGVhbnVwPzogbnVsbCB8ICgoZWxlbWVudDogRWwsIGl0ZW06IEl0ZW0sIGluZGV4OiBudW1iZXIpID0+IHZvaWQpXG5cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0aGF0IGdlbmVyYXRlcyB0aGUga2V5IGZvciBlYWNoIGl0ZW0uXG4gICAgICpcbiAgICAgKiBCeSBkZWZhdWx0IGl0ZW1zIGFyZSBtYXBwZWQgYnk6XG4gICAgICogLSB2YWx1ZSBpbiBjYXNlIG9mIHByaW1pdGl2ZSB2YWx1ZXNcbiAgICAgKiAtIHJlZmVyZW5jZSBvdGhlcndpc2VcbiAgICAgKi9cbiAgICBpZD86IChpdGVtOiBJdGVtKSA9PiBLZXkgfCBJdGVtXG59XG5cbi8vIFRPRE86IHN1cHBvcnQgR2lvLkxpc3RNb2RlbFxuXG5leHBvcnQgZnVuY3Rpb24gRm9yPEl0ZW0sIEVsIGV4dGVuZHMgSlNYLkVsZW1lbnQsIEtleT4oe1xuICAgIGVhY2gsXG4gICAgY2hpbGRyZW46IG1rQ2hpbGQsXG4gICAgY2xlYW51cCxcbiAgICBpZCA9IChpdGVtOiBJdGVtKSA9PiBpdGVtLFxufTogRm9yUHJvcHM8SXRlbSwgRWwsIEtleT4pOiBGcmFnbWVudDxFbD4ge1xuICAgIHR5cGUgTWFwSXRlbSA9IHsgaXRlbTogSXRlbTsgY2hpbGQ6IEVsOyBpbmRleDogU3RhdGU8bnVtYmVyPjsgc2NvcGU6IFNjb3BlIH1cblxuICAgIGNvbnN0IGN1cnJlbnRTY29wZSA9IGdldFNjb3BlKClcbiAgICBjb25zdCBtYXAgPSBuZXcgTWFwPEl0ZW0gfCBLZXksIE1hcEl0ZW0+KClcbiAgICBjb25zdCBmcmFnbWVudCA9IG5ldyBGcmFnbWVudDxFbD4oKVxuXG4gICAgZnVuY3Rpb24gcmVtb3ZlKHsgaXRlbSwgY2hpbGQsIGluZGV4OiBbaW5kZXhdLCBzY29wZSB9OiBNYXBJdGVtKSB7XG4gICAgICAgIHNjb3BlLmRpc3Bvc2UoKVxuICAgICAgICBpZiAodHlwZW9mIGNsZWFudXAgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgY2xlYW51cChjaGlsZCwgaXRlbSwgaW5kZXguZ2V0KCkpXG4gICAgICAgIH0gZWxzZSBpZiAoY2xlYW51cCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgZW52LmRlZmF1bHRDbGVhbnVwKGNoaWxkKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2FsbGJhY2soaXRhcmVhYmxlOiBJdGVyYWJsZTxJdGVtPikge1xuICAgICAgICBjb25zdCBpdGVtcyA9IFsuLi5pdGFyZWFibGVdXG4gICAgICAgIGNvbnN0IGlkcyA9IGl0ZW1zLm1hcChpZClcbiAgICAgICAgY29uc3QgaWRTZXQgPSBuZXcgU2V0KGlkcylcblxuICAgICAgICAvLyBjbGVhbnVwIGNoaWxkcmVuIG1pc3NpbmcgZnJvbSBhcnJcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgbWFwLmVudHJpZXMoKSkge1xuICAgICAgICAgICAgLy8gdGhlcmUgaXMgbm8gZ2VuZXJpYyB3YXkgdG8gaW5zZXJ0IGNoaWxkIGF0IGluZGV4XG4gICAgICAgICAgICAvLyBzbyB3ZSBzb3J0IGJ5IHJlbW92aW5nIGV2ZXJ5IGNoaWxkIGFuZCByZWFwcGVuZGluZyBpbiBvcmRlclxuICAgICAgICAgICAgZnJhZ21lbnQucmVtb3ZlKHZhbHVlLmNoaWxkKVxuXG4gICAgICAgICAgICBpZiAoIWlkU2V0LmhhcyhrZXkpKSB7XG4gICAgICAgICAgICAgICAgcmVtb3ZlKHZhbHVlKVxuICAgICAgICAgICAgICAgIG1hcC5kZWxldGUoa2V5KVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gdXBkYXRlIGluZGV4IGFuZCBhZGQgbmV3IGl0ZW1zXG4gICAgICAgIGl0ZW1zLm1hcCgoaXRlbSwgaSkgPT4ge1xuICAgICAgICAgICAgY29uc3Qga2V5ID0gaWRzW2ldXG4gICAgICAgICAgICBpZiAobWFwLmhhcyhrZXkpKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgICAgICAgICBpbmRleDogWywgc2V0SW5kZXhdLFxuICAgICAgICAgICAgICAgICAgICBjaGlsZCxcbiAgICAgICAgICAgICAgICB9ID0gbWFwLmdldChrZXkpIVxuICAgICAgICAgICAgICAgIHNldEluZGV4KGkpXG4gICAgICAgICAgICAgICAgaWYgKFsuLi5mcmFnbWVudF0uc29tZSgoY2gpID0+IGNoID09PSBjaGlsZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGBkdXBsaWNhdGUga2V5cyBmb3VuZDogJHtrZXl9YClcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBmcmFnbWVudC5hcHBlbmQoY2hpbGQpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zdCBbaW5kZXgsIHNldEluZGV4XSA9IGNyZWF0ZVN0YXRlKGkpXG4gICAgICAgICAgICAgICAgY29uc3Qgc2NvcGUgPSBuZXcgU2NvcGUoY3VycmVudFNjb3BlKVxuICAgICAgICAgICAgICAgIGNvbnN0IGNoaWxkID0gc2NvcGUucnVuKCgpID0+IG1rQ2hpbGQoaXRlbSwgaW5kZXgpKVxuICAgICAgICAgICAgICAgIG1hcC5zZXQoa2V5LCB7IGl0ZW0sIGNoaWxkLCBpbmRleDogW2luZGV4LCBzZXRJbmRleF0sIHNjb3BlIH0pXG4gICAgICAgICAgICAgICAgZnJhZ21lbnQuYXBwZW5kKGNoaWxkKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGNvbnN0IGRpc3Bvc2UgPSBlYWNoLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKGVhY2guZ2V0KCkpXG4gICAgfSlcbiAgICBjYWxsYmFjayhlYWNoLmdldCgpKVxuXG4gICAgb25DbGVhbnVwKCgpID0+IHtcbiAgICAgICAgZGlzcG9zZSgpXG5cbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiBtYXAudmFsdWVzKCkpIHtcbiAgICAgICAgICAgIHJlbW92ZSh2YWx1ZSlcbiAgICAgICAgfVxuXG4gICAgICAgIG1hcC5jbGVhcigpXG4gICAgfSlcblxuICAgIHJldHVybiBmcmFnbWVudFxufVxuIiwgImltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgZW52IH0gZnJvbSBcIi4vZW52LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuaW1wb3J0IHsgc2V0IH0gZnJvbSBcIi4uL3V0aWwuanNcIlxuaW1wb3J0IHsgb25DbGVhbnVwIH0gZnJvbSBcIi4vc2NvcGUuanNcIlxuaW1wb3J0IHsgYXBwZW5kLCBzZXRUeXBlLCBzaWduYWxOYW1lLCB0eXBlIENDUHJvcHMgfSBmcm9tIFwiLi9qc3guanNcIlxuXG50eXBlIFRoaXNQcm9wczxTZWxmIGV4dGVuZHMgR09iamVjdC5PYmplY3Q+ID0gUGFydGlhbDxcbiAgICBPbWl0PENDUHJvcHM8U2VsZiwgeyBbSyBpbiBrZXlvZiBTZWxmXTogU2VsZltLXSB9PiwgXCIkXCIgfCBcIiRjb25zdHJ1Y3RvclwiPlxuPiAmIHtcbiAgICB0aGlzOiBTZWxmXG59XG5cbi8qKiBAZXhwZXJpbWVudGFsICovXG5leHBvcnQgZnVuY3Rpb24gVGhpczxUIGV4dGVuZHMgR09iamVjdC5PYmplY3Q+KHtcbiAgICB0aGlzOiBzZWxmLFxuICAgIGNoaWxkcmVuLFxuICAgICR0eXBlLFxuICAgIC4uLnByb3BzXG59OiBUaGlzUHJvcHM8VD4pIHtcbiAgICBjb25zdCBjbGVhbnVwID0gbmV3IEFycmF5PCgpID0+IHZvaWQ+KClcblxuICAgIGlmICgkdHlwZSkgc2V0VHlwZShzZWxmLCAkdHlwZSlcblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAoa2V5ID09PSBcImNzc1wiKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDc3Moc2VsZiwgdmFsdWUuZ2V0KCkpXG4gICAgICAgICAgICAgICAgY2xlYW51cC5wdXNoKHZhbHVlLnN1YnNjcmliZSgoKSA9PiBlbnYuc2V0Q3NzKHNlbGYsIHZhbHVlLmdldCgpKSkpXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDc3Moc2VsZiwgdmFsdWUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoa2V5ID09PSBcImNsYXNzXCIpIHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICAgICAgZW52LnNldENsYXNzKHNlbGYsIHZhbHVlLmdldCgpKVxuICAgICAgICAgICAgICAgIGNsZWFudXAucHVzaCh2YWx1ZS5zdWJzY3JpYmUoKCkgPT4gZW52LnNldENsYXNzKHNlbGYsIHZhbHVlLmdldCgpKSkpXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgICAgIGVudi5zZXRDbGFzcyhzZWxmLCB2YWx1ZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChrZXkuc3RhcnRzV2l0aChcIm9uXCIpKSB7XG4gICAgICAgICAgICBjb25zdCBpZCA9IHNlbGYuY29ubmVjdChzaWduYWxOYW1lKGtleSksIHZhbHVlKVxuICAgICAgICAgICAgY2xlYW51cC5wdXNoKCgpID0+IHNlbGYuZGlzY29ubmVjdChpZCkpXG4gICAgICAgIH0gZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgY29uc3QgZGlzcG9zZSA9IHZhbHVlLnN1YnNjcmliZSgoKSA9PiBzZXQoc2VsZiwga2V5LCB2YWx1ZS5nZXQoKSkpXG4gICAgICAgICAgICBzZXQoc2VsZiwga2V5LCB2YWx1ZS5nZXQoKSlcbiAgICAgICAgICAgIGNsZWFudXAucHVzaChkaXNwb3NlKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2V0KHNlbGYsIGtleSwgdmFsdWUpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKGxldCBjaGlsZCBvZiBBcnJheS5pc0FycmF5KGNoaWxkcmVuKSA/IGNoaWxkcmVuIDogW2NoaWxkcmVuXSkge1xuICAgICAgICBpZiAoY2hpbGQgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihFcnJvcihcIlRyeWluZyB0byBhZGQgYm9vbGVhbiB2YWx1ZSBvZiBgdHJ1ZWAgYXMgYSBjaGlsZC5cIikpXG4gICAgICAgICAgICBjb250aW51ZVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGQpKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGNoIG9mIGNoaWxkKSB7XG4gICAgICAgICAgICAgICAgYXBwZW5kKHNlbGYsIGNoKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGNoaWxkKSB7XG4gICAgICAgICAgICBpZiAoIShjaGlsZCBpbnN0YW5jZW9mIEdPYmplY3QuT2JqZWN0KSkge1xuICAgICAgICAgICAgICAgIGNoaWxkID0gZW52LnRleHROb2RlKGNoaWxkKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXBwZW5kKHNlbGYsIGNoaWxkKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGNsZWFudXAubGVuZ3RoID4gMCkge1xuICAgICAgICBvbkNsZWFudXAoKCkgPT4gY2xlYW51cC5mb3JFYWNoKChjYikgPT4gY2IoKSkpXG4gICAgfVxuXG4gICAgcmV0dXJuIHNlbGZcbn1cbiIsICIvKiBUcm9wIGNvbG9yc2NoZW1lIGZvciBBR1MgKi9cbi8qIH4vLmNvbmZpZy9hZ3Mvc3R5bGVzL2NvbG9ycy5zY3NzICovXG4qIHtcbiAgZm9udC1mYW1pbHk6IFwiSmV0QnJhaW5zTW9ub05MIE5lcmQgRm9udFwiO1xuICBmb250LXNpemU6IDE4cHg7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG5cbnNjYWxlIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuc2NhbGUgdHJvdWdoIGhpZ2hsaWdodCB7XG4gIG1pbi1oZWlnaHQ6IDZweDtcbn1cbnNjYWxlIHRyb3VnaCBzbGlkZXIge1xuICBib3gtc2hhZG93OiBub25lO1xuICBvdXRsaW5lOiB1bnNldDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbm1lbnVidXR0b24ge1xuICBwYWRkaW5nOiAwO1xufVxubWVudWJ1dHRvbiBidXR0b24ge1xuICBwYWRkaW5nOiB1bnNldDtcbiAgbWFyZ2luOiB1bnNldDtcbn1cbm1lbnVidXR0b24gYnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMTEsIDE5OCwgMTcwLCAwLjE1KTtcbn1cblxuYnV0dG9uIHtcbiAgcGFkZGluZzogdW5zZXQ7XG4gIG1hcmdpbjogdW5zZXQ7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycyBlYXNlLWluLW91dDtcbn1cbmJ1dHRvbjphY3RpdmUgPiAqIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgwLjg1KTtcbn1cbmJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjExLCAxOTgsIDE3MCwgMC4xNSk7XG59XG5cbndpbmRvdy5CYXIge1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cbndpbmRvdy5CYXIgLmJhci1jb250YWluZXIge1xuICBwYWRkaW5nOiAwcmVtIDAuNHJlbTtcbiAgbWluLWhlaWdodDogMS43NXJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE3MWIxZjtcbiAgY29sb3I6ICNkM2M2YWE7XG59XG5cbi5tb2R1bGUtY29udGFpbmVyIC5pY29uIHtcbiAgcGFkZGluZzogMCAwLjNlbTtcbiAgZm9udC1mYW1pbHk6IFwiTWF0ZXJpYWwgU3ltYm9scyBSb3VuZGVkXCI7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMC4yNWVtO1xuICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwLjI1ZW07XG4gIGNvbG9yOiAjMjMyOTJlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjJjOThmO1xufVxuLm1vZHVsZS1jb250YWluZXIgLmxhYmVsIHtcbiAgcGFkZGluZzogMCAwLjNlbTtcbiAgY29sb3I6ICNkM2M2YWE7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyYTMxMzc7XG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwLjI1ZW07XG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwLjI1ZW07XG59XG5cbi53b3Jrc3BhY2VzIC53b3Jrc3BhY2UtYnV0dG9uIHtcbiAgbWluLWhlaWdodDogMC44cmVtO1xuICBtaW4td2lkdGg6IDAuOHJlbTtcbiAgYm9yZGVyLXJhZGl1czogMTAwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyYTMxMzc7XG59XG4ud29ya3NwYWNlcyAud29ya3NwYWNlLWJ1dHRvbi5hY3RpdmUge1xuICBtaW4td2lkdGg6IDEuMnJlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2IyYzk4Zjtcbn1cbi53b3Jrc3BhY2VzIC53b3Jrc3BhY2UtYnV0dG9uLm9jY3VwaWVkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzdhODQ3ODtcbn1cbi53b3Jrc3BhY2VzIC53b3Jrc3BhY2UtYnV0dG9uLm9jY3VwaWVkLmFjdGl2ZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiMmM5OGY7XG59XG5cbi50YXNrYmFyIC5jbGllbnQuYWN0aXZlIC5jbGllbnQtaWNvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiMmM5OGY7XG4gIGNvbG9yOiAjMjMyOTJlO1xufVxuLnRhc2tiYXIgLmNsaWVudC5hY3RpdmUgLmNsaWVudC10aXRsZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyYTMxMzc7XG4gIGNvbG9yOiAjYjJjOThmO1xufVxuLnRhc2tiYXIgLmNsaWVudC1pY29uIHtcbiAgcGFkZGluZzogMHJlbSAwLjNyZW07XG4gIGZvbnQtZmFtaWx5OiBcIk1hdGVyaWFsIFN5bWJvbHMgUm91bmRlZFwiO1xuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwLjI1ZW07XG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDAuMjVlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ0NGE0ZjtcbiAgY29sb3I6ICNkM2M2YWE7XG59XG4udGFza2JhciAuY2xpZW50LXRpdGxlIHtcbiAgbWluLXdpZHRoOiA4ZW07XG4gIHBhZGRpbmc6IDByZW0gMC4zcmVtO1xuICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMC4yNWVtO1xuICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMC4yNWVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWUyNDI4O1xuICBjb2xvcjogIzU1NWM1NDtcbn1cblxuLmV4aXQtYnV0dG9uIC5pY29uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2N2U4MDtcbn1cbi5leGl0LWJ1dHRvbiAubGFiZWwge1xuICBjb2xvcjogI2U2N2U4MDtcbn1cblxuLmNsb2NrIC5pY29uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RiYmM3Zjtcbn1cbi5jbG9jayAubGFiZWwge1xuICBjb2xvcjogI2RiYmM3Zjtcbn1cblxuLm5ldHdvcmsgLmljb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYWQ4NWQ3O1xufVxuLm5ldHdvcmsgLmxhYmVsIHtcbiAgY29sb3I6ICNhZDg1ZDc7XG59XG5cbi5uZXRzdGF0cyAuaWNvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNjk4NzU7XG59XG4ubmV0c3RhdHMgLmxhYmVsIHtcbiAgY29sb3I6ICNlNjk4NzU7XG59XG5cbi52b2x1bWUgLmljb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjODNjMDkyO1xufVxuLnZvbHVtZSAubGFiZWwge1xuICBjb2xvcjogIzgzYzA5Mjtcbn1cblxuLnN5c3RyYXkgLmJ1dHRvbi1pY29uIHtcbiAgYm9yZGVyLXJhZGl1czogMC4yNWVtO1xuICBwYWRkaW5nOiAwcmVtIDAuNHJlbTtcbiAgbWluLXdpZHRoOiAxOHB4O1xuICBtaW4taGVpZ2h0OiAxOHB4O1xufVxuLnN5c3RyYXkgLmJ1dHRvbi1pY29uOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2IyYzk4ZjtcbiAgY29sb3I6ICMyMzI5MmU7XG59XG5cbndpbmRvdy5ub3RpZmljYXRpb24tcG9wdXBzIHtcbiAgYWxsOiB1bnNldDtcbn1cblxuLm5vdGlmaWNhdGlvbiB7XG4gIGJvcmRlci1yYWRpdXM6IDAuMjVlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzFlMjQyODtcbiAgbWFyZ2luOiA0cHg7XG4gIGJveC1zaGFkb3c6IDJweCAzcHggOHB4IDAgYWxwaGEoYmxhY2ssMC40KTtcbiAgYm9yZGVyOiAxcHQgc29saWQgYWxwaGEoI2QzYzZhYSwwLjAzKTtcbn1cbi5ub3RpZmljYXRpb24uY3JpdGljYWwge1xuICBib3JkZXI6IDFwdCBzb2xpZCBhbHBoYSgjZTY3ZTgwLDAuNCk7XG59XG4ubm90aWZpY2F0aW9uLmNyaXRpY2FsIC5oZWFkZXIgLmFwcC1uYW1lIHtcbiAgY29sb3I6IGFscGhhKCNlNjdlODAsMC44KTtcbn1cbi5ub3RpZmljYXRpb24uY3JpdGljYWwgLmhlYWRlciAuYXBwLWljb24ge1xuICBjb2xvcjogYWxwaGEoI2U2N2U4MCwwLjYpO1xufVxuLm5vdGlmaWNhdGlvbiAuaGVhZGVyIHtcbiAgcGFkZGluZzogMC41cmVtO1xuICBjb2xvcjogYWxwaGEoI2QzYzZhYSwwLjUpO1xufVxuLm5vdGlmaWNhdGlvbiAuaGVhZGVyIC5hcHAtaWNvbiB7XG4gIG1hcmdpbjogMCAwLjRyZW07XG59XG4ubm90aWZpY2F0aW9uIC5oZWFkZXIgLmFwcC1uYW1lIHtcbiAgbWFyZ2luLXJpZ2h0OiAwLjNyZW07XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuLm5vdGlmaWNhdGlvbiAuaGVhZGVyIC5hcHAtbmFtZTpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi1sZWZ0OiAwLjRyZW07XG59XG4ubm90aWZpY2F0aW9uIC5oZWFkZXIgLnRpbWUge1xuICBtYXJnaW46IDAgMC40cmVtO1xufVxuLm5vdGlmaWNhdGlvbiAuaGVhZGVyIGJ1dHRvbiB7XG4gIGJvcmRlci1yYWRpdXM6IDAuMjVlbTtcbiAgcGFkZGluZzogMC4ycmVtO1xuICBtaW4td2lkdGg6IDA7XG4gIG1pbi1oZWlnaHQ6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNlNjdlODA7XG4gIGNvbG9yOiAjMWUyNDI4O1xufVxuLm5vdGlmaWNhdGlvbiBzZXBhcmF0b3Ige1xuICBtYXJnaW46IDAgMC40cmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBhbHBoYSgjZDNjNmFhLDAuMSk7XG59XG4ubm90aWZpY2F0aW9uIC5jb250ZW50IHtcbiAgbWFyZ2luOiAxcmVtO1xuICBtYXJnaW4tdG9wOiAwLjVyZW07XG59XG4ubm90aWZpY2F0aW9uIC5jb250ZW50IC5zdW1tYXJ5IHtcbiAgZm9udC1zaXplOiAxZW07XG4gIGNvbG9yOiAjZDNjNmFhO1xufVxuLm5vdGlmaWNhdGlvbiAuY29udGVudCAuYm9keSB7XG4gIGNvbG9yOiBhbHBoYSgjZDNjNmFhLDAuNik7XG4gIGZvbnQtc2l6ZTogMWVtO1xufVxuLm5vdGlmaWNhdGlvbiAuY29udGVudCAuaW1hZ2Uge1xuICBib3JkZXI6IDFweCBzb2xpZCBhbHBoYSgjZDNjNmFhLDAuMDIpO1xuICBtYXJnaW4tcmlnaHQ6IDAuNXJlbTtcbiAgYm9yZGVyLXJhZGl1czogMC4yNWVtO1xuICBtaW4td2lkdGg6IDEwMHB4O1xuICBtaW4taGVpZ2h0OiAxMDBweDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyO1xufVxuLm5vdGlmaWNhdGlvbiAuYWN0aW9ucyB7XG4gIG1hcmdpbjogMXJlbTtcbiAgbWFyZ2luLXRvcDogMDtcbn1cbi5ub3RpZmljYXRpb24gLmFjdGlvbnMgYnV0dG9uIHtcbiAgbWFyZ2luOiAwIDAuM3JlbTtcbiAgcGFkZGluZzogMC4zcmVtIDA7XG4gIGZvbnQtc2l6ZTogMC44cmVtO1xuICBib3JkZXItcmFkaXVzOiAwLjI1ZW07XG4gIGJhY2tncm91bmQtY29sb3I6IGFscGhhKCNkM2M2YWEsMC4xKTtcbn1cbi5ub3RpZmljYXRpb24gLmFjdGlvbnMgYnV0dG9uOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLWxlZnQ6IDA7XG59XG4ubm90aWZpY2F0aW9uIC5hY3Rpb25zIGJ1dHRvbjpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLXJpZ2h0OiAwO1xufSIsICJpbXBvcnQgQXN0YWwgZnJvbSBcImdpOi8vQXN0YWw/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEdkayBmcm9tIFwiZ2k6Ly9HZGs/dmVyc2lvbj00LjBcIlxuZXhwb3J0IHsgQXN0YWwsIEd0aywgR2RrIH1cbiIsICJpbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgQXN0YWwgZnJvbSBcImdpOi8vQXN0YWw/dmVyc2lvbj00LjBcIlxuaW1wb3J0IHsgQ0NQcm9wcyB9IGZyb20gXCJnbmltXCJcbmltcG9ydCB7IGludHJpbnNpY0VsZW1lbnRzIH0gZnJvbSBcImduaW0vZ3RrNC9qc3gtcnVudGltZVwiXG5cbnR5cGUgUHJvcHM8VCBleHRlbmRzIEd0ay5XaWRnZXQsIFByb3BzPiA9IENDUHJvcHM8VCwgUGFydGlhbDxQcm9wcz4+XG5cbk9iamVjdC5hc3NpZ24oaW50cmluc2ljRWxlbWVudHMsIHtcbiAgICBib3g6IEd0ay5Cb3gsXG4gICAgYnV0dG9uOiBHdGsuQnV0dG9uLFxuICAgIGNlbnRlcmJveDogR3RrLkNlbnRlckJveCxcbiAgICAvLyBjaXJjdWxhcnByb2dyZXNzOiBBc3RhbC5DaXJjdWxhclByb2dyZXNzLFxuICAgIGRyYXdpbmdhcmVhOiBHdGsuRHJhd2luZ0FyZWEsXG4gICAgZW50cnk6IEd0ay5FbnRyeSxcbiAgICBpbWFnZTogR3RrLkltYWdlLFxuICAgIGxhYmVsOiBHdGsuTGFiZWwsXG4gICAgbGV2ZWxiYXI6IEd0ay5MZXZlbEJhcixcbiAgICBtZW51YnV0dG9uOiBHdGsuTWVudUJ1dHRvbixcbiAgICBvdmVybGF5OiBHdGsuT3ZlcmxheSxcbiAgICBwb3BvdmVyOiBHdGsuUG9wb3ZlcixcbiAgICByZXZlYWxlcjogR3RrLlJldmVhbGVyLFxuICAgIHNjcm9sbGVkd2luZG93OiBHdGsuU2Nyb2xsZWRXaW5kb3csXG4gICAgc2xpZGVyOiBBc3RhbC5TbGlkZXIsXG4gICAgc3RhY2s6IEd0ay5TdGFjayxcbiAgICBzd2l0Y2g6IEd0ay5Td2l0Y2gsXG4gICAgdG9nZ2xlYnV0dG9uOiBHdGsuVG9nZ2xlQnV0dG9uLFxuICAgIHdpbmRvdzogQXN0YWwuV2luZG93LFxufSlcblxuZGVjbGFyZSBnbG9iYWwge1xuICAgIG5hbWVzcGFjZSBKU1gge1xuICAgICAgICBpbnRlcmZhY2UgSW50cmluc2ljRWxlbWVudHMge1xuICAgICAgICAgICAgYm94OiBQcm9wczxHdGsuQm94LCBHdGsuQm94LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBidXR0b246IFByb3BzPEd0ay5CdXR0b24sIEd0ay5CdXR0b24uQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGNlbnRlcmJveDogUHJvcHM8R3RrLkNlbnRlckJveCwgR3RrLkNlbnRlckJveC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgLy8gY2lyY3VsYXJwcm9ncmVzczogUHJvcHM8QXN0YWwuQ2lyY3VsYXJQcm9ncmVzcywgQXN0YWwuQ2lyY3VsYXJQcm9ncmVzcy5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgZHJhd2luZ2FyZWE6IFByb3BzPEd0ay5EcmF3aW5nQXJlYSwgR3RrLkRyYXdpbmdBcmVhLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBlbnRyeTogUHJvcHM8R3RrLkVudHJ5LCBHdGsuRW50cnkuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGltYWdlOiBQcm9wczxHdGsuSW1hZ2UsIEd0ay5JbWFnZS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgbGFiZWw6IFByb3BzPEd0ay5MYWJlbCwgR3RrLkxhYmVsLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBsZXZlbGJhcjogUHJvcHM8R3RrLkxldmVsQmFyLCBHdGsuTGV2ZWxCYXIuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIG1lbnVidXR0b246IFByb3BzPEd0ay5NZW51QnV0dG9uLCBHdGsuTWVudUJ1dHRvbi5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgb3ZlcmxheTogUHJvcHM8R3RrLk92ZXJsYXksIEd0ay5PdmVybGF5LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBwb3BvdmVyOiBQcm9wczxHdGsuUG9wb3ZlciwgR3RrLlBvcG92ZXIuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHJldmVhbGVyOiBQcm9wczxHdGsuUmV2ZWFsZXIsIEd0ay5SZXZlYWxlci5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc2Nyb2xsZWR3aW5kb3c6IFByb3BzPEd0ay5TY3JvbGxlZFdpbmRvdywgR3RrLlNjcm9sbGVkV2luZG93LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBzbGlkZXI6IFByb3BzPEFzdGFsLlNsaWRlciwgQXN0YWwuU2xpZGVyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBzdGFjazogUHJvcHM8R3RrLlN0YWNrLCBHdGsuU3RhY2suQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHN3aXRjaDogUHJvcHM8R3RrLlN3aXRjaCwgR3RrLlN3aXRjaC5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgdG9nZ2xlYnV0dG9uOiBQcm9wczxHdGsuVG9nZ2xlQnV0dG9uLCBHdGsuVG9nZ2xlQnV0dG9uLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICB3aW5kb3c6IFByb3BzPEFzdGFsLldpbmRvdywgQXN0YWwuV2luZG93LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmV4cG9ydCAqIGZyb20gXCJnbmltL2d0azQvanN4LXJ1bnRpbWVcIlxuIiwgImltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvP3ZlcnNpb249Mi4wXCJcbmltcG9ydCB7IGNvbmZpZ3VlIH0gZnJvbSBcIi4uL2pzeC9lbnYuanNcIlxuaW1wb3J0IHsgZ2V0VHlwZSwgb25DbGVhbnVwLCBBY2Nlc3NvciwgRnJhZ21lbnQgfSBmcm9tIFwiLi4vaW5kZXguanNcIlxuXG5pbXBvcnQgdHlwZSBBZHcgZnJvbSBcImdpOi8vQWR3XCJcbmNvbnN0IGFkdyA9IGF3YWl0IGltcG9ydChcImdpOi8vQWR3XCIpLnRoZW4oKG0pID0+IG0uZGVmYXVsdCkuY2F0Y2goKCkgPT4gbnVsbClcblxuY29uc3QgZHVtbXlCdWlsZGVyID0gbmV3IEd0ay5CdWlsZGVyKClcblxuY29uc3QgeyBpbnRyaW5zaWNFbGVtZW50cyB9ID0gY29uZmlndWUoe1xuICAgIGluaXRQcm9wcyhjdG9yKSB7XG4gICAgICAgIGlmIChjdG9yID09PSBHdGsuU3RhY2spIHtcbiAgICAgICAgICAgIGNvbnN0IGtleXM6IEFycmF5PEV4dHJhY3Q8a2V5b2YgR3RrLlN0YWNrLCBzdHJpbmc+PiA9IFtcbiAgICAgICAgICAgICAgICBcInZpc2libGVDaGlsZE5hbWVcIixcbiAgICAgICAgICAgICAgICBcInZpc2libGVfY2hpbGRfbmFtZVwiLFxuICAgICAgICAgICAgXVxuICAgICAgICAgICAgcmV0dXJuIGtleXNcbiAgICAgICAgfVxuICAgICAgICBpZiAoYWR3ICYmIGN0b3IgPT09IGFkdy5Ub2dnbGVHcm91cCkge1xuICAgICAgICAgICAgY29uc3Qga2V5czogQXJyYXk8RXh0cmFjdDxrZXlvZiBBZHcuVG9nZ2xlR3JvdXAsIHN0cmluZz4+ID0gW1xuICAgICAgICAgICAgICAgIFwiYWN0aXZlXCIsXG4gICAgICAgICAgICAgICAgXCJhY3RpdmVOYW1lXCIsXG4gICAgICAgICAgICAgICAgXCJhY3RpdmVfbmFtZVwiLFxuICAgICAgICAgICAgXVxuICAgICAgICAgICAgcmV0dXJuIGtleXNcbiAgICAgICAgfVxuICAgIH0sXG4gICAgc2V0Q3NzKG9iamVjdCwgY3NzKSB7XG4gICAgICAgIGlmICghKG9iamVjdCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gY29uc29sZS53YXJuKEVycm9yKGBjYW5ub3Qgc2V0IGNzcyBvbiAke29iamVjdH1gKSlcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGN0eCA9IG9iamVjdC5nZXRfc3R5bGVfY29udGV4dCgpXG4gICAgICAgIGxldCBwcm92aWRlcjogR3RrLkNzc1Byb3ZpZGVyXG5cbiAgICAgICAgY29uc3Qgc2V0dGVyID0gKGNzczogc3RyaW5nKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWNzcy5pbmNsdWRlcyhcIntcIikgfHwgIWNzcy5pbmNsdWRlcyhcIn1cIikpIHtcbiAgICAgICAgICAgICAgICBjc3MgPSBgKiB7ICR7Y3NzfSB9YFxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocHJvdmlkZXIpIGN0eC5yZW1vdmVfcHJvdmlkZXIocHJvdmlkZXIpXG5cbiAgICAgICAgICAgIHByb3ZpZGVyID0gbmV3IEd0ay5Dc3NQcm92aWRlcigpXG4gICAgICAgICAgICBwcm92aWRlci5sb2FkX2Zyb21fc3RyaW5nKGNzcylcbiAgICAgICAgICAgIGN0eC5hZGRfcHJvdmlkZXIocHJvdmlkZXIsIEd0ay5TVFlMRV9QUk9WSURFUl9QUklPUklUWV9VU0VSKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNzcyBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICBzZXR0ZXIoY3NzLmdldCgpKVxuICAgICAgICAgICAgY29uc3QgZGlzcG9zZSA9IGNzcy5zdWJzY3JpYmUoKCkgPT4gc2V0dGVyKGNzcy5nZXQoKSkpXG4gICAgICAgICAgICBvbkNsZWFudXAoZGlzcG9zZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNldHRlcihjc3MpXG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgc2V0Q2xhc3Mob2JqZWN0LCBjbGFzc05hbWUpIHtcbiAgICAgICAgaWYgKCEob2JqZWN0IGluc3RhbmNlb2YgR3RrLldpZGdldCkpIHtcbiAgICAgICAgICAgIHJldHVybiBjb25zb2xlLndhcm4oRXJyb3IoYGNhbm5vdCBzZXQgY2xhc3NOYW1lIG9uICR7b2JqZWN0fWApKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNsYXNzTmFtZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICBvYmplY3QuY3NzQ2xhc3NlcyA9IGNsYXNzTmFtZS5nZXQoKS5zcGxpdCgvXFxzKy8pXG4gICAgICAgICAgICBjb25zdCBkaXNwb3NlID0gY2xhc3NOYW1lLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICAoKSA9PiAob2JqZWN0LmNzc0NsYXNzZXMgPSBjbGFzc05hbWUuZ2V0KCkuc3BsaXQoL1xccysvKSksXG4gICAgICAgICAgICApXG4gICAgICAgICAgICBvbkNsZWFudXAoZGlzcG9zZSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG9iamVjdC5zZXRfY3NzX2NsYXNzZXMoY2xhc3NOYW1lLnNwbGl0KC9cXHMrLykpXG4gICAgICAgIH1cbiAgICB9LFxuXG4gICAgdGV4dE5vZGUodGV4dCkge1xuICAgICAgICByZXR1cm4gR3RrLkxhYmVsLm5ldyh0ZXh0LnRvU3RyaW5nKCkpXG4gICAgfSxcblxuICAgIC8vIGBzZXRfY2hpbGRgIGFuZCBlc3BlY2lhbGx5IGByZW1vdmVgIG1pZ2h0IGJlIHdheSB0b28gZ2VuZXJpYyBhbmQgdGhlcmUgbWlnaHRcbiAgICAvLyBiZSBjYXNlcyB3aGVyZSBpdCBkb2VzIG5vdCBhY3R1YWxseSBkbyB3aGF0IHdlIHdhbnQgaXQgdG8gZG9cbiAgICAvL1xuICAgIC8vIGlmIHRoZXJlIGlzIGEgdXNlY2FzZSBmb3IgZWl0aGVyIG9mIHRoZXNlIHR3byB0aGF0IGRvZXMgc29tZXRoaW5nIGVsc2UgdGhhblxuICAgIC8vIHdlIGV4cGVjdCBpdCB0byBkbyBoZXJlIGluIGEgSlNYIGNvbnRleHQgd2UgaGF2ZSB0byBjaGVjayBmb3Iga25vd24gaW5zdGFuY2VzXG4gICAgcmVtb3ZlQ2hpbGQocGFyZW50LCBjaGlsZCkge1xuICAgICAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgR3RrLldpZGdldCAmJiBjaGlsZCBpbnN0YW5jZW9mIEd0ay5FdmVudENvbnRyb2xsZXIpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQucmVtb3ZlX2NvbnRyb2xsZXIoY2hpbGQpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoXCJzZXRfY2hpbGRcIiBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudC5zZXRfY2hpbGQgPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnNldF9jaGlsZChudWxsKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKFwicmVtb3ZlXCIgaW4gcGFyZW50ICYmIHR5cGVvZiBwYXJlbnQucmVtb3ZlID09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC5yZW1vdmUoY2hpbGQpXG4gICAgICAgIH1cblxuICAgICAgICB0aHJvdyBFcnJvcihgY2Fubm90IHJlbW92ZSAke2NoaWxkfSBmcm9tICR7cGFyZW50fWApXG4gICAgfSxcbiAgICBhcHBlbmRDaGlsZChwYXJlbnQsIGNoaWxkKSB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIGNoaWxkIGluc3RhbmNlb2YgR3RrLkFkanVzdG1lbnQgJiZcbiAgICAgICAgICAgIFwic2V0X2FkanVzdG1lbnRcIiBpbiBwYXJlbnQgJiZcbiAgICAgICAgICAgIHR5cGVvZiBwYXJlbnQuc2V0X2FkanVzdG1lbnQgPT09IFwiZnVuY3Rpb25cIlxuICAgICAgICApIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQuc2V0X2FkanVzdG1lbnQoY2hpbGQpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoXG4gICAgICAgICAgICBjaGlsZCBpbnN0YW5jZW9mIEd0ay5XaWRnZXQgJiZcbiAgICAgICAgICAgIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5TdGFjayAmJlxuICAgICAgICAgICAgY2hpbGQubmFtZSAhPT0gXCJcIiAmJlxuICAgICAgICAgICAgY2hpbGQubmFtZSAhPT0gbnVsbCAmJlxuICAgICAgICAgICAgZ2V0VHlwZShjaGlsZCkgPT09IFwibmFtZWRcIlxuICAgICAgICApIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQuYWRkX25hbWVkKGNoaWxkLCBjaGlsZC5uYW1lKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrLlBvcG92ZXIgJiYgcGFyZW50IGluc3RhbmNlb2YgR3RrLk1lbnVCdXR0b24pIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQuc2V0X3BvcG92ZXIoY2hpbGQpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoXG4gICAgICAgICAgICBjaGlsZCBpbnN0YW5jZW9mIEdpby5NZW51TW9kZWwgJiZcbiAgICAgICAgICAgIChwYXJlbnQgaW5zdGFuY2VvZiBHdGsuTWVudUJ1dHRvbiB8fCBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuUG9wb3Zlck1lbnUpXG4gICAgICAgICkge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC5zZXRfbWVudV9tb2RlbChjaGlsZClcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEdpby5NZW51SXRlbSAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHaW8uTWVudSkge1xuICAgICAgICAgICAgLy8gVE9ETzpcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0ay5XaW5kb3cgJiYgcGFyZW50IGluc3RhbmNlb2YgR3RrLkFwcGxpY2F0aW9uKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LmFkZF93aW5kb3coY2hpbGQpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGsuVGV4dEJ1ZmZlciAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuVGV4dFZpZXcpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQuc2V0X2J1ZmZlcihjaGlsZClcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBHdGsuQnVpbGRhYmxlKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnZmdW5jX2FkZF9jaGlsZChkdW1teUJ1aWxkZXIsIGNoaWxkLCBnZXRUeXBlKGNoaWxkKSlcbiAgICAgICAgfVxuXG4gICAgICAgIHRocm93IEVycm9yKGBjYW5ub3QgYWRkICR7Y2hpbGR9IHRvICR7cGFyZW50fWApXG4gICAgfSxcbn0pXG5cbmV4cG9ydCB7IEZyYWdtZW50LCBpbnRyaW5zaWNFbGVtZW50cyB9XG5leHBvcnQgeyBqc3gsIGpzeHMgfSBmcm9tIFwiLi4vanN4L2pzeC5qc1wiXG4iLCAiaW1wb3J0IHsgQWNjZXNzb3IsIHR5cGUgQ0NQcm9wcyB9IGZyb20gXCJhZ3NcIlxuaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCJcblxudHlwZSBNb2R1bGVDb250YWluZXJQcm9wcyA9IFBhcnRpYWw8XG4gIENDUHJvcHM8R3RrLkJ1dHRvbiwgR3RrLkJ1dHRvbi5Db25zdHJ1Y3RvclByb3BzPlxuPiAmIHtcbiAgaWNvbj86IHN0cmluZyB8IEFjY2Vzc29yPHN0cmluZz5cbiAgbGFiZWw/OiBzdHJpbmcgfCBBY2Nlc3NvcjxzdHJpbmc+XG59XG5cbmZ1bmN0aW9uIE1vZHVsZUNvbnRhaW5lcih7XG4gIGljb24sXG4gIGxhYmVsLFxuICBjbGFzczogY2xhc3NOYW1lLFxuICAuLi5wcm9wc1xufTogTW9kdWxlQ29udGFpbmVyUHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICA8YnV0dG9uIGNsYXNzPXtcIm1vZHVsZS1jb250YWluZXJcIiArIFwiIFwiICsgY2xhc3NOYW1lfSB7Li4ucHJvcHN9PlxuICAgICAgPGJveD5cbiAgICAgICAgPGxhYmVsIGNsYXNzPVwiaWNvblwiIGxhYmVsPXtpY29ufSAvPlxuICAgICAgICA8bGFiZWwgY2xhc3M9XCJsYWJlbFwiIGxhYmVsPXtsYWJlbH0gLz5cbiAgICAgIDwvYm94PlxuICAgIDwvYnV0dG9uPlxuICApXG59XG5cbmV4cG9ydCB7IE1vZHVsZUNvbnRhaW5lciB9XG4iLCAiaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYlwiXG5pbXBvcnQgeyBjcmVhdGVQb2xsIH0gZnJvbSBcImFncy90aW1lXCJcblxuZnVuY3Rpb24gZm9ybWF0RGF0ZVRpbWUoZm9ybWF0OiBzdHJpbmcgPSBcIiVhLCAlYiAlZCAtICVIOiVNXCIpIHtcbiAgcmV0dXJuIGNyZWF0ZVBvbGwoXCJcIiwgNjAwMDAsICgpID0+IHtcbiAgICByZXR1cm4gR0xpYi5EYXRlVGltZS5uZXdfbm93X2xvY2FsKCkuZm9ybWF0KGZvcm1hdCkhXG4gIH0pXG59XG5cbmV4cG9ydCBjb25zdCBjbG9ja0xhYmVsID0gZm9ybWF0RGF0ZVRpbWUoXCIlSDolTVwiKVxuXG5leHBvcnQgY29uc3QgY2xvY2tUb29sdGlwID0gZm9ybWF0RGF0ZVRpbWUoKVxuIiwgImltcG9ydCBHaW8gZnJvbSBcImdpOi8vR2lvP3ZlcnNpb249Mi4wXCJcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWI/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IEdPYmplY3QsIHsgcmVnaXN0ZXIsIHNpZ25hbCB9IGZyb20gXCJnbmltL2dvYmplY3RcIlxuaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tIFwiZ25pbVwiXG5cbmNvbnN0IGVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKVxuXG5leHBvcnQgbmFtZXNwYWNlIFByb2Nlc3Mge1xuICAgIGV4cG9ydCBpbnRlcmZhY2UgU2lnbmFsU2lnbmF0dXJlcyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LlNpZ25hbFNpZ25hdHVyZXMge1xuICAgICAgICBzdGRvdXQ6IFByb2Nlc3NbXCJzdGRvdXRcIl1cbiAgICAgICAgc3RkZXJyOiBQcm9jZXNzW1wic3RkZXJyXCJdXG4gICAgICAgIGV4aXQ6IFByb2Nlc3NbXCJleGl0XCJdXG4gICAgfVxuICAgIGV4cG9ydCBpbnRlcmZhY2UgQ29uc3RydWN0b3JQcm9wcyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LkNvbnN0cnVjdG9yUHJvcHMge1xuICAgICAgICBhcmd2OiBzdHJpbmdbXVxuICAgIH1cbn1cblxuQHJlZ2lzdGVyKClcbmV4cG9ydCBjbGFzcyBQcm9jZXNzIGV4dGVuZHMgR09iamVjdC5PYmplY3Qge1xuICAgIEBzaWduYWwoU3RyaW5nKVxuICAgIHByb3RlY3RlZCBzdGRvdXQob3V0OiBzdHJpbmcpIHtcbiAgICAgICAgdm9pZCBvdXRcbiAgICB9XG5cbiAgICBAc2lnbmFsKFN0cmluZylcbiAgICBwcm90ZWN0ZWQgc3RkZXJyKGVycjogc3RyaW5nKSB7XG4gICAgICAgIHZvaWQgZXJyXG4gICAgfVxuXG4gICAgQHNpZ25hbChOdW1iZXIsIEJvb2xlYW4pXG4gICAgcHJvdGVjdGVkIGV4aXQoY29kZTogbnVtYmVyLCBzaWduYWxlZDogYm9vbGVhbikge1xuICAgICAgICB2b2lkIFtjb2RlLCBzaWduYWxlZF1cbiAgICB9XG5cbiAgICAjZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpXG4gICAgI291dFN0cmVhbTogR2lvLkRhdGFJbnB1dFN0cmVhbVxuICAgICNlcnJTdHJlYW06IEdpby5EYXRhSW5wdXRTdHJlYW1cbiAgICAjaW5TdHJlYW06IEdpby5EYXRhT3V0cHV0U3RyZWFtXG4gICAgI3Byb2Nlc3M6IEdpby5TdWJwcm9jZXNzXG5cbiAgICAjcmVhZFN0cmVhbShzdHJlYW06IEdpby5EYXRhSW5wdXRTdHJlYW0pIHtcbiAgICAgICAgc3RyZWFtLnJlYWRfbGluZV9hc3luYyhHTGliLlBSSU9SSVRZX0RFRkFVTFQsIG51bGwsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgW291dHB1dF0gPSBzdHJlYW0ucmVhZF9saW5lX2ZpbmlzaF91dGY4KHJlcylcbiAgICAgICAgICAgICAgICBpZiAob3V0cHV0ICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzdHJlYW0gPT09IHRoaXMuI2VyclN0cmVhbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGRlcnIob3V0cHV0LnRyaW0oKSlcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc3Rkb3V0KG91dHB1dC50cmltKCkpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhpcy4jcmVhZFN0cmVhbShzdHJlYW0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGNvbm5lY3Q8UyBleHRlbmRzIGtleW9mIFByb2Nlc3MuU2lnbmFsU2lnbmF0dXJlcz4oXG4gICAgICAgIHNpZ25hbDogUyxcbiAgICAgICAgY2FsbGJhY2s6IEdPYmplY3QuU2lnbmFsQ2FsbGJhY2s8dGhpcywgUHJvY2Vzcy5TaWduYWxTaWduYXR1cmVzW1NdPixcbiAgICApOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gc3VwZXIuY29ubmVjdChzaWduYWwsIGNhbGxiYWNrKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEZvcmNlIHF1aXQgdGhlIHN1YnByb2Nlc3MuXG4gICAgICovXG4gICAga2lsbCgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy4jcHJvY2Vzcy5mb3JjZV9leGl0KClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZW5kIGEgc2lnbmFsIHRvIHRoZSBzdWJwcm9jZXNzLlxuICAgICAqXG4gICAgICogQHBhcmFtIHNpZ25hbCBTaWduYWwgbnVtYmVyIHRvIGJlIHNlbnRcbiAgICAgKi9cbiAgICBzaWduYWwoc2lnbmFsOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgdGhpcy4jcHJvY2Vzcy5zZW5kX3NpZ25hbChzaWduYWwpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogV3JpdGUgYSBsaW5lIHRvIHRoZSBzdWJwcm9jZXNzJyBzdGRpbiBzeW5jaHJvbm91c2x5LlxuICAgICAqIFNlZSB7QGxpbmsgR2lvLkRhdGFPdXRwdXRTdHJlYW0ucHJvdG90eXBlLndyaXRlX2J5dGVzX2FzeW5jfVxuICAgICAqXG4gICAgICogQHBhcmFtIHN0ciBTdHJpbmcgdG8gYmUgd3JpdHRlbiB0byBzdGRpblxuICAgICAqL1xuICAgIHdyaXRlKHN0cjogc3RyaW5nKTogUHJvbWlzZTxbYm9vbGVhbiwgbnVtYmVyXT4ge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgdGhpcy4jaW5TdHJlYW0ud3JpdGVfYnl0ZXNfYXN5bmMoXG4gICAgICAgICAgICAgICAgZW5jb2Rlci5lbmNvZGUoc3RyKSxcbiAgICAgICAgICAgICAgICBHTGliLlBSSU9SSVRZX0RFRkFVTFQsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHRoaXMuI2luU3RyZWFtLndyaXRlX2FsbF9maW5pc2gocmVzKSlcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICApXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogV3JpdGUgYSBsaW5lIHRvIHRoZSBzdWJwcm9jZXNzJyBzdGRpbiBhc3luY2hyb25vdXNseS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBzdHIgU3RyaW5nIHRvIGJlIHdyaXR0ZW4gdG8gc3RkaW5cbiAgICAgKi9cbiAgICBhc3luYyB3cml0ZUFzeW5jKHN0cjogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICB0aGlzLiNpblN0cmVhbS53cml0ZV9hbGxfYXN5bmMoXG4gICAgICAgICAgICAgICAgdGhpcy4jZW5jb2Rlci5lbmNvZGUoc3RyKSxcbiAgICAgICAgICAgICAgICBHTGliLlBSSU9SSVRZX0RFRkFVTFQsXG4gICAgICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgICAgICAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHZvaWQgdGhpcy4jaW5TdHJlYW0ud3JpdGVfYWxsX2ZpbmlzaChyZXMpKVxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIClcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3Rvcih7IGFyZ3YgfTogUHJvY2Vzcy5Db25zdHJ1Y3RvclByb3BzKSB7XG4gICAgICAgIHN1cGVyKClcbiAgICAgICAgY29uc3QgcHJvY2VzcyA9ICh0aGlzLiNwcm9jZXNzID0gR2lvLlN1YnByb2Nlc3MubmV3KFxuICAgICAgICAgICAgYXJndixcbiAgICAgICAgICAgIEdpby5TdWJwcm9jZXNzRmxhZ3MuU1RESU5fUElQRSB8XG4gICAgICAgICAgICAgICAgR2lvLlN1YnByb2Nlc3NGbGFncy5TVERPVVRfUElQRSB8XG4gICAgICAgICAgICAgICAgR2lvLlN1YnByb2Nlc3NGbGFncy5TVERFUlJfUElQRSxcbiAgICAgICAgKSlcblxuICAgICAgICB0aGlzLiNpblN0cmVhbSA9IEdpby5EYXRhT3V0cHV0U3RyZWFtLm5ldyhwcm9jZXNzLmdldF9zdGRpbl9waXBlKCkhKVxuICAgICAgICB0aGlzLiNvdXRTdHJlYW0gPSBHaW8uRGF0YUlucHV0U3RyZWFtLm5ldyhwcm9jZXNzLmdldF9zdGRvdXRfcGlwZSgpISlcbiAgICAgICAgdGhpcy4jZXJyU3RyZWFtID0gR2lvLkRhdGFJbnB1dFN0cmVhbS5uZXcocHJvY2Vzcy5nZXRfc3RkZXJyX3BpcGUoKSEpXG5cbiAgICAgICAgdGhpcy4jcmVhZFN0cmVhbSh0aGlzLiNvdXRTdHJlYW0pXG4gICAgICAgIHRoaXMuI3JlYWRTdHJlYW0odGhpcy4jZXJyU3RyZWFtKVxuXG4gICAgICAgIHByb2Nlc3Mud2FpdF9hc3luYyhudWxsLCAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHByb2Nlc3Mud2FpdF9maW5pc2gocmVzKVxuICAgICAgICAgICAgfSBjYXRjaCB7XG4gICAgICAgICAgICAgICAgLy8gaWdub3JlXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmdldF9pZl9leGl0ZWQoKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZXhpdChwcm9jZXNzLmdldF9leGl0X3N0YXR1cygpLCBmYWxzZSlcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZ2V0X2lmX3NpZ25hbGVkKCkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmV4aXQocHJvY2Vzcy5nZXRfdGVybV9zaWcoKSwgdHJ1ZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTdGFydCBhIG5ldyBzdWJwcm9jZXNzIHdpdGggdGhlIGdpdmVuIGNvbW1hbmQuXG4gICAgICogVGhlIGZpcnN0IGVsZW1lbnQgb2YgdGhlIHZlY3RvciBpcyBleGVjdXRlZCB3aXRoIHRoZSByZW1haW5pbmdcbiAgICAgKiBlbGVtZW50cyBhcyB0aGUgYXJndW1lbnQgbGlzdC5cbiAgICAgKi9cbiAgICBzdGF0aWMgc3VicHJvY2Vzc3YoY21kOiBzdHJpbmdbXSkge1xuICAgICAgICByZXR1cm4gbmV3IFByb2Nlc3MoeyBhcmd2OiBjbWQgfSlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTdGFydCBhIG5ldyBzdWJwcm9jZXNzIHdpdGggdGhlIGdpdmVuIGNvbW1hbmRcbiAgICAgKiB3aGljaCBpcyBwYXJzZWQgdXNpbmcge0BsaW5rIEdMaWIuc2hlbGxfcGFyc2VfYXJndn0uXG4gICAgICovXG4gICAgc3RhdGljIHN1YnByb2Nlc3MoY21kOiBzdHJpbmcpIHtcbiAgICAgICAgY29uc3QgWywgYXJndl0gPSBHTGliLnNoZWxsX3BhcnNlX2FyZ3YoY21kKVxuICAgICAgICByZXR1cm4gUHJvY2Vzcy5zdWJwcm9jZXNzdihhcmd2ISlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBFeGVjdXRlIGEgY29tbWFuZCBzeW5jaHJvbm91c2x5LlxuICAgICAqIFRoZSBmaXJzdCBlbGVtZW50IG9mIHRoZSB2ZWN0b3IgaXMgZXhlY3V0ZWQgd2l0aCB0aGUgcmVtYWluaW5nXG4gICAgICogZWxlbWVudHMgYXMgdGhlIGFyZ3VtZW50IGxpc3QuXG4gICAgICpcbiAgICAgKiBAdGhyb3dzIHN0ZGVyclxuICAgICAqIEByZXR1cm4gc3Rkb3V0IG9mIHRoZSBzdWJwcm9jZXNzXG4gICAgICovXG4gICAgc3RhdGljIGV4ZWN2KGNtZDogc3RyaW5nW10pIHtcbiAgICAgICAgY29uc3QgcHJvY2VzcyA9IEdpby5TdWJwcm9jZXNzLm5ldyhcbiAgICAgICAgICAgIGNtZCxcbiAgICAgICAgICAgIEdpby5TdWJwcm9jZXNzRmxhZ3MuU1RERVJSX1BJUEUgfCBHaW8uU3VicHJvY2Vzc0ZsYWdzLlNURE9VVF9QSVBFLFxuICAgICAgICApXG5cbiAgICAgICAgY29uc3QgWywgb3V0LCBlcnJdID0gcHJvY2Vzcy5jb21tdW5pY2F0ZV91dGY4KG51bGwsIG51bGwpXG4gICAgICAgIGlmIChwcm9jZXNzLmdldF9zdWNjZXNzZnVsKCkpIHtcbiAgICAgICAgICAgIHJldHVybiBvdXQudHJpbSgpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZXJyKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRXhlY3V0ZSBhIGNvbW1hbmQgc3luY2hyb25vdXNseS5cbiAgICAgKiBUaGUgY29tbWFuZCBpcyBwYXJzZWQgdXNpbmcge0BsaW5rIEdMaWIuc2hlbGxfcGFyc2VfYXJndn0uXG4gICAgICpcbiAgICAgKiBAdGhyb3dzIHN0ZGVyclxuICAgICAqIEByZXR1cm4gc3Rkb3V0IG9mIHRoZSBzdWJwcm9jZXNzXG4gICAgICovXG4gICAgc3RhdGljIGV4ZWMoY21kOiBzdHJpbmcpIHtcbiAgICAgICAgY29uc3QgWywgYXJndl0gPSBHTGliLnNoZWxsX3BhcnNlX2FyZ3YoY21kKVxuICAgICAgICByZXR1cm4gUHJvY2Vzcy5leGVjdihhcmd2ISlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBFeGVjdXRlIGEgY29tbWFuZCBhc3luY2hyb25vdXNseS5cbiAgICAgKiBUaGUgZmlyc3QgZWxlbWVudCBvZiB0aGUgdmVjdG9yIGlzIGV4ZWN1dGVkIHdpdGggdGhlIHJlbWFpbmluZ1xuICAgICAqIGVsZW1lbnRzIGFzIHRoZSBhcmd1bWVudCBsaXN0LlxuICAgICAqXG4gICAgICogQHRocm93cyBzdGRlcnJcbiAgICAgKiBAcmV0dXJuIHN0ZG91dCBvZiB0aGUgc3VicHJvY2Vzc1xuICAgICAqL1xuICAgIHN0YXRpYyBleGVjQXN5bmN2KGNtZDogc3RyaW5nW10pOiBQcm9taXNlPHN0cmluZz4ge1xuICAgICAgICBjb25zdCBwcm9jZXNzID0gR2lvLlN1YnByb2Nlc3MubmV3KFxuICAgICAgICAgICAgY21kLFxuICAgICAgICAgICAgR2lvLlN1YnByb2Nlc3NGbGFncy5TVERFUlJfUElQRSB8IEdpby5TdWJwcm9jZXNzRmxhZ3MuU1RET1VUX1BJUEUsXG4gICAgICAgIClcblxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgcHJvY2Vzcy5jb21tdW5pY2F0ZV91dGY4X2FzeW5jKG51bGwsIG51bGwsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBbLCBvdXQsIGVycl0gPSBwcm9jZXNzLmNvbW11bmljYXRlX3V0ZjhfZmluaXNoKHJlcylcbiAgICAgICAgICAgICAgICAgICAgaWYgKHByb2Nlc3MuZ2V0X3N1Y2Nlc3NmdWwoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmUob3V0LnRyaW0oKSlcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoZXJyLnRyaW0oKSkpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBFeGVjdXRlIGEgY29tbWFuZCBhc3luY2hyb25vdXNseS5cbiAgICAgKiBUaGUgY29tbWFuZCBpcyBwYXJzZWQgdXNpbmcge0BsaW5rIEdMaWIuc2hlbGxfcGFyc2VfYXJndn0uXG4gICAgICpcbiAgICAgKiBAdGhyb3dzIHN0ZGVyclxuICAgICAqIEByZXR1cm4gc3Rkb3V0IG9mIHRoZSBzdWJwcm9jZXNzXG4gICAgICovXG4gICAgc3RhdGljIGV4ZWNBc3luYyhjbWQ6IHN0cmluZykge1xuICAgICAgICBjb25zdCBbLCBhcmd2XSA9IEdMaWIuc2hlbGxfcGFyc2VfYXJndihjbWQpXG4gICAgICAgIHJldHVybiBQcm9jZXNzLmV4ZWNBc3luY3YoYXJndiEpXG4gICAgfVxufVxuXG50eXBlIEFyZ3MgPSB7XG4gICAgY21kOiBzdHJpbmcgfCBzdHJpbmdbXVxuICAgIG91dD86IChzdGRvdXQ6IHN0cmluZykgPT4gdm9pZFxuICAgIGVycj86IChzdGRlcnI6IHN0cmluZykgPT4gdm9pZFxufVxuXG5leHBvcnQgZnVuY3Rpb24gc3VicHJvY2VzcyhhcmdzOiBBcmdzKTogUHJvY2Vzc1xuXG5leHBvcnQgZnVuY3Rpb24gc3VicHJvY2VzcyhcbiAgICBjbWQ6IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIG9uT3V0PzogKHN0ZG91dDogc3RyaW5nKSA9PiB2b2lkLFxuICAgIG9uRXJyPzogKHN0ZGVycjogc3RyaW5nKSA9PiB2b2lkLFxuKTogUHJvY2Vzc1xuXG5leHBvcnQgZnVuY3Rpb24gc3VicHJvY2VzcyhcbiAgICBhcmdzT3JDbWQ6IEFyZ3MgfCBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICBvbk91dDogKHN0ZG91dDogc3RyaW5nKSA9PiB2b2lkID0gcHJpbnQsXG4gICAgb25FcnI6IChzdGRlcnI6IHN0cmluZykgPT4gdm9pZCA9IHByaW50ZXJyLFxuKSB7XG4gICAgY29uc3QgYXJncyA9IEFycmF5LmlzQXJyYXkoYXJnc09yQ21kKSB8fCB0eXBlb2YgYXJnc09yQ21kID09PSBcInN0cmluZ1wiXG4gICAgY29uc3QgeyBjbWQsIGVyciwgb3V0IH0gPSB7XG4gICAgICAgIGNtZDogYXJncyA/IGFyZ3NPckNtZCA6IGFyZ3NPckNtZC5jbWQsXG4gICAgICAgIGVycjogYXJncyA/IG9uRXJyIDogYXJnc09yQ21kLmVyciB8fCBvbkVycixcbiAgICAgICAgb3V0OiBhcmdzID8gb25PdXQgOiBhcmdzT3JDbWQub3V0IHx8IG9uT3V0LFxuICAgIH1cblxuICAgIGNvbnN0IHByb2MgPSBBcnJheS5pc0FycmF5KGNtZCkgPyBQcm9jZXNzLnN1YnByb2Nlc3N2KGNtZCkgOiBQcm9jZXNzLnN1YnByb2Nlc3MoY21kKVxuICAgIHByb2MuY29ubmVjdChcInN0ZG91dFwiLCAoXywgc3Rkb3V0OiBzdHJpbmcpID0+IG91dChzdGRvdXQpKVxuICAgIHByb2MuY29ubmVjdChcInN0ZGVyclwiLCAoXywgc3RkZXJyOiBzdHJpbmcpID0+IGVycihzdGRlcnIpKVxuICAgIHJldHVybiBwcm9jXG59XG5cbi8qKiBAdGhyb3dzIHtFcnJvcn0gVGhyb3dzIHN0ZGVyciAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4ZWMoY21kOiBzdHJpbmcgfCBzdHJpbmdbXSkge1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGNtZCkgPyBQcm9jZXNzLmV4ZWN2KGNtZCkgOiBQcm9jZXNzLmV4ZWMoY21kKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZXhlY0FzeW5jKGNtZDogc3RyaW5nIHwgc3RyaW5nW10pOiBQcm9taXNlPHN0cmluZz4ge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGNtZCkpIHtcbiAgICAgICAgcmV0dXJuIFByb2Nlc3MuZXhlY0FzeW5jdihjbWQpXG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFByb2Nlc3MuZXhlY0FzeW5jKGNtZClcbiAgICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdWJwcm9jZXNzKGluaXQ6IHN0cmluZywgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10pOiBBY2Nlc3NvcjxzdHJpbmc+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdWJwcm9jZXNzPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10sXG4gICAgdHJhbnNmb3JtOiAoc3Rkb3V0OiBzdHJpbmcsIHByZXY6IFQpID0+IFQsXG4pOiBBY2Nlc3NvcjxUPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3VicHJvY2VzczxUPihcbiAgICBpbml0OiBULFxuICAgIGV4ZWM6IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIHRyYW5zZm9ybT86IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVCxcbik6IEFjY2Vzc29yPFQ+IHtcbiAgICBsZXQgY3VycmVudFZhbHVlID0gaW5pdFxuICAgIGxldCBwcm9jOiBQcm9jZXNzIHwgbnVsbCA9IG51bGxcbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8KCkgPT4gdm9pZD4oKVxuXG4gICAgZnVuY3Rpb24gc3Vic2NyaWJlKGNhbGxiYWNrOiAoKSA9PiB2b2lkKTogKCkgPT4gdm9pZCB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBwcm9jID0gc3VicHJvY2VzcyhleGVjLCAoc3Rkb3V0KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0cmFuc2Zvcm0gPyB0cmFuc2Zvcm0oc3Rkb3V0LCBjdXJyZW50VmFsdWUpIDogKHN0ZG91dCBhcyBUKVxuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50VmFsdWUgIT09IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlXG4gICAgICAgICAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgcHJvYz8ua2lsbCgpXG4gICAgICAgICAgICAgICAgcHJvYyA9IG51bGxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpXG59XG4iLCAiaW1wb3J0IEdPYmplY3QsIHsgcmVnaXN0ZXIsIHNpZ25hbCB9IGZyb20gXCJnbmltL2dvYmplY3RcIlxuaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tIFwiZ25pbVwiXG5pbXBvcnQgeyBleGVjQXN5bmMgfSBmcm9tIFwiLi9wcm9jZXNzLmpzXCJcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWI/dmVyc2lvbj0yLjBcIlxuXG5leHBvcnQgbmFtZXNwYWNlIFRpbWVyIHtcbiAgICBleHBvcnQgaW50ZXJmYWNlIFNpZ25hbFNpZ25hdHVyZXMgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdC5TaWduYWxTaWduYXR1cmVzIHtcbiAgICAgICAgbm93KCk6IHZvaWRcbiAgICAgICAgY2FuY2VsbGVkKCk6IHZvaWRcbiAgICB9XG59XG5cbkByZWdpc3RlcigpXG5leHBvcnQgY2xhc3MgVGltZXIgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gICAgZGVjbGFyZSAkc2lnbmFsczogVGltZXIuU2lnbmFsU2lnbmF0dXJlc1xuXG4gICAgQHNpZ25hbCgpXG4gICAgcHJvdGVjdGVkIG5vdygpIHt9XG5cbiAgICBAc2lnbmFsKClcbiAgICBwcm90ZWN0ZWQgY2FuY2VsbGVkKCkge31cblxuICAgIHN0YXRpYyBpbnRlcnZhbChpbnRlcnZhbDogbnVtYmVyLCBjYWxsYmFjaz86ICgpID0+IHZvaWQpIHtcbiAgICAgICAgY29uc3QgeyB0aW1lciwgbm93IH0gPSBUaW1lci5uZXcoY2FsbGJhY2ssICgpID0+IHtcbiAgICAgICAgICAgIGlmIChpbW1lZGlhdGUuaXNfZGVzdHJveWVkKCkpIGltbWVkaWF0ZS5kZXN0cm95KClcbiAgICAgICAgICAgIGlmIChzb3VyY2UuaXNfZGVzdHJveWVkKCkpIHNvdXJjZS5kZXN0cm95KClcbiAgICAgICAgfSlcbiAgICAgICAgY29uc3QgaW1tZWRpYXRlID0gc2V0VGltZW91dChub3cpXG4gICAgICAgIGNvbnN0IHNvdXJjZSA9IHNldEludGVydmFsKG5vdywgaW50ZXJ2YWwpXG4gICAgICAgIHJldHVybiB0aW1lclxuICAgIH1cblxuICAgIHN0YXRpYyB0aW1lb3V0KGludGVydmFsOiBudW1iZXIsIGNhbGxiYWNrPzogKCkgPT4gdm9pZCkge1xuICAgICAgICBjb25zdCB7IHRpbWVyLCBub3cgfSA9IFRpbWVyLm5ldyhjYWxsYmFjaywgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHNvdXJjZS5pc19kZXN0cm95ZWQoKSkgc291cmNlLmRlc3Ryb3koKVxuICAgICAgICB9KVxuICAgICAgICBjb25zdCBzb3VyY2UgPSBzZXRUaW1lb3V0KG5vdywgaW50ZXJ2YWwpXG4gICAgICAgIHJldHVybiB0aW1lclxuICAgIH1cblxuICAgIHN0YXRpYyBpZGxlKGNhbGxiYWNrPzogKCkgPT4gdm9pZCkge1xuICAgICAgICBjb25zdCB7IHRpbWVyLCBub3cgfSA9IFRpbWVyLm5ldyhjYWxsYmFjaywgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHNvdXJjZS5pc19kZXN0cm95ZWQoKSkgc291cmNlLmRlc3Ryb3koKVxuICAgICAgICB9KVxuICAgICAgICBjb25zdCBzb3VyY2UgPSBzZXRUaW1lb3V0KG5vdylcbiAgICAgICAgcmV0dXJuIHRpbWVyXG4gICAgfVxuXG4gICAgcHJpdmF0ZSBzdGF0aWMgbmV3KG9uTm93PzogKCkgPT4gdm9pZCwgb25DYW5jZWxsZWQ/OiAoKSA9PiB2b2lkKSB7XG4gICAgICAgIGNvbnN0IHRpbWVyID0gbmV3IFRpbWVyKClcbiAgICAgICAgY29uc3Qgbm93ID0gdGltZXIuY29ubmVjdChcIm5vd1wiLCAoKSA9PiB2b2lkIG9uTm93Py4oKSlcbiAgICAgICAgY29uc3QgY2FuY2VsbGVkID0gdGltZXIuY29ubmVjdChcImNhbmNlbGxlZFwiLCAoKSA9PiB7XG4gICAgICAgICAgICB0aW1lci5kaXNjb25uZWN0KG5vdylcbiAgICAgICAgICAgIHRpbWVyLmRpc2Nvbm5lY3QoY2FuY2VsbGVkKVxuICAgICAgICAgICAgb25DYW5jZWxsZWQ/LigpXG4gICAgICAgIH0pXG4gICAgICAgIHJldHVybiB7IHRpbWVyLCBub3c6ICgpID0+IHRpbWVyLm5vdygpIH1cbiAgICB9XG5cbiAgICBjb25uZWN0PFMgZXh0ZW5kcyBrZXlvZiBUaW1lci5TaWduYWxTaWduYXR1cmVzPihcbiAgICAgICAgc2lnbmFsOiBTLFxuICAgICAgICBjYWxsYmFjazogR09iamVjdC5TaWduYWxDYWxsYmFjazx0aGlzLCBUaW1lci5TaWduYWxTaWduYXR1cmVzW1NdPixcbiAgICApOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gc3VwZXIuY29ubmVjdChzaWduYWwsIGNhbGxiYWNrKVxuICAgIH1cblxuICAgIGNhbmNlbCgpIHtcbiAgICAgICAgdGhpcy5jYW5jZWxsZWQoKVxuICAgIH1cbn1cblxuZXhwb3J0IGNvbnN0IHsgaW50ZXJ2YWwsIHRpbWVvdXQsIGlkbGUgfSA9IFRpbWVyXG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsKFxuICAgIGluaXQ6IHN0cmluZyxcbiAgICBpbnRlcnZhbDogbnVtYmVyLFxuICAgIGV4ZWM6IHN0cmluZyB8IHN0cmluZ1tdLFxuKTogQWNjZXNzb3I8c3RyaW5nPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUG9sbDxUPihcbiAgICBpbml0OiBULFxuICAgIGludGVydmFsOiBudW1iZXIsXG4gICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10sXG4gICAgdHJhbnNmb3JtOiAoc3Rkb3V0OiBzdHJpbmcsIHByZXY6IFQpID0+IFQsXG4pOiBBY2Nlc3NvcjxUPlxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUG9sbDxUPihcbiAgICBpbml0OiBULFxuICAgIGludGVydmFsOiBudW1iZXIsXG4gICAgZm46IChwcmV2OiBUKSA9PiBUIHwgUHJvbWlzZTxUPixcbik6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgaXZhbDogbnVtYmVyLFxuICAgIGV4ZWNPckZuOiBzdHJpbmcgfCBzdHJpbmdbXSB8ICgocHJldjogVCkgPT4gVCB8IFByb21pc2U8VD4pLFxuICAgIHRyYW5zZm9ybT86IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVCxcbik6IEFjY2Vzc29yPFQ+IHtcbiAgICBsZXQgY3VycmVudFZhbHVlID0gaW5pdFxuICAgIGxldCB0aW1lcjogR0xpYi5Tb3VyY2UgfCBudWxsID0gbnVsbFxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG5cbiAgICBmdW5jdGlvbiBzZXQodmFsdWU6IFQpIHtcbiAgICAgICAgaWYgKHZhbHVlICE9PSBjdXJyZW50VmFsdWUpIHtcbiAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IHZhbHVlXG4gICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNvbXB1dGUoKSB7XG4gICAgICAgIGlmICh0eXBlb2YgZXhlY09yRm4gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBleGVjT3JGbihjdXJyZW50VmFsdWUpXG4gICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUudGhlbihzZXQpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHNldCh2YWx1ZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGV4ZWNBc3luYyhleGVjT3JGbikudGhlbigoc3Rkb3V0KSA9PiB7XG4gICAgICAgICAgICAgICAgc2V0KHRyYW5zZm9ybSA/IHRyYW5zZm9ybShzdGRvdXQsIGN1cnJlbnRWYWx1ZSkgOiAoc3Rkb3V0IGFzIFQpKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHN1YnNjcmliZShjYWxsYmFjazogKCkgPT4gdm9pZCk6ICgpID0+IHZvaWQge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgc2V0VGltZW91dChjb21wdXRlKVxuICAgICAgICAgICAgdGltZXIgPSBzZXRJbnRlcnZhbChjb21wdXRlLCBpdmFsKVxuICAgICAgICB9XG5cbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBzdWJzY3JpYmVycy5kZWxldGUoY2FsbGJhY2spXG4gICAgICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCAmJiB0aW1lcikge1xuICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodGltZXIpXG4gICAgICAgICAgICAgICAgdGltZXIgPSBudWxsXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IGN1cnJlbnRWYWx1ZSwgc3Vic2NyaWJlKVxufVxuIiwgImltcG9ydCB7IE1vZHVsZUNvbnRhaW5lciB9IGZyb20gXCIuLi9zaGFyZWQvbW9kdWxlLWNvbnRhaW5lclwiXG5pbXBvcnQgeyBjbG9ja0xhYmVsLCBjbG9ja1Rvb2x0aXAgfSBmcm9tIFwiLi9oZWxwZXJzXCJcblxuZnVuY3Rpb24gQ2xvY2soKSB7XG4gIHJldHVybiAoXG4gICAgPE1vZHVsZUNvbnRhaW5lclxuICAgICAgY2xhc3M9XCJjbG9ja1wiXG4gICAgICBpY29uPVwiXHVFOEI1XCJcbiAgICAgIGxhYmVsPXtjbG9ja0xhYmVsfVxuICAgICAgdG9vbHRpcFRleHQ9e2Nsb2NrVG9vbHRpcH1cbiAgICAvPlxuICApXG59XG5cbmV4cG9ydCB7IENsb2NrIH1cbiIsICJpbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIlxuaW1wb3J0IEFzdGFsSHlwcmxhbmQgZnJvbSBcImdpOi8vQXN0YWxIeXBybGFuZFwiXG5pbXBvcnQgeyByYW5nZSB9IGZyb20gXCIuLi8uLi8uLi91dGlsc1wiXG5pbXBvcnQgeyBDQ1Byb3BzLCBjcmVhdGVCaW5kaW5nLCBjcmVhdGVDb21wdXRlZCB9IGZyb20gXCJhZ3NcIlxuXG50eXBlIFdzQnV0dG9uUHJvcHMgPSBQYXJ0aWFsPFxuICBDQ1Byb3BzPEd0ay5CdXR0b24sIEd0ay5CdXR0b24uQ29uc3RydWN0b3JQcm9wcz5cbj4gJiB7XG4gIHdzOiBBc3RhbEh5cHJsYW5kLldvcmtzcGFjZVxufVxuXG5mdW5jdGlvbiBXc0J1dHRvbih7IHdzLCAuLi5wcm9wcyB9OiBXc0J1dHRvblByb3BzKSB7XG4gIGNvbnN0IGh5cHJsYW5kID0gQXN0YWxIeXBybGFuZC5nZXRfZGVmYXVsdCgpXG4gIGNvbnN0IGNsYXNzTmFtZXMgPSBjcmVhdGVDb21wdXRlZChcbiAgICBbXG4gICAgICBjcmVhdGVCaW5kaW5nKGh5cHJsYW5kLCBcImZvY3VzZWRXb3Jrc3BhY2VcIiksXG4gICAgICBjcmVhdGVCaW5kaW5nKGh5cHJsYW5kLCBcImNsaWVudHNcIiksXG4gICAgXSxcbiAgICAoZndzLCBfKSA9PiB7XG4gICAgICBjb25zdCBjbGFzc2VzID0gW1wid29ya3NwYWNlLWJ1dHRvblwiXVxuICAgICAgY29uc3QgYWN0aXZlID0gZndzLmlkID09IHdzLmlkXG4gICAgICBpZiAoYWN0aXZlKSBjbGFzc2VzLnB1c2goXCJhY3RpdmVcIilcbiAgICAgIGNvbnN0IG9jY3VwaWVkID0gaHlwcmxhbmQuZ2V0X3dvcmtzcGFjZSh3cy5pZCk/LmdldF9jbGllbnRzKCkubGVuZ3RoID4gMFxuICAgICAgaWYgKG9jY3VwaWVkKSBjbGFzc2VzLnB1c2goXCJvY2N1cGllZFwiKVxuICAgICAgcmV0dXJuIGNsYXNzZXNcbiAgICB9LFxuICApXG4gIHJldHVybiAoXG4gICAgPGJ1dHRvblxuICAgICAgY3NzQ2xhc3Nlcz17Y2xhc3NOYW1lc31cbiAgICAgIHZhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgIGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgIG9uQ2xpY2tlZD17KCkgPT4gd3MuZm9jdXMoKX1cbiAgICAgIHsuLi5wcm9wc31cbiAgICA+PC9idXR0b24+XG4gIClcbn1cblxuZnVuY3Rpb24gV29ya3NwYWNlcygpIHtcbiAgcmV0dXJuIChcbiAgICA8Ym94IGNzc0NsYXNzZXM9e1tcIndvcmtzcGFjZXNcIl19IHNwYWNpbmc9ezh9PlxuICAgICAge3JhbmdlKDYpLm1hcCgoaSkgPT4gKFxuICAgICAgICA8V3NCdXR0b24gd3M9e0FzdGFsSHlwcmxhbmQuV29ya3NwYWNlLmR1bW15KGkgKyAxLCBudWxsKX0gLz5cbiAgICAgICkpfVxuICAgIDwvYm94PlxuICApXG59XG5cbmV4cG9ydCB7IFdvcmtzcGFjZXMgfVxuIiwgImltcG9ydCB7IGV4ZWNBc3luYyB9IGZyb20gXCJhZ3MvcHJvY2Vzc1wiXG5cbmV4cG9ydCBmdW5jdGlvbiByYW5nZShtYXg6IG51bWJlcikge1xuICByZXR1cm4gQXJyYXkuZnJvbSh7IGxlbmd0aDogbWF4IH0sIChfLCBpKSA9PiBpKVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2goY21kOiBzdHJpbmcgfCBzdHJpbmdbXSkge1xuICByZXR1cm4gZXhlY0FzeW5jKGNtZCkuY2F0Y2goKGVycikgPT4ge1xuICAgIGNvbnNvbGUuZXJyb3IodHlwZW9mIGNtZCA9PT0gXCJzdHJpbmdcIiA/IGNtZCA6IGNtZC5qb2luKFwiIFwiKSwgZXJyKVxuICAgIHJldHVybiBcIlwiXG4gIH0pXG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBiYXNoKHN0cmluZ3M6IHN0cmluZyB8IHN0cmluZ1tdLCAuLi52YWx1ZXM6IHVua25vd25bXSkge1xuICBjb25zdCBjbWQgPVxuICAgIHR5cGVvZiBzdHJpbmdzID09PSBcInN0cmluZ1wiXG4gICAgICA/IHN0cmluZ3NcbiAgICAgIDogc3RyaW5ncy5mbGF0TWFwKChzdHIsIGkpID0+IHN0ciArIGAke3ZhbHVlc1tpXSA/PyBcIlwifWApLmpvaW4oXCJcIilcblxuICByZXR1cm4gZXhlY0FzeW5jKFtcImJhc2hcIiwgXCItY1wiLCBjbWRdKS5jYXRjaCgoZXJyKSA9PiB7XG4gICAgY29uc29sZS5lcnJvcihjbWQsIGVycilcbiAgICByZXR1cm4gXCJcIlxuICB9KVxufVxuXG50eXBlIE5vdGlmVXJnZW5jeSA9IFwibG93XCIgfCBcIm5vcm1hbFwiIHwgXCJjcml0aWNhbFwiXG5leHBvcnQgZnVuY3Rpb24gbm90aWZ5U2VuZCh7XG4gIGFwcE5hbWUsXG4gIGFwcEljb24sXG4gIHVyZ2VuY3kgPSBcIm5vcm1hbFwiLFxuICBpbWFnZSxcbiAgaWNvbixcbiAgc3VtbWFyeSxcbiAgYm9keSxcbiAgYWN0aW9ucyxcbn06IHtcbiAgYXBwTmFtZT86IHN0cmluZ1xuICBhcHBJY29uPzogc3RyaW5nXG4gIHVyZ2VuY3k/OiBOb3RpZlVyZ2VuY3lcbiAgaW1hZ2U/OiBzdHJpbmdcbiAgaWNvbj86IHN0cmluZ1xuICBzdW1tYXJ5OiBzdHJpbmdcbiAgYm9keTogc3RyaW5nXG4gIGFjdGlvbnM/OiB7XG4gICAgW2xhYmVsOiBzdHJpbmddOiAoKSA9PiB2b2lkXG4gIH1cbn0pIHtcbiAgY29uc3QgYWN0aW9uc0FycmF5ID0gT2JqZWN0LmVudHJpZXMoYWN0aW9ucyB8fCB7fSkubWFwKFxuICAgIChbbGFiZWwsIGNhbGxiYWNrXSwgaSkgPT4gKHtcbiAgICAgIGlkOiBgJHtpfWAsXG4gICAgICBsYWJlbCxcbiAgICAgIGNhbGxiYWNrLFxuICAgIH0pLFxuICApXG4gIGV4ZWNBc3luYyhcbiAgICBbXG4gICAgICBcIm5vdGlmeS1zZW5kXCIsXG4gICAgICBgLXUgJHt1cmdlbmN5fWAsXG4gICAgICBhcHBJY29uICYmIGAtaSAke2FwcEljb259YCxcbiAgICAgIGAtaCBcInN0cmluZzppbWFnZS1wYXRoOiR7ISFpY29uID8gaWNvbiA6IGltYWdlfVwiYCxcbiAgICAgIGBcIiR7c3VtbWFyeSA/PyBcIlwifVwiYCxcbiAgICAgIGBcIiR7Ym9keSA/PyBcIlwifVwiYCxcbiAgICAgIGAtYSBcIiR7YXBwTmFtZSA/PyBcIlwifVwiYCxcbiAgICAgIC4uLmFjdGlvbnNBcnJheS5tYXAoKHYpID0+IGAtLWFjdGlvbj1cXFwiJHt2LmlkfT0ke3YubGFiZWx9XFxcImApLFxuICAgIF0uam9pbihcIiBcIiksXG4gIClcbiAgICAudGhlbigob3V0KSA9PiB7XG4gICAgICBpZiAoIWlzTmFOKE51bWJlcihvdXQudHJpbSgpKSkgJiYgb3V0LnRyaW0oKSAhPT0gXCJcIikge1xuICAgICAgICBhY3Rpb25zQXJyYXlbcGFyc2VJbnQob3V0KV0uY2FsbGJhY2soKVxuICAgICAgfVxuICAgIH0pXG4gICAgLmNhdGNoKGNvbnNvbGUuZXJyb3IpXG59XG4iLCAiZXhwb3J0IGNvbnN0IGljb25zID0ge1xuICBtdXRlZDogXCJcdUUwNEZcIixcbiAgbG93OiBcIlx1RTA0RFwiLFxuICBoaWdoOiBcIlx1RTA1MFwiLFxuICBvdmVyYW1wbGlmaWVkOiBcIlx1RTk4RVwiLFxufVxuXG5leHBvcnQgY29uc3QgdGhyZXNob2xkcyA9IHtcbiAgMTAxOiBcIm92ZXJhbXBsaWZpZWRcIixcbiAgNTE6IFwiaGlnaFwiLFxuICAxOiBcImxvd1wiLFxuICAwOiBcIm11dGVkXCIsXG59XG4iLCAiaW1wb3J0IHsgY3JlYXRlQ29tcHV0ZWQsIGNyZWF0ZUJpbmRpbmcgfSBmcm9tIFwiYWdzXCJcbmltcG9ydCB7IGljb25zLCB0aHJlc2hvbGRzIH0gZnJvbSBcIi4vY29uc3RhbnRzXCJcbmltcG9ydCBBc3RhbFdwIGZyb20gXCJnaTovL0FzdGFsV3BcIlxuXG5jb25zdCBzcGVha2VyID0gQXN0YWxXcC5nZXRfZGVmYXVsdCgpPy5hdWRpbyEuZGVmYXVsdF9zcGVha2VyXG5cbmZ1bmN0aW9uIGdldFZvbHVtZUljb24odm9sdW1lOiBudW1iZXIsIG11dGU6IGJvb2xlYW4pIHtcbiAgY29uc3QgaWNvbiA9IG11dGUgPyAwIDogWzEwMSwgNTEsIDEsIDBdLmZpbmQoKHRzKSA9PiB0cyA8PSB2b2x1bWUgKiAxMDApXG4gIHJldHVybiBpY29uXG4gICAgPyBpY29uc1t0aHJlc2hvbGRzW2ljb24gYXMga2V5b2YgdHlwZW9mIHRocmVzaG9sZHNdIGFzIGtleW9mIHR5cGVvZiBpY29uc11cbiAgICA6IGljb25zLm11dGVkXG59XG5cbmV4cG9ydCBjb25zdCB2b2x1bWVJY29uID0gY3JlYXRlQ29tcHV0ZWQoXG4gIFtjcmVhdGVCaW5kaW5nKHNwZWFrZXIsIFwidm9sdW1lXCIpLCBjcmVhdGVCaW5kaW5nKHNwZWFrZXIsIFwibXV0ZVwiKV0sXG4gICh2b2x1bWUsIG11dGUpID0+IGdldFZvbHVtZUljb24odm9sdW1lLCBtdXRlKSxcbilcblxuZXhwb3J0IGNvbnN0IHZvbHVtZVZhbHVlID0gY3JlYXRlQmluZGluZyhzcGVha2VyLCBcInZvbHVtZVwiKS5hcygodmFsdWUpID0+IHtcbiAgcmV0dXJuIChcbiAgICBNYXRoLmZsb29yKHZhbHVlICogMTAwKVxuICAgICAgLnRvU3RyaW5nKClcbiAgICAgIC5wYWRTdGFydCgzLCBcIjBcIikgKyBcIiVcIlxuICApXG59KVxuIiwgImltcG9ydCB7IE1vZHVsZUNvbnRhaW5lciB9IGZyb20gXCIuLi9zaGFyZWQvbW9kdWxlLWNvbnRhaW5lclwiXG5pbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIlxuaW1wb3J0IHsgdm9sdW1lSWNvbiwgdm9sdW1lVmFsdWUgfSBmcm9tIFwiLi9oZWxwZXJzXCJcbmltcG9ydCBBc3RhbFdwIGZyb20gXCJnaTovL0FzdGFsV3BcIlxuaW1wb3J0IHsgYmFzaCB9IGZyb20gXCIuLi8uLi8uLi91dGlsc1wiXG5cbmZ1bmN0aW9uIFZvbHVtZSgpIHtcbiAgY29uc3Qgc3BlYWtlciA9IEFzdGFsV3AuZ2V0X2RlZmF1bHQoKT8uYXVkaW8hLmRlZmF1bHRfc3BlYWtlclxuXG4gIGZ1bmN0aW9uIG9uX3Njcm9sbChfOiBHdGsuQnV0dG9uLCBfXzogR3RrLkV2ZW50Q29udHJvbGxlclNjcm9sbCwgZHg6IG51bWJlcikge1xuICAgIGlmIChkeCA+IDApIHtcbiAgICAgIHNwZWFrZXIuc2V0X3ZvbHVtZShzcGVha2VyLnZvbHVtZSAtIDAuMDEpXG4gICAgfVxuICAgIGlmIChkeCA8IDApIHtcbiAgICAgIHNwZWFrZXIuc2V0X3ZvbHVtZShzcGVha2VyLnZvbHVtZSArIDAuMDEpXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8TW9kdWxlQ29udGFpbmVyXG4gICAgICBjbGFzcz1cInZvbHVtZVwiXG4gICAgICBpY29uPXt2b2x1bWVJY29ufVxuICAgICAgbGFiZWw9e3ZvbHVtZVZhbHVlfVxuICAgICAgb25DbGlja2VkPXsoKSA9PiBiYXNoKFwicGF2dWNvbnRyb2xcIil9XG4gICAgICAkPXsoc2VsZikgPT4ge1xuICAgICAgICBjb25zdCBzY3JvbGxfZXZlbnQgPSBHdGsuRXZlbnRDb250cm9sbGVyU2Nyb2xsLm5ldyhcbiAgICAgICAgICBHdGsuRXZlbnRDb250cm9sbGVyU2Nyb2xsRmxhZ3MuVkVSVElDQUwsXG4gICAgICAgIClcbiAgICAgICAgc2Nyb2xsX2V2ZW50LmNvbm5lY3QoXCJzY3JvbGxcIiwgb25fc2Nyb2xsKVxuICAgICAgICBzZWxmLmFkZF9jb250cm9sbGVyKHNjcm9sbF9ldmVudClcbiAgICAgIH19XG4gICAgLz5cbiAgKVxufVxuXG5leHBvcnQgeyBWb2x1bWUgfVxuIiwgImltcG9ydCBBc3RhbE5ldHdvcmsgZnJvbSBcImdpOi8vQXN0YWxOZXR3b3JrXCJcbmltcG9ydCB7IGNyZWF0ZUJpbmRpbmcsIGNyZWF0ZUNvbXB1dGVkIH0gZnJvbSBcImFnc1wiXG5pbXBvcnQgeyBpY29ucywgdGhyZXNob2xkcyB9IGZyb20gXCIuL2NvbnN0YW50c1wiXG5cbmNvbnN0IG5ldHdvcmsgPSBBc3RhbE5ldHdvcmsuZ2V0X2RlZmF1bHQoKVxuXG5mdW5jdGlvbiBnZXROZXR3b3JrSWNvbihcbiAgcHJpbWFyeTogQXN0YWxOZXR3b3JrLlByaW1hcnksXG4gIHdpZmk6IEFzdGFsTmV0d29yay5XaWZpLFxuKSB7XG4gIGlmIChwcmltYXJ5ID09PSBBc3RhbE5ldHdvcmsuUHJpbWFyeS5XSVJFRCkge1xuICAgIHJldHVybiBpY29ucy53aXJlZFxuICB9XG5cbiAgaWYgKHByaW1hcnkgPT09IEFzdGFsTmV0d29yay5QcmltYXJ5LldJRkkpIHtcbiAgICBjb25zdCBpY29uVGhyZXNob2xkID0gWzgwLCA2MCwgNDAsIDIwLCAwXS5maW5kKCh0cykgPT4gdHMgPD0gd2lmaS5zdHJlbmd0aClcbiAgICByZXR1cm4gaWNvbnNbXG4gICAgICB0aHJlc2hvbGRzW2ljb25UaHJlc2hvbGQgYXMga2V5b2YgdHlwZW9mIHRocmVzaG9sZHNdIGFzIGtleW9mIHR5cGVvZiBpY29uc1xuICAgIF1cbiAgfVxuXG4gIHJldHVybiBpY29ucy5kaXNjb25uZWN0ZWRcbn1cblxuZXhwb3J0IGNvbnN0IG5ldHdvcmtJY29uID0gY3JlYXRlQ29tcHV0ZWQoXG4gIFtjcmVhdGVCaW5kaW5nKG5ldHdvcmssIFwicHJpbWFyeVwiKSwgY3JlYXRlQmluZGluZyhuZXR3b3JrLCBcIndpZmlcIildLFxuICAocHJpbWFyeSwgd2lmaSkgPT4gZ2V0TmV0d29ya0ljb24ocHJpbWFyeSwgd2lmaSksXG4pXG5cbmV4cG9ydCBjb25zdCBuZXR3b3JrTGFiZWxBbmRUb29sdGlwID0gY3JlYXRlQ29tcHV0ZWQoXG4gIFtcbiAgICBjcmVhdGVCaW5kaW5nKG5ldHdvcmssIFwicHJpbWFyeVwiKSxcbiAgICBjcmVhdGVCaW5kaW5nKG5ldHdvcmssIFwic3RhdGVcIiksXG4gICAgY3JlYXRlQmluZGluZyhuZXR3b3JrLCBcImNvbm5lY3Rpdml0eVwiKSxcbiAgICAuLi4obmV0d29yay53aWZpID8gW2NyZWF0ZUJpbmRpbmcobmV0d29yay53aWZpLCBcImVuYWJsZWRcIildIDogW10pLFxuICBdLFxuICAocHJpbWFyeSkgPT4ge1xuICAgIGlmIChwcmltYXJ5ID09PSBBc3RhbE5ldHdvcmsuUHJpbWFyeS5XSVJFRCkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbGFiZWw6IG5ldHdvcmsud2lyZWQuZGV2aWNlLmludGVyZmFjZSxcbiAgICAgICAgdG9vbHRpcDogXCJDb25uZWN0ZWRcIixcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHByaW1hcnkgPT09IEFzdGFsTmV0d29yay5QcmltYXJ5LldJRkkpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGxhYmVsOiBuZXR3b3JrLndpZmkuYWN0aXZlX2FjY2Vzc19wb2ludC5zc2lkLFxuICAgICAgICB0b29sdGlwOiBmb3JtYXRXaWZpSW5mbyhuZXR3b3JrLndpZmkpLFxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyBsYWJlbDogXCJVbmF2YWlsYWJsZVwiLCB0b29sdGlwOiBcIk5vIEludGVybmV0XCIgfVxuICB9LFxuKVxuXG4vKipcbiAqIEZvcm1hdHMgdGhlIGZyZXF1ZW5jeSB2YWx1ZSB0byBNSHouXG4gKlxuICogVGhpcyBmdW5jdGlvbiB0YWtlcyBhIGZyZXF1ZW5jeSB2YWx1ZSBpbiBrSHogYW5kIGZvcm1hdHMgaXQgdG8gTUh6IHdpdGggdHdvIGRlY2ltYWwgcGxhY2VzLlxuICpcbiAqIEBwYXJhbSBmcmVxdWVuY3kgVGhlIGZyZXF1ZW5jeSB2YWx1ZSBpbiBrSHouXG4gKlxuICogQHJldHVybnMgVGhlIGZvcm1hdHRlZCBmcmVxdWVuY3kgdmFsdWUgaW4gTUh6IGFzIGEgc3RyaW5nLlxuICovXG5jb25zdCBmb3JtYXRGcmVxdWVuY3kgPSAoZnJlcXVlbmN5OiBudW1iZXIpOiBzdHJpbmcgPT4ge1xuICByZXR1cm4gYCR7KGZyZXF1ZW5jeSAvIDEwMDApLnRvRml4ZWQoMil9TUh6YFxufVxuXG4vKipcbiAqIEZvcm1hdHMgdGhlIFdpRmkgaW5mb3JtYXRpb24gZm9yIGRpc3BsYXkuXG4gKlxuICogVGhpcyBmdW5jdGlvbiB0YWtlcyBhIFdpRmkgb2JqZWN0IGFuZCBmb3JtYXRzIGl0cyBTU0lELCBzaWduYWwgc3RyZW5ndGgsIGFuZCBmcmVxdWVuY3kgZm9yIGRpc3BsYXkuXG4gKlxuICogQHBhcmFtIHdpZmkgVGhlIFdpRmkgb2JqZWN0IGNvbnRhaW5pbmcgU1NJRCwgc2lnbmFsIHN0cmVuZ3RoLCBhbmQgZnJlcXVlbmN5IGluZm9ybWF0aW9uLlxuICpcbiAqIEByZXR1cm5zIEEgZm9ybWF0dGVkIHN0cmluZyBjb250YWluaW5nIHRoZSBXaUZpIGluZm9ybWF0aW9uLlxuICovXG5jb25zdCBmb3JtYXRXaWZpSW5mbyA9ICh3aWZpOiBBc3RhbE5ldHdvcmsuV2lmaSk6IHN0cmluZyA9PiB7XG4gIHJldHVybiBgTmV0d29yazogJHt3aWZpLnNzaWR9IFxcblNpZ25hbCBTdHJlbmd0aDogJHt3aWZpLnN0cmVuZ3RofSUgXFxuRnJlcXVlbmN5OiAke2Zvcm1hdEZyZXF1ZW5jeSh3aWZpLmZyZXF1ZW5jeSl9YFxufVxuIiwgImV4cG9ydCBjb25zdCBpY29ucyA9IHtcbiAgZGlzY29ubmVjdGVkOiBcIlx1RTFEQVwiLFxuICB3aXJlZDogXCJcdUVGRTZcIixcbiAgd2lmaV8wOiBcIlx1RjBCMFwiLFxuICB3aWZpXzE6IFwiXHVFQkU0XCIsXG4gIHdpZmlfMjogXCJcdUVCRDZcIixcbiAgd2lmaV8zOiBcIlx1RUJFMVwiLFxuICB3aWZpXzQ6IFwiXHVFMUQ4XCIsXG59XG5cbmV4cG9ydCBjb25zdCB0aHJlc2hvbGRzID0ge1xuICAwOiBcIndpZmlfMFwiLFxuICAyMDogXCJ3aWZpXzFcIixcbiAgNDA6IFwid2lmaV8yXCIsXG4gIDYwOiBcIndpZmlfM1wiLFxuICA4MDogXCJ3aWZpXzRcIixcbn1cbiIsICJpbXBvcnQgeyBiYXNoIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzXCJcbmltcG9ydCB7IE1vZHVsZUNvbnRhaW5lciB9IGZyb20gXCIuLi9zaGFyZWQvbW9kdWxlLWNvbnRhaW5lclwiXG5pbXBvcnQgeyBuZXR3b3JrSWNvbiwgbmV0d29ya0xhYmVsQW5kVG9vbHRpcCB9IGZyb20gXCIuL2hlbHBlcnNcIlxuXG5mdW5jdGlvbiBOZXR3b3JrKCkge1xuICByZXR1cm4gKFxuICAgIDxNb2R1bGVDb250YWluZXJcbiAgICAgIGNsYXNzPVwibmV0d29ya1wiXG4gICAgICBpY29uPXtuZXR3b3JrSWNvbn1cbiAgICAgIGxhYmVsPXtuZXR3b3JrTGFiZWxBbmRUb29sdGlwKCh2YWx1ZSkgPT4gdmFsdWUubGFiZWwpfVxuICAgICAgdG9vbHRpcFRleHQ9e25ldHdvcmtMYWJlbEFuZFRvb2x0aXAoKHZhbHVlKSA9PiB2YWx1ZS50b29sdGlwKX1cbiAgICAgIG9uQ2xpY2tlZD17KCkgPT4gYmFzaChcIm5tLWNvbm5lY3Rpb24tZWRpdG9yXCIpfVxuICAgIC8+XG4gIClcbn1cblxuZXhwb3J0IHsgTmV0d29yayB9XG4iLCAiaW1wb3J0IHsgY3JlYXRlUG9sbCB9IGZyb20gXCJhZ3MvdGltZVwiXG5cbmNvbnN0IGludGVydmFsID0gNTAwMFxubGV0IGxhc3RUb3RhbERvd25CeXRlcyA9IDBcbmxldCBsYXN0VG90YWxVcEJ5dGVzID0gMFxuXG5jb25zdCBuZXR3b3JrU3BlZWQgPSBjcmVhdGVQb2xsKFxuICB7XG4gICAgZG93bmxvYWQ6IDAsXG4gICAgdXBsb2FkOiAwLFxuICB9LFxuICBpbnRlcnZhbCxcbiAgW1wiY2F0XCIsIFwiL3Byb2MvbmV0L2RldlwiXSxcbiAgKGNvbnRlbnQsIF8pID0+IHtcbiAgICBjb25zdCBsaW5lcyA9IGNvbnRlbnQuc3BsaXQoXCJcXG5cIilcblxuICAgIC8vIENhY3VsYXRlIHRoZSBzdW0gb2YgYWxsIGludGVyZmFjZXMnIHRyYWZmaWMgbGluZSBieSBsaW5lLlxuICAgIGxldCB0b3RhbERvd25CeXRlcyA9IDBcbiAgICBsZXQgdG90YWxVcEJ5dGVzID0gMFxuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaW5lcy5sZW5ndGg7ICsraSkge1xuICAgICAgY29uc3QgZmllbGRzID0gbGluZXNbaV0udHJpbSgpLnNwbGl0KC9cXFcrLylcbiAgICAgIGlmIChmaWVsZHMubGVuZ3RoIDw9IDIpIHtcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgLy8gU2tpcCB2aXJ0dWFsIGludGVyZmFjZXMuXG4gICAgICBjb25zdCBpbnRlcmZjZSA9IGZpZWxkc1swXVxuICAgICAgY29uc3QgY3VycmVudEludGVyZmFjZURvd25CeXRlcyA9IE51bWJlci5wYXJzZUludChmaWVsZHNbMV0pXG4gICAgICBjb25zdCBjdXJyZW50SW50ZXJmYWNlVXBCeXRlcyA9IE51bWJlci5wYXJzZUludChmaWVsZHNbOV0pXG4gICAgICBpZiAoXG4gICAgICAgIGludGVyZmNlID09PSBcImxvXCIgfHxcbiAgICAgICAgLy8gQ3JlYXRlZCBieSBweXRob24tYmFzZWQgYmFuZHdpZHRoIG1hbmFnZXIgXCJ0cmFmZmljdG9sbFwiLlxuICAgICAgICBpbnRlcmZjZS5tYXRjaCgvXmlmYlswLTldKy8pIHx8XG4gICAgICAgIC8vIENyZWF0ZWQgYnkgbHhkIGNvbnRhaW5lciBtYW5hZ2VyLlxuICAgICAgICBpbnRlcmZjZS5tYXRjaCgvXmx4ZGJyWzAtOV0rLykgfHxcbiAgICAgICAgaW50ZXJmY2UubWF0Y2goL152aXJiclswLTldKy8pIHx8XG4gICAgICAgIGludGVyZmNlLm1hdGNoKC9eYnJbMC05XSsvKSB8fFxuICAgICAgICBpbnRlcmZjZS5tYXRjaCgvXnZuZXRbMC05XSsvKSB8fFxuICAgICAgICBpbnRlcmZjZS5tYXRjaCgvXnR1blswLTldKy8pIHx8XG4gICAgICAgIGludGVyZmNlLm1hdGNoKC9edGFwWzAtOV0rLykgfHxcbiAgICAgICAgaXNOYU4oY3VycmVudEludGVyZmFjZURvd25CeXRlcykgfHxcbiAgICAgICAgaXNOYU4oY3VycmVudEludGVyZmFjZVVwQnl0ZXMpXG4gICAgICApIHtcbiAgICAgICAgY29udGludWVcbiAgICAgIH1cblxuICAgICAgdG90YWxEb3duQnl0ZXMgKz0gY3VycmVudEludGVyZmFjZURvd25CeXRlc1xuICAgICAgdG90YWxVcEJ5dGVzICs9IGN1cnJlbnRJbnRlcmZhY2VVcEJ5dGVzXG4gICAgfVxuXG4gICAgaWYgKGxhc3RUb3RhbERvd25CeXRlcyA9PT0gMCkge1xuICAgICAgbGFzdFRvdGFsRG93bkJ5dGVzID0gdG90YWxEb3duQnl0ZXNcbiAgICB9XG4gICAgaWYgKGxhc3RUb3RhbFVwQnl0ZXMgPT09IDApIHtcbiAgICAgIGxhc3RUb3RhbFVwQnl0ZXMgPSB0b3RhbFVwQnl0ZXNcbiAgICB9XG4gICAgY29uc3QgZG93bmxvYWRTcGVlZCA9ICh0b3RhbERvd25CeXRlcyAtIGxhc3RUb3RhbERvd25CeXRlcykgLyBpbnRlcnZhbFxuICAgIGNvbnN0IHVwbG9hZFNwZWVkID0gKHRvdGFsVXBCeXRlcyAtIGxhc3RUb3RhbFVwQnl0ZXMpIC8gaW50ZXJ2YWxcblxuICAgIGxhc3RUb3RhbERvd25CeXRlcyA9IHRvdGFsRG93bkJ5dGVzXG4gICAgbGFzdFRvdGFsVXBCeXRlcyA9IHRvdGFsVXBCeXRlc1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGRvd25sb2FkOiBkb3dubG9hZFNwZWVkLFxuICAgICAgdXBsb2FkOiB1cGxvYWRTcGVlZCxcbiAgICB9XG4gIH0sXG4pXG5cbmV4cG9ydCBkZWZhdWx0IG5ldHdvcmtTcGVlZFxuIiwgImltcG9ydCB7IE1vZHVsZUNvbnRhaW5lciB9IGZyb20gXCIuLi9zaGFyZWQvbW9kdWxlLWNvbnRhaW5lclwiXG5pbXBvcnQgbmV0d29ya1NwZWVkIGZyb20gXCIuL2hlbHBlcnNcIlxuXG5mdW5jdGlvbiBOZXRzdGF0cygpIHtcbiAgcmV0dXJuIChcbiAgICA8TW9kdWxlQ29udGFpbmVyXG4gICAgICBjbGFzcz1cIm5ldHN0YXRzXCJcbiAgICAgIGljb249XCJcdUU2NDBcIlxuICAgICAgbGFiZWw9e25ldHdvcmtTcGVlZCgodmFsdWUpID0+IHtcbiAgICAgICAgY29uc3QgZG93bmxvYWRTcGVlZCA9IHZhbHVlLmRvd25sb2FkXG4gICAgICAgIGNvbnN0IHVwbG9hZFNwZWVkID0gdmFsdWUudXBsb2FkXG4gICAgICAgIGNvbnN0IGhpZ2hlclNwZWVkID1cbiAgICAgICAgICBkb3dubG9hZFNwZWVkID49IHVwbG9hZFNwZWVkID8gZG93bmxvYWRTcGVlZCA6IHVwbG9hZFNwZWVkXG5cbiAgICAgICAgY29uc3Qgc3BlZWQgPSAoaGlnaGVyU3BlZWQgLyAxMDAwKS50b0ZpeGVkKDIpXG5cbiAgICAgICAgY29uc3Qgc3ltYm9sID0gZG93bmxvYWRTcGVlZCA+PSB1cGxvYWRTcGVlZCA/IFwiXHVGMEQ3XCIgOiBcIlx1RjBEOFwiXG5cbiAgICAgICAgcmV0dXJuIGAke3NwZWVkfSBNQi9zICR7c3ltYm9sfWBcbiAgICAgIH0pfVxuICAgIC8+XG4gIClcbn1cblxuZXhwb3J0IHsgTmV0c3RhdHMgfVxuIiwgImltcG9ydCB7IGNyZWF0ZUJpbmRpbmcsIEZvciB9IGZyb20gXCJhZ3NcIlxuaW1wb3J0IHsgR3RrIH0gZnJvbSBcImFncy9ndGs0XCJcbmltcG9ydCBBc3RhbFRyYXkgZnJvbSBcImdpOi8vQXN0YWxUcmF5XCJcblxuZnVuY3Rpb24gU3lzdHJheSgpIHtcbiAgY29uc3QgdHJheSA9IEFzdGFsVHJheS5nZXRfZGVmYXVsdCgpXG4gIGNvbnN0IGl0ZW1zID0gY3JlYXRlQmluZGluZyh0cmF5LCBcIml0ZW1zXCIpXG5cbiAgcmV0dXJuIChcbiAgICA8Ym94IGNsYXNzPVwic3lzdHJheVwiIHNwYWNpbmc9ezJ9PlxuICAgICAgPEZvciBlYWNoPXtpdGVtc30+XG4gICAgICAgIHsoaXRlbSkgPT4gKFxuICAgICAgICAgIDxtZW51YnV0dG9uXG4gICAgICAgICAgICBjbGFzcz1cImJ1dHRvblwiXG4gICAgICAgICAgICAkPXsoc2VsZjogR3RrLk1lbnVCdXR0b24pID0+IHtcbiAgICAgICAgICAgICAgc2VsZi5pbnNlcnRfYWN0aW9uX2dyb3VwKFwiZGJ1c21lbnVcIiwgaXRlbS5hY3Rpb25Hcm91cClcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgICB0b29sdGlwVGV4dD17Y3JlYXRlQmluZGluZyhpdGVtLCBcInRvb2x0aXBNYXJrdXBcIil9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPGltYWdlIGNsYXNzPVwiYnV0dG9uLWljb25cIiBnaWNvbj17Y3JlYXRlQmluZGluZyhpdGVtLCBcImdpY29uXCIpfSAvPlxuICAgICAgICAgICAge0d0ay5Qb3BvdmVyTWVudS5uZXdfZnJvbV9tb2RlbChpdGVtLm1lbnVNb2RlbCl9XG4gICAgICAgICAgPC9tZW51YnV0dG9uPlxuICAgICAgICApfVxuICAgICAgPC9Gb3I+XG4gICAgPC9ib3g+XG4gIClcbn1cblxuZXhwb3J0IHsgU3lzdHJheSB9XG4iLCAiaW1wb3J0IHsgYmFzaCB9IGZyb20gXCIuLi8uLi8uLi91dGlsc1wiXG5pbXBvcnQgeyBNb2R1bGVDb250YWluZXIgfSBmcm9tIFwiLi4vc2hhcmVkL21vZHVsZS1jb250YWluZXJcIlxuXG5mdW5jdGlvbiBFeGl0QnV0dG9uKCkge1xuICByZXR1cm4gKFxuICAgIDxNb2R1bGVDb250YWluZXJcbiAgICAgIGNsYXNzPVwiZXhpdC1idXR0b25cIlxuICAgICAgaWNvbj1cIlx1RTg3OVwiXG4gICAgICBsYWJlbD1cIkV4aXRcIlxuICAgICAgb25DbGlja2VkPXsoKSA9PiBiYXNoKFwifi8uY29uZmlnL2h5cHIvc2NyaXB0cy9kbWVudS5zaCBxdWl0XCIpfVxuICAgIC8+XG4gIClcbn1cblxuZXhwb3J0IHsgRXhpdEJ1dHRvbiB9XG4iLCAiaW1wb3J0IGFwcCBmcm9tIFwiYWdzL2d0azQvYXBwXCJcbmltcG9ydCB7IEFzdGFsLCBHZGssIEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiXG5pbXBvcnQgeyBDbG9jayB9IGZyb20gXCIuL2Nsb2NrXCJcbmltcG9ydCB7IFdvcmtzcGFjZXMgfSBmcm9tIFwiLi93b3Jrc3BhY2VzXCJcbmltcG9ydCB7IFZvbHVtZSB9IGZyb20gXCIuL3ZvbHVtZVwiXG5pbXBvcnQgeyBOZXR3b3JrIH0gZnJvbSBcIi4vbmV0d29ya1wiXG5pbXBvcnQgeyBOZXRzdGF0cyB9IGZyb20gXCIuL25ldHN0YXRzXCJcbmltcG9ydCB7IFN5c3RyYXkgfSBmcm9tIFwiLi9zeXN0cmF5XCJcbmltcG9ydCB7IEV4aXRCdXR0b24gfSBmcm9tIFwiLi9leGl0LWJ1dHRvblwiXG5cbmV4cG9ydCBmdW5jdGlvbiBCYXIoZ2RrbW9uaXRvcjogR2RrLk1vbml0b3IpIHtcbiAgY29uc3QgeyBCT1RUT00sIExFRlQsIFJJR0hUIH0gPSBBc3RhbC5XaW5kb3dBbmNob3JcblxuICByZXR1cm4gKFxuICAgIDx3aW5kb3dcbiAgICAgIHZpc2libGVcbiAgICAgIG5hbWU9XCJiYXJcIlxuICAgICAgY2xhc3M9XCJCYXJcIlxuICAgICAgZ2RrbW9uaXRvcj17Z2RrbW9uaXRvcn1cbiAgICAgIGV4Y2x1c2l2aXR5PXtBc3RhbC5FeGNsdXNpdml0eS5FWENMVVNJVkV9XG4gICAgICBhbmNob3I9e0JPVFRPTSB8IExFRlQgfCBSSUdIVH1cbiAgICAgIGFwcGxpY2F0aW9uPXthcHB9XG4gICAgPlxuICAgICAgPGNlbnRlcmJveCBjc3NDbGFzc2VzPXtbXCJiYXItY29udGFpbmVyXCJdfT5cbiAgICAgICAgPGJveCAkdHlwZT1cInN0YXJ0XCIgaGFsaWduPXtHdGsuQWxpZ24uU1RBUlR9IHNwYWNpbmc9ezh9PlxuICAgICAgICAgIDxXb3Jrc3BhY2VzIC8+XG4gICAgICAgIDwvYm94PlxuICAgICAgICA8Ym94ICR0eXBlPVwiZW5kXCIgaGFsaWduPXtHdGsuQWxpZ24uRU5EfSBzcGFjaW5nPXs0fT5cbiAgICAgICAgICA8U3lzdHJheSAvPlxuICAgICAgICAgIDxWb2x1bWUgLz5cbiAgICAgICAgICA8TmV0d29yayAvPlxuICAgICAgICAgIDxOZXRzdGF0cyAvPlxuICAgICAgICAgIDxDbG9jayAvPlxuICAgICAgICAgIDxFeGl0QnV0dG9uIC8+XG4gICAgICAgIDwvYm94PlxuICAgICAgPC9jZW50ZXJib3g+XG4gICAgPC93aW5kb3c+XG4gIClcbn1cbiIsICJpbXBvcnQgYXBwIGZyb20gXCJhZ3MvZ3RrNC9hcHBcIlxuaW1wb3J0IHsgQXN0YWwsIEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiXG5pbXBvcnQgQXN0YWxOb3RpZmQgZnJvbSBcImdpOi8vQXN0YWxOb3RpZmRcIlxuaW1wb3J0IHsgTm90aWZpY2F0aW9uIH0gZnJvbSBcIi4vbm90aWZpY2F0aW9uXCJcbmltcG9ydCB7IGNyZWF0ZUJpbmRpbmcsIEZvciwgY3JlYXRlU3RhdGUsIG9uQ2xlYW51cCB9IGZyb20gXCJhZ3NcIlxuXG5mdW5jdGlvbiBOb3RpZmljYXRpb25Qb3B1cHMoKSB7XG4gIGNvbnN0IG1vbml0b3JzID0gY3JlYXRlQmluZGluZyhhcHAsIFwibW9uaXRvcnNcIilcblxuICBjb25zdCBub3RpZmQgPSBBc3RhbE5vdGlmZC5nZXRfZGVmYXVsdCgpXG5cbiAgY29uc3QgW25vdGlmaWNhdGlvbnMsIHNldE5vdGlmaWNhdGlvbnNdID0gY3JlYXRlU3RhdGUoXG4gICAgbmV3IEFycmF5PEFzdGFsTm90aWZkLk5vdGlmaWNhdGlvbj4oKSxcbiAgKVxuXG4gIGNvbnN0IG5vdGlmaWVkSGFuZGxlciA9IG5vdGlmZC5jb25uZWN0KFwibm90aWZpZWRcIiwgKF8sIGlkLCByZXBsYWNlZCkgPT4ge1xuICAgIGNvbnN0IG5vdGlmaWNhdGlvbiA9IG5vdGlmZC5nZXRfbm90aWZpY2F0aW9uKGlkKVxuXG4gICAgaWYgKHJlcGxhY2VkICYmIG5vdGlmaWNhdGlvbnMuZ2V0KCkuc29tZSgobikgPT4gbi5pZCA9PT0gaWQpKSB7XG4gICAgICBzZXROb3RpZmljYXRpb25zKChucykgPT4gbnMubWFwKChuKSA9PiAobi5pZCA9PT0gaWQgPyBub3RpZmljYXRpb24gOiBuKSkpXG4gICAgfSBlbHNlIHtcbiAgICAgIHNldE5vdGlmaWNhdGlvbnMoKG5zKSA9PiBbbm90aWZpY2F0aW9uLCAuLi5uc10pXG4gICAgfVxuICB9KVxuXG4gIGNvbnN0IHJlc29sdmVkSGFuZGxlciA9IG5vdGlmZC5jb25uZWN0KFwicmVzb2x2ZWRcIiwgKF8sIGlkKSA9PiB7XG4gICAgc2V0Tm90aWZpY2F0aW9ucygobnMpID0+IG5zLmZpbHRlcigobikgPT4gbi5pZCAhPT0gaWQpKVxuICB9KVxuXG4gIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgbm90aWZkLmRpc2Nvbm5lY3Qobm90aWZpZWRIYW5kbGVyKVxuICAgIG5vdGlmZC5kaXNjb25uZWN0KHJlc29sdmVkSGFuZGxlcilcbiAgfSlcblxuICByZXR1cm4gKFxuICAgIDxGb3IgZWFjaD17bW9uaXRvcnN9PlxuICAgICAgeyhtb25pdG9yKSA9PiAoXG4gICAgICAgIDx3aW5kb3dcbiAgICAgICAgICAkPXsoc2VsZikgPT4gb25DbGVhbnVwKCgpID0+IHNlbGYuZGVzdHJveSgpKX1cbiAgICAgICAgICBjbGFzcz1cIm5vdGlmaWNhdGlvbi1wb3B1cHNcIlxuICAgICAgICAgIGdka21vbml0b3I9e21vbml0b3J9XG4gICAgICAgICAgdmlzaWJsZT17bm90aWZpY2F0aW9ucygobnMpID0+IG5zLmxlbmd0aCA+IDApfVxuICAgICAgICAgIGFuY2hvcj17QXN0YWwuV2luZG93QW5jaG9yLkJPVFRPTSB8IEFzdGFsLldpbmRvd0FuY2hvci5SSUdIVH1cbiAgICAgICAgPlxuICAgICAgICAgIDxib3ggb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICA8Rm9yIGVhY2g9e25vdGlmaWNhdGlvbnN9PlxuICAgICAgICAgICAgICB7KG5vdGlmaWNhdGlvbikgPT4gPE5vdGlmaWNhdGlvbiBub3RpZmljYXRpb249e25vdGlmaWNhdGlvbn0gLz59XG4gICAgICAgICAgICA8L0Zvcj5cbiAgICAgICAgICA8L2JveD5cbiAgICAgICAgPC93aW5kb3c+XG4gICAgICApfVxuICAgIDwvRm9yPlxuICApXG59XG5cbmV4cG9ydCB7IE5vdGlmaWNhdGlvblBvcHVwcyB9XG4iLCAiaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEdkayBmcm9tIFwiZ2k6Ly9HZGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEFkdyBmcm9tIFwiZ2k6Ly9BZHdcIlxuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYlwiXG5pbXBvcnQgQXN0YWxOb3RpZmQgZnJvbSBcImdpOi8vQXN0YWxOb3RpZmRcIlxuaW1wb3J0IFBhbmdvIGZyb20gXCJnaTovL1BhbmdvXCJcblxuZnVuY3Rpb24gaXNJY29uKGljb24/OiBzdHJpbmcgfCBudWxsKSB7XG4gIGNvbnN0IGljb25UaGVtZSA9IEd0ay5JY29uVGhlbWUuZ2V0X2Zvcl9kaXNwbGF5KEdkay5EaXNwbGF5LmdldF9kZWZhdWx0KCkhKVxuICByZXR1cm4gaWNvbiAmJiBpY29uVGhlbWUuaGFzX2ljb24oaWNvbilcbn1cblxuZnVuY3Rpb24gZmlsZUV4aXN0cyhwYXRoOiBzdHJpbmcpIHtcbiAgcmV0dXJuIEdMaWIuZmlsZV90ZXN0KHBhdGgsIEdMaWIuRmlsZVRlc3QuRVhJU1RTKVxufVxuXG5mdW5jdGlvbiB0aW1lKHRpbWU6IG51bWJlciwgZm9ybWF0ID0gXCIlSDolTVwiKSB7XG4gIHJldHVybiBHTGliLkRhdGVUaW1lLm5ld19mcm9tX3VuaXhfbG9jYWwodGltZSkuZm9ybWF0KGZvcm1hdCkhXG59XG5cbmZ1bmN0aW9uIHVyZ2VuY3kobjogQXN0YWxOb3RpZmQuTm90aWZpY2F0aW9uKSB7XG4gIGNvbnN0IHsgTE9XLCBOT1JNQUwsIENSSVRJQ0FMIH0gPSBBc3RhbE5vdGlmZC5VcmdlbmN5XG4gIHN3aXRjaCAobi51cmdlbmN5KSB7XG4gICAgY2FzZSBMT1c6XG4gICAgICByZXR1cm4gXCJsb3dcIlxuICAgIGNhc2UgQ1JJVElDQUw6XG4gICAgICByZXR1cm4gXCJjcml0aWNhbFwiXG4gICAgY2FzZSBOT1JNQUw6XG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBcIm5vcm1hbFwiXG4gIH1cbn1cblxuaW50ZXJmYWNlIE5vdGlmaWNhdGlvblByb3BzIHtcbiAgbm90aWZpY2F0aW9uOiBBc3RhbE5vdGlmZC5Ob3RpZmljYXRpb25cbn1cblxuZnVuY3Rpb24gTm90aWZpY2F0aW9uKHsgbm90aWZpY2F0aW9uOiBuIH06IE5vdGlmaWNhdGlvblByb3BzKSB7XG4gIHJldHVybiAoXG4gICAgPEFkdy5DbGFtcCBtYXhpbXVtU2l6ZT17NDAwfT5cbiAgICAgIDxib3hcbiAgICAgICAgd2lkdGhSZXF1ZXN0PXs0MDB9XG4gICAgICAgIGNsYXNzPXtgbm90aWZpY2F0aW9uICR7dXJnZW5jeShuKX1gfVxuICAgICAgICBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfVxuICAgICAgPlxuICAgICAgICA8Ym94IGNsYXNzPVwiaGVhZGVyXCI+XG4gICAgICAgICAgeyhuLmFwcEljb24gfHwgaXNJY29uKG4uZGVza3RvcEVudHJ5KSkgJiYgKFxuICAgICAgICAgICAgPGltYWdlXG4gICAgICAgICAgICAgIGNsYXNzPVwiYXBwLWljb25cIlxuICAgICAgICAgICAgICB2aXNpYmxlPXtCb29sZWFuKG4uYXBwSWNvbiB8fCBuLmRlc2t0b3BFbnRyeSl9XG4gICAgICAgICAgICAgIGljb25OYW1lPXtuLmFwcEljb24gfHwgbi5kZXNrdG9wRW50cnl9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICl9XG4gICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICBjbGFzcz1cImFwcC1uYW1lXCJcbiAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLlNUQVJUfVxuICAgICAgICAgICAgZWxsaXBzaXplPXtQYW5nby5FbGxpcHNpemVNb2RlLkVORH1cbiAgICAgICAgICAgIGxhYmVsPXtuLmFwcE5hbWUgfHwgXCJVbmtub3duXCJ9XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgIGNsYXNzPVwidGltZVwiXG4gICAgICAgICAgICBoZXhwYW5kXG4gICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5FTkR9XG4gICAgICAgICAgICBsYWJlbD17dGltZShuLnRpbWUpfVxuICAgICAgICAgIC8+XG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrZWQ9eygpID0+IG4uZGlzbWlzcygpfT5cbiAgICAgICAgICAgIDxpbWFnZSBpY29uTmFtZT1cIndpbmRvdy1jbG9zZS1zeW1ib2xpY1wiIC8+XG4gICAgICAgICAgPC9idXR0b24+XG4gICAgICAgIDwvYm94PlxuICAgICAgICA8R3RrLlNlcGFyYXRvciB2aXNpYmxlIC8+XG4gICAgICAgIDxib3ggY2xhc3M9XCJjb250ZW50XCI+XG4gICAgICAgICAge24uaW1hZ2UgJiYgZmlsZUV4aXN0cyhuLmltYWdlKSAmJiAoXG4gICAgICAgICAgICA8aW1hZ2UgdmFsaWduPXtHdGsuQWxpZ24uU1RBUlR9IGNsYXNzPVwiaW1hZ2VcIiBmaWxlPXtuLmltYWdlfSAvPlxuICAgICAgICAgICl9XG4gICAgICAgICAge24uaW1hZ2UgJiYgaXNJY29uKG4uaW1hZ2UpICYmIChcbiAgICAgICAgICAgIDxib3ggdmFsaWduPXtHdGsuQWxpZ24uU1RBUlR9IGNsYXNzPVwiaWNvbi1pbWFnZVwiPlxuICAgICAgICAgICAgICA8aW1hZ2VcbiAgICAgICAgICAgICAgICBpY29uTmFtZT17bi5pbWFnZX1cbiAgICAgICAgICAgICAgICBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICAgICAgdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9ib3g+XG4gICAgICAgICAgKX1cbiAgICAgICAgICA8Ym94IG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9PlxuICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgIGNsYXNzPVwic3VtbWFyeVwiXG4gICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLlNUQVJUfVxuICAgICAgICAgICAgICB4YWxpZ249ezB9XG4gICAgICAgICAgICAgIGxhYmVsPXtuLnN1bW1hcnl9XG4gICAgICAgICAgICAgIGVsbGlwc2l6ZT17UGFuZ28uRWxsaXBzaXplTW9kZS5FTkR9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAge24uYm9keSAmJiAoXG4gICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgIGNsYXNzPVwiYm9keVwiXG4gICAgICAgICAgICAgICAgd3JhcFxuICAgICAgICAgICAgICAgIHVzZU1hcmt1cFxuICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLlNUQVJUfVxuICAgICAgICAgICAgICAgIHhhbGlnbj17MH1cbiAgICAgICAgICAgICAgICBqdXN0aWZ5PXtHdGsuSnVzdGlmaWNhdGlvbi5GSUxMfVxuICAgICAgICAgICAgICAgIGxhYmVsPXtuLmJvZHl9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvYm94PlxuICAgICAgICA8L2JveD5cbiAgICAgICAge24uYWN0aW9ucy5sZW5ndGggPiAwICYmIChcbiAgICAgICAgICA8Ym94IGNsYXNzPVwiYWN0aW9uc1wiPlxuICAgICAgICAgICAge24uYWN0aW9ucy5tYXAoKHsgbGFiZWwsIGlkIH0pID0+IChcbiAgICAgICAgICAgICAgPGJ1dHRvbiBoZXhwYW5kIG9uQ2xpY2tlZD17KCkgPT4gbi5pbnZva2UoaWQpfT5cbiAgICAgICAgICAgICAgICA8bGFiZWwgbGFiZWw9e2xhYmVsfSBoYWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9IGhleHBhbmQgLz5cbiAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgICA8L2JveD5cbiAgICAgICAgKX1cbiAgICAgIDwvYm94PlxuICAgIDwvQWR3LkNsYW1wPlxuICApXG59XG5cbmV4cG9ydCB7IE5vdGlmaWNhdGlvbiB9XG4iLCAiaW1wb3J0IGFwcCBmcm9tIFwiYWdzL2d0azQvYXBwXCJcbmltcG9ydCBzdHlsZXMgZnJvbSBcIi4vc3R5bGVzL3N0eWxlcy5zY3NzXCJcbmltcG9ydCB7IEJhciB9IGZyb20gXCIuL2NvbXBvbmVudHMvYmFyXCJcbmltcG9ydCB7IE5vdGlmaWNhdGlvblBvcHVwcyB9IGZyb20gXCIuL2NvbXBvbmVudHMvbm90aWZpY2F0aW9uc1wiXG5pbXBvcnQgeyBub3RpZnlTZW5kIH0gZnJvbSBcIi4vdXRpbHNcIlxuXG5hcHAuc3RhcnQoe1xuICBjc3M6IHN0eWxlcyxcbiAgbWFpbigpIHtcbiAgICBhcHAuZ2V0X21vbml0b3JzKCkubWFwKEJhcilcbiAgICBOb3RpZmljYXRpb25Qb3B1cHMoKVxuXG4gICAgLy8gbm90aWZ5U2VuZCh7XG4gICAgLy8gICBhcHBOYW1lOiBcImZvb3RcIixcbiAgICAvLyAgIGFwcEljb246IFwiZm9vdFwiLFxuICAgIC8vICAgc3VtbWFyeTogXCJIZWxsbyBmcm9tIGZvb3RcIixcbiAgICAvLyAgIGJvZHk6IFwiVGhpcyBpcyBhIGJvZHkgbm90aWZpY2F0aW9uLlwiLFxuICAgIC8vICAgYWN0aW9uczoge1xuICAgIC8vICAgICBZZXM6ICgpID0+IHt9LFxuICAgIC8vICAgICBObzogKCkgPT4ge30sXG4gICAgLy8gICAgIExhdGVyOiAoKSA9PiB7fSxcbiAgICAvLyAgIH0sXG4gICAgLy8gfSlcbiAgfSxcbn0pXG4iXSwKICAibWFwcGluZ3MiOiAiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQU1BLFNBQVMsU0FBUyxLQUFhO0FBQzNCLFNBQU8sSUFDRixRQUFRLG1CQUFtQixPQUFPLEVBQ2xDLFdBQVcsS0FBSyxHQUFHLEVBQ25CLFlBQVk7QUFDckI7QUFFQSxlQUFlLFNBQVksS0FBOEJBLFFBQXVCO0FBQzVFLFNBQU8sSUFBSSxLQUFLLENBQUMsTUFBTUEsT0FBTSxFQUFFLE9BQU8sQ0FBQyxFQUFFLE1BQU0sTUFBTSxNQUFNO0FBQy9EO0FBRUEsU0FBUyxNQUF3QixPQUFVLE1BQWdDO0FBQ3ZFLFNBQU8sZUFBZSxPQUFPLE1BQU07QUFBQSxJQUMvQixNQUFNO0FBQ0YsYUFBTyxLQUFLLE9BQU8sU0FBUyxJQUFJLENBQUMsRUFBRSxFQUFFO0FBQUEsSUFDekM7QUFBQSxFQUNKLENBQUM7QUFDTDtBQUVBLE1BQU0sU0FBUyxPQUFPLGdCQUFnQixHQUFHLENBQUMsRUFBRSxNQUFNLFlBQVksTUFBTTtBQUNoRSxRQUFNLEtBQUssV0FBVyxNQUFNO0FBQzVCLFFBQU0sWUFBWSxXQUFXLFVBQVU7QUFDdkMsUUFBTSxZQUFZLFdBQVcsWUFBWTtBQUM3QyxDQUFDO0FBRUQsTUFBTSxTQUFTLE9BQU8sbUJBQW1CLEdBQUcsQ0FB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LFNBQUksYUFBYUMsS0FBSSxZQUFZLFVBQ2hDLDhCQUFDLE9BQUksTUFBTSxlQUNSLFdBQUMsaUJBQWlCLG9CQUFDLGdCQUFhLGNBQTRCLEdBQy9ELEdBQ0Y7QUFBQTtBQUFBLEVBQ0YsR0FFSjtBQUVKOzs7QUUvQ0EsWUFBSSxNQUFNO0FBQUEsRUFDUixLQUFLO0FBQUEsRUFDTCxPQUFPO0FBQ0wsZ0JBQUksYUFBYSxFQUFFLElBQUksR0FBRztBQUMxQix1QkFBbUI7QUFBQSxFQWFyQjtBQUNGLENBQUM7IiwKICAibmFtZXMiOiBbInBhdGNoIiwgIk5vdGlmaWNhdGlvbiIsICJzbmFrZWlmeSIsICJzbmFrZWlmeSIsICJnZXR0ZXIiLCAic2V0dGVyIiwgInNldCIsICJzaWduYWxOYW1lIiwgInNpZ25hbCIsICJHTGliIiwgIkdpbyIsICJHTGliIiwgIkdPYmplY3QiLCAiR0xpYiIsICJHT2JqZWN0IiwgInNpZ25hbCIsICJ2YWx1ZSIsICJ0aW1lb3V0IiwgInNldCIsICJuYW1lIiwgImFyZ3MiLCAiX2EiLCAiYXBwIiwgIkdPYmplY3QiLCAiR09iamVjdCIsICJfYSIsICJzaWduYWwiLCAiR09iamVjdCIsICJHaW8iLCAiR0xpYiIsICJHT2JqZWN0IiwgInNldCIsICJ2YWx1ZSIsICJuZXdWYWx1ZSIsICJHaW8iLCAiZ2V0dGVyIiwgIkdPYmplY3QiLCAia2V5IiwgIm9iamVjdCIsICJyZW1vdmUiLCAiR09iamVjdCIsICJHTGliIiwgIkFkdyIsICJfY3Vyc29yVGhlbWVfZGVjIiwgIl9pY29uVGhlbWVfZGVjIiwgIl9ndGtUaGVtZV9kZWMiLCAiX2EiLCAiX2luaXQiLCAiR2lvIiwgIl8iLCAiaWNvbnMiLCAic2lnbmFsIiwgIkd0ayIsICJHZGsiLCAiR3RrIiwgIkFzdGFsIiwgIkd0ayIsICJHaW8iLCAiR3RrIiwgInNldHRlciIsICJjc3MiLCAiR2lvIiwgIkd0ayIsICJBc3RhbCIsICJHTGliIiwgIkdpbyIsICJHTGliIiwgIl9hIiwgIl9pbml0IiwgIkdpbyIsICJzaWduYWwiLCAiR0xpYiIsICJfYSIsICJfaW5pdCIsICJpbnRlcnZhbCIsICJzaWduYWwiLCAic2V0IiwgIkdMaWIiLCAiR3RrIiwgIkFzdGFsV3AiLCAic3BlYWtlciIsICJBc3RhbFdwIiwgIkd0ayIsICJpY29ucyIsICJ0aHJlc2hvbGRzIiwgImljb25zIiwgInRocmVzaG9sZHMiLCAiaW50ZXJ2YWwiLCAiR3RrIiwgIkd0ayIsICJBc3RhbE5vdGlmZCIsICJHdGsiLCAiR2RrIiwgIkdMaWIiLCAiR3RrIiwgIkdkayIsICJHTGliIiwgInRpbWUiLCAiQXN0YWxOb3RpZmQiLCAiR3RrIl0KfQo=

EOF

LD_PRELOAD="/usr/lib/libgtk4-layer-shell.so" /usr/bin/gjs -m $file $@