#!/usr/bin/bash
file="${XDG_RUNTIME_DIR:-/tmp}/dmFyIF-ags.js"

cat <<EOF | base64 --decode > $file
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __knownSymbol = (name, symbol) => (symbol = Symbol[name]) ? symbol : Symbol.for("Symbol." + name);
var __typeError = (msg) => {
  throw TypeError(msg);
};
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __decoratorStart = (base) => [, , , __create(base?.[__knownSymbol("metadata")] ?? null)];
var __decoratorStrings = ["class", "method", "getter", "setter", "accessor", "field", "value", "get", "set"];
var __expectFn = (fn) => fn !== void 0 && typeof fn !== "function" ? __typeError("Function expected") : fn;
var __decoratorContext = (kind, name, done, metadata, fns) => ({ kind: __decoratorStrings[kind], name, metadata, addInitializer: (fn) => done._ ? __typeError("Already initialized") : fns.push(__expectFn(fn || null)) });
var __decoratorMetadata = (array, target) => __defNormalProp(target, __knownSymbol("metadata"), array[3]);
var __runInitializers = (array, flags, self, value) => {
  for (var i = 0, fns = array[flags >> 1], n = fns && fns.length; i < n; i++) flags & 1 ? fns[i].call(self) : value = fns[i].call(self, value);
  return value;
};
var __decorateElement = (array, flags, name, decorators, target, extra) => {
  var fn, it, done, ctx, access, k = flags & 7, s = !!(flags & 8), p = !!(flags & 16);
  var j = k > 3 ? array.length + 1 : k ? s ? 1 : 2 : 0, key = __decoratorStrings[k + 5];
  var initializers = k > 3 && (array[j - 1] = []), extraInitializers = array[j] || (array[j] = []);
  var desc = k && (!p && !s && (target = target.prototype), k < 5 && (k > 3 || !p) && __getOwnPropDesc(k < 4 ? target : { get [name]() {
    return __privateGet(this, extra);
  }, set [name](x) {
    return __privateSet(this, extra, x);
  } }, name));
  k ? p && k < 4 && __name(extra, (k > 2 ? "set " : k > 1 ? "get " : "") + name) : __name(target, name);
  for (var i = decorators.length - 1; i >= 0; i--) {
    ctx = __decoratorContext(k, name, done = {}, array[3], extraInitializers);
    if (k) {
      ctx.static = s, ctx.private = p, access = ctx.access = { has: p ? (x) => __privateIn(target, x) : (x) => name in x };
      if (k ^ 3) access.get = p ? (x) => (k ^ 1 ? __privateGet : __privateMethod)(x, target, k ^ 4 ? extra : desc.get) : (x) => x[name];
      if (k > 2) access.set = p ? (x, y) => __privateSet(x, target, y, k ^ 4 ? extra : desc.set) : (x, y) => x[name] = y;
    }
    it = (0, decorators[i])(k ? k < 4 ? p ? extra : desc[key] : k > 4 ? void 0 : { get: desc.get, set: desc.set } : target, ctx), done._ = 1;
    if (k ^ 4 || it === void 0) __expectFn(it) && (k > 4 ? initializers.unshift(it) : k ? p ? extra = it : desc[key] = it : target = it);
    else if (typeof it !== "object" || it === null) __typeError("Object expected");
    else __expectFn(fn = it.get) && (desc.get = fn), __expectFn(fn = it.set) && (desc.set = fn), __expectFn(fn = it.init) && initializers.unshift(fn);
  }
  return k || __decoratorMetadata(array, target), desc && __defProp(target, name, desc), p ? k ^ 4 ? extra : desc : target;
};
var __accessCheck = (obj, member, msg) => member.has(obj) || __typeError("Cannot " + msg);
var __privateIn = (member, obj) => Object(obj) !== obj ? __typeError('Cannot use the "in" operator on this value') : member.has(obj);
var __privateGet = (obj, member, getter2) => (__accessCheck(obj, member, "read from private field"), getter2 ? getter2.call(obj) : member.get(obj));
var __privateAdd = (obj, member, value) => member.has(obj) ? __typeError("Cannot add the same private member more than once") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
var __privateSet = (obj, member, value, setter2) => (__accessCheck(obj, member, "write to private field"), setter2 ? setter2.call(obj, value) : member.set(obj, value), value);
var __privateMethod = (obj, member, method) => (__accessCheck(obj, member, "access private method"), method);

// ../../../usr/share/ags/js/lib/overrides.ts
function snakeify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1_$2").replaceAll("-", "_").toLowerCase();
}
async function suppress(mod, patch2) {
  return mod.then((m) => patch2(m.default)).catch(() => void 0);
}
function patch(proto, prop) {
  Object.defineProperty(proto, prop, {
    get() {
      return this[`get_${snakeify(prop)}`]();
    }
  });
}
await suppress(import("gi://AstalApps"), ({ Apps, Application }) => {
  patch(Apps.prototype, "list");
  patch(Application.prototype, "keywords");
  patch(Application.prototype, "categories");
});
await suppress(import("gi://AstalBattery"), ({ UPower }) => {
  patch(UPower.prototype, "devices");
});
await suppress(import("gi://AstalBluetooth"), ({ Adapter, Bluetooth, Device }) => {
  patch(Adapter.prototype, "uuids");
  patch(Bluetooth.prototype, "adapters");
  patch(Bluetooth.prototype, "devices");
  patch(Device.prototype, "uuids");
});
await suppress(import("gi://AstalHyprland"), ({ Hyprland, Monitor, Workspace }) => {
  patch(Hyprland.prototype, "binds");
  patch(Hyprland.prototype, "monitors");
  patch(Hyprland.prototype, "workspaces");
  patch(Hyprland.prototype, "clients");
  patch(Monitor.prototype, "availableModes");
  patch(Monitor.prototype, "available_modes");
  patch(Workspace.prototype, "clients");
});
await suppress(import("gi://AstalMpris"), ({ Mpris, Player }) => {
  patch(Mpris.prototype, "players");
  patch(Player.prototype, "supported_uri_schemes");
  patch(Player.prototype, "supportedUriSchemes");
  patch(Player.prototype, "supported_mime_types");
  patch(Player.prototype, "supportedMimeTypes");
  patch(Player.prototype, "comments");
});
await suppress(import("gi://AstalNetwork"), ({ Wifi }) => {
  patch(Wifi.prototype, "access_points");
  patch(Wifi.prototype, "accessPoints");
});
await suppress(import("gi://AstalNotifd"), ({ Notifd, Notification: Notification2 }) => {
  patch(Notifd.prototype, "notifications");
  patch(Notification2.prototype, "actions");
});
await suppress(import("gi://AstalPowerProfiles"), ({ PowerProfiles }) => {
  patch(PowerProfiles.prototype, "actions");
});
await suppress(import("gi://AstalWp"), ({ Wp, Audio, Video }) => {
  patch(Wp.prototype, "devices");
  patch(Audio.prototype, "streams");
  patch(Audio.prototype, "recorders");
  patch(Audio.prototype, "microphones");
  patch(Audio.prototype, "speakers");
  patch(Audio.prototype, "devices");
  patch(Video.prototype, "streams");
  patch(Video.prototype, "recorders");
  patch(Video.prototype, "sinks");
  patch(Video.prototype, "sources");
  patch(Video.prototype, "devices");
});
await suppress(import("gi://AstalTray"), ({ Tray }) => {
  patch(Tray.prototype, "items");
});

// ../../../usr/share/ags/js/node_modules/gnim/dist/gobject.ts
import GObject from "gi://GObject";
import GLib from "gi://GLib";

// ../../../usr/share/ags/js/node_modules/gnim/dist/util.ts
function kebabify(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("_", "-").toLowerCase();
}
function snakeify2(str) {
  return str.replace(/([a-z])([A-Z])/g, "$1-$2").replaceAll("-", "_").toLowerCase();
}
function xml({ name, attributes, children }) {
  let builder = `<${name}`;
  const attrs = Object.entries(attributes ?? []);
  if (attrs.length > 0) {
    for (const [key, value] of attrs) {
      builder += ` ${key}="${value}"`;
    }
  }
  if (children && children.length > 0) {
    builder += ">";
    for (const node of children) {
      builder += xml(node);
    }
    builder += `</${name}>`;
  } else {
    builder += " />";
  }
  return builder;
}
function set(obj, prop, value) {
  const key = snakeify2(prop);
  const getter2 = `get_${key}`;
  const setter2 = `set_${key}`;
  let current;
  if (getter2 in obj && typeof obj[getter2] === "function") {
    current = obj[getter2]();
  } else {
    current = obj[prop];
  }
  if (current !== value) {
    if (setter2 in obj && typeof obj[setter2] === "function") {
      ;
      obj[setter2](value);
    } else {
      Object.assign(obj, { [prop]: value });
    }
  }
}

// ../../../usr/share/ags/js/node_modules/gnim/dist/gobject.ts
var priv = Symbol("gobject private");
var { defineProperty, fromEntries, entries } = Object;
var { Object: GObj, registerClass } = GObject;
var SignalFlags = GObject.SignalFlags;
var AccumulatorType = GObject.AccumulatorType;
var ParamSpec = GObject.ParamSpec;
var ParamFlags = GObject.ParamFlags;
function assertField(ctx) {
  if (ctx.private) throw Error("private fields are not supported");
  if (ctx.static) throw Error("static fields are not supported");
  if (typeof ctx.name !== "string") {
    throw Error("only strings can be gobject property keys");
  }
  return ctx.name;
}
function getter(typeDeclaration) {
  return function(get, ctx) {
    const fieldName = assertField(ctx);
    const meta = ctx.metadata;
    const props = meta.properties ??= {};
    if (fieldName in props) {
      const { flags, type } = props[fieldName];
      props[fieldName] = { flags: flags | ParamFlags.READABLE, type };
    } else {
      props[fieldName] = { flags: ParamFlags.READABLE, type: typeDeclaration };
    }
    return get;
  };
}
function setter(typeDeclaration) {
  return function(set2, ctx) {
    const fieldName = assertField(ctx);
    const meta = ctx.metadata;
    const props = meta.properties ??= {};
    if (fieldName in props) {
      const { flags, type } = props[fieldName];
      props[fieldName] = { flags: flags | ParamFlags.WRITABLE, type };
    } else {
      props[fieldName] = { flags: ParamFlags.WRITABLE, type: typeDeclaration };
    }
    return set2;
  };
}
function signal(...args) {
  return function(method, ctx) {
    if (ctx.private) throw Error("private fields are not supported");
    if (ctx.static) throw Error("static fields are not supported");
    if (typeof ctx.name !== "string") {
      throw Error("only strings can be gobject signals");
    }
    const signalName2 = kebabify(ctx.name);
    const meta = ctx.metadata;
    const signals = meta.signals ??= {};
    if (Array.isArray(args[0])) {
      const [params, returnType, options] = args;
      signals[signalName2] = {
        method,
        default: options?.default ?? true,
        param_types: params.map((i) => "$gtype" in i ? i.$gtype : i),
        ...returnType && {
          return_type: "$gtype" in returnType ? returnType.$gtype : returnType
        },
        ...options?.flags && {
          flags: options.flags
        },
        ...typeof options?.accumulator === "number" && {
          accumulator: options.accumulator
        }
      };
    } else {
      const params = args;
      signals[signalName2] = {
        method,
        default: true,
        param_types: params.map((i) => "$gtype" in i ? i.$gtype : i)
      };
    }
    return function(...params) {
      return this.emit(signalName2, ...params);
    };
  };
}
var MAXINT = 2 ** 31 - 1;
var MININT = -(2 ** 31);
var MAXUINT = 2 ** 32 - 1;
var MAXFLOAT = 34028235e31;
var MINFLOAT = -34028235e31;
var MININT64 = Number.MIN_SAFE_INTEGER;
var MAXINT64 = Number.MAX_SAFE_INTEGER;
function pspecFromGType(type, name, flags) {
  switch (type) {
    case GObject.TYPE_BOOLEAN:
      return ParamSpec.boolean(name, "", "", flags, false);
    case GObject.TYPE_STRING:
      return ParamSpec.string(name, "", "", flags, "");
    case GObject.TYPE_INT:
      return ParamSpec.int(name, "", "", flags, MININT, MAXINT, 0);
    case GObject.TYPE_UINT:
      return ParamSpec.uint(name, "", "", flags, 0, MAXUINT, 0);
    case GObject.TYPE_INT64:
      return ParamSpec.int64(name, "", "", flags, MININT64, MAXINT64, 0);
    case GObject.TYPE_UINT64:
      return ParamSpec.uint64(name, "", "", flags, 0, Number.MAX_SAFE_INTEGER, 0);
    case GObject.TYPE_FLOAT:
      return ParamSpec.float(name, "", "", flags, MINFLOAT, MAXFLOAT, 0);
    case GObject.TYPE_DOUBLE:
      return ParamSpec.double(name, "", "", flags, Number.MIN_VALUE, Number.MIN_VALUE, 0);
    case GObject.TYPE_JSOBJECT:
      return ParamSpec.jsobject(name, "", "", flags);
    case GObject.TYPE_VARIANT:
      return ParamSpec.object(name, "", "", flags, GLib.Variant);
    case GObject.TYPE_ENUM:
    case GObject.TYPE_INTERFACE:
    case GObject.TYPE_BOXED:
    case GObject.TYPE_POINTER:
    case GObject.TYPE_PARAM:
    case GObject.type_from_name("GType"):
      throw Error(`cannot guess ParamSpec from GType "${type}"`);
    case GObject.TYPE_OBJECT:
    default:
      return ParamSpec.object(name, "", "", flags, type);
  }
}
function pspec(name, flags, declaration) {
  if (declaration instanceof ParamSpec) return declaration;
  if (declaration === Object || declaration === Function || declaration === Array) {
    return ParamSpec.jsobject(name, "", "", flags);
  }
  if (declaration === String) {
    return ParamSpec.string(name, "", "", flags, "");
  }
  if (declaration === Number) {
    return ParamSpec.double(name, "", "", flags, -Number.MAX_VALUE, Number.MAX_VALUE, 0);
  }
  if (declaration === Boolean) {
    return ParamSpec.boolean(name, "", "", flags, false);
  }
  if ("$gtype" in declaration) {
    return pspecFromGType(declaration.$gtype, name, flags);
  }
  if (typeof declaration === "function") {
    return declaration(name, flags);
  }
  throw Error("invalid PropertyTypeDeclaration");
}
function register(options = {}) {
  return function(cls, ctx) {
    const t = options.Template;
    if (typeof t === "string" && !t.startsWith("resource://") && !t.startsWith("file://")) {
      options.Template = new TextEncoder().encode(t);
    }
    const meta = ctx.metadata;
    const props = fromEntries(
      entries(meta.properties ?? {}).map(([fieldName, { flags, type }]) => {
        const key = kebabify(fieldName);
        const spec = pspec(key, flags, type);
        return [key, spec];
      })
    );
    const signals = fromEntries(
      entries(meta.signals ?? {}).map(([signalName2, { default: def, method, ...signal2 }]) => {
        if (def) {
          defineProperty(cls.prototype, `on_${signalName2.replaceAll("-", "_")}`, {
            enumerable: false,
            configurable: false,
            value: method
          });
        }
        return [signalName2, signal2];
      })
    );
    delete meta.properties;
    delete meta.signals;
    registerClass({ ...options, Properties: props, Signals: signals }, cls);
  };
}
Function.$gtype = Object.$gtype;
Array.$gtype = Object.$gtype;
Date.$gtype = Object.$gtype;
Map.$gtype = Object.$gtype;
Set.$gtype = Object.$gtype;

// ../../../usr/share/ags/js/lib/gtk4/app.ts
import GLib4 from "gi://GLib?version=2.0";
import Gtk from "gi://Gtk?version=4.0";
import Gdk from "gi://Gdk?version=4.0";
import Gio3 from "gi://Gio?version=2.0";

// ../../../usr/share/ags/js/node_modules/gnim/dist/dbus.ts
import Gio from "gi://Gio";
import GLib2 from "gi://GLib";
import GObject2 from "gi://GObject";
var DEFAULT_TIMEOUT = 1e4;
var Variant = GLib2.Variant;
var info = Symbol("dbus interface info");
var internals = Symbol("dbus interface internals");
var remoteMethod = Symbol("proxy remoteMethod");
var remoteMethodAsync = Symbol("proxy remoteMethodAsync");
var remotePropertySet = Symbol("proxy remotePropertySet");
var _a;
var Service = class extends GObject2.Object {
  constructor() {
    super();
    this[_a] = {
      priv: {},
      onStop: /* @__PURE__ */ new Set()
    };
    const service = this.constructor;
    if (!service[info]) throw Error("missing interface info");
    this.#info = service[info];
  }
  static {
    GObject2.registerClass(this);
  }
  #info;
  notify(propertyName) {
    const prop = this.#info.lookup_property(propertyName);
    if (prop && this[internals].dbusObject) {
      this[internals].dbusObject.emit_property_changed(
        propertyName,
        new GLib2.Variant(prop.signature, this[propertyName])
      );
    }
    super.notify(prop ? kebabify(propertyName) : propertyName);
  }
  emit(name, ...params) {
    const signal2 = this.#info.lookup_signal(name);
    if (signal2 && this[internals].dbusObject) {
      const signature = `(${signal2.args.map((a) => a.signature).join("")})`;
      this[internals].dbusObject.emit_signal(name, new GLib2.Variant(signature, params));
    }
    return super.emit(signal2 ? kebabify(name) : name, ...params);
  }
  // server
  #handlePropertyGet(_, propertyName) {
    const prop = this.#info.lookup_property(propertyName);
    if (!prop) {
      throw Error(`${this.constructor.name} has no exported property: "${propertyName}"`);
    }
    const value = this[propertyName];
    if (typeof value !== "undefined") {
      return new GLib2.Variant(prop.signature, value);
    } else {
      return null;
    }
  }
  // server
  #handlePropertySet(_, propertyName, value) {
    const newValue = value.deepUnpack();
    const prop = this.#info.lookup_property(propertyName);
    if (!prop) {
      throw Error(`${this.constructor.name} has no property: "${propertyName}"`);
    }
    if (this[propertyName] !== newValue) {
      this[propertyName] = value.deepUnpack();
    }
  }
  // server
  #returnError(error, invocation) {
    console.error(error);
    if (error instanceof GLib2.Error) {
      return invocation.return_gerror(error);
    }
    if (error instanceof Error) {
      return invocation.return_dbus_error(
        error.name.includes(".") ? error.name : `gjs.JSError.${error.name}`,
        error.message
      );
    }
    invocation.return_dbus_error("gjs.DBusService.UnknownError", `${error}`);
  }
  // server
  #returnValue(value, methodName, invocation) {
    if (value === null || value === void 0) {
      return invocation.return_value(new GLib2.Variant("()", []));
    }
    const args = this.#info.lookup_method(methodName)?.out_args ?? [];
    const signature = `(${args.map((arg) => arg.signature).join("")})`;
    if (!Array.isArray(value)) throw Error("value has to be a tuple");
    invocation.return_value(new GLib2.Variant(signature, value));
  }
  // server
  #handleMethodCall(_, methodName, parameters, invocation) {
    try {
      const value = this[methodName](
        ...parameters.deepUnpack()
      );
      if (value instanceof GLib2.Variant) {
        invocation.return_value(value);
      } else if (value instanceof Promise) {
        value.then((value2) => this.#returnValue(value2, methodName, invocation)).catch((error) => this.#returnError(error, invocation));
      } else {
        this.#returnValue(value, methodName, invocation);
      }
    } catch (error) {
      this.#returnError(error, invocation);
    }
  }
  // server
  async serve({
    busType = Gio.BusType.SESSION,
    name = this.#info.name,
    objectPath = "/" + this.#info.name.split(".").join("/"),
    flags = Gio.BusNameOwnerFlags.NONE,
    timeout: timeout2 = DEFAULT_TIMEOUT
  } = {}) {
    const impl = new Gio.DBusExportedObject(
      // @ts-expect-error missing constructor type
      { g_interface_info: this.#info }
    );
    impl.connect("handle-method-call", this.#handleMethodCall.bind(this));
    impl.connect("handle-property-get", this.#handlePropertyGet.bind(this));
    impl.connect("handle-property-set", this.#handlePropertySet.bind(this));
    this.#info.cache_build();
    return new Promise((resolve, reject) => {
      let source = timeout2 > 0 ? setTimeout(() => {
        reject(Error(`serve timed out`));
        source = null;
      }, timeout2) : null;
      const clear = () => {
        if (source) {
          clearTimeout(source);
          source = null;
        }
      };
      const busId = Gio.bus_own_name(
        busType,
        name,
        flags,
        (conn) => {
          try {
            impl.export(conn, objectPath);
            this[internals].dbusObject = impl;
            this[internals].onStop.add(() => {
              Gio.bus_unown_name(busId);
              impl.unexport();
              this.#info.cache_release();
              delete this[internals].dbusObject;
            });
            resolve(this);
          } catch (error) {
            reject(error);
          }
        },
        clear,
        clear
      );
    });
  }
  // proxy
  #handlePropertiesChanged(_, changed, invalidated) {
    const set2 = /* @__PURE__ */ new Set([...Object.keys(changed.deepUnpack()), ...invalidated]);
    for (const prop of set2.values()) {
      this.notify(prop);
    }
  }
  // proxy
  #handleSignal(_, _sender, signal2, parameters) {
    this.emit(kebabify(signal2), ...parameters.deepUnpack());
  }
  // proxy
  #remoteMethodParams(methodName, args) {
    const { proxy } = this[internals];
    if (!proxy) throw Error("invalid remoteMethod invocation: not a proxy");
    const method = this.#info.lookup_method(methodName);
    if (!method) throw Error("method not found");
    const signature = `(${method.in_args.map((a) => a.signature).join("")})`;
    return [
      methodName,
      new GLib2.Variant(signature, args),
      Gio.DBusCallFlags.NONE,
      DEFAULT_TIMEOUT,
      null
    ];
  }
  // proxy
  [(info, _a = internals, remoteMethod)](methodName, args) {
    const params = this.#remoteMethodParams(methodName, args);
    return this[internals].proxy.call_sync(...params);
  }
  // proxy
  [remoteMethodAsync](methodName, args) {
    return new Promise((resolve, reject) => {
      try {
        const params = this.#remoteMethodParams(methodName, args);
        this[internals].proxy.call(...params, (_, res) => {
          try {
            resolve(this[internals].proxy.call_finish(res));
          } catch (error) {
            reject(error);
          }
        });
      } catch (error) {
        reject(error);
      }
    });
  }
  // proxy
  [remotePropertySet](name, value) {
    const proxy = this[internals].proxy;
    const prop = this.#info.lookup_property(name);
    const variant = new GLib2.Variant(prop.signature, value);
    proxy.set_cached_property(name, variant);
    proxy.call(
      "org.freedesktop.DBus.Properties.Set",
      new GLib2.Variant("(ssv)", [proxy.gInterfaceName, name, variant]),
      Gio.DBusCallFlags.NONE,
      -1,
      null,
      (_, res) => {
        try {
          proxy.call_finish(res);
        } catch (e) {
          console.error(e);
        }
      }
    );
  }
  // proxy
  async proxy({
    bus = Gio.DBus.session,
    name = this.#info.name,
    objectPath = "/" + this.#info.name.split(".").join("/"),
    flags = Gio.DBusProxyFlags.NONE,
    timeout: timeout2 = DEFAULT_TIMEOUT
  } = {}) {
    const proxy = new Gio.DBusProxy({
      gConnection: bus,
      gInterfaceName: this.#info.name,
      gInterfaceInfo: this.#info,
      gName: name,
      gFlags: flags,
      gObjectPath: objectPath
    });
    return new Promise((resolve, reject) => {
      const cancallable = new Gio.Cancellable();
      let source = timeout2 > 0 ? setTimeout(() => {
        reject(Error(`proxy timed out`));
        source = null;
        cancallable.cancel();
      }, timeout2) : null;
      proxy.init_async(GLib2.PRIORITY_DEFAULT, cancallable, (_, res) => {
        try {
          if (source) {
            clearTimeout(source);
            source = null;
          }
          proxy.init_finish(res);
          this[internals].proxy = proxy;
          const ids = [
            proxy.connect("g-signal", this.#handleSignal.bind(this)),
            proxy.connect(
              "g-properties-changed",
              this.#handlePropertiesChanged.bind(this)
            )
          ];
          this[internals].onStop.add(() => {
            ids.forEach((id) => proxy.disconnect(id));
            delete this[internals].proxy;
          });
          resolve(this);
        } catch (error) {
          reject(error);
        }
      });
    });
  }
  stop() {
    const { onStop } = this[internals];
    for (const cb of onStop.values()) {
      onStop.delete(cb);
      cb();
    }
  }
};
function iface(name, options) {
  return function(cls, ctx) {
    const meta = ctx.metadata;
    if (!meta) throw Error(`${cls.name} is not an interface`);
    const { dbusMethods = {}, dbusSignals = {}, dbusProperties = {} } = meta;
    const infoXml = xml({
      name: "node",
      children: [
        {
          name: "interface",
          attributes: { name },
          children: [
            ...Object.entries(dbusMethods).map(([name2, args]) => ({
              name: "method",
              attributes: { name: name2 },
              children: args.map((arg) => ({ name: "arg", attributes: arg }))
            })),
            ...Object.entries(dbusSignals).map(([name2, args]) => ({
              name: "signal",
              attributes: { name: name2 },
              children: args.map((arg) => ({ name: "arg", attributes: arg }))
            })),
            ...Object.values(dbusProperties).map(({ name: name2, type, read, write }) => ({
              name: "property",
              attributes: {
                ...name2 && { name: name2 },
                type,
                access: (read ? "read" : "") + (write ? "write" : "")
              }
            }))
          ]
        }
      ]
    });
    Object.assign(cls, { [info]: Gio.DBusInterfaceInfo.new_for_xml(infoXml) });
    register(options)(cls, ctx);
  };
}
function installMethod(args, method, ctx) {
  const name = ctx.name;
  const meta = ctx.metadata;
  const methods = meta.dbusMethods ??= {};
  if (typeof name !== "string") {
    throw Error("only string named methods are allowed");
  }
  const [inArgs, outArgs = []] = Array.isArray(args[0]) ? args : [args];
  methods[name] = [
    ...inArgs.map((arg) => ({
      direction: "in",
      ...typeof arg === "string" ? { type: arg } : arg
    })),
    ...outArgs.map((arg) => ({
      direction: "out",
      ...typeof arg === "string" ? { type: arg } : arg
    }))
  ];
  return name;
}
function methodAsync(...args) {
  return function(method, ctx) {
    const name = installMethod(args, method, ctx);
    return async function(...args2) {
      if (this[internals].proxy) {
        const value = await this[remoteMethodAsync](name, args2);
        return value.deepUnpack();
      } else {
        return method.apply(this, args2);
      }
    };
  };
}

// ../../../usr/share/ags/js/lib/app/dbus.ts
var _Request_dec, _Quit_dec, _ToggleWindow_dec, _Inspector_dec, _a2, _AppDBus_decorators, _init;
_AppDBus_decorators = [iface("io.Astal.Application")];
var _AppDBus = class _AppDBus extends (_a2 = Service, _Inspector_dec = [methodAsync()], _ToggleWindow_dec = [methodAsync("s")], _Quit_dec = [methodAsync()], _Request_dec = [methodAsync(["as"], ["s"])], _a2) {
  constructor(impl) {
    super();
    __runInitializers(_init, 5, this);
    this.impl = void 0;
    this.impl = impl;
  }
  async Inspector() {
    return Promise.resolve(this.impl.insector());
  }
  async ToggleWindow(name) {
    return Promise.resolve(this.impl.toggleWindow(name));
  }
  async Quit() {
    return Promise.resolve(this.impl.quit());
  }
  async Request(argv) {
    return this.impl.request(argv).then((res) => [res]);
  }
  static proxy(instanceName) {
    const app2 = new _AppDBus({
      insector() {
      },
      toggleWindow() {
      },
      quit() {
      },
      request: () => Promise.reject()
    });
    return app2.proxy({
      name: "io.Astal." + instanceName
    });
  }
};
_init = __decoratorStart(_a2);
__decorateElement(_init, 1, "Inspector", _Inspector_dec, _AppDBus);
__decorateElement(_init, 1, "ToggleWindow", _ToggleWindow_dec, _AppDBus);
__decorateElement(_init, 1, "Quit", _Quit_dec, _AppDBus);
__decorateElement(_init, 1, "Request", _Request_dec, _AppDBus);
_AppDBus = __decorateElement(_init, 0, "AppDBus", _AppDBus_decorators, _AppDBus);
__runInitializers(_init, 1, _AppDBus);
var AppDBus = _AppDBus;

// ../../../usr/share/ags/js/lib/gtk4/app.ts
import { setConsoleLogDomain } from "console";
import { exit, programArgs } from "system";

// ../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
import GObject5 from "gi://GObject";

// ../../../usr/share/ags/js/node_modules/gnim/dist/jsx/Fragment.ts
import GObject3 from "gi://GObject";
var _a3, _b;
var Fragment = class _Fragment extends GObject3.Object {
  static {
    this[_b] = {
      append: { param_types: [GObject3.TYPE_OBJECT] },
      remove: { param_types: [GObject3.TYPE_OBJECT] }
    };
  }
  static {
    this[_a3] = {
      children: GObject3.ParamSpec.jsobject("children", "", "", GObject3.ParamFlags.READABLE)
    };
  }
  static {
    GObject3.registerClass(this);
  }
  *[(_b = GObject3.signals, _a3 = GObject3.properties, Symbol.iterator)]() {
    yield* this._children;
  }
  append(child) {
    if (child instanceof _Fragment) {
      throw Error(`nesting Fragments are not yet supported`);
    }
    this._children.push(child);
    this.emit("append", child);
    this.notify("children");
  }
  remove(child) {
    const index = this._children.findIndex((i) => i === child);
    this._children.splice(index, 1);
    this.emit("remove", child);
    this.notify("children");
  }
  constructor({ children = [] } = {}) {
    super();
    this._children = Array.isArray(children) ? children : [children];
  }
  connect(signal2, callback) {
    return super.connect(signal2, callback);
  }
};

// ../../../usr/share/ags/js/node_modules/gnim/dist/jsx/state.ts
import GObject4 from "gi://GObject";
import Gio2 from "gi://Gio";
import GLib3 from "gi://GLib";
var empty = Symbol("empty computed value");
var Accessor = class _Accessor extends Function {
  static {
    this.$gtype = GObject4.TYPE_JSOBJECT;
  }
  #get;
  #subscribe;
  constructor(get, subscribe) {
    super("return arguments.callee._call.apply(arguments.callee, arguments)");
    this.#subscribe = subscribe ?? (() => () => void 0);
    this.#get = get;
  }
  /**
   * Subscribe for value changes.
   * @param callback The function to run when the current value changes.
   * @returns Unsubscribe function.
   */
  subscribe(callback) {
    return this.#subscribe(callback);
  }
  /**
   * @returns The current value.
   */
  get() {
    return this.#get();
  }
  /**
   * Create a new `Accessor` that applies a transformation on its value.
   * @param transform The transformation to apply. Should be a pure function.
   */
  as(transform) {
    return new _Accessor(() => transform(this.#get()), this.#subscribe);
  }
  _call(transform) {
    let value = empty;
    let unsub;
    const subscribers = /* @__PURE__ */ new Set();
    const subscribe = (callback) => {
      if (subscribers.size === 0) {
        unsub = this.subscribe(() => {
          const newValue = transform(this.get());
          if (value !== newValue) {
            value = newValue;
            Array.from(subscribers).forEach((cb) => cb());
          }
        });
      }
      subscribers.add(callback);
      return () => {
        subscribers.delete(callback);
        if (subscribers.size === 0) {
          value = empty;
          unsub();
        }
      };
    };
    const get = () => {
      return value !== empty ? value : transform(this.get());
    };
    return new _Accessor(get, subscribe);
  }
  toString() {
    return `Accessor<${this.get()}>`;
  }
  [Symbol.toPrimitive]() {
    console.warn("Accessor implicitly converted to a primitive value.");
    return this.toString();
  }
};
function createState(init) {
  let currentValue = init;
  const subscribers = /* @__PURE__ */ new Set();
  const subscribe = (callback) => {
    subscribers.add(callback);
    return () => subscribers.delete(callback);
  };
  const set2 = (newValue) => {
    const value = typeof newValue === "function" ? newValue(currentValue) : newValue;
    if (currentValue !== value) {
      currentValue = value;
      Array.from(subscribers).forEach((cb) => cb());
    }
  };
  return [new Accessor(() => currentValue, subscribe), set2];
}
function createComputedProducer(fn) {
  let value = empty;
  let prevDeps = /* @__PURE__ */ new Map();
  const subscribers = /* @__PURE__ */ new Set();
  const cache = /* @__PURE__ */ new Map();
  const effect = () => {
    const deps = /* @__PURE__ */ new Set();
    const newValue = fn((v) => {
      deps.add(v);
      return cache.get(v) || v.get();
    });
    const didChange = value !== newValue;
    value = newValue;
    const newDeps = /* @__PURE__ */ new Map();
    for (const [dep, unsub] of prevDeps) {
      if (!deps.has(dep)) {
        unsub();
      } else {
        newDeps.set(dep, unsub);
      }
    }
    for (const dep of deps) {
      if (!newDeps.has(dep)) {
        const dispose = dep.subscribe(() => {
          const value2 = dep.get();
          if (cache.get(dep) !== value2) {
            cache.set(dep, value2);
            effect();
          }
        });
        newDeps.set(dep, dispose);
      }
    }
    prevDeps = newDeps;
    if (didChange) {
      Array.from(subscribers).forEach((cb) => cb());
    }
  };
  const subscribe = (callback) => {
    if (subscribers.size === 0) {
      effect();
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        value = empty;
        for (const [, unsub] of prevDeps) {
          unsub();
        }
      }
    };
  };
  const get = () => {
    return value !== empty ? value : fn((v) => v.get());
  };
  return new Accessor(get, subscribe);
}
function createComputedArgs(deps, transform) {
  let dispose;
  let value = empty;
  const subscribers = /* @__PURE__ */ new Set();
  const cache = new Array(deps.length);
  const compute = () => {
    const args = deps.map((dep, i) => {
      if (!cache[i]) {
        cache[i] = dep.get();
      }
      return cache[i];
    });
    return transform ? transform(...args) : args;
  };
  const subscribe = (callback) => {
    if (subscribers.size === 0) {
      dispose = deps.map(
        (dep, i) => dep.subscribe(() => {
          const newValue = dep.get();
          if (cache[i] !== newValue) {
            cache[i] = dep.get();
            const newValue2 = compute();
            if (value !== newValue2) {
              value = newValue2;
              Array.from(subscribers).forEach((cb) => cb());
            }
          }
        })
      );
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0) {
        value = empty;
        dispose.map((cb) => cb());
        dispose.length = 0;
        cache.length = 0;
      }
    };
  };
  const get = () => {
    return value !== empty ? value : compute();
  };
  return new Accessor(get, subscribe);
}
function createComputed(...args) {
  const [depsOrProducer, transform] = args;
  if (typeof depsOrProducer === "function") {
    return createComputedProducer(depsOrProducer);
  } else {
    return createComputedArgs(depsOrProducer, transform);
  }
}
function createBinding(object, key) {
  const prop = kebabify(key);
  const subscribe = (callback) => {
    const sig = object instanceof Gio2.Settings ? "changed" : "notify";
    const id = object.connect(`${sig}::${prop}`, () => callback());
    return () => object.disconnect(id);
  };
  const get = () => {
    if (object instanceof Gio2.Settings) {
      return object.get_value(key).recursiveUnpack();
    }
    if (object instanceof GObject4.Object) {
      const getter2 = `get_${prop.replaceAll("-", "_")}`;
      if (getter2 in object && typeof object[getter2] === "function") {
        return object[getter2]();
      }
      if (prop in object) return object[prop];
      if (key in object) return object[key];
    }
    throw Error(`cannot get property "${key}" on "${object}"`);
  };
  return new Accessor(get, subscribe);
}

// ../../../usr/share/ags/js/node_modules/gnim/dist/jsx/env.ts
function configue(conf) {
  return Object.assign(env, conf);
}
function missingImpl() {
  throw Error("missing impl");
}
var env = {
  intrinsicElements: {},
  textNode: missingImpl,
  appendChild: missingImpl,
  removeChild: missingImpl,
  setCss: missingImpl,
  setClass: missingImpl,
  initProps: () => void 0,
  defaultCleanup: () => void 0
};

// ../../../usr/share/ags/js/node_modules/gnim/dist/jsx/scope.ts
var Scope = class _Scope {
  constructor(parent) {
    this.contexts = /* @__PURE__ */ new Map();
    this.cleanups = /* @__PURE__ */ new Set();
    this.mounts = /* @__PURE__ */ new Set();
    this.mounted = false;
    this.parent = parent;
  }
  onCleanup(callback) {
    this.cleanups?.add(callback);
  }
  onMount(callback) {
    if (this.parent && !this.parent.mounted) {
      this.parent.onMount(callback);
    } else {
      this.mounts.add(callback);
    }
  }
  run(fn) {
    const prev = _Scope.current;
    _Scope.current = this;
    try {
      return fn();
    } finally {
      this.mounts.forEach((cb) => cb());
      this.mounts.clear();
      this.mounted = true;
      _Scope.current = prev;
    }
  }
  dispose() {
    this.cleanups.forEach((cb) => cb());
    this.cleanups.clear();
    this.contexts.clear();
    delete this.parent;
  }
};
function getScope() {
  const scope = Scope.current;
  if (!scope) {
    throw Error("cannot get scope: out of tracking context");
  }
  return scope;
}
function onCleanup(cleanup) {
  if (!Scope.current) {
    console.error(Error("out of tracking context: will not be able to cleanup"));
  }
  Scope.current?.onCleanup(cleanup);
}
function createRoot(fn) {
  const scope = new Scope(null);
  return scope.run(() => fn(() => scope.dispose()));
}

// ../../../usr/share/ags/js/node_modules/gnim/dist/jsx/jsx.ts
var gtkType = Symbol("gtk builder type");
var appendChild = Symbol("JSX add child method");
var removeChild = Symbol("JSX add remove method");
function getType(object) {
  return gtkType in object ? object[gtkType] : null;
}
function isGObjectCtor(ctor) {
  return ctor.prototype instanceof GObject5.Object;
}
function isFunctionCtor(ctor) {
  return typeof ctor === "function" && !isGObjectCtor(ctor);
}
function signalName(key) {
  const [sig, detail] = kebabify(key.slice(2)).split(":");
  if (sig.startsWith("notify-")) {
    return `notify::${sig.slice(7)}`;
  }
  return detail ? `${sig}::${detail}` : sig;
}
function remove(parent, child) {
  if (parent instanceof Fragment) {
    parent.remove(child);
    return;
  }
  if (removeChild in parent && typeof parent[removeChild] === "function") {
    parent[removeChild](child);
    return;
  }
  env.removeChild(parent, child);
}
function append(parent, child) {
  if (parent instanceof Fragment) {
    parent.append(child);
    return;
  }
  if (child instanceof Fragment) {
    for (const ch of child) {
      append(parent, ch);
    }
    const appendHandler = child.connect("append", (_, ch) => {
      if (!(ch instanceof GObject5.Object)) {
        return console.error(TypeError(`cannot add ${ch} to ${parent}`));
      }
      append(parent, ch);
    });
    const removeHandler = child.connect("remove", (_, ch) => {
      if (!(ch instanceof GObject5.Object)) {
        return console.error(TypeError(`cannot remove ${ch} from ${parent}`));
      }
      remove(parent, ch);
    });
    onCleanup(() => {
      child.disconnect(appendHandler);
      child.disconnect(removeHandler);
    });
    return;
  }
  if (appendChild in parent && typeof parent[appendChild] === "function") {
    parent[appendChild](child, getType(child));
    return;
  }
  env.appendChild(parent, child);
}
function setType(object, type) {
  if (gtkType in object && object[gtkType] !== "") {
    console.warn(`type overriden from ${object[gtkType]} to ${type} on ${object}`);
  }
  Object.assign(object, { [gtkType]: type });
}
function jsx(ctor, inprops, key) {
  const { $, $type, $constructor, children, ...rest } = inprops;
  const props = rest;
  if (key) Object.assign(props, { key });
  const deferProps = env.initProps(ctor, props) ?? [];
  const deferredProps = {};
  for (const [key2, value] of Object.entries(props)) {
    if (value === void 0) {
      delete props[key2];
    }
    if (deferProps.includes(key2)) {
      deferredProps[key2] = props[key2];
      delete props[key2];
    }
  }
  if (typeof ctor === "string") {
    if (ctor in env.intrinsicElements) {
      ctor = env.intrinsicElements[ctor];
    } else {
      throw Error(`unknown intrinsic element "${ctor}"`);
    }
  }
  if (isFunctionCtor(ctor)) {
    const object2 = ctor({ children, ...props });
    if ($type) setType(object2, $type);
    $?.(object2);
    return object2;
  }
  const { css, class: className } = props;
  delete props.css;
  delete props.class;
  const signals = [];
  const bindings = [];
  for (const [key2, value] of Object.entries(props)) {
    if (key2.startsWith("on")) {
      signals.push([key2, value]);
      delete props[key2];
    }
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
      props[key2] = value.get();
    }
  }
  const object = $constructor ? $constructor(props) : new ctor(props);
  if ($constructor) Object.assign(object, props);
  if ($type) setType(object, $type);
  if (css) env.setCss(object, css);
  if (className) env.setClass(object, className);
  for (let child of Array.isArray(children) ? children : [children]) {
    if (child === true) {
      console.warn(Error("Trying to add boolean value of `true` as a child."));
      continue;
    }
    if (Array.isArray(child)) {
      for (const ch of child) {
        append(object, ch);
      }
    } else if (child) {
      if (!(child instanceof GObject5.Object)) {
        child = env.textNode(child);
      }
      append(object, child);
    }
  }
  const disposeHandlers = signals.map(([sig, handler]) => {
    const id = object.connect(signalName(sig), handler);
    return () => object.disconnect(id);
  });
  for (const [key2, value] of Object.entries(deferredProps)) {
    if (value instanceof Accessor) {
      bindings.push([key2, value]);
    } else {
      Object.assign(object, { [key2]: value });
    }
  }
  const disposeBindings = bindings.map(([prop, binding]) => {
    const dispose = binding.subscribe(() => {
      set(object, prop, binding.get());
    });
    set(object, prop, binding.get());
    return dispose;
  });
  if (disposeBindings.length > 0 || disposeHandlers.length > 0) {
    onCleanup(() => {
      disposeHandlers.forEach((cb) => cb());
      disposeBindings.forEach((cb) => cb());
    });
  }
  $?.(object);
  return object;
}
var jsxs = jsx;

// ../../../usr/share/ags/js/node_modules/gnim/dist/jsx/For.ts
function For({
  each,
  children: mkChild,
  cleanup,
  id = (item) => item
}) {
  const currentScope = getScope();
  const map = /* @__PURE__ */ new Map();
  const fragment = new Fragment();
  function remove2({ item, child, index: [index], scope }) {
    scope.dispose();
    if (typeof cleanup === "function") {
      cleanup(child, item, index.get());
    } else if (cleanup !== null) {
      env.defaultCleanup(child);
    }
  }
  function callback(itareable) {
    const items = [...itareable];
    const ids = items.map(id);
    const idSet = new Set(ids);
    for (const [key, value] of map.entries()) {
      fragment.remove(value.child);
      if (!idSet.has(key)) {
        remove2(value);
        map.delete(key);
      }
    }
    items.map((item, i) => {
      const key = ids[i];
      if (map.has(key)) {
        const {
          index: [, setIndex],
          child
        } = map.get(key);
        setIndex(i);
        if ([...fragment].some((ch) => ch === child)) {
          console.warn(`duplicate keys found: ${key}`);
        } else {
          fragment.append(child);
        }
      } else {
        const [index, setIndex] = createState(i);
        const scope = new Scope(currentScope);
        const child = scope.run(() => mkChild(item, index));
        map.set(key, { item, child, index: [index, setIndex], scope });
        fragment.append(child);
      }
    });
  }
  const dispose = each.subscribe(() => {
    callback(each.get());
  });
  callback(each.get());
  onCleanup(() => {
    dispose();
    for (const value of map.values()) {
      remove2(value);
    }
    map.clear();
  });
  return fragment;
}

// ../../../usr/share/ags/js/node_modules/gnim/dist/jsx/This.ts
import GObject6 from "gi://GObject";

// ../../../usr/share/ags/js/lib/gtk4/app.ts
Gtk.init();
GLib4.unsetenv("LD_PRELOAD");
await import("gi://Adw?version=1").then(({ default: Adw2 }) => Adw2.init()).catch(() => void 0);
var _request_dec, _cursorTheme_dec, _cursorTheme_dec2, _iconTheme_dec, _iconTheme_dec2, _gtkTheme_dec, _gtkTheme_dec2, _windows_dec, _monitors_dec, _windowToggled_dec, _a4, _App_decorators, _instanceName, _main, _requestHandlers, _dbusService, _cssProviders, _App_instances, settings_get, display_get, _init2;
_App_decorators = [register()];
var App = class extends (_a4 = Gtk.Application, _windowToggled_dec = [signal(Gtk.Window)], _monitors_dec = [getter(Array)], _windows_dec = [getter(Array)], _gtkTheme_dec2 = [setter(String)], _gtkTheme_dec = [getter(String)], _iconTheme_dec2 = [setter(String)], _iconTheme_dec = [getter(String)], _cursorTheme_dec2 = [setter(String)], _cursorTheme_dec = [getter(String)], _request_dec = [signal(Array, Function)], _a4) {
  constructor() {
    super({ flags: Gio3.ApplicationFlags.HANDLES_COMMAND_LINE });
    __runInitializers(_init2, 5, this);
    __privateAdd(this, _App_instances);
    __privateAdd(this, _instanceName, "ags");
    __privateAdd(this, _main);
    __privateAdd(this, _requestHandlers, 0);
    __privateAdd(this, _dbusService);
    __privateAdd(this, _cssProviders, new Array());
    __privateSet(this, _dbusService, new AppDBus({
      toggleWindow: this.toggle_window.bind(this),
      quit: this.quit.bind(this),
      request: (argv) => new Promise((resolve) => this.request(argv, resolve)),
      insector: () => {
        Gtk.Window.set_interactive_debugging(true);
      }
    }));
    __privateGet(this, _App_instances, display_get).get_monitors().connect("items-changed", () => {
      this.notify("monitors");
    });
    this.connect("window-added", (_, window) => {
      const id1 = window.connect("notify::visible", () => this.windowToggled(window));
      const id2 = this.connect("window-removed", (_2, removed) => {
        if (removed == window) {
          window.disconnect(id1);
          this.disconnect(id2);
        }
      });
    });
    __privateGet(this, _App_instances, settings_get).connect("notify", (_, { name }) => {
      switch (name) {
        case "gtk-theme-name":
          this.notify("gtk-theme");
          break;
        case "gtk-icon-theme-name":
          this.notify("icon-theme");
          break;
        case "gtk-cursor-theme-name":
          this.notify("cursor-theme");
          break;
        default:
          break;
      }
    });
  }
  get instanceName() {
    return __privateGet(this, _instanceName);
  }
  /**
   * Get all monitors from {@link Gdk.Display}.
   */
  get_monitors() {
    const mons = __privateGet(this, _App_instances, display_get).get_monitors();
    const list = new Array();
    let monitor = null;
    let i = 0;
    while ((monitor = mons.get_item(i++)) !== null) {
      list.push(monitor);
    }
    return list;
  }
  windowToggled(window) {
  }
  get monitors() {
    return this.get_monitors();
  }
  get windows() {
    return this.get_windows();
  }
  set gtkTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkThemeName = name;
  }
  get gtkTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkThemeName;
  }
  set iconTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkIconThemeName = name;
  }
  get iconTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkIconThemeName;
  }
  set cursorTheme(name) {
    __privateGet(this, _App_instances, settings_get).gtkCursorThemeName = name;
  }
  get cursorTheme() {
    return __privateGet(this, _App_instances, settings_get).gtkCursorThemeName;
  }
  /**
   * Get a window by its {@link Gtk.Widget.prototype.name} that has been added to this app
   * using {@link Gtk.Application.prototype.add_window}.
   */
  get_window(name) {
    return this.windows.find((w) => w.name === name);
  }
  /**
   * Toggle the visibility of a window by its {@link Gtk.Widget.prototype.name}
   * that has been added to this app using {@link Gtk.Application.prototype.add_window}.
   */
  toggle_window(name) {
    const win = this.get_window(name);
    if (!win) throw Error(`no window registered with name "${name}"`);
    win.visible = !win.visible;
  }
  /**
   * Reset previously set css providers with {@link App.prototype.apply_css}.
   */
  reset_css() {
    for (const provider of __privateGet(this, _cssProviders)) {
      Gtk.StyleContext.remove_provider_for_display(__privateGet(this, _App_instances, display_get), provider);
    }
  }
  /**
   * Add a new {@link Gtk.CssProvider}.
   * @param style Css string or a path to a css file.
   */
  apply_css(style, reset = false) {
    const provider = new Gtk.CssProvider();
    provider.connect("parsing-error", (_, section, error) => {
      const name = section.get_file()?.get_basename() ?? "";
      const line = section.get_start_location().lines + 1;
      const chars = section.get_start_location().line_chars + 1;
      console.error(`CSS Error ${name}:${line}:${chars} ${error.message}`);
    });
    if (reset) this.reset_css();
    if (GLib4.file_test(style, GLib4.FileTest.EXISTS)) {
      provider.load_from_path(style);
    } else if (style.startsWith("resource://")) {
      provider.load_from_resource(style.replace("resource://", ""));
    } else {
      provider.load_from_string(style);
    }
    Gtk.StyleContext.add_provider_for_display(
      __privateGet(this, _App_instances, display_get),
      provider,
      Gtk.STYLE_PROVIDER_PRIORITY_USER
    );
    __privateGet(this, _cssProviders).push(provider);
  }
  /**
   * Shortcut for {@link Gtk.IconTheme.prototype.add_search_path}.
   */
  add_icons(path) {
    Gtk.IconTheme.get_for_display(__privateGet(this, _App_instances, display_get)).add_search_path(path);
  }
  /**
   * Quit and exit the application.
   */
  quit(code = 0) {
    __privateGet(this, _dbusService).stop();
    super.quit();
    exit(code);
  }
  request(args, response) {
    if (__privateGet(this, _requestHandlers) === 0) {
      response(`instance "${this.instanceName}" has no request handler implemented`);
    }
  }
  vfunc_command_line(cmd) {
    if (cmd.isRemote) {
      this.request(cmd.get_arguments(), (str) => {
        cmd.print_literal(str + "\n");
        cmd.done();
      });
    } else {
      this.hold();
      __privateGet(this, _dbusService).serve({
        name: this.applicationId
      });
      createRoot((dispose) => {
        var _a7;
        this.connect("shutdown", dispose);
        (_a7 = __privateGet(this, _main)) == null ? void 0 : _a7.call(this, ...programArgs);
      });
    }
    return 0;
  }
  start(config) {
    const { main, requestHandler, instanceName, css, icons: icons3, ...cfg } = config;
    __privateSet(this, _main, main);
    Object.assign(this, cfg);
    if (requestHandler) {
      this.connect("request", (_, args, response) => requestHandler(args, response));
    }
    if (instanceName) __privateSet(this, _instanceName, instanceName);
    if (css) this.apply_css(css, false);
    if (icons3) app.add_icons(icons3);
    this.applicationId = "io.Astal." + this.instanceName;
    setConsoleLogDomain(this.instanceName);
    this.runAsync(programArgs);
  }
  connect(signal2, callback) {
    if (signal2 === "request") __privateSet(this, _requestHandlers, __privateGet(this, _requestHandlers) + 1);
    return super.connect(signal2, callback);
  }
};
_init2 = __decoratorStart(_a4);
_instanceName = new WeakMap();
_main = new WeakMap();
_requestHandlers = new WeakMap();
_dbusService = new WeakMap();
_cssProviders = new WeakMap();
_App_instances = new WeakSet();
settings_get = function() {
  const settings = Gtk.Settings.get_default();
  if (!settings) throw Error("could not get settings");
  return settings;
};
display_get = function() {
  const display = Gdk.Display.get_default();
  if (!display) throw Error("could not get display");
  return display;
};
__decorateElement(_init2, 1, "windowToggled", _windowToggled_dec, App);
__decorateElement(_init2, 2, "monitors", _monitors_dec, App);
__decorateElement(_init2, 2, "windows", _windows_dec, App);
__decorateElement(_init2, 3, "gtkTheme", _gtkTheme_dec2, App);
__decorateElement(_init2, 2, "gtkTheme", _gtkTheme_dec, App);
__decorateElement(_init2, 3, "iconTheme", _iconTheme_dec2, App);
__decorateElement(_init2, 2, "iconTheme", _iconTheme_dec, App);
__decorateElement(_init2, 3, "cursorTheme", _cursorTheme_dec2, App);
__decorateElement(_init2, 2, "cursorTheme", _cursorTheme_dec, App);
__decorateElement(_init2, 1, "request", _request_dec, App);
App = __decorateElement(_init2, 0, "App", _App_decorators, App);
__runInitializers(_init2, 1, App);
var app = new App();
var app_default = app;

// sass:/home/dm1nh/.dots/config/ags/styles/styles.scss
var styles_default = '/* Trop colorscheme for AGS */\n/* ~/.config/ags/styles/colors.scss */\n* {\n  font-family: "Jet Nerd Font";\n  font-size: 18px;\n  font-weight: 500;\n}\n\nscale {\n  margin: 0;\n  padding: 0;\n}\nscale trough highlight {\n  min-height: 6px;\n}\nscale trough slider {\n  box-shadow: none;\n  outline: unset;\n  background-color: transparent;\n}\n\nmenubutton {\n  padding: 0;\n}\nmenubutton button {\n  padding: unset;\n  margin: unset;\n}\nmenubutton button:hover {\n  background-color: rgba(211, 198, 170, 0.15);\n}\n\nbutton {\n  padding: unset;\n  margin: unset;\n  background-color: transparent;\n  transition: transform 0.2s ease-in-out;\n}\nbutton:active > * {\n  transform: scale(0.85);\n}\nbutton:hover {\n  background-color: rgba(211, 198, 170, 0.15);\n}\n\nwindow.Bar {\n  background: transparent;\n}\nwindow.Bar .bar-container {\n  padding: 0rem 0.4rem;\n  min-height: 1.75rem;\n  background-color: #171b1f;\n  color: #d3c6aa;\n}\n\n.module-container .icon {\n  padding: 0 0.3em;\n  font-family: "Material Symbols Rounded";\n  font-size: 18px;\n  border-top-left-radius: 0.25em;\n  border-bottom-left-radius: 0.25em;\n  color: #23292e;\n  background-color: #b2c98f;\n}\n.module-container .label {\n  padding: 0 0.3em;\n  color: #d3c6aa;\n  background-color: #2a3137;\n  border-top-right-radius: 0.25em;\n  border-bottom-right-radius: 0.25em;\n}\n\n.workspaces .workspace-button {\n  min-height: 0.7rem;\n  min-width: 0.7rem;\n  border-radius: 100px;\n  background-color: #494f48;\n}\n.workspaces .workspace-button.active {\n  min-width: 1.4rem;\n  background-color: #b2c98f;\n}\n.workspaces .workspace-button.occupied {\n  background-color: #a99e88;\n}\n.workspaces .workspace-button.occupied.active {\n  background-color: #b2c98f;\n}\n\n.taskbar .client.active .client-icon {\n  background-color: #b2c98f;\n  color: #23292e;\n}\n.taskbar .client.active .client-title {\n  background-color: #2a3137;\n  color: #b2c98f;\n}\n.taskbar .client-icon {\n  padding: 0rem 0.3rem;\n  font-family: "Material Symbols Rounded";\n  border-top-left-radius: 0.25em;\n  border-bottom-left-radius: 0.25em;\n  background-color: #444a4f;\n  color: #d3c6aa;\n}\n.taskbar .client-title {\n  min-width: 8em;\n  padding: 0rem 0.3rem;\n  border-top-right-radius: 0.25em;\n  border-bottom-right-radius: 0.25em;\n  background-color: #1e2428;\n  color: #555c54;\n}\n\n.exit-button .icon {\n  background-color: #e67e80;\n}\n.exit-button .label {\n  color: #e67e80;\n}\n\n.clock .icon {\n  background-color: #dbbc7f;\n}\n.clock .label {\n  color: #dbbc7f;\n}\n\n.network .icon {\n  background-color: #ad85d7;\n}\n.network .label {\n  color: #ad85d7;\n}\n\n.netstats .icon {\n  background-color: #e69875;\n}\n.netstats .label {\n  color: #e69875;\n}\n\n.volume .icon {\n  background-color: #83c092;\n}\n.volume .label {\n  color: #83c092;\n}\n\n.systray .button-icon {\n  border-radius: 0.25em;\n  padding: 0rem 0.4rem;\n  min-width: 18px;\n  min-height: 18px;\n}\n.systray .button-icon:hover {\n  background-color: #b2c98f;\n  color: #23292e;\n}\n\nwindow.notification-popups {\n  all: unset;\n}\n\n.notification {\n  border-radius: 0.25em;\n  background-color: #1e2428;\n  margin: 4px;\n  box-shadow: 2px 3px 8px 0 alpha(black,0.4);\n  border: 1pt solid alpha(#d3c6aa,0.03);\n}\n.notification.critical {\n  border: 1pt solid alpha(#e67e80,0.4);\n}\n.notification.critical .header .app-name {\n  color: alpha(#e67e80,0.8);\n}\n.notification.critical .header .app-icon {\n  color: alpha(#e67e80,0.6);\n}\n.notification .header {\n  padding: 0.5rem;\n  color: alpha(#d3c6aa,0.5);\n}\n.notification .header .app-icon {\n  margin: 0 0.4rem;\n}\n.notification .header .app-name {\n  margin-right: 0.3rem;\n  font-weight: bold;\n}\n.notification .header .app-name:first-child {\n  margin-left: 0.4rem;\n}\n.notification .header .time {\n  margin: 0 0.4rem;\n}\n.notification .header button {\n  border-radius: 0.25em;\n  padding: 0.2rem;\n  min-width: 0;\n  min-height: 0;\n  background-color: #e67e80;\n  color: #1e2428;\n}\n.notification separator {\n  margin: 0 0.4rem;\n  background-color: alpha(#d3c6aa,0.1);\n}\n.notification .content {\n  margin: 1rem;\n  margin-top: 0.5rem;\n}\n.notification .content .summary {\n  font-size: 1em;\n  color: #d3c6aa;\n}\n.notification .content .body {\n  color: alpha(#d3c6aa,0.6);\n  font-size: 1em;\n}\n.notification .content .image {\n  border: 1px solid alpha(#d3c6aa,0.02);\n  margin-right: 0.5rem;\n  border-radius: 0.25em;\n  min-width: 100px;\n  min-height: 100px;\n  background-size: cover;\n  background-position: center;\n}\n.notification .actions {\n  margin: 1rem;\n  margin-top: 0;\n}\n.notification .actions button {\n  margin: 0 0.3rem;\n  padding: 0.3rem 0;\n  font-size: 0.8rem;\n  border-radius: 0.25em;\n  background-color: alpha(#d3c6aa,0.1);\n}\n.notification .actions button:first-child {\n  margin-left: 0;\n}\n.notification .actions button:last-child {\n  margin-right: 0;\n}';

// ../../../usr/share/ags/js/lib/gtk4/index.ts
import Astal from "gi://Astal?version=4.0";
import Gtk2 from "gi://Gtk?version=4.0";
import Gdk2 from "gi://Gdk?version=4.0";

// ../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
import Gtk4 from "gi://Gtk?version=4.0";
import Astal2 from "gi://Astal?version=4.0";

// ../../../usr/share/ags/js/node_modules/gnim/dist/gtk4/jsx-runtime.ts
import Gtk3 from "gi://Gtk?version=4.0";
import Gio4 from "gi://Gio?version=2.0";
var adw = await import("gi://Adw").then((m) => m.default).catch(() => null);
var dummyBuilder = new Gtk3.Builder();
var { intrinsicElements } = configue({
  initProps(ctor) {
    if (ctor === Gtk3.Stack) {
      const keys = [
        "visibleChildName",
        "visible_child_name"
      ];
      return keys;
    }
    if (adw && ctor === adw.ToggleGroup) {
      const keys = [
        "active",
        "activeName",
        "active_name"
      ];
      return keys;
    }
  },
  setCss(object, css) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set css on ${object}`));
    }
    const ctx = object.get_style_context();
    let provider;
    const setter2 = (css2) => {
      if (!css2.includes("{") || !css2.includes("}")) {
        css2 = `* { ${css2} }`;
      }
      if (provider) ctx.remove_provider(provider);
      provider = new Gtk3.CssProvider();
      provider.load_from_string(css2);
      ctx.add_provider(provider, Gtk3.STYLE_PROVIDER_PRIORITY_USER);
    };
    if (css instanceof Accessor) {
      setter2(css.get());
      const dispose = css.subscribe(() => setter2(css.get()));
      onCleanup(dispose);
    } else {
      setter2(css);
    }
  },
  setClass(object, className) {
    if (!(object instanceof Gtk3.Widget)) {
      return console.warn(Error(`cannot set className on ${object}`));
    }
    if (className instanceof Accessor) {
      object.cssClasses = className.get().split(/\s+/);
      const dispose = className.subscribe(
        () => object.cssClasses = className.get().split(/\s+/)
      );
      onCleanup(dispose);
    } else {
      object.set_css_classes(className.split(/\s+/));
    }
  },
  textNode(text) {
    return Gtk3.Label.new(text.toString());
  },
  // `set_child` and especially `remove` might be way too generic and there might
  // be cases where it does not actually do what we want it to do
  //
  // if there is a usecase for either of these two that does something else than
  // we expect it to do here in a JSX context we have to check for known instances
  removeChild(parent, child) {
    if (parent instanceof Gtk3.Widget && child instanceof Gtk3.EventController) {
      return parent.remove_controller(child);
    }
    if ("set_child" in parent && typeof parent.set_child == "function") {
      return parent.set_child(null);
    }
    if ("remove" in parent && typeof parent.remove == "function") {
      return parent.remove(child);
    }
    throw Error(`cannot remove ${child} from ${parent}`);
  },
  appendChild(parent, child) {
    if (child instanceof Gtk3.Adjustment && "set_adjustment" in parent && typeof parent.set_adjustment === "function") {
      return parent.set_adjustment(child);
    }
    if (child instanceof Gtk3.Widget && parent instanceof Gtk3.Stack && child.name !== "" && child.name !== null && getType(child) === "named") {
      return parent.add_named(child, child.name);
    }
    if (child instanceof Gtk3.Popover && parent instanceof Gtk3.MenuButton) {
      return parent.set_popover(child);
    }
    if (child instanceof Gio4.MenuModel && (parent instanceof Gtk3.MenuButton || parent instanceof Gtk3.PopoverMenu)) {
      return parent.set_menu_model(child);
    }
    if (child instanceof Gio4.MenuItem && parent instanceof Gio4.Menu) {
    }
    if (child instanceof Gtk3.Window && parent instanceof Gtk3.Application) {
      return parent.add_window(child);
    }
    if (child instanceof Gtk3.TextBuffer && parent instanceof Gtk3.TextView) {
      return parent.set_buffer(child);
    }
    if (parent instanceof Gtk3.Buildable) {
      return parent.vfunc_add_child(dummyBuilder, child, getType(child));
    }
    throw Error(`cannot add ${child} to ${parent}`);
  }
});

// ../../../usr/share/ags/js/lib/gtk4/jsx-runtime.ts
Object.assign(intrinsicElements, {
  box: Gtk4.Box,
  button: Gtk4.Button,
  centerbox: Gtk4.CenterBox,
  // circularprogress: Astal.CircularProgress,
  drawingarea: Gtk4.DrawingArea,
  entry: Gtk4.Entry,
  image: Gtk4.Image,
  label: Gtk4.Label,
  levelbar: Gtk4.LevelBar,
  menubutton: Gtk4.MenuButton,
  overlay: Gtk4.Overlay,
  popover: Gtk4.Popover,
  revealer: Gtk4.Revealer,
  scrolledwindow: Gtk4.ScrolledWindow,
  slider: Astal2.Slider,
  stack: Gtk4.Stack,
  switch: Gtk4.Switch,
  togglebutton: Gtk4.ToggleButton,
  window: Astal2.Window
});

// config/ags/components/bar/shared/module-container.tsx
function ModuleContainer({
  icon,
  label,
  class: className,
  ...props
}) {
  return /* @__PURE__ */ jsx("button", { class: "module-container " + className, ...props, children: /* @__PURE__ */ jsxs("box", { children: [
    /* @__PURE__ */ jsx("label", { class: "icon", label: icon }),
    /* @__PURE__ */ jsx("label", { class: "label", label })
  ] }) });
}

// config/ags/components/bar/clock/helpers.ts
import GLib6 from "gi://GLib";

// ../../../usr/share/ags/js/lib/process.ts
import Gio5 from "gi://Gio?version=2.0";
import GLib5 from "gi://GLib?version=2.0";
var encoder = new TextEncoder();
var _exit_dec, _stderr_dec, _stdout_dec, _a5, _Process_decorators, _init3, _encoder, _outStream, _errStream, _inStream, _process, _Process_instances, readStream_fn;
_Process_decorators = [register()];
var _Process = class _Process extends (_a5 = GObject.Object, _stdout_dec = [signal(String)], _stderr_dec = [signal(String)], _exit_dec = [signal(Number, Boolean)], _a5) {
  constructor({ argv }) {
    super();
    __runInitializers(_init3, 5, this);
    __privateAdd(this, _Process_instances);
    __privateAdd(this, _encoder, new TextEncoder());
    __privateAdd(this, _outStream);
    __privateAdd(this, _errStream);
    __privateAdd(this, _inStream);
    __privateAdd(this, _process);
    const process = __privateSet(this, _process, Gio5.Subprocess.new(
      argv,
      Gio5.SubprocessFlags.STDIN_PIPE | Gio5.SubprocessFlags.STDOUT_PIPE | Gio5.SubprocessFlags.STDERR_PIPE
    ));
    __privateSet(this, _inStream, Gio5.DataOutputStream.new(process.get_stdin_pipe()));
    __privateSet(this, _outStream, Gio5.DataInputStream.new(process.get_stdout_pipe()));
    __privateSet(this, _errStream, Gio5.DataInputStream.new(process.get_stderr_pipe()));
    __privateMethod(this, _Process_instances, readStream_fn).call(this, __privateGet(this, _outStream));
    __privateMethod(this, _Process_instances, readStream_fn).call(this, __privateGet(this, _errStream));
    process.wait_async(null, (_, res) => {
      try {
        process.wait_finish(res);
      } catch {
      }
      if (process.get_if_exited()) {
        this.exit(process.get_exit_status(), false);
      }
      if (process.get_if_signaled()) {
        this.exit(process.get_term_sig(), true);
      }
    });
  }
  stdout(out) {
  }
  stderr(err) {
  }
  exit(code, signaled) {
  }
  connect(signal2, callback) {
    return super.connect(signal2, callback);
  }
  /**
   * Force quit the subprocess.
   */
  kill() {
    __privateGet(this, _process).force_exit();
  }
  /**
   * Send a signal to the subprocess.
   *
   * @param signal Signal number to be sent
   */
  signal(signal2) {
    __privateGet(this, _process).send_signal(signal2);
  }
  /**
   * Write a line to the subprocess' stdin synchronously.
   * See {@link Gio.DataOutputStream.prototype.write_bytes_async}
   *
   * @param str String to be written to stdin
   */
  write(str) {
    return new Promise((resolve, reject) => {
      __privateGet(this, _inStream).write_bytes_async(
        encoder.encode(str),
        GLib5.PRIORITY_DEFAULT,
        null,
        (_, res) => {
          try {
            resolve(__privateGet(this, _inStream).write_all_finish(res));
          } catch (error) {
            reject(error);
          }
        }
      );
    });
  }
  /**
   * Write a line to the subprocess' stdin asynchronously.
   *
   * @param str String to be written to stdin
   */
  async writeAsync(str) {
    return new Promise((resolve, reject) => {
      __privateGet(this, _inStream).write_all_async(
        __privateGet(this, _encoder).encode(str),
        GLib5.PRIORITY_DEFAULT,
        null,
        (_, res) => {
          try {
            resolve(void __privateGet(this, _inStream).write_all_finish(res));
          } catch (error) {
            reject(error);
          }
        }
      );
    });
  }
  /**
   * Start a new subprocess with the given command.
   * The first element of the vector is executed with the remaining
   * elements as the argument list.
   */
  static subprocessv(cmd) {
    return new _Process({ argv: cmd });
  }
  /**
   * Start a new subprocess with the given command
   * which is parsed using {@link GLib.shell_parse_argv}.
   */
  static subprocess(cmd) {
    const [, argv] = GLib5.shell_parse_argv(cmd);
    return _Process.subprocessv(argv);
  }
  /**
   * Execute a command synchronously.
   * The first element of the vector is executed with the remaining
   * elements as the argument list.
   *
   * @throws stderr
   * @return stdout of the subprocess
   */
  static execv(cmd) {
    const process = Gio5.Subprocess.new(
      cmd,
      Gio5.SubprocessFlags.STDERR_PIPE | Gio5.SubprocessFlags.STDOUT_PIPE
    );
    const [, out, err] = process.communicate_utf8(null, null);
    if (process.get_successful()) {
      return out.trim();
    } else {
      throw new Error(err);
    }
  }
  /**
   * Execute a command synchronously.
   * The command is parsed using {@link GLib.shell_parse_argv}.
   *
   * @throws stderr
   * @return stdout of the subprocess
   */
  static exec(cmd) {
    const [, argv] = GLib5.shell_parse_argv(cmd);
    return _Process.execv(argv);
  }
  /**
   * Execute a command asynchronously.
   * The first element of the vector is executed with the remaining
   * elements as the argument list.
   *
   * @throws stderr
   * @return stdout of the subprocess
   */
  static execAsyncv(cmd) {
    const process = Gio5.Subprocess.new(
      cmd,
      Gio5.SubprocessFlags.STDERR_PIPE | Gio5.SubprocessFlags.STDOUT_PIPE
    );
    return new Promise((resolve, reject) => {
      process.communicate_utf8_async(null, null, (_, res) => {
        try {
          const [, out, err] = process.communicate_utf8_finish(res);
          if (process.get_successful()) {
            return resolve(out.trim());
          } else {
            reject(new Error(err.trim()));
          }
        } catch (error) {
          reject(error);
        }
      });
    });
  }
  /**
   * Execute a command asynchronously.
   * The command is parsed using {@link GLib.shell_parse_argv}.
   *
   * @throws stderr
   * @return stdout of the subprocess
   */
  static execAsync(cmd) {
    const [, argv] = GLib5.shell_parse_argv(cmd);
    return _Process.execAsyncv(argv);
  }
};
_init3 = __decoratorStart(_a5);
_encoder = new WeakMap();
_outStream = new WeakMap();
_errStream = new WeakMap();
_inStream = new WeakMap();
_process = new WeakMap();
_Process_instances = new WeakSet();
readStream_fn = function(stream) {
  stream.read_line_async(GLib5.PRIORITY_DEFAULT, null, (_, res) => {
    try {
      const [output] = stream.read_line_finish_utf8(res);
      if (output !== null) {
        if (stream === __privateGet(this, _errStream)) {
          this.stderr(output.trim());
        } else {
          this.stdout(output.trim());
        }
        __privateMethod(this, _Process_instances, readStream_fn).call(this, stream);
      }
    } catch (error) {
      console.error(error);
    }
  });
};
__decorateElement(_init3, 1, "stdout", _stdout_dec, _Process);
__decorateElement(_init3, 1, "stderr", _stderr_dec, _Process);
__decorateElement(_init3, 1, "exit", _exit_dec, _Process);
_Process = __decorateElement(_init3, 0, "Process", _Process_decorators, _Process);
__runInitializers(_init3, 1, _Process);
var Process = _Process;
function execAsync(cmd) {
  if (Array.isArray(cmd)) {
    return Process.execAsyncv(cmd);
  } else {
    return Process.execAsync(cmd);
  }
}

// ../../../usr/share/ags/js/lib/time.ts
var _cancelled_dec, _now_dec, _a6, _Timer_decorators, _init4;
_Timer_decorators = [register()];
var _Timer = class _Timer extends (_a6 = GObject.Object, _now_dec = [signal()], _cancelled_dec = [signal()], _a6) {
  constructor() {
    super(...arguments);
    __runInitializers(_init4, 5, this);
  }
  now() {
  }
  cancelled() {
  }
  static interval(interval3, callback) {
    const { timer, now } = _Timer.new(callback, () => {
      if (immediate.is_destroyed()) immediate.destroy();
      if (source.is_destroyed()) source.destroy();
    });
    const immediate = setTimeout(now);
    const source = setInterval(now, interval3);
    return timer;
  }
  static timeout(interval3, callback) {
    const { timer, now } = _Timer.new(callback, () => {
      if (source.is_destroyed()) source.destroy();
    });
    const source = setTimeout(now, interval3);
    return timer;
  }
  static idle(callback) {
    const { timer, now } = _Timer.new(callback, () => {
      if (source.is_destroyed()) source.destroy();
    });
    const source = setTimeout(now);
    return timer;
  }
  static new(onNow, onCancelled) {
    const timer = new _Timer();
    const now = timer.connect("now", () => void onNow?.());
    const cancelled = timer.connect("cancelled", () => {
      timer.disconnect(now);
      timer.disconnect(cancelled);
      onCancelled?.();
    });
    return { timer, now: () => timer.now() };
  }
  connect(signal2, callback) {
    return super.connect(signal2, callback);
  }
  cancel() {
    this.cancelled();
  }
};
_init4 = __decoratorStart(_a6);
__decorateElement(_init4, 1, "now", _now_dec, _Timer);
__decorateElement(_init4, 1, "cancelled", _cancelled_dec, _Timer);
_Timer = __decorateElement(_init4, 0, "Timer", _Timer_decorators, _Timer);
__runInitializers(_init4, 1, _Timer);
var Timer = _Timer;
var { interval, timeout, idle } = Timer;
function createPoll(init, ival, execOrFn, transform) {
  let currentValue = init;
  let timer = null;
  const subscribers = /* @__PURE__ */ new Set();
  function set2(value) {
    if (value !== currentValue) {
      currentValue = value;
      Array.from(subscribers).forEach((cb) => cb());
    }
  }
  function compute() {
    if (typeof execOrFn === "function") {
      const value = execOrFn(currentValue);
      if (value instanceof Promise) {
        value.then(set2);
      } else {
        set2(value);
      }
    } else {
      execAsync(execOrFn).then((stdout) => {
        set2(transform ? transform(stdout, currentValue) : stdout);
      });
    }
  }
  function subscribe(callback) {
    if (subscribers.size === 0) {
      setTimeout(compute);
      timer = setInterval(compute, ival);
    }
    subscribers.add(callback);
    return () => {
      subscribers.delete(callback);
      if (subscribers.size === 0 && timer) {
        clearInterval(timer);
        timer = null;
      }
    };
  }
  return new Accessor(() => currentValue, subscribe);
}

// config/ags/components/bar/clock/helpers.ts
function formatDateTime(format = "%a, %b %d - %H:%M") {
  return createPoll("", 6e4, () => {
    return GLib6.DateTime.new_now_local().format(format);
  });
}
var clockLabel = formatDateTime("%H:%M");
var clockTooltip = formatDateTime();

// config/ags/components/bar/clock/index.tsx
function Clock() {
  return /* @__PURE__ */ jsx(
    ModuleContainer,
    {
      class: "clock",
      icon: "\uE8B5",
      label: clockLabel,
      tooltipText: clockTooltip
    }
  );
}

// config/ags/components/bar/workspaces/index.tsx
import AstalHyprland from "gi://AstalHyprland";

// config/ags/utils/index.ts
function range(max) {
  return Array.from({ length: max }, (_, i) => i);
}
async function bash(strings, ...values) {
  const cmd = typeof strings === "string" ? strings : strings.flatMap((str, i) => str + `${values[i] ?? ""}`).join("");
  return execAsync(["bash", "-c", cmd]).catch((err) => {
    console.error(cmd, err);
    return "";
  });
}

// config/ags/components/bar/workspaces/index.tsx
function WsButton({ ws, ...props }) {
  const hyprland = AstalHyprland.get_default();
  const classNames = createComputed(
    [
      createBinding(hyprland, "focusedWorkspace"),
      createBinding(hyprland, "clients")
    ],
    (fws, _) => {
      const classes = ["workspace-button"];
      const active = fws.id == ws.id;
      if (active) classes.push("active");
      const occupied = hyprland.get_workspace(ws.id)?.get_clients().length > 0;
      if (occupied) classes.push("occupied");
      return classes;
    }
  );
  return /* @__PURE__ */ jsx(
    "button",
    {
      cssClasses: classNames,
      valign: Gtk2.Align.CENTER,
      halign: Gtk2.Align.CENTER,
      onClicked: () => ws.focus(),
      ...props
    }
  );
}
function Workspaces() {
  return /* @__PURE__ */ jsx("box", { cssClasses: ["workspaces"], spacing: 7, children: range(6).map((i) => /* @__PURE__ */ jsx(WsButton, { ws: AstalHyprland.Workspace.dummy(i + 1, null) })) });
}

// config/ags/components/bar/volume/helpers/constants.ts
var icons = {
  muted: "\uE04F",
  low: "\uE04D",
  high: "\uE050",
  overamplified: "\uE98E"
};
var thresholds = {
  101: "overamplified",
  51: "high",
  1: "low",
  0: "muted"
};

// config/ags/components/bar/volume/helpers/index.ts
import AstalWp from "gi://AstalWp";
var speaker = AstalWp.get_default()?.audio.default_speaker;
function getVolumeIcon(volume, mute) {
  const icon = mute ? 0 : [101, 51, 1, 0].find((ts) => ts <= volume * 100);
  return icon ? icons[thresholds[icon]] : icons.muted;
}
var volumeIcon = createComputed(
  [createBinding(speaker, "volume"), createBinding(speaker, "mute")],
  (volume, mute) => getVolumeIcon(volume, mute)
);
var volumeValue = createBinding(speaker, "volume").as((value) => {
  return Math.floor(value * 100).toString().padStart(3, "0") + "%";
});

// config/ags/components/bar/volume/index.tsx
import AstalWp2 from "gi://AstalWp";
function Volume() {
  const speaker2 = AstalWp2.get_default()?.audio.default_speaker;
  function on_scroll(_, __, dx) {
    if (dx > 0) {
      speaker2.set_volume(speaker2.volume - 0.01);
    }
    if (dx < 0) {
      speaker2.set_volume(speaker2.volume + 0.01);
    }
  }
  return /* @__PURE__ */ jsx(
    ModuleContainer,
    {
      class: "volume",
      icon: volumeIcon,
      label: volumeValue,
      onClicked: () => bash("pavucontrol"),
      $: (self) => {
        const scroll_event = Gtk2.EventControllerScroll.new(
          Gtk2.EventControllerScrollFlags.VERTICAL
        );
        scroll_event.connect("scroll", on_scroll);
        self.add_controller(scroll_event);
      }
    }
  );
}

// config/ags/components/bar/network/helpers/index.ts
import AstalNetwork from "gi://AstalNetwork";

// config/ags/components/bar/network/helpers/constants.ts
var icons2 = {
  disconnected: "\uE1DA",
  wired: "\uEFE6",
  wifi_0: "\uF0B0",
  wifi_1: "\uEBE4",
  wifi_2: "\uEBD6",
  wifi_3: "\uEBE1",
  wifi_4: "\uE1D8"
};
var thresholds2 = {
  0: "wifi_0",
  20: "wifi_1",
  40: "wifi_2",
  60: "wifi_3",
  80: "wifi_4"
};

// config/ags/components/bar/network/helpers/index.ts
var network = AstalNetwork.get_default();
function getNetworkIcon(primary, wifi) {
  if (primary === AstalNetwork.Primary.WIRED) {
    return icons2.wired;
  }
  if (primary === AstalNetwork.Primary.WIFI) {
    const iconThreshold = [80, 60, 40, 20, 0].find((ts) => ts <= wifi.strength);
    return icons2[thresholds2[iconThreshold]];
  }
  return icons2.disconnected;
}
var networkIcon = createComputed(
  [createBinding(network, "primary"), createBinding(network, "wifi")],
  (primary, wifi) => getNetworkIcon(primary, wifi)
);
var networkLabelAndTooltip = createComputed(
  [
    createBinding(network, "primary"),
    createBinding(network, "state"),
    createBinding(network, "connectivity"),
    ...network.wifi ? [createBinding(network.wifi, "enabled")] : []
  ],
  (primary) => {
    if (primary === AstalNetwork.Primary.WIRED) {
      return {
        label: network.wired.device.interface,
        tooltip: "Connected"
      };
    }
    if (primary === AstalNetwork.Primary.WIFI) {
      return {
        label: network.wifi.active_access_point.ssid,
        tooltip: formatWifiInfo(network.wifi)
      };
    }
    return { label: "Unavailable", tooltip: "No Internet" };
  }
);
var formatFrequency = (frequency) => {
  return `${(frequency / 1e3).toFixed(2)}MHz`;
};
var formatWifiInfo = (wifi) => {
  return `Network: ${wifi.ssid} 
Signal Strength: ${wifi.strength}% 
Frequency: ${formatFrequency(wifi.frequency)}`;
};

// config/ags/components/bar/network/index.tsx
function Network() {
  return /* @__PURE__ */ jsx(
    ModuleContainer,
    {
      class: "network",
      icon: networkIcon,
      label: networkLabelAndTooltip((value) => value.label),
      tooltipText: networkLabelAndTooltip((value) => value.tooltip),
      onClicked: () => bash("nm-connection-editor")
    }
  );
}

// config/ags/components/bar/netstats/helpers/index.ts
var interval2 = 5e3;
var lastTotalDownBytes = 0;
var lastTotalUpBytes = 0;
var networkSpeed = createPoll(
  {
    download: 0,
    upload: 0
  },
  interval2,
  ["cat", "/proc/net/dev"],
  (content, _) => {
    const lines = content.split("\n");
    let totalDownBytes = 0;
    let totalUpBytes = 0;
    for (let i = 0; i < lines.length; ++i) {
      const fields = lines[i].trim().split(/\W+/);
      if (fields.length <= 2) {
        continue;
      }
      const interfce = fields[0];
      const currentInterfaceDownBytes = Number.parseInt(fields[1]);
      const currentInterfaceUpBytes = Number.parseInt(fields[9]);
      if (interfce === "lo" || // Created by python-based bandwidth manager "traffictoll".
      interfce.match(/^ifb[0-9]+/) || // Created by lxd container manager.
      interfce.match(/^lxdbr[0-9]+/) || interfce.match(/^virbr[0-9]+/) || interfce.match(/^br[0-9]+/) || interfce.match(/^vnet[0-9]+/) || interfce.match(/^tun[0-9]+/) || interfce.match(/^tap[0-9]+/) || isNaN(currentInterfaceDownBytes) || isNaN(currentInterfaceUpBytes)) {
        continue;
      }
      totalDownBytes += currentInterfaceDownBytes;
      totalUpBytes += currentInterfaceUpBytes;
    }
    if (lastTotalDownBytes === 0) {
      lastTotalDownBytes = totalDownBytes;
    }
    if (lastTotalUpBytes === 0) {
      lastTotalUpBytes = totalUpBytes;
    }
    const downloadSpeed = (totalDownBytes - lastTotalDownBytes) / interval2;
    const uploadSpeed = (totalUpBytes - lastTotalUpBytes) / interval2;
    lastTotalDownBytes = totalDownBytes;
    lastTotalUpBytes = totalUpBytes;
    return {
      download: downloadSpeed,
      upload: uploadSpeed
    };
  }
);
var helpers_default = networkSpeed;

// config/ags/components/bar/netstats/index.tsx
function Netstats() {
  return /* @__PURE__ */ jsx(
    ModuleContainer,
    {
      class: "netstats",
      icon: "\uE640",
      label: helpers_default((value) => {
        const downloadSpeed = value.download;
        const uploadSpeed = value.upload;
        const higherSpeed = downloadSpeed >= uploadSpeed ? downloadSpeed : uploadSpeed;
        const speed = (higherSpeed / 1e3).toFixed(2);
        const symbol = downloadSpeed >= uploadSpeed ? "\uF0D7" : "\uF0D8";
        return `${speed} MB/s ${symbol}`;
      })
    }
  );
}

// config/ags/components/bar/systray/index.tsx
import AstalTray from "gi://AstalTray";
function Systray() {
  const tray = AstalTray.get_default();
  const items = createBinding(tray, "items");
  return /* @__PURE__ */ jsx("box", { class: "systray", spacing: 2, children: /* @__PURE__ */ jsx(For, { each: items, children: (item) => /* @__PURE__ */ jsxs(
    "menubutton",
    {
      class: "button",
      $: (self) => {
        self.insert_action_group("dbusmenu", item.actionGroup);
      },
      tooltipText: createBinding(item, "tooltipMarkup"),
      children: [
        /* @__PURE__ */ jsx("image", { class: "button-icon", gicon: createBinding(item, "gicon") }),
        Gtk2.PopoverMenu.new_from_model(item.menuModel)
      ]
    }
  ) }) });
}

// config/ags/components/bar/exit-button/index.tsx
function ExitButton() {
  return /* @__PURE__ */ jsx(
    ModuleContainer,
    {
      class: "exit-button",
      icon: "\uE879",
      label: "Exit",
      onClicked: () => bash("~/.config/hypr/scripts/dmenu.sh quit")
    }
  );
}

// config/ags/components/bar/index.tsx
function Bar(gdkmonitor) {
  const { BOTTOM, LEFT, RIGHT } = Astal.WindowAnchor;
  return /* @__PURE__ */ jsx(
    "window",
    {
      visible: true,
      name: "bar",
      class: "Bar",
      gdkmonitor,
      exclusivity: Astal.Exclusivity.EXCLUSIVE,
      anchor: BOTTOM | LEFT | RIGHT,
      application: app_default,
      children: /* @__PURE__ */ jsxs("centerbox", { cssClasses: ["bar-container"], children: [
        /* @__PURE__ */ jsx("box", { $type: "start", halign: Gtk2.Align.START, spacing: 8, children: /* @__PURE__ */ jsx(Workspaces, {}) }),
        /* @__PURE__ */ jsxs("box", { $type: "end", halign: Gtk2.Align.END, spacing: 4, children: [
          /* @__PURE__ */ jsx(Systray, {}),
          /* @__PURE__ */ jsx(Volume, {}),
          /* @__PURE__ */ jsx(Network, {}),
          /* @__PURE__ */ jsx(Netstats, {}),
          /* @__PURE__ */ jsx(Clock, {}),
          /* @__PURE__ */ jsx(ExitButton, {})
        ] })
      ] })
    }
  );
}

// config/ags/components/notifications/index.tsx
import AstalNotifd2 from "gi://AstalNotifd";

// config/ags/components/notifications/notification.tsx
import Gtk5 from "gi://Gtk?version=4.0";
import Gdk4 from "gi://Gdk?version=4.0";
import Adw from "gi://Adw";
import GLib7 from "gi://GLib";
import AstalNotifd from "gi://AstalNotifd";
import Pango from "gi://Pango";
function isIcon(icon) {
  const iconTheme = Gtk5.IconTheme.get_for_display(Gdk4.Display.get_default());
  return icon && iconTheme.has_icon(icon);
}
function fileExists(path) {
  return GLib7.file_test(path, GLib7.FileTest.EXISTS);
}
function time(time2, format = "%H:%M") {
  return GLib7.DateTime.new_from_unix_local(time2).format(format);
}
function urgency(n) {
  const { LOW, NORMAL, CRITICAL } = AstalNotifd.Urgency;
  switch (n.urgency) {
    case LOW:
      return "low";
    case CRITICAL:
      return "critical";
    case NORMAL:
    default:
      return "normal";
  }
}
function Notification({ notification: n }) {
  return /* @__PURE__ */ jsx(Adw.Clamp, { maximumSize: 400, children: /* @__PURE__ */ jsxs(
    "box",
    {
      widthRequest: 400,
      class: `notification ${urgency(n)}`,
      orientation: Gtk5.Orientation.VERTICAL,
      children: [
        /* @__PURE__ */ jsxs("box", { class: "header", children: [
          (n.appIcon || isIcon(n.desktopEntry)) && /* @__PURE__ */ jsx(
            "image",
            {
              class: "app-icon",
              visible: Boolean(n.appIcon || n.desktopEntry),
              iconName: n.appIcon || n.desktopEntry
            }
          ),
          /* @__PURE__ */ jsx(
            "label",
            {
              class: "app-name",
              halign: Gtk5.Align.START,
              ellipsize: Pango.EllipsizeMode.END,
              label: n.appName || "Unknown"
            }
          ),
          /* @__PURE__ */ jsx(
            "label",
            {
              class: "time",
              hexpand: true,
              halign: Gtk5.Align.END,
              label: time(n.time)
            }
          ),
          /* @__PURE__ */ jsx("button", { onClicked: () => n.dismiss(), children: /* @__PURE__ */ jsx("image", { iconName: "window-close-symbolic" }) })
        ] }),
        /* @__PURE__ */ jsx(Gtk5.Separator, { visible: true }),
        /* @__PURE__ */ jsxs("box", { class: "content", children: [
          n.image && fileExists(n.image) && /* @__PURE__ */ jsx("image", { valign: Gtk5.Align.START, class: "image", file: n.image }),
          n.image && isIcon(n.image) && /* @__PURE__ */ jsx("box", { valign: Gtk5.Align.START, class: "icon-image", children: /* @__PURE__ */ jsx(
            "image",
            {
              iconName: n.image,
              halign: Gtk5.Align.CENTER,
              valign: Gtk5.Align.CENTER
            }
          ) }),
          /* @__PURE__ */ jsxs("box", { orientation: Gtk5.Orientation.VERTICAL, children: [
            /* @__PURE__ */ jsx(
              "label",
              {
                class: "summary",
                halign: Gtk5.Align.START,
                xalign: 0,
                label: n.summary,
                ellipsize: Pango.EllipsizeMode.END
              }
            ),
            n.body && /* @__PURE__ */ jsx(
              "label",
              {
                class: "body",
                wrap: true,
                useMarkup: true,
                halign: Gtk5.Align.START,
                xalign: 0,
                justify: Gtk5.Justification.FILL,
                label: n.body
              }
            )
          ] })
        ] }),
        n.actions.length > 0 && /* @__PURE__ */ jsx("box", { class: "actions", children: n.actions.map(({ label, id }) => /* @__PURE__ */ jsx("button", { hexpand: true, onClicked: () => n.invoke(id), children: /* @__PURE__ */ jsx("label", { label, halign: Gtk5.Align.CENTER, hexpand: true }) })) })
      ]
    }
  ) });
}

// config/ags/components/notifications/index.tsx
function NotificationPopups() {
  const monitors = createBinding(app_default, "monitors");
  const notifd = AstalNotifd2.get_default();
  const [notifications, setNotifications] = createState(
    new Array()
  );
  const notifiedHandler = notifd.connect("notified", (_, id, replaced) => {
    const notification = notifd.get_notification(id);
    if (replaced && notifications.get().some((n) => n.id === id)) {
      setNotifications((ns) => ns.map((n) => n.id === id ? notification : n));
    } else {
      setNotifications((ns) => [notification, ...ns]);
    }
  });
  const resolvedHandler = notifd.connect("resolved", (_, id) => {
    setNotifications((ns) => ns.filter((n) => n.id !== id));
  });
  onCleanup(() => {
    notifd.disconnect(notifiedHandler);
    notifd.disconnect(resolvedHandler);
  });
  return /* @__PURE__ */ jsx(For, { each: monitors, children: (monitor) => /* @__PURE__ */ jsx(
    "window",
    {
      $: (self) => onCleanup(() => self.destroy()),
      class: "notification-popups",
      gdkmonitor: monitor,
      visible: notifications((ns) => ns.length > 0),
      anchor: Astal.WindowAnchor.BOTTOM | Astal.WindowAnchor.RIGHT,
      children: /* @__PURE__ */ jsx("box", { orientation: Gtk2.Orientation.VERTICAL, children: /* @__PURE__ */ jsx(For, { each: notifications, children: (notification) => /* @__PURE__ */ jsx(Notification, { notification }) }) })
    }
  ) });
}

// config/ags/app.ts
app_default.start({
  css: styles_default,
  main() {
    app_default.get_monitors().map(Bar);
    NotificationPopups();
  }
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvb3ZlcnJpZGVzLnRzIiwgIi4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9nb2JqZWN0LnRzIiwgIi4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC91dGlsLnRzIiwgIi4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2d0azQvYXBwLnRzIiwgIi4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9kYnVzLnRzIiwgIi4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2FwcC9kYnVzLnRzIiwgIi4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvanN4LnRzIiwgIi4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvRnJhZ21lbnQudHMiLCAiLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9ub2RlX21vZHVsZXMvZ25pbS9kaXN0L2pzeC9zdGF0ZS50cyIsICIuLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L2Vudi50cyIsICIuLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvanN4L3Njb3BlLnRzIiwgIi4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvRm9yLnRzIiwgIi4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbm9kZV9tb2R1bGVzL2duaW0vZGlzdC9qc3gvVGhpcy50cyIsICJzYXNzOi9ob21lL2RtMW5oLy5kb3RzL2NvbmZpZy9hZ3Mvc3R5bGVzL3N0eWxlcy5zY3NzIiwgIi4uLy4uLy4uL3Vzci9zaGFyZS9hZ3MvanMvbGliL2d0azQvaW5kZXgudHMiLCAiLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvZ3RrNC9qc3gtcnVudGltZS50cyIsICIuLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL25vZGVfbW9kdWxlcy9nbmltL2Rpc3QvZ3RrNC9qc3gtcnVudGltZS50cyIsICJjb25maWcvYWdzL2NvbXBvbmVudHMvYmFyL3NoYXJlZC9tb2R1bGUtY29udGFpbmVyLnRzeCIsICJjb25maWcvYWdzL2NvbXBvbmVudHMvYmFyL2Nsb2NrL2hlbHBlcnMudHMiLCAiLi4vLi4vLi4vdXNyL3NoYXJlL2Fncy9qcy9saWIvcHJvY2Vzcy50cyIsICIuLi8uLi8uLi91c3Ivc2hhcmUvYWdzL2pzL2xpYi90aW1lLnRzIiwgImNvbmZpZy9hZ3MvY29tcG9uZW50cy9iYXIvY2xvY2svaW5kZXgudHN4IiwgImNvbmZpZy9hZ3MvY29tcG9uZW50cy9iYXIvd29ya3NwYWNlcy9pbmRleC50c3giLCAiY29uZmlnL2Fncy91dGlscy9pbmRleC50cyIsICJjb25maWcvYWdzL2NvbXBvbmVudHMvYmFyL3ZvbHVtZS9oZWxwZXJzL2NvbnN0YW50cy50cyIsICJjb25maWcvYWdzL2NvbXBvbmVudHMvYmFyL3ZvbHVtZS9oZWxwZXJzL2luZGV4LnRzIiwgImNvbmZpZy9hZ3MvY29tcG9uZW50cy9iYXIvdm9sdW1lL2luZGV4LnRzeCIsICJjb25maWcvYWdzL2NvbXBvbmVudHMvYmFyL25ldHdvcmsvaGVscGVycy9pbmRleC50cyIsICJjb25maWcvYWdzL2NvbXBvbmVudHMvYmFyL25ldHdvcmsvaGVscGVycy9jb25zdGFudHMudHMiLCAiY29uZmlnL2Fncy9jb21wb25lbnRzL2Jhci9uZXR3b3JrL2luZGV4LnRzeCIsICJjb25maWcvYWdzL2NvbXBvbmVudHMvYmFyL25ldHN0YXRzL2hlbHBlcnMvaW5kZXgudHMiLCAiY29uZmlnL2Fncy9jb21wb25lbnRzL2Jhci9uZXRzdGF0cy9pbmRleC50c3giLCAiY29uZmlnL2Fncy9jb21wb25lbnRzL2Jhci9zeXN0cmF5L2luZGV4LnRzeCIsICJjb25maWcvYWdzL2NvbXBvbmVudHMvYmFyL2V4aXQtYnV0dG9uL2luZGV4LnRzeCIsICJjb25maWcvYWdzL2NvbXBvbmVudHMvYmFyL2luZGV4LnRzeCIsICJjb25maWcvYWdzL2NvbXBvbmVudHMvbm90aWZpY2F0aW9ucy9pbmRleC50c3giLCAiY29uZmlnL2Fncy9jb21wb25lbnRzL25vdGlmaWNhdGlvbnMvbm90aWZpY2F0aW9uLnRzeCIsICJjb25maWcvYWdzL2FwcC50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiLyoqXG4gKiBXb3JrYXJvdW5kIGZvciBcIkNhbid0IGNvbnZlcnQgbm9uLW51bGwgcG9pbnRlciB0byBKUyB2YWx1ZSBcIlxuICovXG5cbmV4cG9ydCB7fVxuXG5mdW5jdGlvbiBzbmFrZWlmeShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHJcbiAgICAgICAgLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csIFwiJDFfJDJcIilcbiAgICAgICAgLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKVxuICAgICAgICAudG9Mb3dlckNhc2UoKVxufVxuXG5hc3luYyBmdW5jdGlvbiBzdXBwcmVzczxUPihtb2Q6IFByb21pc2U8eyBkZWZhdWx0OiBUIH0+LCBwYXRjaDogKG06IFQpID0+IHZvaWQpIHtcbiAgICByZXR1cm4gbW9kLnRoZW4oKG0pID0+IHBhdGNoKG0uZGVmYXVsdCkpLmNhdGNoKCgpID0+IHZvaWQgMClcbn1cblxuZnVuY3Rpb24gcGF0Y2g8UCBleHRlbmRzIG9iamVjdD4ocHJvdG86IFAsIHByb3A6IEV4dHJhY3Q8a2V5b2YgUCwgc3RyaW5nPikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShwcm90bywgcHJvcCwge1xuICAgICAgICBnZXQoKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpc1tgZ2V0XyR7c25ha2VpZnkocHJvcCl9YF0oKVxuICAgICAgICB9LFxuICAgIH0pXG59XG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxBcHBzXCIpLCAoeyBBcHBzLCBBcHBsaWNhdGlvbiB9KSA9PiB7XG4gICAgcGF0Y2goQXBwcy5wcm90b3R5cGUsIFwibGlzdFwiKVxuICAgIHBhdGNoKEFwcGxpY2F0aW9uLnByb3RvdHlwZSwgXCJrZXl3b3Jkc1wiKVxuICAgIHBhdGNoKEFwcGxpY2F0aW9uLnByb3RvdHlwZSwgXCJjYXRlZ29yaWVzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsQmF0dGVyeVwiKSwgKHsgVVBvd2VyIH0pID0+IHtcbiAgICBwYXRjaChVUG93ZXIucHJvdG90eXBlLCBcImRldmljZXNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxCbHVldG9vdGhcIiksICh7IEFkYXB0ZXIsIEJsdWV0b290aCwgRGV2aWNlIH0pID0+IHtcbiAgICBwYXRjaChBZGFwdGVyLnByb3RvdHlwZSwgXCJ1dWlkc1wiKVxuICAgIHBhdGNoKEJsdWV0b290aC5wcm90b3R5cGUsIFwiYWRhcHRlcnNcIilcbiAgICBwYXRjaChCbHVldG9vdGgucHJvdG90eXBlLCBcImRldmljZXNcIilcbiAgICBwYXRjaChEZXZpY2UucHJvdG90eXBlLCBcInV1aWRzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsSHlwcmxhbmRcIiksICh7IEh5cHJsYW5kLCBNb25pdG9yLCBXb3Jrc3BhY2UgfSkgPT4ge1xuICAgIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgXCJiaW5kc1wiKVxuICAgIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgXCJtb25pdG9yc1wiKVxuICAgIHBhdGNoKEh5cHJsYW5kLnByb3RvdHlwZSwgXCJ3b3Jrc3BhY2VzXCIpXG4gICAgcGF0Y2goSHlwcmxhbmQucHJvdG90eXBlLCBcImNsaWVudHNcIilcbiAgICBwYXRjaChNb25pdG9yLnByb3RvdHlwZSwgXCJhdmFpbGFibGVNb2Rlc1wiKVxuICAgIHBhdGNoKE1vbml0b3IucHJvdG90eXBlLCBcImF2YWlsYWJsZV9tb2Rlc1wiKVxuICAgIHBhdGNoKFdvcmtzcGFjZS5wcm90b3R5cGUsIFwiY2xpZW50c1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbE1wcmlzXCIpLCAoeyBNcHJpcywgUGxheWVyIH0pID0+IHtcbiAgICBwYXRjaChNcHJpcy5wcm90b3R5cGUsIFwicGxheWVyc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkX3VyaV9zY2hlbWVzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJzdXBwb3J0ZWRVcmlTY2hlbWVzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJzdXBwb3J0ZWRfbWltZV90eXBlc1wiKVxuICAgIHBhdGNoKFBsYXllci5wcm90b3R5cGUsIFwic3VwcG9ydGVkTWltZVR5cGVzXCIpXG4gICAgcGF0Y2goUGxheWVyLnByb3RvdHlwZSwgXCJjb21tZW50c1wiKVxufSlcblxuYXdhaXQgc3VwcHJlc3MoaW1wb3J0KFwiZ2k6Ly9Bc3RhbE5ldHdvcmtcIiksICh7IFdpZmkgfSkgPT4ge1xuICAgIHBhdGNoKFdpZmkucHJvdG90eXBlLCBcImFjY2Vzc19wb2ludHNcIilcbiAgICBwYXRjaChXaWZpLnByb3RvdHlwZSwgXCJhY2Nlc3NQb2ludHNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxOb3RpZmRcIiksICh7IE5vdGlmZCwgTm90aWZpY2F0aW9uIH0pID0+IHtcbiAgICBwYXRjaChOb3RpZmQucHJvdG90eXBlLCBcIm5vdGlmaWNhdGlvbnNcIilcbiAgICBwYXRjaChOb3RpZmljYXRpb24ucHJvdG90eXBlLCBcImFjdGlvbnNcIilcbn0pXG5cbmF3YWl0IHN1cHByZXNzKGltcG9ydChcImdpOi8vQXN0YWxQb3dlclByb2ZpbGVzXCIpLCAoeyBQb3dlclByb2ZpbGVzIH0pID0+IHtcbiAgICBwYXRjaChQb3dlclByb2ZpbGVzLnByb3RvdHlwZSwgXCJhY3Rpb25zXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsV3BcIiksICh7IFdwLCBBdWRpbywgVmlkZW8gfSkgPT4ge1xuICAgIHBhdGNoKFdwLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcInN0cmVhbXNcIilcbiAgICBwYXRjaChBdWRpby5wcm90b3R5cGUsIFwicmVjb3JkZXJzXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcIm1pY3JvcGhvbmVzXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcInNwZWFrZXJzXCIpXG4gICAgcGF0Y2goQXVkaW8ucHJvdG90eXBlLCBcImRldmljZXNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwic3RyZWFtc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJyZWNvcmRlcnNcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwic2lua3NcIilcbiAgICBwYXRjaChWaWRlby5wcm90b3R5cGUsIFwic291cmNlc1wiKVxuICAgIHBhdGNoKFZpZGVvLnByb3RvdHlwZSwgXCJkZXZpY2VzXCIpXG59KVxuXG5hd2FpdCBzdXBwcmVzcyhpbXBvcnQoXCJnaTovL0FzdGFsVHJheVwiKSwgKHsgVHJheSB9KSA9PiB7XG4gICAgcGF0Y2goVHJheS5wcm90b3R5cGUsIFwiaXRlbXNcIilcbn0pXG4iLCAiLyoqXG4gKiBJbiB0aGUgZnV0dXJlIEkgd291bGQgbGlrZSB0byBtYWtlIHR5cGUgZGVjbGFyYXRpb24gaW4gZGVjb3JhdG9ycyBvcHRpb25hbFxuICogYW5kIGluZmVyIGl0IGZyb20gdHlwZXNjcmlwdCB0eXBlcyBhdCB0cmFuc3BpbGUgdGltZS4gQ3VycmVudGx5LCB3ZSBjb3VsZFxuICogZWl0aGVyIHVzZSBzdGFnZSAyIGRlY29yYXRvcnMgd2l0aCB0aGUgXCJlbWl0RGVjb3JhdG9yTWV0YWRhdGFcIiBhbmRcbiAqIFwiZXhwZXJpbWVudGFsRGVjb3JhdG9yc1wiIHRzY29uZmlnIG9wdGlvbnMuIEhvd2V2ZXIsIG1ldGFkYXRhIGlzIG5vdCBzdXBwb3J0ZWRcbiAqIGJ5IGVzYnVpbGQgd2hpY2ggaXMgd2hhdCBJJ20gbW9zdGx5IHRhcmdldGluZyBhcyB0aGUgYnVuZGxlciBmb3IgcGVyZm9ybWFuY2VcbiAqIHJlYXNvbnMuIGh0dHBzOi8vZ2l0aHViLmNvbS9ldmFudy9lc2J1aWxkL2lzc3Vlcy8yNTdcbiAqIEhvd2V2ZXIsIEkgYmVsaWV2ZSB0aGF0IHdlIHNob3VsZCBub3QgdXNlIHN0YWdlIDIgYW55bW9yZSxcbiAqIHNvIEknbSB3YWl0aW5nIGZvciBhIGJldHRlciBhbHRlcm5hdGl2ZS5cbiAqL1xuXG5pbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWJcIlxuaW1wb3J0IHsgZGVmaW5lUHJvcGVydHlHZXR0ZXIsIGtlYmFiaWZ5IH0gZnJvbSBcIi4vdXRpbC5qc1wiXG5cbmNvbnN0IHByaXYgPSBTeW1ib2woXCJnb2JqZWN0IHByaXZhdGVcIilcbmNvbnN0IHsgZGVmaW5lUHJvcGVydHksIGZyb21FbnRyaWVzLCBlbnRyaWVzIH0gPSBPYmplY3RcbmNvbnN0IHsgT2JqZWN0OiBHT2JqLCByZWdpc3RlckNsYXNzIH0gPSBHT2JqZWN0XG5cbmV4cG9ydCB7IEdPYmplY3QgYXMgZGVmYXVsdCB9XG5leHBvcnQgeyBHT2JqIGFzIE9iamVjdCB9XG5cbmV4cG9ydCBjb25zdCBTaWduYWxGbGFncyA9IEdPYmplY3QuU2lnbmFsRmxhZ3NcbmV4cG9ydCB0eXBlIFNpZ25hbEZsYWdzID0gR09iamVjdC5TaWduYWxGbGFnc1xuXG5leHBvcnQgY29uc3QgQWNjdW11bGF0b3JUeXBlID0gR09iamVjdC5BY2N1bXVsYXRvclR5cGVcbmV4cG9ydCB0eXBlIEFjY3VtdWxhdG9yVHlwZSA9IEdPYmplY3QuQWNjdW11bGF0b3JUeXBlXG5cbmV4cG9ydCB0eXBlIFBhcmFtU3BlYzxUID0gdW5rbm93bj4gPSBHT2JqZWN0LlBhcmFtU3BlYzxUPlxuZXhwb3J0IGNvbnN0IFBhcmFtU3BlYyA9IEdPYmplY3QuUGFyYW1TcGVjXG5cbmV4cG9ydCB0eXBlIFBhcmFtRmxhZ3MgPSBHT2JqZWN0LlBhcmFtRmxhZ3NcbmV4cG9ydCBjb25zdCBQYXJhbUZsYWdzID0gR09iamVjdC5QYXJhbUZsYWdzXG5cbmV4cG9ydCB0eXBlIEdUeXBlPFQgPSB1bmtub3duPiA9IEdPYmplY3QuR1R5cGU8VD5cblxudHlwZSBHT2JqID0gR09iamVjdC5PYmplY3RcblxuaW50ZXJmYWNlIEdPYmpQcml2YXRlIGV4dGVuZHMgR09iaiB7XG4gICAgW3ByaXZdOiBSZWNvcmQ8c3RyaW5nLCBhbnk+XG59XG5cbnR5cGUgTWV0YSA9IHtcbiAgICBwcm9wZXJ0aWVzPzoge1xuICAgICAgICBbZmllbGROYW1lOiBzdHJpbmddOiB7XG4gICAgICAgICAgICBmbGFnczogUGFyYW1GbGFnc1xuICAgICAgICAgICAgdHlwZTogUHJvcGVydHlUeXBlRGVjbGFyYXRpb248dW5rbm93bj5cbiAgICAgICAgfVxuICAgIH1cbiAgICBzaWduYWxzPzoge1xuICAgICAgICBba2V5OiBzdHJpbmddOiB7XG4gICAgICAgICAgICBkZWZhdWx0PzogYm9vbGVhblxuICAgICAgICAgICAgZmxhZ3M/OiBTaWduYWxGbGFnc1xuICAgICAgICAgICAgYWNjdW11bGF0b3I/OiBBY2N1bXVsYXRvclR5cGVcbiAgICAgICAgICAgIHJldHVybl90eXBlPzogR1R5cGVcbiAgICAgICAgICAgIHBhcmFtX3R5cGVzPzogQXJyYXk8R1R5cGU+XG4gICAgICAgICAgICBtZXRob2Q6ICguLi5hcmc6IGFueVtdKSA9PiB1bmtub3duXG4gICAgICAgIH1cbiAgICB9XG59XG5cbnR5cGUgQ29udGV4dCA9IHsgcHJpdmF0ZTogZmFsc2U7IHN0YXRpYzogZmFsc2U7IG5hbWU6IHN0cmluZyB9XG50eXBlIFByb3BlcnR5Q29udGV4dDxUPiA9IENsYXNzRmllbGREZWNvcmF0b3JDb250ZXh0PEdPYmosIFQ+ICYgQ29udGV4dFxudHlwZSBHZXR0ZXJDb250ZXh0PFQ+ID0gQ2xhc3NHZXR0ZXJEZWNvcmF0b3JDb250ZXh0PEdPYmosIFQ+ICYgQ29udGV4dFxudHlwZSBTZXR0ZXJDb250ZXh0PFQ+ID0gQ2xhc3NTZXR0ZXJEZWNvcmF0b3JDb250ZXh0PEdPYmosIFQ+ICYgQ29udGV4dFxudHlwZSBTaWduYWxDb250ZXh0PFQgZXh0ZW5kcyAoKSA9PiBhbnk+ID0gQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PEdPYmosIFQ+ICYgQ29udGV4dFxuXG50eXBlIFNpZ25hbE9wdGlvbnMgPSB7XG4gICAgZGVmYXVsdD86IGJvb2xlYW5cbiAgICBmbGFncz86IFNpZ25hbEZsYWdzXG4gICAgYWNjdW11bGF0b3I/OiBBY2N1bXVsYXRvclR5cGVcbn1cblxudHlwZSBQcm9wZXJ0eVR5cGVEZWNsYXJhdGlvbjxUPiA9XG4gICAgfCAoKG5hbWU6IHN0cmluZywgZmxhZ3M6IFBhcmFtRmxhZ3MpID0+IFBhcmFtU3BlYzxUPilcbiAgICB8IFBhcmFtU3BlYzxUPlxuICAgIHwgeyAkZ3R5cGU6IEdUeXBlPFQ+IH1cblxuZnVuY3Rpb24gYXNzZXJ0RmllbGQoXG4gICAgY3R4OiBDbGFzc0ZpZWxkRGVjb3JhdG9yQ29udGV4dCB8IENsYXNzR2V0dGVyRGVjb3JhdG9yQ29udGV4dCB8IENsYXNzU2V0dGVyRGVjb3JhdG9yQ29udGV4dCxcbik6IHN0cmluZyB7XG4gICAgaWYgKGN0eC5wcml2YXRlKSB0aHJvdyBFcnJvcihcInByaXZhdGUgZmllbGRzIGFyZSBub3Qgc3VwcG9ydGVkXCIpXG4gICAgaWYgKGN0eC5zdGF0aWMpIHRocm93IEVycm9yKFwic3RhdGljIGZpZWxkcyBhcmUgbm90IHN1cHBvcnRlZFwiKVxuXG4gICAgaWYgKHR5cGVvZiBjdHgubmFtZSAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICB0aHJvdyBFcnJvcihcIm9ubHkgc3RyaW5ncyBjYW4gYmUgZ29iamVjdCBwcm9wZXJ0eSBrZXlzXCIpXG4gICAgfVxuXG4gICAgcmV0dXJuIGN0eC5uYW1lXG59XG5cbi8qKlxuICogRGVmaW5lcyBhIHJlYWRhYmxlICphbmQqIHdyaXRlYWJsZSBwcm9wZXJ0eSB0byBiZSByZWdpc3RlcmVkIHdoZW4gdXNpbmcgdGhlIHtAbGluayByZWdpc3Rlcn0gZGVjb3JhdG9yLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogY2xhc3Mge1xuICogICAgIFxcQHByb3BlcnR5KFN0cmluZykgbXlQcm9wID0gXCJcIlxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcm9wZXJ0eTxUPih0eXBlRGVjbGFyYXRpb246IFByb3BlcnR5VHlwZURlY2xhcmF0aW9uPFQ+KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChcbiAgICAgICAgXzogdm9pZCxcbiAgICAgICAgY3R4OiBQcm9wZXJ0eUNvbnRleHQ8VD4sXG4gICAgICAgIG9wdGlvbnM/OiB7IG1ldGFPbmx5OiB0cnVlIH0sXG4gICAgKTogKHRoaXM6IEdPYmosIGluaXQ6IFQpID0+IGFueSB7XG4gICAgICAgIGNvbnN0IGZpZWxkTmFtZSA9IGFzc2VydEZpZWxkKGN0eClcbiAgICAgICAgY29uc3Qga2V5ID0ga2ViYWJpZnkoZmllbGROYW1lKVxuICAgICAgICBjb25zdCBtZXRhOiBQYXJ0aWFsPE1ldGE+ID0gY3R4Lm1ldGFkYXRhIVxuXG4gICAgICAgIG1ldGEucHJvcGVydGllcyA/Pz0ge31cbiAgICAgICAgbWV0YS5wcm9wZXJ0aWVzW2ZpZWxkTmFtZV0gPSB7IGZsYWdzOiBQYXJhbUZsYWdzLlJFQURXUklURSwgdHlwZTogdHlwZURlY2xhcmF0aW9uIH1cblxuICAgICAgICBjdHguYWRkSW5pdGlhbGl6ZXIoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZGVmaW5lUHJvcGVydHlHZXR0ZXIodGhpcywgZmllbGROYW1lIGFzIEV4dHJhY3Q8a2V5b2YgR09iaiwgc3RyaW5nPilcblxuICAgICAgICAgICAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5tZXRhT25seSkgcmV0dXJuXG5cbiAgICAgICAgICAgIGRlZmluZVByb3BlcnR5KHRoaXMsIGZpZWxkTmFtZSwge1xuICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBzZXQodjogVCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpc1twcml2XVtrZXldICE9PSB2KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzW3ByaXZdW2tleV0gPSB2XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeShrZXkpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCgpOiBUIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRoaXNbcHJpdl1ba2V5XVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9IHNhdGlzZmllcyBUaGlzVHlwZTxHT2JqUHJpdmF0ZT4pXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChpbml0OiBUKSB7XG4gICAgICAgICAgICBjb25zdCBkaWN0ID0gKCh0aGlzIGFzIEdPYmpQcml2YXRlKVtwcml2XSA/Pz0ge30pXG4gICAgICAgICAgICBkaWN0W2tleV0gPSBpbml0XG4gICAgICAgICAgICByZXR1cm4gaW5pdFxuICAgICAgICB9XG4gICAgfVxufVxuXG4vKipcbiAqIERlZmluZXMgYSByZWFkLW9ubHkgcHJvcGVydHkgdG8gYmUgcmVnaXN0ZXJlZCB3aGVuIHVzaW5nIHRoZSB7QGxpbmsgcmVnaXN0ZXJ9IGRlY29yYXRvci5cbiAqIElmIHRoZSBnZXR0ZXIgaGFzIGEgc2V0dGVyIHBhaXIgZGVjb3JhdGVkIHdpdGggdGhlIHtAbGluayBzZXR0ZXJ9IGRlY29yYXRvciB0aGUgcHJvcGVydHkgd2lsbCBiZSByZWFkYWJsZSAqYW5kKiB3cml0ZWFibGUuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBjbGFzcyB7XG4gKiAgICAgXFxAc2V0dGVyKFN0cmluZylcbiAqICAgICBzZXQgbXlQcm9wKHZhbHVlOiBzdHJpbmcpIHtcbiAqICAgICAgICAgLy9cbiAqICAgICB9XG4gKlxuICogICAgIFxcQGdldHRlcihTdHJpbmcpXG4gKiAgICAgZ2V0IG15UHJvcCgpOiBzdHJpbmcge1xuICogICAgICAgICByZXR1cm4gXCJcIlxuICogICAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0dGVyPFQ+KHR5cGVEZWNsYXJhdGlvbjogUHJvcGVydHlUeXBlRGVjbGFyYXRpb248VD4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGdldDogKHRoaXM6IEdPYmopID0+IGFueSwgY3R4OiBHZXR0ZXJDb250ZXh0PFQ+KSB7XG4gICAgICAgIGNvbnN0IGZpZWxkTmFtZSA9IGFzc2VydEZpZWxkKGN0eClcbiAgICAgICAgY29uc3QgbWV0YTogUGFydGlhbDxNZXRhPiA9IGN0eC5tZXRhZGF0YSFcbiAgICAgICAgY29uc3QgcHJvcHMgPSAobWV0YS5wcm9wZXJ0aWVzID8/PSB7fSlcbiAgICAgICAgaWYgKGZpZWxkTmFtZSBpbiBwcm9wcykge1xuICAgICAgICAgICAgY29uc3QgeyBmbGFncywgdHlwZSB9ID0gcHJvcHNbZmllbGROYW1lXVxuICAgICAgICAgICAgcHJvcHNbZmllbGROYW1lXSA9IHsgZmxhZ3M6IGZsYWdzIHwgUGFyYW1GbGFncy5SRUFEQUJMRSwgdHlwZSB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBwcm9wc1tmaWVsZE5hbWVdID0geyBmbGFnczogUGFyYW1GbGFncy5SRUFEQUJMRSwgdHlwZTogdHlwZURlY2xhcmF0aW9uIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZ2V0XG4gICAgfVxufVxuXG4vKipcbiAqIERlZmluZXMgYSB3cml0ZS1vbmx5IHByb3BlcnR5IHRvIGJlIHJlZ2lzdGVyZWQgd2hlbiB1c2luZyB0aGUge0BsaW5rIHJlZ2lzdGVyfSBkZWNvcmF0b3IuXG4gKiBJZiB0aGUgc2V0dGVyIGhhcyBhIGdldHRlciBwYWlyIGRlY29yYXRlZCB3aXRoIHRoZSB7QGxpbmsgZ2V0dGVyfSBkZWNvcmF0b3IgdGhlIHByb3BlcnR5IHdpbGwgYmUgd3JpdGVhYmxlICphbmQqIHJlYWRhYmxlLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogY2xhc3Mge1xuICogICAgIFxcQHNldHRlcihTdHJpbmcpXG4gKiAgICAgc2V0IG15UHJvcCh2YWx1ZTogc3RyaW5nKSB7XG4gKiAgICAgICAgIC8vXG4gKiAgICAgfVxuICpcbiAqICAgICBcXEBnZXR0ZXIoU3RyaW5nKVxuICogICAgIGdldCBteVByb3AoKTogc3RyaW5nIHtcbiAqICAgICAgICAgcmV0dXJuIFwiXCJcbiAqICAgICB9XG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldHRlcjxUPih0eXBlRGVjbGFyYXRpb246IFByb3BlcnR5VHlwZURlY2xhcmF0aW9uPFQ+KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChzZXQ6ICh0aGlzOiBHT2JqLCB2YWx1ZTogYW55KSA9PiB2b2lkLCBjdHg6IFNldHRlckNvbnRleHQ8VD4pIHtcbiAgICAgICAgY29uc3QgZmllbGROYW1lID0gYXNzZXJ0RmllbGQoY3R4KVxuICAgICAgICBjb25zdCBtZXRhOiBQYXJ0aWFsPE1ldGE+ID0gY3R4Lm1ldGFkYXRhIVxuICAgICAgICBjb25zdCBwcm9wcyA9IChtZXRhLnByb3BlcnRpZXMgPz89IHt9KVxuICAgICAgICBpZiAoZmllbGROYW1lIGluIHByb3BzKSB7XG4gICAgICAgICAgICBjb25zdCB7IGZsYWdzLCB0eXBlIH0gPSBwcm9wc1tmaWVsZE5hbWVdXG4gICAgICAgICAgICBwcm9wc1tmaWVsZE5hbWVdID0geyBmbGFnczogZmxhZ3MgfCBQYXJhbUZsYWdzLldSSVRBQkxFLCB0eXBlIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHByb3BzW2ZpZWxkTmFtZV0gPSB7IGZsYWdzOiBQYXJhbUZsYWdzLldSSVRBQkxFLCB0eXBlOiB0eXBlRGVjbGFyYXRpb24gfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzZXRcbiAgICB9XG59XG5cbnR5cGUgUGFyYW1UeXBlPFA+ID0gUCBleHRlbmRzIHsgJGd0eXBlOiBHVHlwZTxpbmZlciBUPiB9ID8gVCA6IFAgZXh0ZW5kcyBHVHlwZTxpbmZlciBUPiA/IFQgOiBuZXZlclxuXG50eXBlIFBhcmFtVHlwZXM8UGFyYW1zPiA9IHtcbiAgICBbSyBpbiBrZXlvZiBQYXJhbXNdOiBQYXJhbVR5cGU8UGFyYW1zW0tdPlxufVxuXG4vKipcbiAqIERlZmluZXMgYSBzaWduYWwgdG8gYmUgcmVnaXN0ZXJlZCB3aGVuIHVzaW5nIHRoZSB7QGxpbmsgcmVnaXN0ZXJ9IGRlY29yYXRvci5cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHNcbiAqIGNsYXNzIHtcbiAqICAgICBcXEBzaWduYWwoW1N0cmluZywgTnVtYmVyXSwgQm9vbGVhbiwge1xuICogICAgICAgICBhY2N1bXVsYXRvcjogQWNjdW11bGF0b3JUeXBlLkZJUlNUX1dJTlNcbiAqICAgICB9KVxuICogICAgIG15U2lnbmFsKHN0cjogc3RyaW5nLCBuOiBudW1iZXIpOiBib29sZWFuIHtcbiAqICAgICAgICAgLy8gZGVmYXVsdCBoYW5kbGVyXG4gKiAgICAgICAgIHJldHVybiBmYWxzZVxuICogICAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gc2lnbmFsPFxuICAgIGNvbnN0IFBhcmFtcyBleHRlbmRzIEFycmF5PHsgJGd0eXBlOiBHVHlwZSB9IHwgR1R5cGU+LFxuICAgIFJldHVybiBleHRlbmRzIHsgJGd0eXBlOiBHVHlwZSB9IHwgR1R5cGUsXG4+KFxuICAgIHBhcmFtczogUGFyYW1zLFxuICAgIHJldHVyblR5cGU6IFJldHVybixcbiAgICBvcHRpb25zPzogU2lnbmFsT3B0aW9ucyxcbik6IChcbiAgICBtZXRob2Q6ICh0aGlzOiBHT2JqLCAuLi5hcmdzOiBhbnkpID0+IFBhcmFtVHlwZTxSZXR1cm4+LFxuICAgIGN0eDogU2lnbmFsQ29udGV4dDx0eXBlb2YgbWV0aG9kPixcbikgPT4gKHRoaXM6IEdPYmosIC4uLmFyZ3M6IFBhcmFtVHlwZXM8UGFyYW1zPikgPT4gYW55XG5cbi8qKlxuICogRGVmaW5lcyBhIHNpZ25hbCB0byBiZSByZWdpc3RlcmVkIHdoZW4gdXNpbmcgdGhlIHtAbGluayByZWdpc3Rlcn0gZGVjb3JhdG9yLlxuICpcbiAqIEV4YW1wbGU6XG4gKiBgYGB0c1xuICogY2xhc3Mge1xuICogICAgIFxcQHNpZ25hbChTdHJpbmcsIE51bWJlcilcbiAqICAgICBteVNpZ25hbChzdHI6IHN0cmluZywgbjogbnVtYmVyKTogdm9pZCB7XG4gKiAgICAgICAgIC8vIGRlZmF1bHQgaGFuZGxlclxuICogICAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gc2lnbmFsPFBhcmFtcyBleHRlbmRzIEFycmF5PHsgJGd0eXBlOiBHVHlwZSB9IHwgR1R5cGU+PihcbiAgICAuLi5wYXJhbXM6IFBhcmFtc1xuKTogKFxuICAgIG1ldGhvZDogKHRoaXM6IEdPYmplY3QuT2JqZWN0LCAuLi5hcmdzOiBhbnkpID0+IHZvaWQsXG4gICAgY3R4OiBTaWduYWxDb250ZXh0PHR5cGVvZiBtZXRob2Q+LFxuKSA9PiAodGhpczogR09iamVjdC5PYmplY3QsIC4uLmFyZ3M6IFBhcmFtVHlwZXM8UGFyYW1zPikgPT4gdm9pZFxuXG5leHBvcnQgZnVuY3Rpb24gc2lnbmFsPFxuICAgIFBhcmFtcyBleHRlbmRzIEFycmF5PHsgJGd0eXBlOiBHVHlwZSB9IHwgR1R5cGU+LFxuICAgIFJldHVybiBleHRlbmRzIHsgJGd0eXBlOiBHVHlwZSB9IHwgR1R5cGUsXG4+KFxuICAgIC4uLmFyZ3M6IFBhcmFtcyB8IFtwYXJhbXM6IFBhcmFtcywgcmV0dXJuVHlwZT86IFJldHVybiwgb3B0aW9ucz86IFNpZ25hbE9wdGlvbnNdXG4pOiAoXG4gICAgbWV0aG9kOiAodGhpczogR09iaiwgLi4uYXJnczogUGFyYW1UeXBlczxQYXJhbXM+KSA9PiBQYXJhbVR5cGU8UmV0dXJuPiB8IHZvaWQsXG4gICAgY3R4OiBTaWduYWxDb250ZXh0PHR5cGVvZiBtZXRob2Q+LFxuKSA9PiB0eXBlb2YgbWV0aG9kIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKG1ldGhvZCwgY3R4KSB7XG4gICAgICAgIGlmIChjdHgucHJpdmF0ZSkgdGhyb3cgRXJyb3IoXCJwcml2YXRlIGZpZWxkcyBhcmUgbm90IHN1cHBvcnRlZFwiKVxuICAgICAgICBpZiAoY3R4LnN0YXRpYykgdGhyb3cgRXJyb3IoXCJzdGF0aWMgZmllbGRzIGFyZSBub3Qgc3VwcG9ydGVkXCIpXG5cbiAgICAgICAgaWYgKHR5cGVvZiBjdHgubmFtZSAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJvbmx5IHN0cmluZ3MgY2FuIGJlIGdvYmplY3Qgc2lnbmFsc1wiKVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3Qgc2lnbmFsTmFtZSA9IGtlYmFiaWZ5KGN0eC5uYW1lKVxuICAgICAgICBjb25zdCBtZXRhOiBQYXJ0aWFsPE1ldGE+ID0gY3R4Lm1ldGFkYXRhIVxuICAgICAgICBjb25zdCBzaWduYWxzID0gKG1ldGEuc2lnbmFscyA/Pz0ge30pXG5cbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoYXJnc1swXSkpIHtcbiAgICAgICAgICAgIGNvbnN0IFtwYXJhbXMsIHJldHVyblR5cGUsIG9wdGlvbnNdID0gYXJncyBhcyBbXG4gICAgICAgICAgICAgICAgcGFyYW1zOiBQYXJhbXMsXG4gICAgICAgICAgICAgICAgcmV0dXJuVHlwZT86IFJldHVybixcbiAgICAgICAgICAgICAgICBvcHRpb25zPzogU2lnbmFsT3B0aW9ucyxcbiAgICAgICAgICAgIF1cblxuICAgICAgICAgICAgc2lnbmFsc1tzaWduYWxOYW1lXSA9IHtcbiAgICAgICAgICAgICAgICBtZXRob2QsXG4gICAgICAgICAgICAgICAgZGVmYXVsdDogb3B0aW9ucz8uZGVmYXVsdCA/PyB0cnVlLFxuICAgICAgICAgICAgICAgIHBhcmFtX3R5cGVzOiBwYXJhbXMubWFwKChpKSA9PiAoXCIkZ3R5cGVcIiBpbiBpID8gaS4kZ3R5cGUgOiBpKSksXG4gICAgICAgICAgICAgICAgLi4uKHJldHVyblR5cGUgJiYge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm5fdHlwZTogXCIkZ3R5cGVcIiBpbiByZXR1cm5UeXBlID8gcmV0dXJuVHlwZS4kZ3R5cGUgOiByZXR1cm5UeXBlLFxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIC4uLihvcHRpb25zPy5mbGFncyAmJiB7XG4gICAgICAgICAgICAgICAgICAgIGZsYWdzOiBvcHRpb25zLmZsYWdzLFxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIC4uLih0eXBlb2Ygb3B0aW9ucz8uYWNjdW11bGF0b3IgPT09IFwibnVtYmVyXCIgJiYge1xuICAgICAgICAgICAgICAgICAgICBhY2N1bXVsYXRvcjogb3B0aW9ucy5hY2N1bXVsYXRvcixcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IHBhcmFtcyA9IGFyZ3MgYXMgUGFyYW1zXG4gICAgICAgICAgICBzaWduYWxzW3NpZ25hbE5hbWVdID0ge1xuICAgICAgICAgICAgICAgIG1ldGhvZCxcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiB0cnVlLFxuICAgICAgICAgICAgICAgIHBhcmFtX3R5cGVzOiBwYXJhbXMubWFwKChpKSA9PiAoXCIkZ3R5cGVcIiBpbiBpID8gaS4kZ3R5cGUgOiBpKSksXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKC4uLnBhcmFtcykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuZW1pdChzaWduYWxOYW1lLCAuLi5wYXJhbXMpIGFzIFBhcmFtVHlwZTxSZXR1cm4+XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmNvbnN0IE1BWElOVCA9IDIgKiogMzEgLSAxXG5jb25zdCBNSU5JTlQgPSAtKDIgKiogMzEpXG5jb25zdCBNQVhVSU5UID0gMiAqKiAzMiAtIDFcbmNvbnN0IE1BWEZMT0FUID0gMy40MDI4MjM1ZTM4XG5jb25zdCBNSU5GTE9BVCA9IC0zLjQwMjgyMzVlMzhcbmNvbnN0IE1JTklOVDY0ID0gTnVtYmVyLk1JTl9TQUZFX0lOVEVHRVJcbmNvbnN0IE1BWElOVDY0ID0gTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVJcblxuZnVuY3Rpb24gcHNwZWNGcm9tR1R5cGUodHlwZTogR1R5cGU8dW5rbm93bj4sIG5hbWU6IHN0cmluZywgZmxhZ3M6IFBhcmFtRmxhZ3MpIHtcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfQk9PTEVBTjpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMuYm9vbGVhbihuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgZmFsc2UpXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX1NUUklORzpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMuc3RyaW5nKG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzLCBcIlwiKVxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9JTlQ6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmludChuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgTUlOSU5ULCBNQVhJTlQsIDApXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX1VJTlQ6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLnVpbnQobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIDAsIE1BWFVJTlQsIDApXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0lOVDY0OlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5pbnQ2NChuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgTUlOSU5UNjQsIE1BWElOVDY0LCAwKVxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9VSU5UNjQ6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLnVpbnQ2NChuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgMCwgTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVIsIDApXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX0ZMT0FUOlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5mbG9hdChuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgTUlORkxPQVQsIE1BWEZMT0FULCAwKVxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9ET1VCTEU6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmRvdWJsZShuYW1lLCBcIlwiLCBcIlwiLCBmbGFncywgTnVtYmVyLk1JTl9WQUxVRSwgTnVtYmVyLk1JTl9WQUxVRSwgMClcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfSlNPQkpFQ1Q6XG4gICAgICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmpzb2JqZWN0KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzKVxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9WQVJJQU5UOlxuICAgICAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5vYmplY3QobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MgYXMgYW55LCBHTGliLlZhcmlhbnQpXG5cbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfRU5VTTpcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfSU5URVJGQUNFOlxuICAgICAgICBjYXNlIEdPYmplY3QuVFlQRV9CT1hFRDpcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfUE9JTlRFUjpcbiAgICAgICAgY2FzZSBHT2JqZWN0LlRZUEVfUEFSQU06XG4gICAgICAgIGNhc2UgR09iamVjdC50eXBlX2Zyb21fbmFtZShcIkdUeXBlXCIpOlxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYGNhbm5vdCBndWVzcyBQYXJhbVNwZWMgZnJvbSBHVHlwZSBcIiR7dHlwZX1cImApXG4gICAgICAgIGNhc2UgR09iamVjdC5UWVBFX09CSkVDVDpcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBQYXJhbVNwZWMub2JqZWN0KG5hbWUsIFwiXCIsIFwiXCIsIGZsYWdzIGFzIGFueSwgdHlwZSlcbiAgICB9XG59XG5cbmZ1bmN0aW9uIHBzcGVjKG5hbWU6IHN0cmluZywgZmxhZ3M6IFBhcmFtRmxhZ3MsIGRlY2xhcmF0aW9uOiBQcm9wZXJ0eVR5cGVEZWNsYXJhdGlvbjx1bmtub3duPikge1xuICAgIGlmIChkZWNsYXJhdGlvbiBpbnN0YW5jZW9mIFBhcmFtU3BlYykgcmV0dXJuIGRlY2xhcmF0aW9uXG5cbiAgICBpZiAoZGVjbGFyYXRpb24gPT09IE9iamVjdCB8fCBkZWNsYXJhdGlvbiA9PT0gRnVuY3Rpb24gfHwgZGVjbGFyYXRpb24gPT09IEFycmF5KSB7XG4gICAgICAgIHJldHVybiBQYXJhbVNwZWMuanNvYmplY3QobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MpXG4gICAgfVxuXG4gICAgaWYgKGRlY2xhcmF0aW9uID09PSBTdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5zdHJpbmcobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIFwiXCIpXG4gICAgfVxuXG4gICAgaWYgKGRlY2xhcmF0aW9uID09PSBOdW1iZXIpIHtcbiAgICAgICAgcmV0dXJuIFBhcmFtU3BlYy5kb3VibGUobmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIC1OdW1iZXIuTUFYX1ZBTFVFLCBOdW1iZXIuTUFYX1ZBTFVFLCAwKVxuICAgIH1cblxuICAgIGlmIChkZWNsYXJhdGlvbiA9PT0gQm9vbGVhbikge1xuICAgICAgICByZXR1cm4gUGFyYW1TcGVjLmJvb2xlYW4obmFtZSwgXCJcIiwgXCJcIiwgZmxhZ3MsIGZhbHNlKVxuICAgIH1cblxuICAgIGlmIChcIiRndHlwZVwiIGluIGRlY2xhcmF0aW9uKSB7XG4gICAgICAgIHJldHVybiBwc3BlY0Zyb21HVHlwZShkZWNsYXJhdGlvbi4kZ3R5cGUsIG5hbWUsIGZsYWdzKVxuICAgIH1cblxuICAgIGlmICh0eXBlb2YgZGVjbGFyYXRpb24gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICByZXR1cm4gZGVjbGFyYXRpb24obmFtZSwgZmxhZ3MpXG4gICAgfVxuXG4gICAgdGhyb3cgRXJyb3IoXCJpbnZhbGlkIFByb3BlcnR5VHlwZURlY2xhcmF0aW9uXCIpXG59XG5cbnR5cGUgTWV0YUluZm8gPSBHT2JqZWN0Lk1ldGFJbmZvPG5ldmVyLCBBcnJheTx7ICRndHlwZTogR1R5cGU8dW5rbm93bj4gfT4sIG5ldmVyPlxuXG4vKipcbiAqIFJlcGxhY2VtZW50IGZvciB7QGxpbmsgR09iamVjdC5yZWdpc3RlckNsYXNzfVxuICogVGhpcyBkZWNvcmF0b3IgY29uc3VtZXMgbWV0YWRhdGEgbmVlZGVkIHRvIHJlZ2lzdGVyIHR5cGVzIHdoZXJlIHRoZSBwcm92aWRlZCBkZWNvcmF0b3JzIGFyZSB1c2VkOlxuICogLSB7QGxpbmsgc2lnbmFsfVxuICogLSB7QGxpbmsgcHJvcGVydHl9XG4gKiAtIHtAbGluayBnZXR0ZXJ9XG4gKiAtIHtAbGluayBzZXR0ZXJ9XG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYHRzXG4gKiBcXEByZWdpc3Rlcih7IEdUeXBlTmFtZTogXCJNeUNsYXNzXCIgfSlcbiAqIGNsYXNzIE15Q2xhc3MgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7IH1cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVnaXN0ZXI8Q2xzIGV4dGVuZHMgeyBuZXcgKC4uLmFyZ3M6IGFueSk6IEdPYmogfT4ob3B0aW9uczogTWV0YUluZm8gPSB7fSkge1xuICAgIHJldHVybiBmdW5jdGlvbiAoY2xzOiBDbHMsIGN0eDogQ2xhc3NEZWNvcmF0b3JDb250ZXh0PENscz4pIHtcbiAgICAgICAgY29uc3QgdCA9IG9wdGlvbnMuVGVtcGxhdGVcblxuICAgICAgICBpZiAodHlwZW9mIHQgPT09IFwic3RyaW5nXCIgJiYgIXQuc3RhcnRzV2l0aChcInJlc291cmNlOi8vXCIpICYmICF0LnN0YXJ0c1dpdGgoXCJmaWxlOi8vXCIpKSB7XG4gICAgICAgICAgICBvcHRpb25zLlRlbXBsYXRlID0gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHQpXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBtZXRhID0gY3R4Lm1ldGFkYXRhISBhcyBNZXRhXG5cbiAgICAgICAgY29uc3QgcHJvcHM6IFJlY29yZDxzdHJpbmcsIFBhcmFtU3BlYzx1bmtub3duPj4gPSBmcm9tRW50cmllcyhcbiAgICAgICAgICAgIGVudHJpZXMobWV0YS5wcm9wZXJ0aWVzID8/IHt9KS5tYXAoKFtmaWVsZE5hbWUsIHsgZmxhZ3MsIHR5cGUgfV0pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBrZXkgPSBrZWJhYmlmeShmaWVsZE5hbWUpXG4gICAgICAgICAgICAgICAgY29uc3Qgc3BlYyA9IHBzcGVjKGtleSwgZmxhZ3MsIHR5cGUpXG4gICAgICAgICAgICAgICAgcmV0dXJuIFtrZXksIHNwZWNdXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgKVxuXG4gICAgICAgIGNvbnN0IHNpZ25hbHMgPSBmcm9tRW50cmllcyhcbiAgICAgICAgICAgIGVudHJpZXMobWV0YS5zaWduYWxzID8/IHt9KS5tYXAoKFtzaWduYWxOYW1lLCB7IGRlZmF1bHQ6IGRlZiwgbWV0aG9kLCAuLi5zaWduYWwgfV0pID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZGVmKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlZmluZVByb3BlcnR5KGNscy5wcm90b3R5cGUsIGBvbl8ke3NpZ25hbE5hbWUucmVwbGFjZUFsbChcIi1cIiwgXCJfXCIpfWAsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBtZXRob2QsXG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBbc2lnbmFsTmFtZSwgc2lnbmFsXVxuICAgICAgICAgICAgfSksXG4gICAgICAgIClcblxuICAgICAgICBkZWxldGUgbWV0YS5wcm9wZXJ0aWVzXG4gICAgICAgIGRlbGV0ZSBtZXRhLnNpZ25hbHNcblxuICAgICAgICByZWdpc3RlckNsYXNzKHsgLi4ub3B0aW9ucywgUHJvcGVydGllczogcHJvcHMsIFNpZ25hbHM6IHNpZ25hbHMgfSwgY2xzKVxuICAgIH1cbn1cblxuLyoqXG4gKiBAZXhwZXJpbWVudGFsXG4gKiBBc3NlcnRzIGEgZ3R5cGUgaW4gY2FzZXMgd2hlcmUgdGhlIHR5cGUgaXMgdG9vIGxvb3NlL3N0cmljdC5cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHNcbiAqIHR5cGUgVHVwbGUgPSBbbnVtYmVyLCBudW1iZXJdXG4gKiBjb25zdCBUdXBsZSA9IGd0eXBlPFR1cGxlPihBcnJheSlcbiAqXG4gKiBjbGFzcyB7XG4gKiAgIFxcQHByb3BlcnR5KFR1cGxlKSB2YWx1ZSA9IFsxLCAyXSBhcyBUdXBsZVxuICogfVxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBndHlwZTxBc3NlcnQ+KHR5cGU6IEdUeXBlPGFueT4gfCB7ICRndHlwZTogR1R5cGU8YW55PiB9KToge1xuICAgICRndHlwZTogR1R5cGU8QXNzZXJ0PlxufSB7XG4gICAgcmV0dXJuIFwiJGd0eXBlXCIgaW4gdHlwZSA/IHR5cGUgOiB7ICRndHlwZTogdHlwZSB9XG59XG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgICBpbnRlcmZhY2UgRnVuY3Rpb25Db25zdHJ1Y3RvciB7XG4gICAgICAgICRndHlwZTogR1R5cGU8KC4uLmFyZ3M6IGFueVtdKSA9PiBhbnk+XG4gICAgfVxuXG4gICAgaW50ZXJmYWNlIEFycmF5Q29uc3RydWN0b3Ige1xuICAgICAgICAkZ3R5cGU6IEdUeXBlPGFueVtdPlxuICAgIH1cblxuICAgIGludGVyZmFjZSBEYXRlQ29uc3RydWN0b3Ige1xuICAgICAgICAkZ3R5cGU6IEdUeXBlPERhdGU+XG4gICAgfVxuXG4gICAgaW50ZXJmYWNlIE1hcENvbnN0cnVjdG9yIHtcbiAgICAgICAgJGd0eXBlOiBHVHlwZTxNYXA8YW55LCBhbnk+PlxuICAgIH1cblxuICAgIGludGVyZmFjZSBTZXRDb25zdHJ1Y3RvciB7XG4gICAgICAgICRndHlwZTogR1R5cGU8U2V0PGFueT4+XG4gICAgfVxufVxuXG5GdW5jdGlvbi4kZ3R5cGUgPSBPYmplY3QuJGd0eXBlIGFzIEZ1bmN0aW9uQ29uc3RydWN0b3JbXCIkZ3R5cGVcIl1cbkFycmF5LiRndHlwZSA9IE9iamVjdC4kZ3R5cGUgYXMgQXJyYXlDb25zdHJ1Y3RvcltcIiRndHlwZVwiXVxuRGF0ZS4kZ3R5cGUgPSBPYmplY3QuJGd0eXBlIGFzIERhdGVDb25zdHJ1Y3RvcltcIiRndHlwZVwiXVxuTWFwLiRndHlwZSA9IE9iamVjdC4kZ3R5cGUgYXMgTWFwQ29uc3RydWN0b3JbXCIkZ3R5cGVcIl1cblNldC4kZ3R5cGUgPSBPYmplY3QuJGd0eXBlIGFzIFNldENvbnN0cnVjdG9yW1wiJGd0eXBlXCJdXG4iLCAiaW1wb3J0IHR5cGUgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcblxuZXhwb3J0IGZ1bmN0aW9uIGtlYmFiaWZ5KHN0cjogc3RyaW5nKSB7XG4gICAgcmV0dXJuIHN0clxuICAgICAgICAucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvZywgXCIkMS0kMlwiKVxuICAgICAgICAucmVwbGFjZUFsbChcIl9cIiwgXCItXCIpXG4gICAgICAgIC50b0xvd2VyQ2FzZSgpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzbmFrZWlmeShzdHI6IHN0cmluZykge1xuICAgIHJldHVybiBzdHJcbiAgICAgICAgLnJlcGxhY2UoLyhbYS16XSkoW0EtWl0pL2csIFwiJDEtJDJcIilcbiAgICAgICAgLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKVxuICAgICAgICAudG9Mb3dlckNhc2UoKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY2FtZWxpZnkoc3RyOiBzdHJpbmcpIHtcbiAgICByZXR1cm4gc3RyLnJlcGxhY2UoL1stX10oLikvZywgKF8sIGNoYXIpID0+IGNoYXIudG9VcHBlckNhc2UoKSlcbn1cblxuZXhwb3J0IHR5cGUgUGFzY2FsaWZ5PFM+ID0gUyBleHRlbmRzIGAke2luZmVyIEhlYWR9JHtcIi1cIiB8IFwiX1wifSR7aW5mZXIgVGFpbH1gXG4gICAgPyBgJHtDYXBpdGFsaXplPEhlYWQ+fSR7UGFzY2FsaWZ5PFRhaWw+fWBcbiAgICA6IFMgZXh0ZW5kcyBzdHJpbmdcbiAgICAgID8gQ2FwaXRhbGl6ZTxTPlxuICAgICAgOiBuZXZlclxuXG5leHBvcnQgdHlwZSBYbWxOb2RlID0ge1xuICAgIG5hbWU6IHN0cmluZ1xuICAgIGF0dHJpYnV0ZXM/OiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+XG4gICAgY2hpbGRyZW4/OiBBcnJheTxYbWxOb2RlPlxufVxuXG5leHBvcnQgZnVuY3Rpb24geG1sKHsgbmFtZSwgYXR0cmlidXRlcywgY2hpbGRyZW4gfTogWG1sTm9kZSkge1xuICAgIGxldCBidWlsZGVyID0gYDwke25hbWV9YFxuXG4gICAgY29uc3QgYXR0cnMgPSBPYmplY3QuZW50cmllcyhhdHRyaWJ1dGVzID8/IFtdKVxuXG4gICAgaWYgKGF0dHJzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgYXR0cnMpIHtcbiAgICAgICAgICAgIGJ1aWxkZXIgKz0gYCAke2tleX09XCIke3ZhbHVlfVwiYFxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGNoaWxkcmVuICYmIGNoaWxkcmVuLmxlbmd0aCA+IDApIHtcbiAgICAgICAgYnVpbGRlciArPSBcIj5cIlxuICAgICAgICBmb3IgKGNvbnN0IG5vZGUgb2YgY2hpbGRyZW4pIHtcbiAgICAgICAgICAgIGJ1aWxkZXIgKz0geG1sKG5vZGUpXG4gICAgICAgIH1cbiAgICAgICAgYnVpbGRlciArPSBgPC8ke25hbWV9PmBcbiAgICB9IGVsc2Uge1xuICAgICAgICBidWlsZGVyICs9IFwiIC8+XCJcbiAgICB9XG5cbiAgICByZXR1cm4gYnVpbGRlclxufVxuXG4vLyBCaW5kaW5ncyB3b3JrIG92ZXIgcHJvcGVydGllcyBpbiBrZWJhYi1jYXNlIGJlY2F1c2UgdGhhdHMgdGhlIGNvbnZlbnRpb24gb2YgZ29iamVjdFxuLy8gaG93ZXZlciBpbiBqcyBpdHMgZWl0aGVyIHNuYWtlX2Nhc2Ugb3IgY2FtZWxDYXNlXG4vLyBhbHNvIG9uIERCdXMgaW50ZXJmYWNlcyBpdHMgUGFzY2FsQ2FzZSBieSBjb252ZW50aW9uXG4vLyBzbyBhcyBhIHdvcmthcm91bmQgd2UgdXNlIGdldF9wcm9wZXJ0eV9uYW1lIGFuZCBvbmx5IHVzZSB0aGUgcHJvcGVydHkgZmllbGQgYXMgYSBmYWxsYmFja1xuZXhwb3J0IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5R2V0dGVyPFQgZXh0ZW5kcyBvYmplY3Q+KG9iamVjdDogVCwgcHJvcDogRXh0cmFjdDxrZXlvZiBULCBzdHJpbmc+KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iamVjdCwgYGdldF8ke2tlYmFiaWZ5KHByb3ApLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKX1gLCB7XG4gICAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiAoKSA9PiBvYmplY3RbcHJvcF0sXG4gICAgfSlcbn1cblxuLy8gYXR0ZW1wdCBzZXR0aW5nIGEgcHJvcGVydHkgb2YgR09iamVjdC5PYmplY3RcbmV4cG9ydCBmdW5jdGlvbiBzZXQob2JqOiBHT2JqZWN0Lk9iamVjdCwgcHJvcDogc3RyaW5nLCB2YWx1ZTogYW55KSB7XG4gICAgY29uc3Qga2V5ID0gc25ha2VpZnkocHJvcClcbiAgICBjb25zdCBnZXR0ZXIgPSBgZ2V0XyR7a2V5fWAgYXMga2V5b2YgdHlwZW9mIG9ialxuICAgIGNvbnN0IHNldHRlciA9IGBzZXRfJHtrZXl9YCBhcyBrZXlvZiB0eXBlb2Ygb2JqXG5cbiAgICBsZXQgY3VycmVudDogdW5rbm93blxuXG4gICAgaWYgKGdldHRlciBpbiBvYmogJiYgdHlwZW9mIG9ialtnZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgY3VycmVudCA9IChvYmpbZ2V0dGVyXSBhcyAoKSA9PiB1bmtub3duKSgpXG4gICAgfSBlbHNlIHtcbiAgICAgICAgY3VycmVudCA9IG9ialtwcm9wIGFzIGtleW9mIHR5cGVvZiBvYmpdXG4gICAgfVxuXG4gICAgaWYgKGN1cnJlbnQgIT09IHZhbHVlKSB7XG4gICAgICAgIGlmIChzZXR0ZXIgaW4gb2JqICYmIHR5cGVvZiBvYmpbc2V0dGVyXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICA7KG9ialtzZXR0ZXJdIGFzICh2OiBhbnkpID0+IHZvaWQpKHZhbHVlKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihvYmosIHsgW3Byb3BdOiB2YWx1ZSB9KVxuICAgICAgICB9XG4gICAgfVxufVxuIiwgImltcG9ydCBcIi4uL292ZXJyaWRlcy5qc1wiXG5pbXBvcnQgR09iamVjdCwgeyByZWdpc3Rlciwgc2lnbmFsLCBzZXR0ZXIgfSBmcm9tIFwiZ25pbS9nb2JqZWN0XCJcbmltcG9ydCBHTGliIGZyb20gXCJnaTovL0dMaWI/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEdkayBmcm9tIFwiZ2k6Ly9HZGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW8/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IHsgZ2V0dGVyIH0gZnJvbSBcImduaW0vZ29iamVjdFwiXG5pbXBvcnQgeyBBcHBEQnVzIH0gZnJvbSBcIi4uL2FwcC9kYnVzLmpzXCJcbmltcG9ydCB7IHNldENvbnNvbGVMb2dEb21haW4gfSBmcm9tIFwiY29uc29sZVwiXG5pbXBvcnQgeyBleGl0LCBwcm9ncmFtQXJncyB9IGZyb20gXCJzeXN0ZW1cIlxuaW1wb3J0IHsgY3JlYXRlUm9vdCB9IGZyb20gXCJnbmltXCJcblxuR3RrLmluaXQoKVxuXG4vLyBzdG9wIHRoaXMgZnJvbSBsZWFraW5nIGludG8gc3VicHJvY2Vzc2VzXG4vLyBhbmQgZ2lvIGxhdW5jaCBpbnZvY2F0aW9uc1xuR0xpYi51bnNldGVudihcIkxEX1BSRUxPQURcIilcblxuLy8gdXNlcnMgbWlnaHQgd2FudCB0byB1c2UgQWR3YWl0YSBpbiB3aGljaCBjYXNlIGl0IGhhcyB0byBiZSBpbml0aWFsaXplZFxuLy8gaXQgbWlnaHQgYmUgY29tbW9uIHBpdGZhbGwgdG8gZm9yZ2V0IGl0IGJlY2F1c2UgYEFwcGAgaXMgbm90IGBBZHcuQXBwbGljYXRpb25gXG5hd2FpdCBpbXBvcnQoXCJnaTovL0Fkdz92ZXJzaW9uPTFcIikudGhlbigoeyBkZWZhdWx0OiBBZHcgfSkgPT4gQWR3LmluaXQoKSkuY2F0Y2goKCkgPT4gdm9pZCAwKVxuXG50eXBlIFN0YXJ0Q29uZmlnID0gUGFydGlhbDx7XG4gICAgaW5zdGFuY2VOYW1lOiBzdHJpbmdcbiAgICBjc3M6IHN0cmluZ1xuICAgIGljb25zOiBzdHJpbmdcbiAgICBndGtUaGVtZTogc3RyaW5nXG4gICAgaWNvblRoZW1lOiBzdHJpbmdcbiAgICBjdXJzb3JUaGVtZTogc3RyaW5nXG4gICAgbWFpbiguLi5hcmd2OiBzdHJpbmdbXSk6IHZvaWRcbiAgICByZXF1ZXN0SGFuZGxlcihhcmd2OiBzdHJpbmdbXSwgcmVzOiAocmVzcG9uc2U6IGFueSkgPT4gdm9pZCk6IHZvaWRcbn0+XG5cbmludGVyZmFjZSBBcHBTaWduYWxzIGV4dGVuZHMgR3RrLkFwcGxpY2F0aW9uLlNpZ25hbFNpZ25hdHVyZXMge1xuICAgIFwicmVxdWVzdFwiOiBBcHBbXCJyZXF1ZXN0XCJdXG4gICAgXCJ3aW5kb3ctdG9nZ2xlZFwiOiBBcHBbXCJ3aW5kb3dUb2dnbGVkXCJdXG59XG5cbkByZWdpc3RlcigpXG5jbGFzcyBBcHAgZXh0ZW5kcyBHdGsuQXBwbGljYXRpb24ge1xuICAgIGRlY2xhcmUgJHNpZ25hbHM6IEFwcFNpZ25hbHNcblxuICAgICNpbnN0YW5jZU5hbWUgPSBcImFnc1wiXG4gICAgI21haW4/OiAoLi4uYXJndjogc3RyaW5nW10pID0+IHZvaWRcbiAgICAjcmVxdWVzdEhhbmRsZXJzID0gMFxuICAgICNkYnVzU2VydmljZTogQXBwREJ1c1xuICAgICNjc3NQcm92aWRlcnMgPSBuZXcgQXJyYXk8R3RrLkNzc1Byb3ZpZGVyPigpXG5cbiAgICBnZXQgI3NldHRpbmdzKCk6IEd0ay5TZXR0aW5ncyB7XG4gICAgICAgIGNvbnN0IHNldHRpbmdzID0gR3RrLlNldHRpbmdzLmdldF9kZWZhdWx0KClcbiAgICAgICAgaWYgKCFzZXR0aW5ncykgdGhyb3cgRXJyb3IoXCJjb3VsZCBub3QgZ2V0IHNldHRpbmdzXCIpXG4gICAgICAgIHJldHVybiBzZXR0aW5nc1xuICAgIH1cblxuICAgIGdldCAjZGlzcGxheSgpOiBHZGsuRGlzcGxheSB7XG4gICAgICAgIGNvbnN0IGRpc3BsYXkgPSBHZGsuRGlzcGxheS5nZXRfZGVmYXVsdCgpXG4gICAgICAgIGlmICghZGlzcGxheSkgdGhyb3cgRXJyb3IoXCJjb3VsZCBub3QgZ2V0IGRpc3BsYXlcIilcbiAgICAgICAgcmV0dXJuIGRpc3BsYXlcbiAgICB9XG5cbiAgICBnZXQgaW5zdGFuY2VOYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jaW5zdGFuY2VOYW1lXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2V0IGFsbCBtb25pdG9ycyBmcm9tIHtAbGluayBHZGsuRGlzcGxheX0uXG4gICAgICovXG4gICAgZ2V0X21vbml0b3JzKCkge1xuICAgICAgICBjb25zdCBtb25zID0gdGhpcy4jZGlzcGxheS5nZXRfbW9uaXRvcnMoKSBhcyBHaW8uTGlzdE1vZGVsPEdkay5Nb25pdG9yPlxuICAgICAgICBjb25zdCBsaXN0ID0gbmV3IEFycmF5PEdkay5Nb25pdG9yPigpXG5cbiAgICAgICAgbGV0IG1vbml0b3I6IEdkay5Nb25pdG9yIHwgbnVsbCA9IG51bGxcbiAgICAgICAgbGV0IGkgPSAwXG5cbiAgICAgICAgd2hpbGUgKChtb25pdG9yID0gbW9ucy5nZXRfaXRlbShpKyspKSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgbGlzdC5wdXNoKG1vbml0b3IpXG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbGlzdFxuICAgIH1cblxuICAgIEBzaWduYWwoR3RrLldpbmRvdylcbiAgICBwcml2YXRlIHdpbmRvd1RvZ2dsZWQod2luZG93OiBHdGsuV2luZG93KSB7XG4gICAgICAgIHZvaWQgd2luZG93XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogR2V0IGFsbCBtb25pdG9ycyBmcm9tIHtAbGluayBHZGsuRGlzcGxheX0uXG4gICAgICovXG4gICAgQGdldHRlcihBcnJheSlcbiAgICBnZXQgbW9uaXRvcnMoKTogQXJyYXk8R2RrLk1vbml0b3I+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0X21vbml0b3JzKClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBXaW5kb3dzIHRoYXQgaGFzIGJlZW4gYWRkZWQgdG8gdGhpcyBhcHBcbiAgICAgKiB1c2luZyB7QGxpbmsgR3RrLkFwcGxpY2F0aW9uLnByb3RvdHlwZS5hZGRfd2luZG93fS5cbiAgICAgKi9cbiAgICBAZ2V0dGVyKEFycmF5KVxuICAgIGdldCB3aW5kb3dzKCk6IEFycmF5PEd0ay5XaW5kb3c+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0X3dpbmRvd3MoKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3J0Y3V0IGZvciB7QGxpbmsgR3RrLlNldHRpbmdzLnByb3RvdHlwZS5ndGtUaGVtZU5hbWV9XG4gICAgICovXG4gICAgQHNldHRlcihTdHJpbmcpXG4gICAgc2V0IGd0a1RoZW1lKG5hbWU6IHN0cmluZykge1xuICAgICAgICB0aGlzLiNzZXR0aW5ncy5ndGtUaGVtZU5hbWUgPSBuYW1lXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2hvcnRjdXQgZm9yIHtAbGluayBHdGsuU2V0dGluZ3MucHJvdG90eXBlLmd0a1RoZW1lTmFtZX1cbiAgICAgKi9cbiAgICBAZ2V0dGVyKFN0cmluZylcbiAgICBnZXQgZ3RrVGhlbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiNzZXR0aW5ncy5ndGtUaGVtZU5hbWVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaG9ydGN1dCBmb3Ige0BsaW5rIEd0ay5TZXR0aW5ncy5wcm90b3R5cGUuZ3RrSWNvblRoZW1lTmFtZX1cbiAgICAgKi9cbiAgICBAc2V0dGVyKFN0cmluZylcbiAgICBzZXQgaWNvblRoZW1lKG5hbWU6IHN0cmluZykge1xuICAgICAgICB0aGlzLiNzZXR0aW5ncy5ndGtJY29uVGhlbWVOYW1lID0gbmFtZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNob3J0Y3V0IGZvciB7QGxpbmsgR3RrLlNldHRpbmdzLnByb3RvdHlwZS5ndGtJY29uVGhlbWVOYW1lfVxuICAgICAqL1xuICAgIEBnZXR0ZXIoU3RyaW5nKVxuICAgIGdldCBpY29uVGhlbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiNzZXR0aW5ncy5ndGtJY29uVGhlbWVOYW1lXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2hvcnRjdXQgZm9yIHtAbGluayBHdGsuU2V0dGluZ3MucHJvdG90eXBlLmd0a0N1cnNvclRoZW1lTmFtZX1cbiAgICAgKi9cbiAgICBAc2V0dGVyKFN0cmluZylcbiAgICBzZXQgY3Vyc29yVGhlbWUobmFtZTogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMuI3NldHRpbmdzLmd0a0N1cnNvclRoZW1lTmFtZSA9IG5hbWVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTaG9ydGN1dCBmb3Ige0BsaW5rIEd0ay5TZXR0aW5ncy5wcm90b3R5cGUuZ3RrQ3Vyc29yVGhlbWVOYW1lfVxuICAgICAqL1xuICAgIEBnZXR0ZXIoU3RyaW5nKVxuICAgIGdldCBjdXJzb3JUaGVtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI3NldHRpbmdzLmd0a0N1cnNvclRoZW1lTmFtZVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldCBhIHdpbmRvdyBieSBpdHMge0BsaW5rIEd0ay5XaWRnZXQucHJvdG90eXBlLm5hbWV9IHRoYXQgaGFzIGJlZW4gYWRkZWQgdG8gdGhpcyBhcHBcbiAgICAgKiB1c2luZyB7QGxpbmsgR3RrLkFwcGxpY2F0aW9uLnByb3RvdHlwZS5hZGRfd2luZG93fS5cbiAgICAgKi9cbiAgICBnZXRfd2luZG93KG5hbWU6IHN0cmluZykge1xuICAgICAgICByZXR1cm4gdGhpcy53aW5kb3dzLmZpbmQoKHcpID0+IHcubmFtZSA9PT0gbmFtZSlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUb2dnbGUgdGhlIHZpc2liaWxpdHkgb2YgYSB3aW5kb3cgYnkgaXRzIHtAbGluayBHdGsuV2lkZ2V0LnByb3RvdHlwZS5uYW1lfVxuICAgICAqIHRoYXQgaGFzIGJlZW4gYWRkZWQgdG8gdGhpcyBhcHAgdXNpbmcge0BsaW5rIEd0ay5BcHBsaWNhdGlvbi5wcm90b3R5cGUuYWRkX3dpbmRvd30uXG4gICAgICovXG4gICAgdG9nZ2xlX3dpbmRvdyhuYW1lOiBzdHJpbmcpIHtcbiAgICAgICAgY29uc3Qgd2luID0gdGhpcy5nZXRfd2luZG93KG5hbWUpXG4gICAgICAgIGlmICghd2luKSB0aHJvdyBFcnJvcihgbm8gd2luZG93IHJlZ2lzdGVyZWQgd2l0aCBuYW1lIFwiJHtuYW1lfVwiYClcbiAgICAgICAgd2luLnZpc2libGUgPSAhd2luLnZpc2libGVcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXNldCBwcmV2aW91c2x5IHNldCBjc3MgcHJvdmlkZXJzIHdpdGgge0BsaW5rIEFwcC5wcm90b3R5cGUuYXBwbHlfY3NzfS5cbiAgICAgKi9cbiAgICByZXNldF9jc3MoKSB7XG4gICAgICAgIGZvciAoY29uc3QgcHJvdmlkZXIgb2YgdGhpcy4jY3NzUHJvdmlkZXJzKSB7XG4gICAgICAgICAgICBHdGsuU3R5bGVDb250ZXh0LnJlbW92ZV9wcm92aWRlcl9mb3JfZGlzcGxheSh0aGlzLiNkaXNwbGF5LCBwcm92aWRlcilcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEFkZCBhIG5ldyB7QGxpbmsgR3RrLkNzc1Byb3ZpZGVyfS5cbiAgICAgKiBAcGFyYW0gc3R5bGUgQ3NzIHN0cmluZyBvciBhIHBhdGggdG8gYSBjc3MgZmlsZS5cbiAgICAgKi9cbiAgICBhcHBseV9jc3Moc3R5bGU6IHN0cmluZywgcmVzZXQgPSBmYWxzZSkge1xuICAgICAgICBjb25zdCBwcm92aWRlciA9IG5ldyBHdGsuQ3NzUHJvdmlkZXIoKVxuXG4gICAgICAgIHByb3ZpZGVyLmNvbm5lY3QoXCJwYXJzaW5nLWVycm9yXCIsIChfLCBzZWN0aW9uLCBlcnJvcikgPT4ge1xuICAgICAgICAgICAgY29uc3QgbmFtZSA9IHNlY3Rpb24uZ2V0X2ZpbGUoKT8uZ2V0X2Jhc2VuYW1lKCkgPz8gXCJcIlxuICAgICAgICAgICAgY29uc3QgbGluZSA9IHNlY3Rpb24uZ2V0X3N0YXJ0X2xvY2F0aW9uKCkubGluZXMgKyAxXG4gICAgICAgICAgICBjb25zdCBjaGFycyA9IHNlY3Rpb24uZ2V0X3N0YXJ0X2xvY2F0aW9uKCkubGluZV9jaGFycyArIDFcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYENTUyBFcnJvciAke25hbWV9OiR7bGluZX06JHtjaGFyc30gJHtlcnJvci5tZXNzYWdlfWApXG4gICAgICAgIH0pXG5cbiAgICAgICAgaWYgKHJlc2V0KSB0aGlzLnJlc2V0X2NzcygpXG5cbiAgICAgICAgaWYgKEdMaWIuZmlsZV90ZXN0KHN0eWxlLCBHTGliLkZpbGVUZXN0LkVYSVNUUykpIHtcbiAgICAgICAgICAgIHByb3ZpZGVyLmxvYWRfZnJvbV9wYXRoKHN0eWxlKVxuICAgICAgICB9IGVsc2UgaWYgKHN0eWxlLnN0YXJ0c1dpdGgoXCJyZXNvdXJjZTovL1wiKSkge1xuICAgICAgICAgICAgcHJvdmlkZXIubG9hZF9mcm9tX3Jlc291cmNlKHN0eWxlLnJlcGxhY2UoXCJyZXNvdXJjZTovL1wiLCBcIlwiKSlcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHByb3ZpZGVyLmxvYWRfZnJvbV9zdHJpbmcoc3R5bGUpXG4gICAgICAgIH1cblxuICAgICAgICBHdGsuU3R5bGVDb250ZXh0LmFkZF9wcm92aWRlcl9mb3JfZGlzcGxheShcbiAgICAgICAgICAgIHRoaXMuI2Rpc3BsYXksXG4gICAgICAgICAgICBwcm92aWRlcixcbiAgICAgICAgICAgIEd0ay5TVFlMRV9QUk9WSURFUl9QUklPUklUWV9VU0VSLFxuICAgICAgICApXG5cbiAgICAgICAgdGhpcy4jY3NzUHJvdmlkZXJzLnB1c2gocHJvdmlkZXIpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2hvcnRjdXQgZm9yIHtAbGluayBHdGsuSWNvblRoZW1lLnByb3RvdHlwZS5hZGRfc2VhcmNoX3BhdGh9LlxuICAgICAqL1xuICAgIGFkZF9pY29ucyhwYXRoOiBzdHJpbmcpIHtcbiAgICAgICAgR3RrLkljb25UaGVtZS5nZXRfZm9yX2Rpc3BsYXkodGhpcy4jZGlzcGxheSkuYWRkX3NlYXJjaF9wYXRoKHBhdGgpXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUXVpdCBhbmQgZXhpdCB0aGUgYXBwbGljYXRpb24uXG4gICAgICovXG4gICAgcXVpdChjb2RlID0gMCkge1xuICAgICAgICB0aGlzLiNkYnVzU2VydmljZS5zdG9wKClcbiAgICAgICAgc3VwZXIucXVpdCgpXG4gICAgICAgIGV4aXQoY29kZSlcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoeyBmbGFnczogR2lvLkFwcGxpY2F0aW9uRmxhZ3MuSEFORExFU19DT01NQU5EX0xJTkUgfSlcblxuICAgICAgICB0aGlzLiNkYnVzU2VydmljZSA9IG5ldyBBcHBEQnVzKHtcbiAgICAgICAgICAgIHRvZ2dsZVdpbmRvdzogdGhpcy50b2dnbGVfd2luZG93LmJpbmQodGhpcyksXG4gICAgICAgICAgICBxdWl0OiB0aGlzLnF1aXQuYmluZCh0aGlzKSxcbiAgICAgICAgICAgIHJlcXVlc3Q6IChhcmd2KSA9PiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gdGhpcy5yZXF1ZXN0KGFyZ3YsIHJlc29sdmUpKSxcbiAgICAgICAgICAgIGluc2VjdG9yOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgR3RrLldpbmRvdy5zZXRfaW50ZXJhY3RpdmVfZGVidWdnaW5nKHRydWUpXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KVxuXG4gICAgICAgIHRoaXMuI2Rpc3BsYXkuZ2V0X21vbml0b3JzKCkuY29ubmVjdChcIml0ZW1zLWNoYW5nZWRcIiwgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5ub3RpZnkoXCJtb25pdG9yc1wiKVxuICAgICAgICB9KVxuXG4gICAgICAgIHRoaXMuY29ubmVjdChcIndpbmRvdy1hZGRlZFwiLCAoXywgd2luZG93KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBpZDEgPSB3aW5kb3cuY29ubmVjdChcIm5vdGlmeTo6dmlzaWJsZVwiLCAoKSA9PiB0aGlzLndpbmRvd1RvZ2dsZWQod2luZG93KSlcbiAgICAgICAgICAgIGNvbnN0IGlkMiA9IHRoaXMuY29ubmVjdChcIndpbmRvdy1yZW1vdmVkXCIsIChfLCByZW1vdmVkKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHJlbW92ZWQgPT0gd2luZG93KSB7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5kaXNjb25uZWN0KGlkMSlcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kaXNjb25uZWN0KGlkMilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuXG4gICAgICAgIHRoaXMuI3NldHRpbmdzLmNvbm5lY3QoXCJub3RpZnlcIiwgKF8sIHsgbmFtZSB9KSA9PiB7XG4gICAgICAgICAgICBzd2l0Y2ggKG5hbWUpIHtcbiAgICAgICAgICAgICAgICBjYXNlIFwiZ3RrLXRoZW1lLW5hbWVcIjpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ub3RpZnkoXCJndGstdGhlbWVcIilcbiAgICAgICAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgICAgICBjYXNlIFwiZ3RrLWljb24tdGhlbWUtbmFtZVwiOlxuICAgICAgICAgICAgICAgICAgICB0aGlzLm5vdGlmeShcImljb24tdGhlbWVcIilcbiAgICAgICAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgICAgICBjYXNlIFwiZ3RrLWN1cnNvci10aGVtZS1uYW1lXCI6XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubm90aWZ5KFwiY3Vyc29yLXRoZW1lXCIpXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBAc2lnbmFsKEFycmF5LCBGdW5jdGlvbilcbiAgICBwcml2YXRlIHJlcXVlc3QoYXJnczogc3RyaW5nW10sIHJlc3BvbnNlOiAocmVzcG9uc2U6IHN0cmluZykgPT4gdm9pZCkge1xuICAgICAgICBpZiAodGhpcy4jcmVxdWVzdEhhbmRsZXJzID09PSAwKSB7XG4gICAgICAgICAgICByZXNwb25zZShgaW5zdGFuY2UgXCIke3RoaXMuaW5zdGFuY2VOYW1lfVwiIGhhcyBubyByZXF1ZXN0IGhhbmRsZXIgaW1wbGVtZW50ZWRgKVxuICAgICAgICB9XG4gICAgICAgIHZvaWQgYXJnc1xuICAgIH1cblxuICAgIHZmdW5jX2NvbW1hbmRfbGluZShjbWQ6IEdpby5BcHBsaWNhdGlvbkNvbW1hbmRMaW5lKTogbnVtYmVyIHtcbiAgICAgICAgaWYgKGNtZC5pc1JlbW90ZSkge1xuICAgICAgICAgICAgdGhpcy5yZXF1ZXN0KGNtZC5nZXRfYXJndW1lbnRzKCksIChzdHIpID0+IHtcbiAgICAgICAgICAgICAgICBjbWQucHJpbnRfbGl0ZXJhbChzdHIgKyBcIlxcblwiKVxuICAgICAgICAgICAgICAgIGNtZC5kb25lKClcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmhvbGQoKVxuICAgICAgICAgICAgdGhpcy4jZGJ1c1NlcnZpY2Uuc2VydmUoe1xuICAgICAgICAgICAgICAgIG5hbWU6IHRoaXMuYXBwbGljYXRpb25JZCxcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBjcmVhdGVSb290KChkaXNwb3NlKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb25uZWN0KFwic2h1dGRvd25cIiwgZGlzcG9zZSlcbiAgICAgICAgICAgICAgICB0aGlzLiNtYWluPy4oLi4ucHJvZ3JhbUFyZ3MpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIDBcbiAgICB9XG5cbiAgICBzdGFydChjb25maWc6IFN0YXJ0Q29uZmlnKSB7XG4gICAgICAgIGNvbnN0IHsgbWFpbiwgcmVxdWVzdEhhbmRsZXIsIGluc3RhbmNlTmFtZSwgY3NzLCBpY29ucywgLi4uY2ZnIH0gPSBjb25maWdcblxuICAgICAgICB0aGlzLiNtYWluID0gbWFpblxuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMsIGNmZylcblxuICAgICAgICBpZiAocmVxdWVzdEhhbmRsZXIpIHtcbiAgICAgICAgICAgIHRoaXMuY29ubmVjdChcInJlcXVlc3RcIiwgKF8sIGFyZ3MsIHJlc3BvbnNlKSA9PiByZXF1ZXN0SGFuZGxlcihhcmdzLCByZXNwb25zZSkpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaW5zdGFuY2VOYW1lKSB0aGlzLiNpbnN0YW5jZU5hbWUgPSBpbnN0YW5jZU5hbWVcbiAgICAgICAgaWYgKGNzcykgdGhpcy5hcHBseV9jc3MoY3NzLCBmYWxzZSlcbiAgICAgICAgaWYgKGljb25zKSBhcHAuYWRkX2ljb25zKGljb25zKVxuXG4gICAgICAgIHRoaXMuYXBwbGljYXRpb25JZCA9IFwiaW8uQXN0YWwuXCIgKyB0aGlzLmluc3RhbmNlTmFtZVxuICAgICAgICBzZXRDb25zb2xlTG9nRG9tYWluKHRoaXMuaW5zdGFuY2VOYW1lKVxuICAgICAgICB0aGlzLnJ1bkFzeW5jKHByb2dyYW1BcmdzKVxuICAgIH1cblxuICAgIGNvbm5lY3Q8UyBleHRlbmRzIGtleW9mIEFwcFNpZ25hbHM+KFxuICAgICAgICBzaWduYWw6IFMsXG4gICAgICAgIGNhbGxiYWNrOiBHT2JqZWN0LlNpZ25hbENhbGxiYWNrPHRoaXMsIEFwcFNpZ25hbHNbU10+LFxuICAgICk6IG51bWJlciB7XG4gICAgICAgIGlmIChzaWduYWwgPT09IFwicmVxdWVzdFwiKSB0aGlzLiNyZXF1ZXN0SGFuZGxlcnMgKz0gMVxuICAgICAgICByZXR1cm4gc3VwZXIuY29ubmVjdChzaWduYWwsIGNhbGxiYWNrKVxuICAgIH1cbn1cblxuY29uc3QgYXBwID0gbmV3IEFwcCgpXG5leHBvcnQgZGVmYXVsdCBhcHBcbiIsICIvKipcbiAqIEEge0BsaW5rIFNlcnZpY2V9IGN1cnJlbnRseSBvbmx5IGFsbG93cyBpbnRlcmZhY2luZyB3aXRoIGEgc2luZ2xlIGludGVyZmFjZSBvZiBhIHJlbW90ZSBvYmplY3QuXG4gKiBJbiB0aGUgZnV0dXJlIEkgd2FudCB0byBjb21lIHVwIHdpdGggYW4gQVBJIHRvIGJlIGFibGUgdG8gY3JlYXRlIFNlcnZpY2Ugb2JqZWN0cyBmb3IgbXVsdGlwbGVcbiAqIGludGVyZmFjZXMgb2YgYW4gb2JqZWN0IGF0IHRoZSBzYW1lIHRpbWUuIEV4YW1wbGUgdXNhZ2Ugd291bGQgYmUgZm9yIGV4YW1wbGUgY29tYmluaW5nXG4gKiBcIm9yZy5tcHJpcy5NZWRpYVBsYXllcjJcIiBhbmQgXCJvcmcubXByaXMuTWVkaWFQbGF5ZXIyLlBsYXllclwiIGludG8gYSBzaW5nbGUgb2JqZWN0LlxuICovXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpb1wiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliXCJcbmltcG9ydCBHT2JqZWN0IGZyb20gXCJnaTovL0dPYmplY3RcIlxuaW1wb3J0IHsgZGVmaW5lUHJvcGVydHlHZXR0ZXIsIGtlYmFiaWZ5LCB4bWwgfSBmcm9tIFwiLi91dGlsLmpzXCJcbmltcG9ydCB0eXBlIHsgRGVlcEluZmVyIH0gZnJvbSBcIi4vdmFyaWFudC5qc1wiXG5pbXBvcnQge1xuICAgIHJlZ2lzdGVyLFxuICAgIHByb3BlcnR5IGFzIGdwcm9wZXJ0eSxcbiAgICBzaWduYWwgYXMgZ3NpZ25hbCxcbiAgICBnZXR0ZXIgYXMgZ2dldHRlcixcbiAgICBzZXR0ZXIgYXMgZ3NldHRlcixcbn0gZnJvbSBcIi4vZ29iamVjdC5qc1wiXG5cbmNvbnN0IERFRkFVTFRfVElNRU9VVCA9IDEwXzAwMFxuXG5leHBvcnQgY29uc3QgVmFyaWFudCA9IEdMaWIuVmFyaWFudFxuZXhwb3J0IHR5cGUgVmFyaWFudDxUIGV4dGVuZHMgc3RyaW5nPiA9IEdMaWIuVmFyaWFudDxUPlxuXG5jb25zdCBpbmZvID0gU3ltYm9sKFwiZGJ1cyBpbnRlcmZhY2UgaW5mb1wiKVxuY29uc3QgaW50ZXJuYWxzID0gU3ltYm9sKFwiZGJ1cyBpbnRlcmZhY2UgaW50ZXJuYWxzXCIpXG5jb25zdCByZW1vdGVNZXRob2QgPSBTeW1ib2woXCJwcm94eSByZW1vdGVNZXRob2RcIilcbmNvbnN0IHJlbW90ZU1ldGhvZEFzeW5jID0gU3ltYm9sKFwicHJveHkgcmVtb3RlTWV0aG9kQXN5bmNcIilcbmNvbnN0IHJlbW90ZVByb3BlcnR5U2V0ID0gU3ltYm9sKFwicHJveHkgcmVtb3RlUHJvcGVydHlTZXRcIilcblxudHlwZSBDdHggPSB7IHByaXZhdGU6IGZhbHNlOyBzdGF0aWM6IGZhbHNlOyBuYW1lOiBzdHJpbmcgfVxuXG4vKipcbiAqIEJhc2UgdHlwZSBmb3IgREJ1cyBzZXJ2aWNlcyBhbmQgcHJveGllcy4gSW50ZXJmYWNlIG5hbWUgaXMgc2V0IHdpdGhcbiAqIHRoZSB7QGxpbmsgaWZhY2V9IGRlY29yYXRvciB3aGljaCBhbHNvIHJlZ2lzdGVyIGl0IGFzIGEgR09iamVjdCB0eXBlLlxuICovXG5leHBvcnQgY2xhc3MgU2VydmljZSBleHRlbmRzIEdPYmplY3QuT2JqZWN0IHtcbiAgICBzdGF0aWMgW2luZm9dPzogR2lvLkRCdXNJbnRlcmZhY2VJbmZvXG5cbiAgICBzdGF0aWMge1xuICAgICAgICBHT2JqZWN0LnJlZ2lzdGVyQ2xhc3ModGhpcylcbiAgICB9XG5cbiAgICBbaW50ZXJuYWxzXToge1xuICAgICAgICBkYnVzT2JqZWN0PzogR2lvLkRCdXNFeHBvcnRlZE9iamVjdFxuICAgICAgICBwcm94eT86IEdpby5EQnVzUHJveHlcbiAgICAgICAgcHJpdjogUmVjb3JkPHN0cmluZyB8IHN5bWJvbCwgdW5rbm93bj5cbiAgICAgICAgb25TdG9wOiBTZXQ8KCkgPT4gdm9pZD5cbiAgICB9ID0ge1xuICAgICAgICBwcml2OiB7fSxcbiAgICAgICAgb25TdG9wOiBuZXcgU2V0PCgpID0+IHZvaWQ+KCksXG4gICAgfVxuXG4gICAgI2luZm86IEdpby5EQnVzSW50ZXJmYWNlSW5mb1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKClcbiAgICAgICAgY29uc3Qgc2VydmljZSA9IHRoaXMuY29uc3RydWN0b3IgYXMgdW5rbm93biBhcyB0eXBlb2YgU2VydmljZVxuICAgICAgICBpZiAoIXNlcnZpY2VbaW5mb10pIHRocm93IEVycm9yKFwibWlzc2luZyBpbnRlcmZhY2UgaW5mb1wiKVxuICAgICAgICB0aGlzLiNpbmZvID0gc2VydmljZVtpbmZvXVxuICAgIH1cblxuICAgIG5vdGlmeShwcm9wZXJ0eU5hbWU6IEV4dHJhY3Q8a2V5b2YgdGhpcywgc3RyaW5nPiB8IChzdHJpbmcgJiB7fSkpOiB2b2lkIHtcbiAgICAgICAgY29uc3QgcHJvcCA9IHRoaXMuI2luZm8ubG9va3VwX3Byb3BlcnR5KHByb3BlcnR5TmFtZSlcblxuICAgICAgICBpZiAocHJvcCAmJiB0aGlzW2ludGVybmFsc10uZGJ1c09iamVjdCkge1xuICAgICAgICAgICAgdGhpc1tpbnRlcm5hbHNdLmRidXNPYmplY3QuZW1pdF9wcm9wZXJ0eV9jaGFuZ2VkKFxuICAgICAgICAgICAgICAgIHByb3BlcnR5TmFtZSxcbiAgICAgICAgICAgICAgICBuZXcgR0xpYi5WYXJpYW50KHByb3Auc2lnbmF0dXJlLCB0aGlzW3Byb3BlcnR5TmFtZSBhcyBrZXlvZiB0aGlzXSksXG4gICAgICAgICAgICApXG4gICAgICAgIH1cblxuICAgICAgICBzdXBlci5ub3RpZnkocHJvcCA/IGtlYmFiaWZ5KHByb3BlcnR5TmFtZSkgOiBwcm9wZXJ0eU5hbWUpXG4gICAgfVxuXG4gICAgZW1pdChuYW1lOiBzdHJpbmcsIC4uLnBhcmFtczogdW5rbm93bltdKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IHNpZ25hbCA9IHRoaXMuI2luZm8ubG9va3VwX3NpZ25hbChuYW1lKVxuXG4gICAgICAgIGlmIChzaWduYWwgJiYgdGhpc1tpbnRlcm5hbHNdLmRidXNPYmplY3QpIHtcbiAgICAgICAgICAgIGNvbnN0IHNpZ25hdHVyZSA9IGAoJHtzaWduYWwuYXJncy5tYXAoKGEpID0+IGEuc2lnbmF0dXJlKS5qb2luKFwiXCIpfSlgXG4gICAgICAgICAgICB0aGlzW2ludGVybmFsc10uZGJ1c09iamVjdC5lbWl0X3NpZ25hbChuYW1lLCBuZXcgR0xpYi5WYXJpYW50KHNpZ25hdHVyZSwgcGFyYW1zKSlcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBzdXBlci5lbWl0KHNpZ25hbCA/IGtlYmFiaWZ5KG5hbWUpIDogbmFtZSwgLi4ucGFyYW1zKVxuICAgIH1cblxuICAgIC8vIHNlcnZlclxuICAgICNoYW5kbGVQcm9wZXJ0eUdldChfOiBHaW8uREJ1c0V4cG9ydGVkT2JqZWN0LCBwcm9wZXJ0eU5hbWU6IEV4dHJhY3Q8a2V5b2YgdGhpcywgc3RyaW5nPikge1xuICAgICAgICBjb25zdCBwcm9wID0gdGhpcy4jaW5mby5sb29rdXBfcHJvcGVydHkocHJvcGVydHlOYW1lKVxuXG4gICAgICAgIGlmICghcHJvcCkge1xuICAgICAgICAgICAgdGhyb3cgRXJyb3IoYCR7dGhpcy5jb25zdHJ1Y3Rvci5uYW1lfSBoYXMgbm8gZXhwb3J0ZWQgcHJvcGVydHk6IFwiJHtwcm9wZXJ0eU5hbWV9XCJgKVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzW3Byb3BlcnR5TmFtZV1cbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBHTGliLlZhcmlhbnQocHJvcC5zaWduYXR1cmUsIHZhbHVlKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIHNlcnZlclxuICAgICNoYW5kbGVQcm9wZXJ0eVNldChcbiAgICAgICAgXzogR2lvLkRCdXNFeHBvcnRlZE9iamVjdCxcbiAgICAgICAgcHJvcGVydHlOYW1lOiBFeHRyYWN0PGtleW9mIHRoaXMsIHN0cmluZz4sXG4gICAgICAgIHZhbHVlOiBHTGliLlZhcmlhbnQsXG4gICAgKSB7XG4gICAgICAgIGNvbnN0IG5ld1ZhbHVlID0gdmFsdWUuZGVlcFVucGFjaygpXG4gICAgICAgIGNvbnN0IHByb3AgPSB0aGlzLiNpbmZvLmxvb2t1cF9wcm9wZXJ0eShwcm9wZXJ0eU5hbWUpXG5cbiAgICAgICAgaWYgKCFwcm9wKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgJHt0aGlzLmNvbnN0cnVjdG9yLm5hbWV9IGhhcyBubyBwcm9wZXJ0eTogXCIke3Byb3BlcnR5TmFtZX1cImApXG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpc1twcm9wZXJ0eU5hbWVdICE9PSBuZXdWYWx1ZSkge1xuICAgICAgICAgICAgdGhpc1twcm9wZXJ0eU5hbWVdID0gdmFsdWUuZGVlcFVucGFjazxhbnk+KClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIHNlcnZlclxuICAgICNyZXR1cm5FcnJvcihlcnJvcjogdW5rbm93biwgaW52b2NhdGlvbjogR2lvLkRCdXNNZXRob2RJbnZvY2F0aW9uKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpXG4gICAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEdMaWIuRXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiBpbnZvY2F0aW9uLnJldHVybl9nZXJyb3IoZXJyb3IpXG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgICAgIHJldHVybiBpbnZvY2F0aW9uLnJldHVybl9kYnVzX2Vycm9yKFxuICAgICAgICAgICAgICAgIGVycm9yLm5hbWUuaW5jbHVkZXMoXCIuXCIpID8gZXJyb3IubmFtZSA6IGBnanMuSlNFcnJvci4ke2Vycm9yLm5hbWV9YCxcbiAgICAgICAgICAgICAgICBlcnJvci5tZXNzYWdlLFxuICAgICAgICAgICAgKVxuICAgICAgICB9XG4gICAgICAgIGludm9jYXRpb24ucmV0dXJuX2RidXNfZXJyb3IoXCJnanMuREJ1c1NlcnZpY2UuVW5rbm93bkVycm9yXCIsIGAke2Vycm9yfWApXG4gICAgfVxuXG4gICAgLy8gc2VydmVyXG4gICAgI3JldHVyblZhbHVlKHZhbHVlOiB1bmtub3duLCBtZXRob2ROYW1lOiBzdHJpbmcsIGludm9jYXRpb246IEdpby5EQnVzTWV0aG9kSW52b2NhdGlvbikge1xuICAgICAgICBpZiAodmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgcmV0dXJuIGludm9jYXRpb24ucmV0dXJuX3ZhbHVlKG5ldyBHTGliLlZhcmlhbnQoXCIoKVwiLCBbXSkpXG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBhcmdzID0gdGhpcy4jaW5mby5sb29rdXBfbWV0aG9kKG1ldGhvZE5hbWUpPy5vdXRfYXJncyA/PyBbXVxuICAgICAgICBjb25zdCBzaWduYXR1cmUgPSBgKCR7YXJncy5tYXAoKGFyZykgPT4gYXJnLnNpZ25hdHVyZSkuam9pbihcIlwiKX0pYFxuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWUpKSB0aHJvdyBFcnJvcihcInZhbHVlIGhhcyB0byBiZSBhIHR1cGxlXCIpXG4gICAgICAgIGludm9jYXRpb24ucmV0dXJuX3ZhbHVlKG5ldyBHTGliLlZhcmlhbnQoc2lnbmF0dXJlLCB2YWx1ZSkpXG4gICAgfVxuXG4gICAgLy8gc2VydmVyXG4gICAgI2hhbmRsZU1ldGhvZENhbGwoXG4gICAgICAgIF86IEdpby5EQnVzRXhwb3J0ZWRPYmplY3QsXG4gICAgICAgIG1ldGhvZE5hbWU6IEV4dHJhY3Q8a2V5b2YgdGhpcywgc3RyaW5nPixcbiAgICAgICAgcGFyYW1ldGVyczogR0xpYi5WYXJpYW50LFxuICAgICAgICBpbnZvY2F0aW9uOiBHaW8uREJ1c01ldGhvZEludm9jYXRpb24sXG4gICAgKTogdm9pZCB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9ICh0aGlzW21ldGhvZE5hbWVdIGFzICguLi5hcmdzOiB1bmtub3duW10pID0+IHVua25vd24pKFxuICAgICAgICAgICAgICAgIC4uLnBhcmFtZXRlcnMuZGVlcFVucGFjazxBcnJheTx1bmtub3duPj4oKSxcbiAgICAgICAgICAgIClcblxuICAgICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgR0xpYi5WYXJpYW50KSB7XG4gICAgICAgICAgICAgICAgaW52b2NhdGlvbi5yZXR1cm5fdmFsdWUodmFsdWUpXG4gICAgICAgICAgICB9IGVsc2UgaWYgKHZhbHVlIGluc3RhbmNlb2YgUHJvbWlzZSkge1xuICAgICAgICAgICAgICAgIHZhbHVlXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKCh2YWx1ZSkgPT4gdGhpcy4jcmV0dXJuVmFsdWUodmFsdWUsIG1ldGhvZE5hbWUsIGludm9jYXRpb24pKVxuICAgICAgICAgICAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB0aGlzLiNyZXR1cm5FcnJvcihlcnJvciwgaW52b2NhdGlvbikpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuI3JldHVyblZhbHVlKHZhbHVlLCBtZXRob2ROYW1lLCBpbnZvY2F0aW9uKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgdGhpcy4jcmV0dXJuRXJyb3IoZXJyb3IsIGludm9jYXRpb24pXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBzZXJ2ZXJcbiAgICBhc3luYyBzZXJ2ZSh7XG4gICAgICAgIGJ1c1R5cGUgPSBHaW8uQnVzVHlwZS5TRVNTSU9OLFxuICAgICAgICBuYW1lID0gdGhpcy4jaW5mby5uYW1lLFxuICAgICAgICBvYmplY3RQYXRoID0gXCIvXCIgKyB0aGlzLiNpbmZvLm5hbWUuc3BsaXQoXCIuXCIpLmpvaW4oXCIvXCIpLFxuICAgICAgICBmbGFncyA9IEdpby5CdXNOYW1lT3duZXJGbGFncy5OT05FLFxuICAgICAgICB0aW1lb3V0ID0gREVGQVVMVF9USU1FT1VULFxuICAgIH06IHtcbiAgICAgICAgYnVzVHlwZT86IEdpby5CdXNUeXBlXG4gICAgICAgIG5hbWU/OiBzdHJpbmdcbiAgICAgICAgb2JqZWN0UGF0aD86IHN0cmluZ1xuICAgICAgICBmbGFncz86IEdpby5CdXNOYW1lT3duZXJGbGFnc1xuICAgICAgICB0aW1lb3V0PzogbnVtYmVyXG4gICAgfSA9IHt9KTogUHJvbWlzZTx0aGlzPiB7XG4gICAgICAgIGNvbnN0IGltcGwgPSBuZXcgR2lvLkRCdXNFeHBvcnRlZE9iamVjdChcbiAgICAgICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgbWlzc2luZyBjb25zdHJ1Y3RvciB0eXBlXG4gICAgICAgICAgICB7IGdfaW50ZXJmYWNlX2luZm86IHRoaXMuI2luZm8gfSxcbiAgICAgICAgKVxuXG4gICAgICAgIGltcGwuY29ubmVjdChcImhhbmRsZS1tZXRob2QtY2FsbFwiLCB0aGlzLiNoYW5kbGVNZXRob2RDYWxsLmJpbmQodGhpcykpXG4gICAgICAgIGltcGwuY29ubmVjdChcImhhbmRsZS1wcm9wZXJ0eS1nZXRcIiwgdGhpcy4jaGFuZGxlUHJvcGVydHlHZXQuYmluZCh0aGlzKSlcbiAgICAgICAgaW1wbC5jb25uZWN0KFwiaGFuZGxlLXByb3BlcnR5LXNldFwiLCB0aGlzLiNoYW5kbGVQcm9wZXJ0eVNldC5iaW5kKHRoaXMpKVxuXG4gICAgICAgIHRoaXMuI2luZm8uY2FjaGVfYnVpbGQoKVxuXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBsZXQgc291cmNlID1cbiAgICAgICAgICAgICAgICB0aW1lb3V0ID4gMFxuICAgICAgICAgICAgICAgICAgICA/IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoRXJyb3IoYHNlcnZlIHRpbWVkIG91dGApKVxuICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2UgPSBudWxsXG4gICAgICAgICAgICAgICAgICAgICAgfSwgdGltZW91dClcbiAgICAgICAgICAgICAgICAgICAgOiBudWxsXG5cbiAgICAgICAgICAgIGNvbnN0IGNsZWFyID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChzb3VyY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHNvdXJjZSlcbiAgICAgICAgICAgICAgICAgICAgc291cmNlID0gbnVsbFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3QgYnVzSWQgPSBHaW8uYnVzX293bl9uYW1lKFxuICAgICAgICAgICAgICAgIGJ1c1R5cGUsXG4gICAgICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgICAgICBmbGFncyxcbiAgICAgICAgICAgICAgICAoY29ubjogR2lvLkRCdXNDb25uZWN0aW9uKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpbXBsLmV4cG9ydChjb25uLCBvYmplY3RQYXRoKVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1tpbnRlcm5hbHNdLmRidXNPYmplY3QgPSBpbXBsXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzW2ludGVybmFsc10ub25TdG9wLmFkZCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgR2lvLmJ1c191bm93bl9uYW1lKGJ1c0lkKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGltcGwudW5leHBvcnQoKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuI2luZm8uY2FjaGVfcmVsZWFzZSgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHRoaXNbaW50ZXJuYWxzXS5kYnVzT2JqZWN0XG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHRoaXMpXG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNsZWFyLFxuICAgICAgICAgICAgICAgIGNsZWFyLFxuICAgICAgICAgICAgKVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIC8vIHByb3h5XG4gICAgI2hhbmRsZVByb3BlcnRpZXNDaGFuZ2VkKFxuICAgICAgICBfOiBHaW8uREJ1c1Byb3h5LFxuICAgICAgICBjaGFuZ2VkOiBHTGliLlZhcmlhbnQ8XCJhe3N2fVwiPixcbiAgICAgICAgaW52YWxpZGF0ZWQ6IHN0cmluZ1tdLFxuICAgICkge1xuICAgICAgICBjb25zdCBzZXQgPSBuZXcgU2V0KFsuLi5PYmplY3Qua2V5cyhjaGFuZ2VkLmRlZXBVbnBhY2soKSksIC4uLmludmFsaWRhdGVkXSlcbiAgICAgICAgZm9yIChjb25zdCBwcm9wIG9mIHNldC52YWx1ZXMoKSkge1xuICAgICAgICAgICAgdGhpcy5ub3RpZnkocHJvcCBhcyBFeHRyYWN0PGtleW9mIHRoaXMsIHN0cmluZz4pXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBwcm94eVxuICAgICNoYW5kbGVTaWduYWwoXG4gICAgICAgIF86IEdpby5EQnVzUHJveHksXG4gICAgICAgIF9zZW5kZXI6IHN0cmluZyB8IG51bGwsXG4gICAgICAgIHNpZ25hbDogc3RyaW5nLFxuICAgICAgICBwYXJhbWV0ZXJzOiBHTGliLlZhcmlhbnQsXG4gICAgKSB7XG4gICAgICAgIHRoaXMuZW1pdChrZWJhYmlmeShzaWduYWwpLCAuLi5wYXJhbWV0ZXJzLmRlZXBVbnBhY2s8QXJyYXk8dW5rbm93bj4+KCkpXG4gICAgfVxuXG4gICAgLy8gcHJveHlcbiAgICAjcmVtb3RlTWV0aG9kUGFyYW1zKFxuICAgICAgICBtZXRob2ROYW1lOiBzdHJpbmcsXG4gICAgICAgIGFyZ3M6IHVua25vd25bXSxcbiAgICApOiBQYXJhbWV0ZXJzPEdpby5EQnVzUHJveHlbXCJjYWxsX3N5bmNcIl0+IHtcbiAgICAgICAgY29uc3QgeyBwcm94eSB9ID0gdGhpc1tpbnRlcm5hbHNdXG4gICAgICAgIGlmICghcHJveHkpIHRocm93IEVycm9yKFwiaW52YWxpZCByZW1vdGVNZXRob2QgaW52b2NhdGlvbjogbm90IGEgcHJveHlcIilcblxuICAgICAgICBjb25zdCBtZXRob2QgPSB0aGlzLiNpbmZvLmxvb2t1cF9tZXRob2QobWV0aG9kTmFtZSlcbiAgICAgICAgaWYgKCFtZXRob2QpIHRocm93IEVycm9yKFwibWV0aG9kIG5vdCBmb3VuZFwiKVxuXG4gICAgICAgIGNvbnN0IHNpZ25hdHVyZSA9IGAoJHttZXRob2QuaW5fYXJncy5tYXAoKGEpID0+IGEuc2lnbmF0dXJlKS5qb2luKFwiXCIpfSlgXG5cbiAgICAgICAgcmV0dXJuIFtcbiAgICAgICAgICAgIG1ldGhvZE5hbWUsXG4gICAgICAgICAgICBuZXcgR0xpYi5WYXJpYW50KHNpZ25hdHVyZSwgYXJncyksXG4gICAgICAgICAgICBHaW8uREJ1c0NhbGxGbGFncy5OT05FLFxuICAgICAgICAgICAgREVGQVVMVF9USU1FT1VULFxuICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgXVxuICAgIH1cblxuICAgIC8vIHByb3h5XG4gICAgW3JlbW90ZU1ldGhvZF0obWV0aG9kTmFtZTogc3RyaW5nLCBhcmdzOiB1bmtub3duW10pOiBHTGliLlZhcmlhbnQge1xuICAgICAgICBjb25zdCBwYXJhbXMgPSB0aGlzLiNyZW1vdGVNZXRob2RQYXJhbXMobWV0aG9kTmFtZSwgYXJncylcbiAgICAgICAgcmV0dXJuIHRoaXNbaW50ZXJuYWxzXS5wcm94eSEuY2FsbF9zeW5jKC4uLnBhcmFtcylcbiAgICB9XG5cbiAgICAvLyBwcm94eVxuICAgIFtyZW1vdGVNZXRob2RBc3luY10obWV0aG9kTmFtZTogc3RyaW5nLCBhcmdzOiB1bmtub3duW10pOiBQcm9taXNlPEdMaWIuVmFyaWFudD4ge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCBwYXJhbXMgPSB0aGlzLiNyZW1vdGVNZXRob2RQYXJhbXMobWV0aG9kTmFtZSwgYXJncylcbiAgICAgICAgICAgICAgICB0aGlzW2ludGVybmFsc10ucHJveHkhLmNhbGwoLi4ucGFyYW1zLCAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHRoaXNbaW50ZXJuYWxzXS5wcm94eSEuY2FsbF9maW5pc2gocmVzKSlcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICAvLyBwcm94eVxuICAgIFtyZW1vdGVQcm9wZXJ0eVNldF0obmFtZTogc3RyaW5nLCB2YWx1ZTogdW5rbm93bikge1xuICAgICAgICBjb25zdCBwcm94eSA9IHRoaXNbaW50ZXJuYWxzXS5wcm94eSFcbiAgICAgICAgY29uc3QgcHJvcCA9IHRoaXMuI2luZm8ubG9va3VwX3Byb3BlcnR5KG5hbWUpIVxuXG4gICAgICAgIGNvbnN0IHZhcmlhbnQgPSBuZXcgR0xpYi5WYXJpYW50KHByb3Auc2lnbmF0dXJlLCB2YWx1ZSlcbiAgICAgICAgcHJveHkuc2V0X2NhY2hlZF9wcm9wZXJ0eShuYW1lLCB2YXJpYW50KVxuXG4gICAgICAgIHByb3h5LmNhbGwoXG4gICAgICAgICAgICBcIm9yZy5mcmVlZGVza3RvcC5EQnVzLlByb3BlcnRpZXMuU2V0XCIsXG4gICAgICAgICAgICBuZXcgR0xpYi5WYXJpYW50KFwiKHNzdilcIiwgW3Byb3h5LmdJbnRlcmZhY2VOYW1lLCBuYW1lLCB2YXJpYW50XSksXG4gICAgICAgICAgICBHaW8uREJ1c0NhbGxGbGFncy5OT05FLFxuICAgICAgICAgICAgLTEsXG4gICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHByb3h5LmNhbGxfZmluaXNoKHJlcylcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICApXG4gICAgfVxuXG4gICAgLy8gcHJveHlcbiAgICBhc3luYyBwcm94eSh7XG4gICAgICAgIGJ1cyA9IEdpby5EQnVzLnNlc3Npb24sXG4gICAgICAgIG5hbWUgPSB0aGlzLiNpbmZvLm5hbWUsXG4gICAgICAgIG9iamVjdFBhdGggPSBcIi9cIiArIHRoaXMuI2luZm8ubmFtZS5zcGxpdChcIi5cIikuam9pbihcIi9cIiksXG4gICAgICAgIGZsYWdzID0gR2lvLkRCdXNQcm94eUZsYWdzLk5PTkUsXG4gICAgICAgIHRpbWVvdXQgPSBERUZBVUxUX1RJTUVPVVQsXG4gICAgfToge1xuICAgICAgICBidXM/OiBHaW8uREJ1c0Nvbm5lY3Rpb25cbiAgICAgICAgbmFtZT86IHN0cmluZ1xuICAgICAgICBvYmplY3RQYXRoPzogc3RyaW5nXG4gICAgICAgIGZsYWdzPzogR2lvLkRCdXNQcm94eUZsYWdzXG4gICAgICAgIHRpbWVvdXQ/OiBudW1iZXJcbiAgICB9ID0ge30pOiBQcm9taXNlPHRoaXM+IHtcbiAgICAgICAgY29uc3QgcHJveHkgPSBuZXcgR2lvLkRCdXNQcm94eSh7XG4gICAgICAgICAgICBnQ29ubmVjdGlvbjogYnVzLFxuICAgICAgICAgICAgZ0ludGVyZmFjZU5hbWU6IHRoaXMuI2luZm8ubmFtZSxcbiAgICAgICAgICAgIGdJbnRlcmZhY2VJbmZvOiB0aGlzLiNpbmZvLFxuICAgICAgICAgICAgZ05hbWU6IG5hbWUsXG4gICAgICAgICAgICBnRmxhZ3M6IGZsYWdzLFxuICAgICAgICAgICAgZ09iamVjdFBhdGg6IG9iamVjdFBhdGgsXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGNhbmNhbGxhYmxlID0gbmV3IEdpby5DYW5jZWxsYWJsZSgpXG5cbiAgICAgICAgICAgIGxldCBzb3VyY2UgPVxuICAgICAgICAgICAgICAgIHRpbWVvdXQgPiAwXG4gICAgICAgICAgICAgICAgICAgID8gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIHJlamVjdChFcnJvcihgcHJveHkgdGltZWQgb3V0YCkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZSA9IG51bGxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FuY2FsbGFibGUuY2FuY2VsKClcbiAgICAgICAgICAgICAgICAgICAgICB9LCB0aW1lb3V0KVxuICAgICAgICAgICAgICAgICAgICA6IG51bGxcblxuICAgICAgICAgICAgcHJveHkuaW5pdF9hc3luYyhHTGliLlBSSU9SSVRZX0RFRkFVTFQsIGNhbmNhbGxhYmxlLCAoXywgcmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNvdXJjZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHNvdXJjZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZSA9IG51bGxcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIHByb3h5LmluaXRfZmluaXNoKHJlcylcbiAgICAgICAgICAgICAgICAgICAgdGhpc1tpbnRlcm5hbHNdLnByb3h5ID0gcHJveHlcblxuICAgICAgICAgICAgICAgICAgICBjb25zdCBpZHMgPSBbXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm94eS5jb25uZWN0KFwiZy1zaWduYWxcIiwgdGhpcy4jaGFuZGxlU2lnbmFsLmJpbmQodGhpcykpLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJveHkuY29ubmVjdChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImctcHJvcGVydGllcy1jaGFuZ2VkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4jaGFuZGxlUHJvcGVydGllc0NoYW5nZWQuYmluZCh0aGlzKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIF1cblxuICAgICAgICAgICAgICAgICAgICB0aGlzW2ludGVybmFsc10ub25TdG9wLmFkZCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZHMuZm9yRWFjaCgoaWQpID0+IHByb3h5LmRpc2Nvbm5lY3QoaWQpKVxuICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIHRoaXNbaW50ZXJuYWxzXS5wcm94eVxuICAgICAgICAgICAgICAgICAgICB9KVxuXG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUodGhpcylcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBzdG9wKCkge1xuICAgICAgICBjb25zdCB7IG9uU3RvcCB9ID0gdGhpc1tpbnRlcm5hbHNdXG4gICAgICAgIGZvciAoY29uc3QgY2Igb2Ygb25TdG9wLnZhbHVlcygpKSB7XG4gICAgICAgICAgICBvblN0b3AuZGVsZXRlKGNiKVxuICAgICAgICAgICAgY2IoKVxuICAgICAgICB9XG4gICAgfVxufVxuXG50eXBlIEludGVyZmFjZU1ldGEgPSB7XG4gICAgZGJ1c01ldGhvZHM/OiBSZWNvcmQ8XG4gICAgICAgIHN0cmluZyxcbiAgICAgICAgQXJyYXk8e1xuICAgICAgICAgICAgbmFtZT86IHN0cmluZ1xuICAgICAgICAgICAgdHlwZTogc3RyaW5nXG4gICAgICAgICAgICBkaXJlY3Rpb246IFwiaW5cIiB8IFwib3V0XCJcbiAgICAgICAgfT5cbiAgICA+XG4gICAgZGJ1c1NpZ25hbHM/OiBSZWNvcmQ8XG4gICAgICAgIHN0cmluZyxcbiAgICAgICAgQXJyYXk8e1xuICAgICAgICAgICAgbmFtZT86IHN0cmluZ1xuICAgICAgICAgICAgdHlwZTogc3RyaW5nXG4gICAgICAgIH0+XG4gICAgPlxuICAgIGRidXNQcm9wZXJ0aWVzPzogUmVjb3JkPFxuICAgICAgICBzdHJpbmcsXG4gICAgICAgIHtcbiAgICAgICAgICAgIG5hbWU6IHN0cmluZ1xuICAgICAgICAgICAgdHlwZTogc3RyaW5nXG4gICAgICAgICAgICByZWFkPzogdHJ1ZVxuICAgICAgICAgICAgd3JpdGU/OiB0cnVlXG4gICAgICAgIH1cbiAgICA+XG59XG5cbi8qKlxuICogUmVnaXN0ZXJzIGEge0BsaW5rIFNlcnZpY2V9IGFzIGEgZGJ1cyBpbnRlcmZhY2UuXG4gKlxuICogQHBhcmFtIG5hbWUgSW50ZXJmYWNlIG5hbWUgb2YgdGhlIG9iamVjdC4gRm9yIGV4YW1wbGUgXCJvcmcuZ25vbWUuU2hlbGwuU2VhcmNoUHJvdmlkZXIyXCJcbiAqIEBwYXJhbSBvcHRpb25zIG9wdGlvbmFsIHByb3BlcnRpZXMgdG8gcGFzcyB0byB7QGxpbmsgcmVnaXN0ZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpZmFjZShuYW1lOiBzdHJpbmcsIG9wdGlvbnM/OiBQYXJhbWV0ZXJzPHR5cGVvZiByZWdpc3Rlcj5bMF0pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGNsczogeyBuZXcgKC4uLmFyZ3M6IGFueVtdKTogU2VydmljZSB9LCBjdHg6IENsYXNzRGVjb3JhdG9yQ29udGV4dCkge1xuICAgICAgICBjb25zdCBtZXRhID0gY3R4Lm1ldGFkYXRhXG4gICAgICAgIGlmICghbWV0YSkgdGhyb3cgRXJyb3IoYCR7Y2xzLm5hbWV9IGlzIG5vdCBhbiBpbnRlcmZhY2VgKVxuXG4gICAgICAgIGNvbnN0IHsgZGJ1c01ldGhvZHMgPSB7fSwgZGJ1c1NpZ25hbHMgPSB7fSwgZGJ1c1Byb3BlcnRpZXMgPSB7fSB9ID0gbWV0YSBhcyBJbnRlcmZhY2VNZXRhXG5cbiAgICAgICAgY29uc3QgaW5mb1htbCA9IHhtbCh7XG4gICAgICAgICAgICBuYW1lOiBcIm5vZGVcIixcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBcImludGVyZmFjZVwiLFxuICAgICAgICAgICAgICAgICAgICBhdHRyaWJ1dGVzOiB7IG5hbWUgfSxcbiAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLk9iamVjdC5lbnRyaWVzKGRidXNNZXRob2RzKS5tYXAoKFtuYW1lLCBhcmdzXSkgPT4gKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIm1ldGhvZFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZXM6IHsgbmFtZSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBhcmdzLm1hcCgoYXJnKSA9PiAoeyBuYW1lOiBcImFyZ1wiLCBhdHRyaWJ1dGVzOiBhcmcgfSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgLi4uT2JqZWN0LmVudHJpZXMoZGJ1c1NpZ25hbHMpLm1hcCgoW25hbWUsIGFyZ3NdKSA9PiAoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwic2lnbmFsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlczogeyBuYW1lIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hpbGRyZW46IGFyZ3MubWFwKChhcmcpID0+ICh7IG5hbWU6IFwiYXJnXCIsIGF0dHJpYnV0ZXM6IGFyZyB9KSksXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSksXG4gICAgICAgICAgICAgICAgICAgICAgICAuLi5PYmplY3QudmFsdWVzKGRidXNQcm9wZXJ0aWVzKS5tYXAoKHsgbmFtZSwgdHlwZSwgcmVhZCwgd3JpdGUgfSkgPT4gKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcInByb3BlcnR5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cmlidXRlczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi4obmFtZSAmJiB7IG5hbWUgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY2VzczogKHJlYWQgPyBcInJlYWRcIiA6IFwiXCIpICsgKHdyaXRlID8gXCJ3cml0ZVwiIDogXCJcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pKSxcbiAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgfSlcblxuICAgICAgICBPYmplY3QuYXNzaWduKGNscywgeyBbaW5mb106IEdpby5EQnVzSW50ZXJmYWNlSW5mby5uZXdfZm9yX3htbChpbmZvWG1sKSB9KVxuICAgICAgICByZWdpc3RlcihvcHRpb25zKShjbHMsIGN0eClcbiAgICB9XG59XG5cbnR5cGUgREJ1c1R5cGUgPSBzdHJpbmcgfCB7IHR5cGU6IHN0cmluZzsgbmFtZTogc3RyaW5nIH1cblxudHlwZSBJbmZlclZhcmlhbnRUeXBlczxUIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+PiA9IHtcbiAgICBbSyBpbiBrZXlvZiBUXTogVFtLXSBleHRlbmRzIHN0cmluZ1xuICAgICAgICA/IERlZXBJbmZlcjxUW0tdPlxuICAgICAgICA6IFRbS10gZXh0ZW5kcyB7IHR5cGU6IGluZmVyIFMgfVxuICAgICAgICAgID8gUyBleHRlbmRzIHN0cmluZ1xuICAgICAgICAgICAgICA/IERlZXBJbmZlcjxTPlxuICAgICAgICAgICAgICA6IG5ldmVyXG4gICAgICAgICAgOiB1bmtub3duXG59XG5cbmZ1bmN0aW9uIGluc3RhbGxNZXRob2Q8QXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oXG4gICAgYXJnczogQXJncyB8IFtBcmdzLCBBcmdzP10sXG4gICAgbWV0aG9kOiAoLi4uYXJnczogYW55W10pID0+IHVua25vd24sXG4gICAgY3R4OiBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8U2VydmljZSwgdHlwZW9mIG1ldGhvZD4sXG4pIHtcbiAgICBjb25zdCBuYW1lID0gY3R4Lm5hbWVcbiAgICBjb25zdCBtZXRhID0gY3R4Lm1ldGFkYXRhISBhcyBJbnRlcmZhY2VNZXRhXG4gICAgY29uc3QgbWV0aG9kcyA9IChtZXRhLmRidXNNZXRob2RzID8/PSB7fSlcblxuICAgIGlmICh0eXBlb2YgbmFtZSAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICB0aHJvdyBFcnJvcihcIm9ubHkgc3RyaW5nIG5hbWVkIG1ldGhvZHMgYXJlIGFsbG93ZWRcIilcbiAgICB9XG5cbiAgICBjb25zdCBbaW5BcmdzLCBvdXRBcmdzID0gW11dID0gKEFycmF5LmlzQXJyYXkoYXJnc1swXSkgPyBhcmdzIDogW2FyZ3NdKSBhcyBbQXJncywgQXJnc11cblxuICAgIG1ldGhvZHNbbmFtZV0gPSBbXG4gICAgICAgIC4uLmluQXJncy5tYXAoKGFyZykgPT4gKHtcbiAgICAgICAgICAgIGRpcmVjdGlvbjogXCJpblwiIGFzIGNvbnN0LFxuICAgICAgICAgICAgLi4uKHR5cGVvZiBhcmcgPT09IFwic3RyaW5nXCIgPyB7IHR5cGU6IGFyZyB9IDogYXJnKSxcbiAgICAgICAgfSkpLFxuICAgICAgICAuLi5vdXRBcmdzLm1hcCgoYXJnKSA9PiAoe1xuICAgICAgICAgICAgZGlyZWN0aW9uOiBcIm91dFwiIGFzIGNvbnN0LFxuICAgICAgICAgICAgLi4uKHR5cGVvZiBhcmcgPT09IFwic3RyaW5nXCIgPyB7IHR5cGU6IGFyZyB9IDogYXJnKSxcbiAgICAgICAgfSkpLFxuICAgIF1cblxuICAgIHJldHVybiBuYW1lXG59XG5cbmZ1bmN0aW9uIGluc3RhbGxQcm9wZXJ0eTxUIGV4dGVuZHMgc3RyaW5nPihcbiAgICB0eXBlOiBULFxuICAgIGN0eDogQ2xhc3NGaWVsZERlY29yYXRvckNvbnRleHQgfCBDbGFzc0dldHRlckRlY29yYXRvckNvbnRleHQgfCBDbGFzc1NldHRlckRlY29yYXRvckNvbnRleHQsXG4pIHtcbiAgICBjb25zdCBraW5kID0gY3R4LmtpbmRcbiAgICBjb25zdCBuYW1lID0gY3R4Lm5hbWVcbiAgICBjb25zdCBtZXRhID0gY3R4Lm1ldGFkYXRhISBhcyBJbnRlcmZhY2VNZXRhXG4gICAgY29uc3QgcHJvcGVydGllcyA9IChtZXRhLmRidXNQcm9wZXJ0aWVzID8/PSB7fSlcblxuICAgIGlmICh0eXBlb2YgbmFtZSAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICB0aHJvdyBFcnJvcihcIm9ubHkgc3RyaW5nIG5hbWVkIHByb3BlcnRpZXMgYXJlIGFsbG93ZWRcIilcbiAgICB9XG5cbiAgICBjb25zdCByZWFkID0ga2luZCA9PT0gXCJmaWVsZFwiIHx8IGtpbmQgPT09IFwiZ2V0dGVyXCJcbiAgICBjb25zdCB3cml0ZSA9IGtpbmQgPT09IFwiZmllbGRcIiB8fCBraW5kID09PSBcInNldHRlclwiXG5cbiAgICBpZiAobmFtZSBpbiBwcm9wZXJ0aWVzKSB7XG4gICAgICAgIGlmICh3cml0ZSkgcHJvcGVydGllc1tuYW1lXS53cml0ZSA9IHRydWVcbiAgICAgICAgaWYgKHJlYWQpIHByb3BlcnRpZXNbbmFtZV0ucmVhZCA9IHRydWVcbiAgICB9IGVsc2Uge1xuICAgICAgICBwcm9wZXJ0aWVzW25hbWVdID0ge1xuICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgIHR5cGUsXG4gICAgICAgICAgICAuLi4ocmVhZCAmJiB7IHJlYWQgfSksXG4gICAgICAgICAgICAuLi4od3JpdGUgJiYgeyB3cml0ZSB9KSxcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuYW1lXG59XG5cbmZ1bmN0aW9uIGluc3RhbGxTaWduYWw8UGFyYW1zIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+PihcbiAgICBwYXJhbXM6IFBhcmFtcyxcbiAgICBjdHg6IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlPixcbikge1xuICAgIGNvbnN0IG5hbWUgPSBjdHgubmFtZVxuICAgIGNvbnN0IG1ldGEgPSBjdHgubWV0YWRhdGEhIGFzIEludGVyZmFjZU1ldGFcbiAgICBjb25zdCBzaWduYWxzID0gKG1ldGEuZGJ1c1NpZ25hbHMgPz89IHt9KVxuXG4gICAgaWYgKHR5cGVvZiBuYW1lID09PSBcInN5bWJvbFwiKSB7XG4gICAgICAgIHRocm93IEVycm9yKFwic3ltYm9scyBhcmUgbm90IHZhbGlkIHNpZ25hbHNcIilcbiAgICB9XG5cbiAgICBzaWduYWxzW25hbWVdID0gcGFyYW1zLm1hcCgoYXJnKSA9PiAodHlwZW9mIGFyZyA9PT0gXCJzdHJpbmdcIiA/IHsgdHlwZTogYXJnIH0gOiBhcmcpKVxuXG4gICAgcmV0dXJuIG5hbWVcbn1cblxuZnVuY3Rpb24gaW5mZXJHVHlwZUZyb21WYXJpYW50KHR5cGU6IERCdXNUeXBlKTogR09iamVjdC5HVHlwZTxhbnk+IHtcbiAgICBpZiAodHlwZW9mIHR5cGUgIT09IFwic3RyaW5nXCIpIHJldHVybiBpbmZlckdUeXBlRnJvbVZhcmlhbnQodHlwZS50eXBlKVxuXG4gICAgaWYgKHR5cGUuc3RhcnRzV2l0aChcImFcIikgfHwgdHlwZS5zdGFydHNXaXRoKFwiKFwiKSkge1xuICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX0pTT0JKRUNUXG4gICAgfVxuXG4gICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgIGNhc2UgXCJ2XCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX1ZBUklBTlRcbiAgICAgICAgY2FzZSBcImJcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfQk9PTEVBTlxuICAgICAgICBjYXNlIFwieVwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9VSU5UXG4gICAgICAgIGNhc2UgXCJuXCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX0lOVFxuICAgICAgICBjYXNlIFwicVwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9VSU5UXG4gICAgICAgIGNhc2UgXCJpXCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX0lOVFxuICAgICAgICBjYXNlIFwidVwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9VSU5UXG4gICAgICAgIGNhc2UgXCJ4XCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX0lOVDY0XG4gICAgICAgIGNhc2UgXCJ0XCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX1VJTlQ2NFxuICAgICAgICBjYXNlIFwiaFwiOlxuICAgICAgICAgICAgcmV0dXJuIEdPYmplY3QuVFlQRV9JTlRcbiAgICAgICAgY2FzZSBcImRcIjpcbiAgICAgICAgICAgIHJldHVybiBHT2JqZWN0LlRZUEVfRE9VQkxFXG4gICAgICAgIGNhc2UgXCJzXCI6XG4gICAgICAgIGNhc2UgXCJnXCI6XG4gICAgICAgIGNhc2UgXCJvXCI6XG4gICAgICAgICAgICByZXR1cm4gR09iamVjdC5UWVBFX1NUUklOR1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgYnJlYWtcbiAgICB9XG5cbiAgICB0aHJvdyBFcnJvcihgY2Fubm90IGluZmVyIEdUeXBlIGZyb20gdmFyaWFudCBcIiR7dHlwZX1cImApXG59XG5cbi8qKlxuICogUmVnaXN0ZXJzIGEgbWV0aG9kLlxuICogWW91IHNob3VsZCBwcmVmZXIgdXNpbmcge0BsaW5rIG1ldGhvZEFzeW5jfSB3aGVuIHByb3h5aW5nLCBkdWUgdG8gSU8gYmxvY2tpbmcuXG4gKiBOb3RlIHRoYXQgdGhpcyBpcyBmdW5jdGlvbmFsbHkgdGhlIHNhbWUgYXMge0BsaW5rIG1ldGhvZEFzeW5jfSBvbiBleHBvcnRlZCBvYmplY3RzLlxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtZXRob2Q8Y29uc3QgSW5BcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+LCBjb25zdCBPdXRBcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+PihcbiAgICBpbkFyZ3M6IEluQXJncyxcbiAgICBvdXRBcmdzOiBPdXRBcmdzLFxuKTogKFxuICAgIG1ldGhvZDogKHRoaXM6IFNlcnZpY2UsIC4uLmFyZ3M6IGFueVtdKSA9PiBJbmZlclZhcmlhbnRUeXBlczxPdXRBcmdzPixcbiAgICBjdHg6IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCB0eXBlb2YgbWV0aG9kPixcbikgPT4gKHRoaXM6IFNlcnZpY2UsIC4uLmFyZ3M6IEluZmVyVmFyaWFudFR5cGVzPEluQXJncz4pID0+IGFueVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIG1ldGhvZC5cbiAqIFlvdSBzaG91bGQgcHJlZmVyIHVzaW5nIHtAbGluayBtZXRob2RBc3luY30gd2hlbiBwcm94eWluZywgZHVlIHRvIElPIGJsb2NraW5nLlxuICogTm90ZSB0aGF0IHRoaXMgaXMgZnVuY3Rpb25hbGx5IHRoZSBzYW1lIGFzIHtAbGluayBtZXRob2RBc3luY30gb24gZXhwb3J0ZWQgb2JqZWN0cy5cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gbWV0aG9kPGNvbnN0IEluQXJncyBleHRlbmRzIEFycmF5PERCdXNUeXBlPj4oXG4gICAgLi4uaW5BcmdzOiBJbkFyZ3Ncbik6IChcbiAgICBtZXRob2Q6ICh0aGlzOiBTZXJ2aWNlLCAuLi5hcmdzOiBhbnlbXSkgPT4gdm9pZCxcbiAgICBjdHg6IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCB0eXBlb2YgbWV0aG9kPixcbikgPT4gKHRoaXM6IFNlcnZpY2UsIC4uLmFyZ3M6IEluZmVyVmFyaWFudFR5cGVzPEluQXJncz4pID0+IHZvaWRcblxuZXhwb3J0IGZ1bmN0aW9uIG1ldGhvZDxjb25zdCBJbkFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4sIGNvbnN0IE91dEFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4+KFxuICAgIC4uLmFyZ3M6IEluQXJncyB8IFtpbkFyZ3M6IEluQXJncywgb3V0QXJncz86IE91dEFyZ3NdXG4pIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKFxuICAgICAgICBtZXRob2Q6IChcbiAgICAgICAgICAgIHRoaXM6IFNlcnZpY2UsXG4gICAgICAgICAgICAuLi5hcmdzOiBJbmZlclZhcmlhbnRUeXBlczxJbkFyZ3M+XG4gICAgICAgICkgPT4gSW5mZXJWYXJpYW50VHlwZXM8T3V0QXJncz4gfCB2b2lkLFxuICAgICAgICBjdHg6IENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCB0eXBlb2YgbWV0aG9kPixcbiAgICApOiAodGhpczogU2VydmljZSwgLi4uYXJnczogSW5mZXJWYXJpYW50VHlwZXM8SW5BcmdzPikgPT4gYW55IHtcbiAgICAgICAgY29uc3QgbmFtZSA9IGluc3RhbGxNZXRob2QoYXJncywgbWV0aG9kLCBjdHgpXG5cbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICguLi5hcmdzKSB7XG4gICAgICAgICAgICBpZiAodGhpc1tpbnRlcm5hbHNdLnByb3h5KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzW3JlbW90ZU1ldGhvZF0obmFtZSwgYXJncylcbiAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWUuZGVlcFVucGFjazxJbmZlclZhcmlhbnRUeXBlczxPdXRBcmdzPj4oKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbWV0aG9kLmFwcGx5KHRoaXMsIGFyZ3MpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogUmVnaXN0ZXJzIGEgbWV0aG9kLlxuICogWW91IHNob3VsZCBwcmVmZXIgdXNpbmcgdGhpcyBvdmVyIHtAbGluayBtZXRob2R9IHdoZW4gcHJveHlpbmcsIHNpbmNlIHRoaXMgZG9lcyBub3QgYmxvY2sgSU8uXG4gKiBOb3RlIHRoYXQgdGhpcyBpcyBmdW5jdGlvbmFsbHkgdGhlIHNhbWUgYXMge0BsaW5rIG1ldGhvZH0gb24gZXhwb3J0ZWQgb2JqZWN0cy5cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gbWV0aG9kQXN5bmM8XG4gICAgY29uc3QgSW5BcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+LFxuICAgIGNvbnN0IE91dEFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4sXG4+KFxuICAgIGluQXJnczogSW5BcmdzLFxuICAgIG91dEFyZ3M6IE91dEFyZ3MsXG4pOiAoXG4gICAgbWV0aG9kOiAodGhpczogU2VydmljZSwgLi4uYXJnczogYW55W10pID0+IFByb21pc2U8SW5mZXJWYXJpYW50VHlwZXM8T3V0QXJncz4+LFxuICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuKSA9PiAodGhpczogU2VydmljZSwgLi4uYXJnczogSW5mZXJWYXJpYW50VHlwZXM8SW5BcmdzPikgPT4gUHJvbWlzZTxhbnk+XG5cbi8qKlxuICogUmVnaXN0ZXJzIGEgbWV0aG9kLlxuICogWW91IHNob3VsZCBwcmVmZXIgdXNpbmcgdGhpcyBvdmVyIHtAbGluayBtZXRob2R9IHdoZW4gcHJveHlpbmcsIHNpbmNlIHRoaXMgZG9lcyBub3QgYmxvY2sgSU8uXG4gKiBOb3RlIHRoYXQgdGhpcyBpcyBmdW5jdGlvbmFsbHkgdGhlIHNhbWUgYXMge0BsaW5rIG1ldGhvZH0gb24gZXhwb3J0ZWQgb2JqZWN0cy5cbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gbWV0aG9kQXN5bmM8Y29uc3QgSW5BcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+PihcbiAgICAuLi5pbkFyZ3M6IEluQXJnc1xuKTogKFxuICAgIG1ldGhvZDogKHRoaXM6IFNlcnZpY2UsIC4uLmFyZ3M6IGFueVtdKSA9PiBQcm9taXNlPHZvaWQ+LFxuICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuKSA9PiAodGhpczogU2VydmljZSwgLi4uYXJnczogSW5mZXJWYXJpYW50VHlwZXM8SW5BcmdzPikgPT4gUHJvbWlzZTx2b2lkPlxuXG5leHBvcnQgZnVuY3Rpb24gbWV0aG9kQXN5bmM8XG4gICAgY29uc3QgSW5BcmdzIGV4dGVuZHMgQXJyYXk8REJ1c1R5cGU+LFxuICAgIGNvbnN0IE91dEFyZ3MgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4sXG4+KC4uLmFyZ3M6IEluQXJncyB8IFtpbkFyZ3M6IEluQXJncywgb3V0QXJncz86IE91dEFyZ3NdKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChcbiAgICAgICAgbWV0aG9kOiAoXG4gICAgICAgICAgICB0aGlzOiBTZXJ2aWNlLFxuICAgICAgICAgICAgLi4uYXJnczogSW5mZXJWYXJpYW50VHlwZXM8SW5BcmdzPlxuICAgICAgICApID0+IFByb21pc2U8SW5mZXJWYXJpYW50VHlwZXM8T3V0QXJncz4gfCB2b2lkPixcbiAgICAgICAgY3R4OiBDbGFzc01ldGhvZERlY29yYXRvckNvbnRleHQ8U2VydmljZSwgdHlwZW9mIG1ldGhvZD4sXG4gICAgKTogKHRoaXM6IFNlcnZpY2UsIC4uLmFyZ3M6IEluZmVyVmFyaWFudFR5cGVzPEluQXJncz4pID0+IFByb21pc2U8YW55PiB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBpbnN0YWxsTWV0aG9kKGFyZ3MsIG1ldGhvZCwgY3R4KVxuXG4gICAgICAgIHJldHVybiBhc3luYyBmdW5jdGlvbiAoLi4uYXJncykge1xuICAgICAgICAgICAgaWYgKHRoaXNbaW50ZXJuYWxzXS5wcm94eSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gYXdhaXQgdGhpc1tyZW1vdGVNZXRob2RBc3luY10obmFtZSwgYXJncylcbiAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWUuZGVlcFVucGFjazxJbmZlclZhcmlhbnRUeXBlczxPdXRBcmdzPj4oKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbWV0aG9kLmFwcGx5KHRoaXMsIGFyZ3MpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogUmVnaXN0ZXJzIGEgcmVhZC13cml0ZSBwcm9wZXJ0eS4gV2hlbiBhIG5ldyB2YWx1ZSBpcyBhc3NpZ25lZCB0aGUgbm90aWZ5IHNpZ25hbFxuICogaXMgYXV0b21hdGljYWxseSBlbWl0dGVkIG9uIHRoZSBsb2NhbCBhbmQgZXhwb3J0ZWQgb2JqZWN0LlxuICpcbiAqIE5vdGUgdGhhdCBuZXcgdmFsdWVzIGFyZSBjaGVja2VkIGJ5IHJlZmVyZW5jZSBzbyBhc3NpZ25pbmcgdGhlIHNhbWUgb2JqZWN0IHdpbGxcbiAqIG5vdCBlbWl0IHRoZSBub3RpZnkgc2lnbmFsLlxuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcm9wZXJ0eTxUIGV4dGVuZHMgc3RyaW5nPih0eXBlOiBUKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChcbiAgICAgICAgXzogdm9pZCxcbiAgICAgICAgY3R4OiBDbGFzc0ZpZWxkRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCBEZWVwSW5mZXI8VD4+LFxuICAgICk6ICh0aGlzOiBTZXJ2aWNlLCBpbml0OiBEZWVwSW5mZXI8VD4pID0+IGFueSB7XG4gICAgICAgIGNvbnN0IG5hbWUgPSBpbnN0YWxsUHJvcGVydHkodHlwZSwgY3R4KVxuXG4gICAgICAgIHZvaWQgZ3Byb3BlcnR5KHsgJGd0eXBlOiBpbmZlckdUeXBlRnJvbVZhcmlhbnQodHlwZSkgfSkoXG4gICAgICAgICAgICBfLFxuICAgICAgICAgICAgY3R4IGFzIENsYXNzRmllbGREZWNvcmF0b3JDb250ZXh0PEdPYmplY3QuT2JqZWN0PiAmIEN0eCxcbiAgICAgICAgICAgIHsgbWV0YU9ubHk6IHRydWUgfSxcbiAgICAgICAgKVxuXG4gICAgICAgIGN0eC5hZGRJbml0aWFsaXplcihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgbmFtZSwge1xuICAgICAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBzZXQodmFsdWU6IERlZXBJbmZlcjxUPikge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB7IHByb3h5LCBwcml2IH0gPSB0aGlzW2ludGVybmFsc11cblxuICAgICAgICAgICAgICAgICAgICBpZiAocHJveHkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXNbcmVtb3RlUHJvcGVydHlTZXRdKG5hbWUsIHZhbHVlKVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBpZiAocHJpdltuYW1lXSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByaXZbbmFtZV0gPSB2YWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5ub3RpZnkobmFtZSBhcyBFeHRyYWN0PGtleW9mIFNlcnZpY2UsIHN0cmluZz4pXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGdldCgpOiBEZWVwSW5mZXI8VD4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB7IHByb3h5LCBwcml2IH0gPSB0aGlzW2ludGVybmFsc11cblxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJveHlcbiAgICAgICAgICAgICAgICAgICAgICAgID8gcHJveHkuZ2V0X2NhY2hlZF9wcm9wZXJ0eShuYW1lKSEuZGVlcFVucGFjazxEZWVwSW5mZXI8VD4+KClcbiAgICAgICAgICAgICAgICAgICAgICAgIDogKHByaXZbbmFtZV0gYXMgRGVlcEluZmVyPFQ+KVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9IHNhdGlzZmllcyBUaGlzVHlwZTxTZXJ2aWNlPilcbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGluaXQpIHtcbiAgICAgICAgICAgIGNvbnN0IHByaXYgPSB0aGlzW2ludGVybmFsc10ucHJpdlxuICAgICAgICAgICAgcHJpdltuYW1lXSA9IGluaXRcbiAgICAgICAgICAgIC8vIHdlIGRvbid0IG5lZWQgdG8gc3RvcmUgdGhlIHZhbHVlIG9uIHRoZSBvYmplY3QgaXRzZWxmXG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8qKlxuICogUmVnaXN0ZXJzIGEgcmVhZC1vbmx5IHByb3BlcnR5LiBDYW4gYmUgdXNlZCBpbiBjb25qdWN0aW9uIHdpdGgge0BsaW5rIHNldHRlcn0gdG8gZGVmaW5lXG4gKiByZWFkLXdyaXRlIHByb3BlcnRpZXMgYXMgYWNjZXNzb3JzLlxuICpcbiAqIE5vdGUgdGhhdCB5b3Ugd2lsbCBuZWVkIHRvIGV4cGxpY2l0bHkgZW1pdCB0aGUgbm90aWZ5IHNpZ25hbC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldHRlcjxUIGV4dGVuZHMgc3RyaW5nPih0eXBlOiBUKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChcbiAgICAgICAgbWV0aG9kOiAodGhpczogU2VydmljZSkgPT4gRGVlcEluZmVyPFQ+LFxuICAgICAgICBjdHg6IENsYXNzR2V0dGVyRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCBEZWVwSW5mZXI8VD4+LFxuICAgICk6ICh0aGlzOiBTZXJ2aWNlKSA9PiBhbnkge1xuICAgICAgICBjb25zdCBuYW1lID0gaW5zdGFsbFByb3BlcnR5KHR5cGUsIGN0eClcblxuICAgICAgICBjdHguYWRkSW5pdGlhbGl6ZXIoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZGVmaW5lUHJvcGVydHlHZXR0ZXIodGhpcywgbmFtZSBhcyBFeHRyYWN0PGtleW9mIFNlcnZpY2UsIHN0cmluZz4pXG4gICAgICAgIH0pXG5cbiAgICAgICAgdm9pZCBnZ2V0dGVyKHsgJGd0eXBlOiBpbmZlckdUeXBlRnJvbVZhcmlhbnQodHlwZSkgfSkoXG4gICAgICAgICAgICAoKSA9PiB7fSxcbiAgICAgICAgICAgIGN0eCBhcyBDbGFzc0dldHRlckRlY29yYXRvckNvbnRleHQ8R09iamVjdC5PYmplY3Q+ICYgQ3R4LFxuICAgICAgICApXG5cbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIGdldCgpOiBEZWVwSW5mZXI8VD4ge1xuICAgICAgICAgICAgY29uc3QgeyBwcm94eSB9ID0gdGhpc1tpbnRlcm5hbHNdXG4gICAgICAgICAgICByZXR1cm4gcHJveHlcbiAgICAgICAgICAgICAgICA/IHByb3h5LmdldF9jYWNoZWRfcHJvcGVydHkobmFtZSkhLmRlZXBVbnBhY2s8RGVlcEluZmVyPFQ+PigpXG4gICAgICAgICAgICAgICAgOiBtZXRob2QuY2FsbCh0aGlzKVxuICAgICAgICB9XG4gICAgfVxufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIHdyaXRlLW9ubHkgcHJvcGVydHkuIENhbiBiZSB1c2VkIGluIGNvbmp1Y3Rpb24gd2l0aCB7QGxpbmsgZ2V0dGVyfSB0byBkZWZpbmVcbiAqIHJlYWQtd3JpdGUgcHJvcGVydGllcyBhcyBhY2Nlc3NvcnMuXG4gKlxuICogTm90ZSB0aGF0IHlvdSB3aWxsIG5lZWQgdG8gZXhwbGljaXRseSBlbWl0IHRoZSBub3RpZnkgc2lnbmFsLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0dGVyPFQgZXh0ZW5kcyBzdHJpbmc+KHR5cGU6IFQpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKFxuICAgICAgICBzZXR0ZXI6ICh0aGlzOiBTZXJ2aWNlLCB2YWx1ZTogYW55KSA9PiB2b2lkLFxuICAgICAgICBjdHg6IENsYXNzU2V0dGVyRGVjb3JhdG9yQ29udGV4dDxTZXJ2aWNlLCBEZWVwSW5mZXI8VD4+LFxuICAgICk6ICh0aGlzOiBTZXJ2aWNlLCB2YWx1ZTogRGVlcEluZmVyPFQ+KSA9PiB2b2lkIHtcbiAgICAgICAgY29uc3QgbmFtZSA9IGluc3RhbGxQcm9wZXJ0eSh0eXBlLCBjdHgpXG5cbiAgICAgICAgdm9pZCBnc2V0dGVyKHsgJGd0eXBlOiBpbmZlckdUeXBlRnJvbVZhcmlhbnQodHlwZSkgfSkoXG4gICAgICAgICAgICAoKSA9PiB7fSxcbiAgICAgICAgICAgIGN0eCBhcyBDbGFzc1NldHRlckRlY29yYXRvckNvbnRleHQ8R09iamVjdC5PYmplY3Q+ICYgQ3R4LFxuICAgICAgICApXG5cbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uICh2YWx1ZTogRGVlcEluZmVyPFQ+KSB7XG4gICAgICAgICAgICBjb25zdCB7IHByb3h5IH0gPSB0aGlzW2ludGVybmFsc11cblxuICAgICAgICAgICAgaWYgKHByb3h5KSB7XG4gICAgICAgICAgICAgICAgdGhpc1tyZW1vdGVQcm9wZXJ0eVNldF0obmFtZSwgdmFsdWUpXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHNldHRlci5jYWxsKHRoaXMsIHZhbHVlKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIHNpZ25hbCB3aGljaCB3aGVuIGludm9rZWQgd2lsbCBlbWl0IHRoZSBzaWduYWxcbiAqIG9uIHRoZSBsb2NhbCBvYmplY3QgYW5kIHRoZSBleHBvcnRlZCBvYmplY3QuXG4gKlxuICogKipOb3RlKio6IGl0cyBub3QgcG9zc2libGUgdG8gZW1pdCBzaWduYWxzIG9uIHJlbW90ZSBvYmplY3RzIHRocm91Z2ggcHJveGllcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNpZ25hbDxjb25zdCBQYXJhbXMgZXh0ZW5kcyBBcnJheTxEQnVzVHlwZT4+KC4uLnBhcmFtczogUGFyYW1zKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChcbiAgICAgICAgbWV0aG9kOiAodGhpczogU2VydmljZSwgLi4ucGFyYW1zOiBhbnkpID0+IHZvaWQsXG4gICAgICAgIGN0eDogQ2xhc3NNZXRob2REZWNvcmF0b3JDb250ZXh0PFNlcnZpY2UsIHR5cGVvZiBtZXRob2Q+LFxuICAgICk6ICh0aGlzOiBTZXJ2aWNlLCAuLi5wYXJhbXM6IEluZmVyVmFyaWFudFR5cGVzPFBhcmFtcz4pID0+IHZvaWQge1xuICAgICAgICBjb25zdCBuYW1lID0gaW5zdGFsbFNpZ25hbChwYXJhbXMsIGN0eClcblxuICAgICAgICB2b2lkIGdzaWduYWwoLi4ucGFyYW1zLm1hcChpbmZlckdUeXBlRnJvbVZhcmlhbnQpKShcbiAgICAgICAgICAgICgpID0+IHt9LFxuICAgICAgICAgICAgY3R4IGFzIENsYXNzTWV0aG9kRGVjb3JhdG9yQ29udGV4dDxHT2JqZWN0Lk9iamVjdD4gJiBDdHgsXG4gICAgICAgIClcblxuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKC4uLnBhcmFtcykge1xuICAgICAgICAgICAgaWYgKHRoaXNbaW50ZXJuYWxzXS5wcm94eSkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihgY2Fubm90IGVtaXQgc2lnbmFsIFwiJHtuYW1lfVwiIG9uIHJlbW90ZSBvYmplY3RgKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAodGhpc1tpbnRlcm5hbHNdLmRidXNPYmplY3QgfHwgIXRoaXNbaW50ZXJuYWxzXS5wcm94eSkge1xuICAgICAgICAgICAgICAgIG1ldGhvZC5hcHBseSh0aGlzLCBwYXJhbXMpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiB0aGlzLmVtaXQobmFtZSwgLi4ucGFyYW1zKVxuICAgICAgICB9XG4gICAgfVxufVxuIiwgImltcG9ydCB7IFNlcnZpY2UsIGlmYWNlLCBtZXRob2RBc3luYyB9IGZyb20gXCJnbmltL2RidXNcIlxuXG5leHBvcnQgaW50ZXJmYWNlIEFwcERCdXNJbXBsIHtcbiAgICBpbnNlY3RvcigpOiB2b2lkXG4gICAgdG9nZ2xlV2luZG93KG5hbWU6IHN0cmluZyk6IHZvaWRcbiAgICBxdWl0KCk6IHZvaWRcbiAgICByZXF1ZXN0KGFyZ3Y6IHN0cmluZ1tdKTogUHJvbWlzZTxzdHJpbmc+XG59XG5cbkBpZmFjZShcImlvLkFzdGFsLkFwcGxpY2F0aW9uXCIpXG5leHBvcnQgY2xhc3MgQXBwREJ1cyBleHRlbmRzIFNlcnZpY2Uge1xuICAgIHByaXZhdGUgaW1wbDogQXBwREJ1c0ltcGxcblxuICAgIEBtZXRob2RBc3luYygpXG4gICAgYXN5bmMgSW5zcGVjdG9yKCk6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuaW1wbC5pbnNlY3RvcigpKVxuICAgIH1cblxuICAgIEBtZXRob2RBc3luYyhcInNcIilcbiAgICBhc3luYyBUb2dnbGVXaW5kb3cobmFtZTogc3RyaW5nKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5pbXBsLnRvZ2dsZVdpbmRvdyhuYW1lKSlcbiAgICB9XG5cbiAgICBAbWV0aG9kQXN5bmMoKVxuICAgIGFzeW5jIFF1aXQoKTogUHJvbWlzZTx2b2lkPiB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5pbXBsLnF1aXQoKSlcbiAgICB9XG5cbiAgICBAbWV0aG9kQXN5bmMoW1wiYXNcIl0sIFtcInNcIl0pXG4gICAgYXN5bmMgUmVxdWVzdChhcmd2OiBzdHJpbmdbXSk6IFByb21pc2U8W3N0cmluZ10+IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaW1wbC5yZXF1ZXN0KGFyZ3YpLnRoZW4oKHJlcykgPT4gW3Jlc10pXG4gICAgfVxuXG4gICAgY29uc3RydWN0b3IoaW1wbDogQXBwREJ1c0ltcGwpIHtcbiAgICAgICAgc3VwZXIoKVxuICAgICAgICB0aGlzLmltcGwgPSBpbXBsXG4gICAgfVxuXG4gICAgc3RhdGljIHByb3h5KGluc3RhbmNlTmFtZTogc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IGFwcCA9IG5ldyBBcHBEQnVzKHtcbiAgICAgICAgICAgIGluc2VjdG9yKCkge30sXG4gICAgICAgICAgICB0b2dnbGVXaW5kb3coKSB7fSxcbiAgICAgICAgICAgIHF1aXQoKSB7fSxcbiAgICAgICAgICAgIHJlcXVlc3Q6ICgpID0+IFByb21pc2UucmVqZWN0KCksXG4gICAgICAgIH0pXG5cbiAgICAgICAgcmV0dXJuIGFwcC5wcm94eSh7XG4gICAgICAgICAgICBuYW1lOiBcImlvLkFzdGFsLlwiICsgaW5zdGFuY2VOYW1lLFxuICAgICAgICB9KVxuICAgIH1cbn1cbiIsICJpbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcbmltcG9ydCB7IEZyYWdtZW50IH0gZnJvbSBcIi4vRnJhZ21lbnQuanNcIlxuaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5pbXBvcnQgeyB0eXBlIENDLCB0eXBlIEZDLCBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsga2ViYWJpZnksIHR5cGUgUGFzY2FsaWZ5LCBzZXQgfSBmcm9tIFwiLi4vdXRpbC5qc1wiXG5pbXBvcnQgeyBvbkNsZWFudXAgfSBmcm9tIFwiLi9zY29wZS5qc1wiXG5cbi8qKlxuICogUmVwcmVzZW50cyBhbGwgb2YgdGhlIHRoaW5ncyB0aGF0IGNhbiBiZSBwYXNzZWQgYXMgYSBjaGlsZCB0byBjbGFzcyBjb21wb25lbnRzLlxuICovXG5leHBvcnQgdHlwZSBOb2RlID1cbiAgICB8IEFycmF5PEdPYmplY3QuT2JqZWN0PlxuICAgIHwgR09iamVjdC5PYmplY3RcbiAgICB8IG51bWJlclxuICAgIHwgc3RyaW5nXG4gICAgfCBib29sZWFuXG4gICAgfCBudWxsXG4gICAgfCB1bmRlZmluZWRcblxuZXhwb3J0IGNvbnN0IGd0a1R5cGUgPSBTeW1ib2woXCJndGsgYnVpbGRlciB0eXBlXCIpXG5cbi8qKlxuICogU3BlY2lhbCBzeW1ib2wgd2hpY2ggbGV0cyB5b3UgaW1wbGVtZW50IGhvdyB3aWRnZXRzIGFyZSBhcHBlbmRlZCBpbiBKU1guXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGB0c1xuICogY2xhc3MgTXlDb21wb25lbnQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gKiAgIFthcHBlbmRDaGlsZF0oY2hpbGQ6IEdPYmplY3QuT2JqZWN0LCB0eXBlOiBzdHJpbmcgfCBudWxsKSB7XG4gKiAgICAgLy8gaW1wbGVtZW50XG4gKiAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgY29uc3QgYXBwZW5kQ2hpbGQgPSBTeW1ib2woXCJKU1ggYWRkIGNoaWxkIG1ldGhvZFwiKVxuXG4vKipcbiAqIFNwZWNpYWwgc3ltYm9sIHdoaWNoIGxldHMgeW91IGltcGxlbWVudCBob3cgd2lkZ2V0cyBhcmUgcmVtb3ZlZCBpbiBKU1guXG4gKlxuICogRXhhbXBsZTpcbiAqXG4gKiBgYGB0c1xuICogY2xhc3MgTXlDb21wb25lbnQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gKiAgIFtyZW1vdmVDaGlsZF0oY2hpbGQ6IEdPYmplY3QuT2JqZWN0KSB7XG4gKiAgICAgLy8gaW1wbGVtZW50XG4gKiAgIH1cbiAqIH1cbiAqIGBgYFxuICovXG5leHBvcnQgY29uc3QgcmVtb3ZlQ2hpbGQgPSBTeW1ib2woXCJKU1ggYWRkIHJlbW92ZSBtZXRob2RcIilcblxuLyoqXG4gKiBHZXQgdGhlIHR5cGUgb2YgdGhlIG9iamVjdCBzcGVjaWZpZWQgdGhyb3VnaCB0aGUgYCR0eXBlYCBwcm9wZXJ0eVxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VHlwZShvYmplY3Q6IEdPYmplY3QuT2JqZWN0KSB7XG4gICAgcmV0dXJuIGd0a1R5cGUgaW4gb2JqZWN0ID8gKG9iamVjdFtndGtUeXBlXSBhcyBzdHJpbmcpIDogbnVsbFxufVxuXG4vKipcbiAqIEZ1bmN0aW9uIENvbXBvbmVudCBQcm9wZXJ0aWVzXG4gKi9cbmV4cG9ydCB0eXBlIEZDUHJvcHM8U2VsZiwgUHJvcHM+ID0gUHJvcHMgJiB7XG4gICAgLyoqXG4gICAgICogR3RrLkJ1aWxkZXIgdHlwZVxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIGFzIGEgcGFyYW1ldGVyc1xuICAgICAqL1xuICAgICR0eXBlPzogc3RyaW5nXG4gICAgLyoqXG4gICAgICogc2V0dXAgZnVuY3Rpb25cbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCBhcyBhIHBhcmFtZXRlcnNcbiAgICAgKi9cbiAgICAkPyhzZWxmOiBTZWxmKTogdm9pZFxufVxuXG4vKipcbiAqIENsYXNzIENvbXBvbmVudCBQcm9wZXJ0aWVzXG4gKi9cbmV4cG9ydCB0eXBlIENDUHJvcHM8U2VsZiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LCBQcm9wcz4gPSB7XG4gICAgLyoqXG4gICAgICogQGludGVybmFsIGNoaWxkcmVuIGVsZW1lbnRzXG4gICAgICogaXRzIGNvbnN1bWVkIGludGVybmFsbHkgYW5kIG5vdCBhY3R1YWxseSBwYXNzZWQgdG8gY2xhc3MgY29tcG9uZW50IGNvbnN0cnVjdG9yc1xuICAgICAqL1xuICAgIGNoaWxkcmVuPzogQXJyYXk8Tm9kZT4gfCBOb2RlXG4gICAgLyoqXG4gICAgICogR3RrLkJ1aWxkZXIgdHlwZVxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkdHlwZT86IHN0cmluZ1xuICAgIC8qKlxuICAgICAqIGZ1bmN0aW9uIHRvIHVzZSBhcyBhIGNvbnN0cnVjdG9yLFxuICAgICAqIGl0cyBjb25zdW1lZCBpbnRlcm5hbGx5IGFuZCBub3QgYWN0dWFsbHkgcGFzc2VkIHRvIGNsYXNzIGNvbXBvbmVudCBjb25zdHJ1Y3RvcnNcbiAgICAgKi9cbiAgICAkY29uc3RydWN0b3I/KHByb3BzOiBQYXJ0aWFsPFByb3BzPik6IFNlbGZcbiAgICAvKipcbiAgICAgKiBzZXR1cCBmdW5jdGlvbixcbiAgICAgKiBpdHMgY29uc3VtZWQgaW50ZXJuYWxseSBhbmQgbm90IGFjdHVhbGx5IHBhc3NlZCB0byBjbGFzcyBjb21wb25lbnQgY29uc3RydWN0b3JzXG4gICAgICovXG4gICAgJD8oc2VsZjogU2VsZik6IHZvaWRcbiAgICAvKipcbiAgICAgKiBDU1MgY2xhc3MgbmFtZXNcbiAgICAgKi9cbiAgICBjbGFzcz86IHN0cmluZyB8IEFjY2Vzc29yPHN0cmluZz5cbiAgICAvKipcbiAgICAgKiBpbmxpbmUgQ1NTXG4gICAgICovXG4gICAgY3NzPzogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPlxufSAmIHtcbiAgICBbSyBpbiBrZXlvZiBQcm9wc106IEFjY2Vzc29yPE5vbk51bGxhYmxlPFByb3BzW0tdPj4gfCBQcm9wc1tLXVxufSAmIHtcbiAgICBbUyBpbiBrZXlvZiBTZWxmW1wiJHNpZ25hbHNcIl0gYXMgUyBleHRlbmRzIGBub3RpZnk6OiR7aW5mZXIgUH1gXG4gICAgICAgID8gYG9uTm90aWZ5JHtQYXNjYWxpZnk8UD59YFxuICAgICAgICA6IFMgZXh0ZW5kcyBgJHtpbmZlciBFfTo6JHtpbmZlciBEfWBcbiAgICAgICAgICA/IGBvbiR7UGFzY2FsaWZ5PGAke0V9OiR7RH1gPn1gXG4gICAgICAgICAgOiBTIGV4dGVuZHMgc3RyaW5nXG4gICAgICAgICAgICA/IGBvbiR7UGFzY2FsaWZ5PFM+fWBcbiAgICAgICAgICAgIDogbmV2ZXJdPzogR09iamVjdC5TaWduYWxDYWxsYmFjazxTZWxmLCBTZWxmW1wiJHNpZ25hbHNcIl1bU10+XG59XG5cbi8vIHByZXR0aWVyLWlnbm9yZVxudHlwZSBKc3hQcm9wczxDLCBQcm9wcz4gPVxuICAgIEMgZXh0ZW5kcyB0eXBlb2YgRnJhZ21lbnQgPyAoUHJvcHMgJiB7fSlcbiAgICAvLyBpbnRyaW5zaWNFbGVtZW50cyBhbHdheXMgcmVzb2x2ZSBhcyBGQ1xuICAgIC8vIHNvIHdlIGNhbid0IG5hcnJvdyBpdCBkb3duLCBhbmQgaW4gc29tZSBjYXNlc1xuICAgIC8vIHRoZSBzZXR1cCBmdW5jdGlvbiBpcyB0eXBlZCBhcyBhIHVuaW9uIG9mIE9iamVjdCBhbmQgYWN0dWFsIHR5cGVcbiAgICAvLyBhcyBhIGZpeCB1c2VycyBjYW4gYW5kIHNob3VsZCB1c2UgRkNQcm9wc1xuICAgIDogQyBleHRlbmRzIEZDID8gUHJvcHMgJiBPbWl0PEZDUHJvcHM8UmV0dXJuVHlwZTxDPiwgUHJvcHM+LCBcIiRcIj5cbiAgICA6IEMgZXh0ZW5kcyBDQyA/IENDUHJvcHM8SW5zdGFuY2VUeXBlPEM+LCBQcm9wcz5cbiAgICA6IG5ldmVyXG5cbmZ1bmN0aW9uIGlzR09iamVjdEN0b3IoY3RvcjogYW55KTogY3RvciBpcyBDQyB7XG4gICAgcmV0dXJuIGN0b3IucHJvdG90eXBlIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3Rcbn1cblxuZnVuY3Rpb24gaXNGdW5jdGlvbkN0b3IoY3RvcjogYW55KTogY3RvciBpcyBGQyB7XG4gICAgcmV0dXJuIHR5cGVvZiBjdG9yID09PSBcImZ1bmN0aW9uXCIgJiYgIWlzR09iamVjdEN0b3IoY3Rvcilcbn1cblxuLy8gb25Ob3RpZnlQcm9wTmFtZSAtPiBub3RpZnk6OnByb3AtbmFtZVxuLy8gb25QYXNjYWxOYW1lOmRldGFpbE5hbWUgLT4gcGFzY2FsLW5hbWU6OmRldGFpbC1uYW1lXG5leHBvcnQgZnVuY3Rpb24gc2lnbmFsTmFtZShrZXk6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgY29uc3QgW3NpZywgZGV0YWlsXSA9IGtlYmFiaWZ5KGtleS5zbGljZSgyKSkuc3BsaXQoXCI6XCIpXG5cbiAgICBpZiAoc2lnLnN0YXJ0c1dpdGgoXCJub3RpZnktXCIpKSB7XG4gICAgICAgIHJldHVybiBgbm90aWZ5Ojoke3NpZy5zbGljZSg3KX1gXG4gICAgfVxuXG4gICAgcmV0dXJuIGRldGFpbCA/IGAke3NpZ306OiR7ZGV0YWlsfWAgOiBzaWdcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZShwYXJlbnQ6IEdPYmplY3QuT2JqZWN0LCBjaGlsZDogR09iamVjdC5PYmplY3QpIHtcbiAgICBpZiAocGFyZW50IGluc3RhbmNlb2YgRnJhZ21lbnQpIHtcbiAgICAgICAgcGFyZW50LnJlbW92ZShjaGlsZClcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKHJlbW92ZUNoaWxkIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50W3JlbW92ZUNoaWxkXSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIHBhcmVudFtyZW1vdmVDaGlsZF0oY2hpbGQpXG4gICAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGVudi5yZW1vdmVDaGlsZChwYXJlbnQsIGNoaWxkKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gYXBwZW5kKHBhcmVudDogR09iamVjdC5PYmplY3QsIGNoaWxkOiBHT2JqZWN0Lk9iamVjdCkge1xuICAgIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBGcmFnbWVudCkge1xuICAgICAgICBwYXJlbnQuYXBwZW5kKGNoaWxkKVxuICAgICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBGcmFnbWVudCkge1xuICAgICAgICBmb3IgKGNvbnN0IGNoIG9mIGNoaWxkKSB7XG4gICAgICAgICAgICBhcHBlbmQocGFyZW50LCBjaClcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGFwcGVuZEhhbmRsZXIgPSBjaGlsZC5jb25uZWN0KFwiYXBwZW5kXCIsIChfLCBjaCkgPT4ge1xuICAgICAgICAgICAgaWYgKCEoY2ggaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5lcnJvcihUeXBlRXJyb3IoYGNhbm5vdCBhZGQgJHtjaH0gdG8gJHtwYXJlbnR9YCkpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhcHBlbmQocGFyZW50LCBjaClcbiAgICAgICAgfSlcblxuICAgICAgICBjb25zdCByZW1vdmVIYW5kbGVyID0gY2hpbGQuY29ubmVjdChcInJlbW92ZVwiLCAoXywgY2gpID0+IHtcbiAgICAgICAgICAgIGlmICghKGNoIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3QpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoVHlwZUVycm9yKGBjYW5ub3QgcmVtb3ZlICR7Y2h9IGZyb20gJHtwYXJlbnR9YCkpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZW1vdmUocGFyZW50LCBjaClcbiAgICAgICAgfSlcblxuICAgICAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICAgICAgY2hpbGQuZGlzY29ubmVjdChhcHBlbmRIYW5kbGVyKVxuICAgICAgICAgICAgY2hpbGQuZGlzY29ubmVjdChyZW1vdmVIYW5kbGVyKVxuICAgICAgICB9KVxuXG4gICAgICAgIHJldHVyblxuICAgIH1cblxuICAgIGlmIChhcHBlbmRDaGlsZCBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudFthcHBlbmRDaGlsZF0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICBwYXJlbnRbYXBwZW5kQ2hpbGRdKGNoaWxkLCBnZXRUeXBlKGNoaWxkKSlcbiAgICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgZW52LmFwcGVuZENoaWxkKHBhcmVudCwgY2hpbGQpXG59XG5cbi8qKiBAaW50ZXJuYWwgKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRUeXBlKG9iamVjdDogb2JqZWN0LCB0eXBlOiBzdHJpbmcpIHtcbiAgICBpZiAoZ3RrVHlwZSBpbiBvYmplY3QgJiYgb2JqZWN0W2d0a1R5cGVdICE9PSBcIlwiKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihgdHlwZSBvdmVycmlkZW4gZnJvbSAke29iamVjdFtndGtUeXBlXX0gdG8gJHt0eXBlfSBvbiAke29iamVjdH1gKVxuICAgIH1cblxuICAgIE9iamVjdC5hc3NpZ24ob2JqZWN0LCB7IFtndGtUeXBlXTogdHlwZSB9KVxufVxuXG5leHBvcnQgZnVuY3Rpb24ganN4PFQgZXh0ZW5kcyAocHJvcHM6IGFueSkgPT4gR09iamVjdC5PYmplY3Q+KFxuICAgIGN0b3I6IFQsXG4gICAgcHJvcHM6IEpzeFByb3BzPFQsIFBhcmFtZXRlcnM8VD5bMF0+LFxuKTogUmV0dXJuVHlwZTxUPlxuXG5leHBvcnQgZnVuY3Rpb24ganN4PFQgZXh0ZW5kcyBuZXcgKHByb3BzOiBhbnkpID0+IEdPYmplY3QuT2JqZWN0PihcbiAgICBjdG9yOiBULFxuICAgIHByb3BzOiBKc3hQcm9wczxULCBDb25zdHJ1Y3RvclBhcmFtZXRlcnM8VD5bMF0+LFxuKTogSW5zdGFuY2VUeXBlPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBqc3g8VCBleHRlbmRzIEdPYmplY3QuT2JqZWN0PihcbiAgICBjdG9yOiBrZXlvZiAodHlwZW9mIGVudilbXCJpbnRyaW5zaWNFbGVtZW50c1wiXSB8IChuZXcgKHByb3BzOiBhbnkpID0+IFQpIHwgKChwcm9wczogYW55KSA9PiBUKSxcbiAgICBpbnByb3BzOiBhbnksXG4gICAgLy8ga2V5IGlzIGEgc3BlY2lhbCBwcm9wIGluIGpzeCB3aGljaCBpcyBwYXNzZWQgYXMgYSB0aGlyZCBhcmd1bWVudCBhbmQgbm90IGluIHByb3BzXG4gICAga2V5Pzogc3RyaW5nLFxuKTogVCB7XG4gICAgY29uc3QgeyAkLCAkdHlwZSwgJGNvbnN0cnVjdG9yLCBjaGlsZHJlbiwgLi4ucmVzdCB9ID0gaW5wcm9wcyBhcyBDQ1Byb3BzPFQsIGFueT5cbiAgICBjb25zdCBwcm9wcyA9IHJlc3QgYXMgUmVjb3JkPHN0cmluZywgYW55PlxuXG4gICAgaWYgKGtleSkgT2JqZWN0LmFzc2lnbihwcm9wcywgeyBrZXkgfSlcblxuICAgIGNvbnN0IGRlZmVyUHJvcHMgPSBlbnYuaW5pdFByb3BzKGN0b3IsIHByb3BzKSA/PyBbXVxuICAgIGNvbnN0IGRlZmVycmVkUHJvcHM6IFJlY29yZDxzdHJpbmcsIHVua25vd24+ID0ge31cblxuICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIE9iamVjdC5lbnRyaWVzKHByb3BzKSkge1xuICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZGVsZXRlIHByb3BzW2tleV1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChkZWZlclByb3BzLmluY2x1ZGVzKGtleSkpIHtcbiAgICAgICAgICAgIGRlZmVycmVkUHJvcHNba2V5XSA9IHByb3BzW2tleV1cbiAgICAgICAgICAgIGRlbGV0ZSBwcm9wc1trZXldXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGN0b3IgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgaWYgKGN0b3IgaW4gZW52LmludHJpbnNpY0VsZW1lbnRzKSB7XG4gICAgICAgICAgICBjdG9yID0gZW52LmludHJpbnNpY0VsZW1lbnRzW2N0b3JdIGFzIEZDPFQ+IHwgQ0M8VD5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGB1bmtub3duIGludHJpbnNpYyBlbGVtZW50IFwiJHtjdG9yfVwiYClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpc0Z1bmN0aW9uQ3RvcihjdG9yKSkge1xuICAgICAgICBjb25zdCBvYmplY3QgPSBjdG9yKHsgY2hpbGRyZW4sIC4uLnByb3BzIH0pXG4gICAgICAgIGlmICgkdHlwZSkgc2V0VHlwZShvYmplY3QsICR0eXBlKVxuICAgICAgICAkPy4ob2JqZWN0KVxuICAgICAgICByZXR1cm4gb2JqZWN0XG4gICAgfVxuXG4gICAgLy8gY29sbGVjdCBjc3MgYW5kIGNsYXNzTmFtZVxuICAgIGNvbnN0IHsgY3NzLCBjbGFzczogY2xhc3NOYW1lIH0gPSBwcm9wc1xuICAgIGRlbGV0ZSBwcm9wcy5jc3NcbiAgICBkZWxldGUgcHJvcHMuY2xhc3NcblxuICAgIGNvbnN0IHNpZ25hbHM6IEFycmF5PFtzdHJpbmcsICguLi5wcm9wczogdW5rbm93bltdKSA9PiB1bmtub3duXT4gPSBbXVxuICAgIGNvbnN0IGJpbmRpbmdzOiBBcnJheTxbc3RyaW5nLCBBY2Nlc3Nvcjx1bmtub3duPl0+ID0gW11cblxuICAgIC8vIGNvbGxlY3Qgc2lnbmFscyBhbmQgYmluZGluZ3NcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhwcm9wcykpIHtcbiAgICAgICAgaWYgKGtleS5zdGFydHNXaXRoKFwib25cIikpIHtcbiAgICAgICAgICAgIHNpZ25hbHMucHVzaChba2V5LCB2YWx1ZSBhcyAoKSA9PiB1bmtub3duXSlcbiAgICAgICAgICAgIGRlbGV0ZSBwcm9wc1trZXldXG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIGJpbmRpbmdzLnB1c2goW2tleSwgdmFsdWVdKVxuICAgICAgICAgICAgcHJvcHNba2V5XSA9IHZhbHVlLmdldCgpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBjb25zdHJ1Y3RcbiAgICBjb25zdCBvYmplY3QgPSAkY29uc3RydWN0b3IgPyAkY29uc3RydWN0b3IocHJvcHMpIDogbmV3IChjdG9yIGFzIENDPFQ+KShwcm9wcylcbiAgICBpZiAoJGNvbnN0cnVjdG9yKSBPYmplY3QuYXNzaWduKG9iamVjdCwgcHJvcHMpXG4gICAgaWYgKCR0eXBlKSBzZXRUeXBlKG9iamVjdCwgJHR5cGUpXG5cbiAgICBpZiAoY3NzKSBlbnYuc2V0Q3NzKG9iamVjdCwgY3NzKVxuICAgIGlmIChjbGFzc05hbWUpIGVudi5zZXRDbGFzcyhvYmplY3QsIGNsYXNzTmFtZSlcblxuICAgIC8vIGFkZCBjaGlsZHJlblxuICAgIGZvciAobGV0IGNoaWxkIG9mIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW4gOiBbY2hpbGRyZW5dKSB7XG4gICAgICAgIGlmIChjaGlsZCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKEVycm9yKFwiVHJ5aW5nIHRvIGFkZCBib29sZWFuIHZhbHVlIG9mIGB0cnVlYCBhcyBhIGNoaWxkLlwiKSlcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZCkpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgY2ggb2YgY2hpbGQpIHtcbiAgICAgICAgICAgICAgICBhcHBlbmQob2JqZWN0LCBjaClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChjaGlsZCkge1xuICAgICAgICAgICAgaWYgKCEoY2hpbGQgaW5zdGFuY2VvZiBHT2JqZWN0Lk9iamVjdCkpIHtcbiAgICAgICAgICAgICAgICBjaGlsZCA9IGVudi50ZXh0Tm9kZShjaGlsZClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGFwcGVuZChvYmplY3QsIGNoaWxkKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gaGFuZGxlIHNpZ25hbHNcbiAgICBjb25zdCBkaXNwb3NlSGFuZGxlcnMgPSBzaWduYWxzLm1hcCgoW3NpZywgaGFuZGxlcl0pID0+IHtcbiAgICAgICAgY29uc3QgaWQgPSBvYmplY3QuY29ubmVjdChzaWduYWxOYW1lKHNpZyksIGhhbmRsZXIpXG4gICAgICAgIHJldHVybiAoKSA9PiBvYmplY3QuZGlzY29ubmVjdChpZClcbiAgICB9KVxuXG4gICAgLy8gZGVmZXJyZWQgcHJvcHNcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyhkZWZlcnJlZFByb3BzKSkge1xuICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBBY2Nlc3Nvcikge1xuICAgICAgICAgICAgYmluZGluZ3MucHVzaChba2V5LCB2YWx1ZV0pXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBPYmplY3QuYXNzaWduKG9iamVjdCwgeyBba2V5XTogdmFsdWUgfSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIGhhbmRsZSBiaW5kaW5nc1xuICAgIGNvbnN0IGRpc3Bvc2VCaW5kaW5ncyA9IGJpbmRpbmdzLm1hcCgoW3Byb3AsIGJpbmRpbmddKSA9PiB7XG4gICAgICAgIGNvbnN0IGRpc3Bvc2UgPSBiaW5kaW5nLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICBzZXQob2JqZWN0LCBwcm9wLCBiaW5kaW5nLmdldCgpKVxuICAgICAgICB9KVxuICAgICAgICBzZXQob2JqZWN0LCBwcm9wLCBiaW5kaW5nLmdldCgpKVxuICAgICAgICByZXR1cm4gZGlzcG9zZVxuICAgIH0pXG5cbiAgICAvLyBjbGVhbnVwXG4gICAgaWYgKGRpc3Bvc2VCaW5kaW5ncy5sZW5ndGggPiAwIHx8IGRpc3Bvc2VIYW5kbGVycy5sZW5ndGggPiAwKSB7XG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiB7XG4gICAgICAgICAgICBkaXNwb3NlSGFuZGxlcnMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICBkaXNwb3NlQmluZGluZ3MuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgJD8uKG9iamVjdClcbiAgICByZXR1cm4gb2JqZWN0XG59XG5cbi8vIFRPRE86IG1ha2UgdXNlIG9mIGpzeHNcbmV4cG9ydCBjb25zdCBqc3hzID0ganN4XG5cbmRlY2xhcmUgZ2xvYmFsIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5hbWVzcGFjZVxuICAgIG5hbWVzcGFjZSBKU1gge1xuICAgICAgICB0eXBlIEVsZW1lbnRUeXBlID0ga2V5b2YgSW50cmluc2ljRWxlbWVudHMgfCBGQyB8IENDXG4gICAgICAgIHR5cGUgRWxlbWVudCA9IEdPYmplY3QuT2JqZWN0XG4gICAgICAgIHR5cGUgRWxlbWVudENsYXNzID0gR09iamVjdC5PYmplY3RcblxuICAgICAgICB0eXBlIExpYnJhcnlNYW5hZ2VkQXR0cmlidXRlczxDLCBQcm9wcz4gPSBKc3hQcm9wczxDLCBQcm9wcz4gJiB7XG4gICAgICAgICAgICAvLyBGSVhNRTogd2h5IGRvZXMgYW4gaW50cmluc2ljIGVsZW1lbnQgYWx3YXlzIHJlc29sdmUgYXMgRkM/XG4gICAgICAgICAgICAvLyBfX3R5cGU/OiBDIGV4dGVuZHMgQ0MgPyBcIkNDXCIgOiBDIGV4dGVuZHMgRkMgPyBcIkZDXCIgOiBuZXZlclxuICAgICAgICB9XG5cbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1lbXB0eS1vYmplY3QtdHlwZVxuICAgICAgICBpbnRlcmZhY2UgSW50cmluc2ljRWxlbWVudHMge1xuICAgICAgICAgICAgLy8gY2M6IENDUHJvcHM8R3RrLkJveCwgR3RrLkJveC5Db25zdHJ1Y3RvclByb3BzLCBHdGsuQm94LlNpZ25hbFNpZ25hdHVyZXM+XG4gICAgICAgICAgICAvLyBmYzogRkNQcm9wczxHdGsuV2lkZ2V0LCBGblByb3BzPlxuICAgICAgICB9XG5cbiAgICAgICAgaW50ZXJmYWNlIEVsZW1lbnRDaGlsZHJlbkF0dHJpYnV0ZSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LW9iamVjdC10eXBlXG4gICAgICAgICAgICBjaGlsZHJlbjoge31cbiAgICAgICAgfVxuICAgIH1cbn1cbiIsICJpbXBvcnQgR09iamVjdCBmcm9tIFwiZ2k6Ly9HT2JqZWN0XCJcblxuaW50ZXJmYWNlIEZyYWdtZW50U2lnbmFsczxUPiBleHRlbmRzIEdPYmplY3QuT2JqZWN0LlNpZ25hbFNpZ25hdHVyZXMge1xuICAgIGFwcGVuZDogKGNoaWxkOiBUKSA9PiB2b2lkXG4gICAgcmVtb3ZlOiAoY2hpbGQ6IFQpID0+IHZvaWRcbn1cblxuZXhwb3J0IGNsYXNzIEZyYWdtZW50PFQgPSBhbnk+IGV4dGVuZHMgR09iamVjdC5PYmplY3Qge1xuICAgIGRlY2xhcmUgJHNpZ25hbHM6IEZyYWdtZW50U2lnbmFsczxUPlxuXG4gICAgc3RhdGljIFtHT2JqZWN0LnNpZ25hbHNdID0ge1xuICAgICAgICBhcHBlbmQ6IHsgcGFyYW1fdHlwZXM6IFtHT2JqZWN0LlRZUEVfT0JKRUNUXSB9LFxuICAgICAgICByZW1vdmU6IHsgcGFyYW1fdHlwZXM6IFtHT2JqZWN0LlRZUEVfT0JKRUNUXSB9LFxuICAgIH1cblxuICAgIHN0YXRpYyBbR09iamVjdC5wcm9wZXJ0aWVzXSA9IHtcbiAgICAgICAgY2hpbGRyZW46IEdPYmplY3QuUGFyYW1TcGVjLmpzb2JqZWN0KFwiY2hpbGRyZW5cIiwgXCJcIiwgXCJcIiwgR09iamVjdC5QYXJhbUZsYWdzLlJFQURBQkxFKSxcbiAgICB9XG5cbiAgICBzdGF0aWMge1xuICAgICAgICBHT2JqZWN0LnJlZ2lzdGVyQ2xhc3ModGhpcylcbiAgICB9XG5cbiAgICAqW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgICAgIHlpZWxkKiB0aGlzLl9jaGlsZHJlblxuICAgIH1cblxuICAgIHByaXZhdGUgX2NoaWxkcmVuOiBBcnJheTxUPlxuXG4gICAgYXBwZW5kKGNoaWxkOiBUKTogdm9pZCB7XG4gICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEZyYWdtZW50KSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcihgbmVzdGluZyBGcmFnbWVudHMgYXJlIG5vdCB5ZXQgc3VwcG9ydGVkYClcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuX2NoaWxkcmVuLnB1c2goY2hpbGQpXG4gICAgICAgIHRoaXMuZW1pdChcImFwcGVuZFwiLCBjaGlsZClcbiAgICAgICAgdGhpcy5ub3RpZnkoXCJjaGlsZHJlblwiKVxuICAgIH1cblxuICAgIHJlbW92ZShjaGlsZDogVCk6IHZvaWQge1xuICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMuX2NoaWxkcmVuLmZpbmRJbmRleCgoaSkgPT4gaSA9PT0gY2hpbGQpXG4gICAgICAgIHRoaXMuX2NoaWxkcmVuLnNwbGljZShpbmRleCwgMSlcblxuICAgICAgICB0aGlzLmVtaXQoXCJyZW1vdmVcIiwgY2hpbGQpXG4gICAgICAgIHRoaXMubm90aWZ5KFwiY2hpbGRyZW5cIilcbiAgICB9XG5cbiAgICBjb25zdHJ1Y3Rvcih7IGNoaWxkcmVuID0gW10gfTogUGFydGlhbDx7IGNoaWxkcmVuOiBBcnJheTxUPiB8IFQgfT4gPSB7fSkge1xuICAgICAgICBzdXBlcigpXG4gICAgICAgIHRoaXMuX2NoaWxkcmVuID0gQXJyYXkuaXNBcnJheShjaGlsZHJlbikgPyBjaGlsZHJlbiA6IFtjaGlsZHJlbl1cbiAgICB9XG5cbiAgICBjb25uZWN0PFMgZXh0ZW5kcyBrZXlvZiBGcmFnbWVudFNpZ25hbHM8VD4+KFxuICAgICAgICBzaWduYWw6IFMsXG4gICAgICAgIGNhbGxiYWNrOiBHT2JqZWN0LlNpZ25hbENhbGxiYWNrPHRoaXMsIEZyYWdtZW50U2lnbmFsczxUPltTXT4sXG4gICAgKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHN1cGVyLmNvbm5lY3Qoc2lnbmFsLCBjYWxsYmFjaylcbiAgICB9XG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgR2lvIGZyb20gXCJnaTovL0dpb1wiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliXCJcbmltcG9ydCB7IHR5cGUgUGFzY2FsaWZ5LCBjYW1lbGlmeSwga2ViYWJpZnkgfSBmcm9tIFwiLi4vdXRpbC5qc1wiXG5pbXBvcnQgdHlwZSB7IERlZXBJbmZlciwgUmVjdXJzaXZlSW5mZXIgfSBmcm9tIFwiLi4vdmFyaWFudC5qc1wiXG5cbnR5cGUgU3Vic2NyaWJlQ2FsbGJhY2sgPSAoKSA9PiB2b2lkXG50eXBlIERpc3Bvc2VGdW5jdGlvbiA9ICgpID0+IHZvaWRcbnR5cGUgU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2s6IFN1YnNjcmliZUNhbGxiYWNrKSA9PiBEaXNwb3NlRnVuY3Rpb25cblxuZXhwb3J0IHR5cGUgQWNjZXNzZWQ8VD4gPSBUIGV4dGVuZHMgQWNjZXNzb3I8aW5mZXIgVj4gPyBWIDogbmV2ZXJcblxuY29uc3QgZW1wdHkgPSBTeW1ib2woXCJlbXB0eSBjb21wdXRlZCB2YWx1ZVwiKVxuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVuc2FmZS1kZWNsYXJhdGlvbi1tZXJnaW5nXG5leHBvcnQgY2xhc3MgQWNjZXNzb3I8VCA9IHVua25vd24+IGV4dGVuZHMgRnVuY3Rpb24ge1xuICAgIHN0YXRpYyAkZ3R5cGUgPSBHT2JqZWN0LlRZUEVfSlNPQkpFQ1QgYXMgdW5rbm93biBhcyBHT2JqZWN0LkdUeXBlPEFjY2Vzc29yPlxuXG4gICAgI2dldDogKCkgPT4gVFxuICAgICNzdWJzY3JpYmU6IFN1YnNjcmliZUZ1bmN0aW9uXG5cbiAgICBjb25zdHJ1Y3RvcihnZXQ6ICgpID0+IFQsIHN1YnNjcmliZT86IFN1YnNjcmliZUZ1bmN0aW9uKSB7XG4gICAgICAgIHN1cGVyKFwicmV0dXJuIGFyZ3VtZW50cy5jYWxsZWUuX2NhbGwuYXBwbHkoYXJndW1lbnRzLmNhbGxlZSwgYXJndW1lbnRzKVwiKVxuICAgICAgICB0aGlzLiNzdWJzY3JpYmUgPSBzdWJzY3JpYmUgPz8gKCgpID0+ICgpID0+IHZvaWQgMClcbiAgICAgICAgdGhpcy4jZ2V0ID0gZ2V0XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU3Vic2NyaWJlIGZvciB2YWx1ZSBjaGFuZ2VzLlxuICAgICAqIEBwYXJhbSBjYWxsYmFjayBUaGUgZnVuY3Rpb24gdG8gcnVuIHdoZW4gdGhlIGN1cnJlbnQgdmFsdWUgY2hhbmdlcy5cbiAgICAgKiBAcmV0dXJucyBVbnN1YnNjcmliZSBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBzdWJzY3JpYmUoY2FsbGJhY2s6IFN1YnNjcmliZUNhbGxiYWNrKTogRGlzcG9zZUZ1bmN0aW9uIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI3N1YnNjcmliZShjYWxsYmFjaylcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcmV0dXJucyBUaGUgY3VycmVudCB2YWx1ZS5cbiAgICAgKi9cbiAgICBnZXQoKTogVCB7XG4gICAgICAgIHJldHVybiB0aGlzLiNnZXQoKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBhIG5ldyBgQWNjZXNzb3JgIHRoYXQgYXBwbGllcyBhIHRyYW5zZm9ybWF0aW9uIG9uIGl0cyB2YWx1ZS5cbiAgICAgKiBAcGFyYW0gdHJhbnNmb3JtIFRoZSB0cmFuc2Zvcm1hdGlvbiB0byBhcHBseS4gU2hvdWxkIGJlIGEgcHVyZSBmdW5jdGlvbi5cbiAgICAgKi9cbiAgICBhczxSID0gVD4odHJhbnNmb3JtOiAodmFsdWU6IFQpID0+IFIpOiBBY2Nlc3NvcjxSPiB7XG4gICAgICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gdHJhbnNmb3JtKHRoaXMuI2dldCgpKSwgdGhpcy4jc3Vic2NyaWJlKVxuICAgIH1cblxuICAgIHByb3RlY3RlZCBfY2FsbDxSID0gVD4odHJhbnNmb3JtOiAodmFsdWU6IFQpID0+IFIpOiBBY2Nlc3NvcjxSPiB7XG4gICAgICAgIGxldCB2YWx1ZTogdHlwZW9mIGVtcHR5IHwgUiA9IGVtcHR5XG4gICAgICAgIGxldCB1bnN1YjogRGlzcG9zZUZ1bmN0aW9uXG5cbiAgICAgICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG5cbiAgICAgICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICB1bnN1YiA9IHRoaXMuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3VmFsdWUgPSB0cmFuc2Zvcm0odGhpcy5nZXQoKSlcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlICE9PSBuZXdWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBuZXdWYWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlID0gZW1wdHlcbiAgICAgICAgICAgICAgICAgICAgdW5zdWIoKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGdldCA9ICgpOiBSID0+IHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZSAhPT0gZW1wdHkgPyB2YWx1ZSA6IHRyYW5zZm9ybSh0aGlzLmdldCgpKVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG5ldyBBY2Nlc3NvcihnZXQsIHN1YnNjcmliZSlcbiAgICB9XG5cbiAgICB0b1N0cmluZygpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gYEFjY2Vzc29yPCR7dGhpcy5nZXQoKX0+YFxuICAgIH1cblxuICAgIFtTeW1ib2wudG9QcmltaXRpdmVdKCkge1xuICAgICAgICBjb25zb2xlLndhcm4oXCJBY2Nlc3NvciBpbXBsaWNpdGx5IGNvbnZlcnRlZCB0byBhIHByaW1pdGl2ZSB2YWx1ZS5cIilcbiAgICAgICAgcmV0dXJuIHRoaXMudG9TdHJpbmcoKVxuICAgIH1cbn1cblxuZXhwb3J0IGludGVyZmFjZSBBY2Nlc3NvcjxUPiB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGEgY29tcHV0ZWQgYEFjY2Vzc29yYCB0aGF0IGNhY2hlcyBpdHMgdHJhbnNmb3JtZWQgdmFsdWUuXG4gICAgICogQHBhcmFtIHRyYW5zZm9ybSBUaGUgdHJhbnNmb3JtYXRpb24gdG8gYXBwbHkuIFNob3VsZCBiZSBhIHB1cmUgZnVuY3Rpb24uXG4gICAgICogc2VlIHtAbGluayBjcmVhdGVDb21wdXRlZH0gYW5kIHtAbGluayBjcmVhdGVDb21wdXRlZFByb2R1Y2VyfVxuICAgICAqL1xuICAgIDxSID0gVD4odHJhbnNmb3JtOiAodmFsdWU6IFQpID0+IFIpOiBBY2Nlc3NvcjxSPlxufVxuXG5leHBvcnQgdHlwZSBTZXR0ZXI8VD4gPSB7XG4gICAgKHZhbHVlOiBUKTogdm9pZFxuICAgICh2YWx1ZTogKHByZXY6IFQpID0+IFQpOiB2b2lkXG59XG5cbmV4cG9ydCB0eXBlIFN0YXRlPFQ+ID0gW0FjY2Vzc29yPFQ+LCBTZXR0ZXI8VD5dXG5cbi8qKlxuICogQ3JlYXRlIGEgd3JpdGFibGUgc2lnbmFsLlxuICpcbiAqIEBwYXJhbSBpbml0IFRoZSBpbnRpYWwgdmFsdWUgb2YgdGhlIHNpZ25hbFxuICogQHJldHVybnMgQW4gYEFjY2Vzc29yYCBhbmQgYSBzZXR0ZXIgZnVuY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN0YXRlPFQ+KGluaXQ6IFQpOiBTdGF0ZTxUPiB7XG4gICAgbGV0IGN1cnJlbnRWYWx1ZSA9IGluaXRcbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgc3Vic2NyaWJlcnMuYWRkKGNhbGxiYWNrKVxuICAgICAgICByZXR1cm4gKCkgPT4gc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgIH1cblxuICAgIGNvbnN0IHNldCA9IChuZXdWYWx1ZTogdW5rbm93bikgPT4ge1xuICAgICAgICBjb25zdCB2YWx1ZTogVCA9IHR5cGVvZiBuZXdWYWx1ZSA9PT0gXCJmdW5jdGlvblwiID8gbmV3VmFsdWUoY3VycmVudFZhbHVlKSA6IG5ld1ZhbHVlXG4gICAgICAgIGlmIChjdXJyZW50VmFsdWUgIT09IHZhbHVlKSB7XG4gICAgICAgICAgICBjdXJyZW50VmFsdWUgPSB2YWx1ZVxuICAgICAgICAgICAgLy8gcnVubmluZyBjYWxsYmFja3MgbWlnaHQgbXV0YXRlIHN1YnNjcmliZXJzXG4gICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBbbmV3IEFjY2Vzc29yKCgpID0+IGN1cnJlbnRWYWx1ZSwgc3Vic2NyaWJlKSwgc2V0IGFzIFNldHRlcjxUPl1cbn1cblxuZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWRQcm9kdWNlcjxUPihmbjogKHRyYWNrOiA8Vj4oc2lnbmFsOiBBY2Nlc3NvcjxWPikgPT4gVikgPT4gVCk6IEFjY2Vzc29yPFQ+IHtcbiAgICBsZXQgdmFsdWU6IHR5cGVvZiBlbXB0eSB8IFQgPSBlbXB0eVxuICAgIGxldCBwcmV2RGVwcyA9IG5ldyBNYXA8QWNjZXNzb3IsIERpc3Bvc2VGdW5jdGlvbj4oKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PFN1YnNjcmliZUNhbGxiYWNrPigpXG4gICAgY29uc3QgY2FjaGUgPSBuZXcgTWFwPEFjY2Vzc29yLCB1bmtub3duPigpXG5cbiAgICBjb25zdCBlZmZlY3QgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGRlcHMgPSBuZXcgU2V0PEFjY2Vzc29yPigpXG4gICAgICAgIGNvbnN0IG5ld1ZhbHVlID0gZm4oKHYpID0+IHtcbiAgICAgICAgICAgIGRlcHMuYWRkKHYpXG4gICAgICAgICAgICByZXR1cm4gKGNhY2hlLmdldCh2KSBhcyBhbnkpIHx8IHYuZ2V0KClcbiAgICAgICAgfSlcblxuICAgICAgICBjb25zdCBkaWRDaGFuZ2UgPSB2YWx1ZSAhPT0gbmV3VmFsdWVcbiAgICAgICAgdmFsdWUgPSBuZXdWYWx1ZVxuXG4gICAgICAgIGNvbnN0IG5ld0RlcHMgPSBuZXcgTWFwPEFjY2Vzc29yLCBEaXNwb3NlRnVuY3Rpb24+KClcblxuICAgICAgICBmb3IgKGNvbnN0IFtkZXAsIHVuc3ViXSBvZiBwcmV2RGVwcykge1xuICAgICAgICAgICAgaWYgKCFkZXBzLmhhcyhkZXApKSB7XG4gICAgICAgICAgICAgICAgdW5zdWIoKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBuZXdEZXBzLnNldChkZXAsIHVuc3ViKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgZm9yIChjb25zdCBkZXAgb2YgZGVwcykge1xuICAgICAgICAgICAgaWYgKCFuZXdEZXBzLmhhcyhkZXApKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGlzcG9zZSA9IGRlcC5zdWJzY3JpYmUoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGRlcC5nZXQoKVxuICAgICAgICAgICAgICAgICAgICBpZiAoY2FjaGUuZ2V0KGRlcCkgIT09IHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWNoZS5zZXQoZGVwLCB2YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIGVmZmVjdCgpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIG5ld0RlcHMuc2V0KGRlcCwgZGlzcG9zZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHByZXZEZXBzID0gbmV3RGVwc1xuICAgICAgICBpZiAoZGlkQ2hhbmdlKSB7XG4gICAgICAgICAgICBBcnJheS5mcm9tKHN1YnNjcmliZXJzKS5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IHN1YnNjcmliZTogU3Vic2NyaWJlRnVuY3Rpb24gPSAoY2FsbGJhY2spID0+IHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIGVmZmVjdCgpXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSBlbXB0eVxuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgWywgdW5zdWJdIG9mIHByZXZEZXBzKSB7XG4gICAgICAgICAgICAgICAgICAgIHVuc3ViKClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBnZXQgPSAoKTogVCA9PiB7XG4gICAgICAgIHJldHVybiB2YWx1ZSAhPT0gZW1wdHkgPyB2YWx1ZSA6IGZuKCh2KSA9PiB2LmdldCgpKVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoZ2V0LCBzdWJzY3JpYmUpXG59XG5cbmZ1bmN0aW9uIGNyZWF0ZUNvbXB1dGVkQXJnczxcbiAgICBjb25zdCBEZXBzIGV4dGVuZHMgQXJyYXk8QWNjZXNzb3I8YW55Pj4sXG4gICAgQXJncyBleHRlbmRzIHsgW0sgaW4ga2V5b2YgRGVwc106IEFjY2Vzc2VkPERlcHNbS10+IH0sXG4gICAgViA9IEFyZ3MsXG4+KGRlcHM6IERlcHMsIHRyYW5zZm9ybT86ICguLi5hcmdzOiBBcmdzKSA9PiBWKTogQWNjZXNzb3I8Vj4ge1xuICAgIGxldCBkaXNwb3NlOiBBcnJheTxEaXNwb3NlRnVuY3Rpb24+XG4gICAgbGV0IHZhbHVlOiB0eXBlb2YgZW1wdHkgfCBWID0gZW1wdHlcblxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuICAgIGNvbnN0IGNhY2hlID0gbmV3IEFycmF5PHVua25vd24+KGRlcHMubGVuZ3RoKVxuXG4gICAgY29uc3QgY29tcHV0ZSA9ICgpOiBWID0+IHtcbiAgICAgICAgY29uc3QgYXJncyA9IGRlcHMubWFwKChkZXAsIGkpID0+IHtcbiAgICAgICAgICAgIGlmICghY2FjaGVbaV0pIHtcbiAgICAgICAgICAgICAgICBjYWNoZVtpXSA9IGRlcC5nZXQoKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gY2FjaGVbaV1cbiAgICAgICAgfSlcblxuICAgICAgICByZXR1cm4gdHJhbnNmb3JtID8gdHJhbnNmb3JtKC4uLihhcmdzIGFzIEFyZ3MpKSA6IChhcmdzIGFzIFYpXG4gICAgfVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgZGlzcG9zZSA9IGRlcHMubWFwKChkZXAsIGkpID0+XG4gICAgICAgICAgICAgICAgZGVwLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld1ZhbHVlID0gZGVwLmdldCgpXG4gICAgICAgICAgICAgICAgICAgIGlmIChjYWNoZVtpXSAhPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhY2hlW2ldID0gZGVwLmdldCgpXG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld1ZhbHVlID0gY29tcHV0ZSgpXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUgIT09IG5ld1ZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBuZXdWYWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICApXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdmFsdWUgPSBlbXB0eVxuICAgICAgICAgICAgICAgIGRpc3Bvc2UubWFwKChjYikgPT4gY2IoKSlcbiAgICAgICAgICAgICAgICBkaXNwb3NlLmxlbmd0aCA9IDBcbiAgICAgICAgICAgICAgICBjYWNoZS5sZW5ndGggPSAwXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBnZXQgPSAoKTogViA9PiB7XG4gICAgICAgIHJldHVybiB2YWx1ZSAhPT0gZW1wdHkgPyB2YWx1ZSA6IGNvbXB1dGUoKVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoZ2V0LCBzdWJzY3JpYmUpXG59XG5cbi8qKlxuICogQ3JlYXRlIGFuIGBBY2Nlc3NvcmAgZnJvbSBhIHByb2R1Y2VyIGZ1bmN0aW9uIHRoYXQgdHJhY2tzIGl0cyBkZXBlbmRlbmNpZXMuXG4gKlxuICogYGBgdHMgRXhhbXBsZVxuICogbGV0IGE6IEFjY2Vzc29yPG51bWJlcj5cbiAqIGxldCBiOiBBY2Nlc3NvcjxudW1iZXI+XG4gKiBjb25zdCBjOiBBY2Nlc3NvcjxudW1iZXI+ID0gY3JlYXRlQ29tcHV0ZWQoKGdldCkgPT4gZ2V0KGEpICsgZ2V0KGIpKVxuICogYGBgXG4gKlxuICogQGV4cGVyaW1lbnRhbFxuICogQHBhcmFtIHByb2R1Y2VyIFRoZSBwcm9kdWNlciBmdW5jdGlvbiB3aGljaCBsZXQncyB5b3UgdHJhY2sgZGVwZW5kZW5jaWVzXG4gKiBAcmV0dXJucyBUaGUgY29tcHV0ZWQgYEFjY2Vzc29yYC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbXB1dGVkPFQ+KFxuICAgIHByb2R1Y2VyOiAodHJhY2s6IDxWPihzaWduYWw6IEFjY2Vzc29yPFY+KSA9PiBWKSA9PiBULFxuKTogQWNjZXNzb3I8VD5cblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCB3aGljaCBpcyBjb21wdXRlZCBmcm9tIGEgbGlzdCBvZiBnaXZlbiBgQWNjZXNzb3Jgcy5cbiAqXG4gKiBgYGB0cyBFeGFtcGxlXG4gKiBsZXQgYTogQWNjZXNzb3I8bnVtYmVyPlxuICogbGV0IGI6IEFjY2Vzc29yPHN0cmluZz5cbiAqIGNvbnN0IGM6IEFjY2Vzc29yPFtudW1iZXIsIHN0cmluZ10+ID0gY3JlYXRlQ29tcHV0ZWQoW2EsIGJdKVxuICogY29uc3QgZDogQWNjZXNzb3I8c3RyaW5nPiA9IGNyZWF0ZUNvbXB1dGVkKFthLCBiXSwgKGE6IG51bWJlciwgYjogc3RyaW5nKSA9PiBgJHthfSAke2J9YClcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSBkZXBzIExpc3Qgb2YgYEFjY2Vzc29yc2AuXG4gKiBAcGFyYW0gdHJhbnNmb3JtIEFuIG9wdGlvbmFsIHRyYW5zZm9ybSBmdW5jdGlvbi5cbiAqIEByZXR1cm5zIFRoZSBjb21wdXRlZCBgQWNjZXNzb3JgLlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29tcHV0ZWQ8XG4gICAgY29uc3QgRGVwcyBleHRlbmRzIEFycmF5PEFjY2Vzc29yPGFueT4+LFxuICAgIEFyZ3MgZXh0ZW5kcyB7IFtLIGluIGtleW9mIERlcHNdOiBBY2Nlc3NlZDxEZXBzW0tdPiB9LFxuICAgIFQgPSBBcmdzLFxuPihkZXBzOiBEZXBzLCB0cmFuc2Zvcm0/OiAoLi4uYXJnczogQXJncykgPT4gVCk6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb21wdXRlZChcbiAgICAuLi5hcmdzOlxuICAgICAgICB8IFtwcm9kdWNlcjogKHRyYWNrOiA8Vj4oc2lnbmFsOiBBY2Nlc3NvcjxWPikgPT4gVikgPT4gdW5rbm93bl1cbiAgICAgICAgfCBbZGVwczogQXJyYXk8QWNjZXNzb3I+LCB0cmFuc2Zvcm0/OiAoLi4uYXJnczogdW5rbm93bltdKSA9PiB1bmtub3duXVxuKSB7XG4gICAgY29uc3QgW2RlcHNPclByb2R1Y2VyLCB0cmFuc2Zvcm1dID0gYXJnc1xuICAgIGlmICh0eXBlb2YgZGVwc09yUHJvZHVjZXIgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICByZXR1cm4gY3JlYXRlQ29tcHV0ZWRQcm9kdWNlcihkZXBzT3JQcm9kdWNlcilcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gY3JlYXRlQ29tcHV0ZWRBcmdzKGRlcHNPclByb2R1Y2VyLCB0cmFuc2Zvcm0pXG4gICAgfVxufVxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIG9uIGEgYEdPYmplY3QuT2JqZWN0YCdzIGBwcm9wZXJ0eWAuXG4gKlxuICogQHBhcmFtIG9iamVjdCBUaGUgYEdPYmplY3QuT2JqZWN0YCB0byBjcmVhdGUgdGhlIGBBY2Nlc3NvcmAgb24uXG4gKiBAcGFyYW0gcHJvcGVydHkgT25lIG9mIGl0cyByZWdpc3RlcmVkIHByb3BlcnRpZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5kaW5nPFQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCwgUCBleHRlbmRzIGtleW9mIFQ+KFxuICAgIG9iamVjdDogVCxcbiAgICBwcm9wZXJ0eTogRXh0cmFjdDxQLCBzdHJpbmc+LFxuKTogQWNjZXNzb3I8VFtQXT5cblxuLy8gVE9ETzogc3VwcG9ydCBuZXN0ZWQgYmluZGluZ3Ncbi8vIGV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5kaW5nPFxuLy8gICAgIFQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCxcbi8vICAgICBQMSBleHRlbmRzIGtleW9mIFQsXG4vLyAgICAgUDIgZXh0ZW5kcyBrZXlvZiBOb25OdWxsYWJsZTxUW1AxXT4sXG4vLyA+KFxuLy8gICAgIG9iamVjdDogVCxcbi8vICAgICBwcm9wZXJ0eTE6IEV4dHJhY3Q8UDEsIHN0cmluZz4sXG4vLyAgICAgcHJvcGVydHkyOiBFeHRyYWN0PFAyLCBzdHJpbmc+LFxuLy8gKTogQWNjZXNzb3I8Tm9uTnVsbGFibGU8VFtQMV0+W1AyXT5cblxuLyoqXG4gKiBDcmVhdGUgYW4gYEFjY2Vzc29yYCBvbiBhIGBHaW8uU2V0dGluZ3NgJ3MgYGtleWAuXG4gKiBWYWx1ZXMgYXJlIHJlY3Vyc2l2ZWx5IHVucGFja2VkLlxuICpcbiAqIEBkZXByZWNhdGVkIHByZWZlciB1c2luZyB7QGxpbmsgY3JlYXRlU2V0dGluZ3N9LlxuICogQHBhcmFtIG9iamVjdCBUaGUgYEdpby5TZXR0aW5nc2AgdG8gY3JlYXRlIHRoZSBgQWNjZXNzb3JgIG9uLlxuICogQHBhcmFtIGtleSBUaGUgc2V0dGluZ3Mga2V5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCaW5kaW5nPFQ+KHNldHRpbmdzOiBHaW8uU2V0dGluZ3MsIGtleTogc3RyaW5nKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUJpbmRpbmc8VD4ob2JqZWN0OiBHT2JqZWN0Lk9iamVjdCB8IEdpby5TZXR0aW5ncywga2V5OiBzdHJpbmcpOiBBY2Nlc3NvcjxUPiB7XG4gICAgY29uc3QgcHJvcCA9IGtlYmFiaWZ5KGtleSkgYXMga2V5b2YgdHlwZW9mIG9iamVjdFxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBjb25zdCBzaWcgPSBvYmplY3QgaW5zdGFuY2VvZiBHaW8uU2V0dGluZ3MgPyBcImNoYW5nZWRcIiA6IFwibm90aWZ5XCJcbiAgICAgICAgY29uc3QgaWQgPSBvYmplY3QuY29ubmVjdChgJHtzaWd9Ojoke3Byb3B9YCwgKCkgPT4gY2FsbGJhY2soKSlcbiAgICAgICAgcmV0dXJuICgpID0+IG9iamVjdC5kaXNjb25uZWN0KGlkKVxuICAgIH1cblxuICAgIGNvbnN0IGdldCA9ICgpOiBUID0+IHtcbiAgICAgICAgaWYgKG9iamVjdCBpbnN0YW5jZW9mIEdpby5TZXR0aW5ncykge1xuICAgICAgICAgICAgcmV0dXJuIG9iamVjdC5nZXRfdmFsdWUoa2V5KS5yZWN1cnNpdmVVbnBhY2soKSBhcyBUXG4gICAgICAgIH1cblxuICAgICAgICBpZiAob2JqZWN0IGluc3RhbmNlb2YgR09iamVjdC5PYmplY3QpIHtcbiAgICAgICAgICAgIGNvbnN0IGdldHRlciA9IGBnZXRfJHtwcm9wLnJlcGxhY2VBbGwoXCItXCIsIFwiX1wiKX1gIGFzIGtleW9mIHR5cGVvZiBvYmplY3RcblxuICAgICAgICAgICAgaWYgKGdldHRlciBpbiBvYmplY3QgJiYgdHlwZW9mIG9iamVjdFtnZXR0ZXJdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKG9iamVjdFtnZXR0ZXJdIGFzICgpID0+IHVua25vd24pKCkgYXMgVFxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocHJvcCBpbiBvYmplY3QpIHJldHVybiBvYmplY3RbcHJvcF0gYXMgVFxuICAgICAgICAgICAgaWYgKGtleSBpbiBvYmplY3QpIHJldHVybiBvYmplY3Rba2V5IGFzIGtleW9mIHR5cGVvZiBvYmplY3RdIGFzIFRcbiAgICAgICAgfVxuXG4gICAgICAgIHRocm93IEVycm9yKGBjYW5ub3QgZ2V0IHByb3BlcnR5IFwiJHtrZXl9XCIgb24gXCIke29iamVjdH1cImApXG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcihnZXQsIHN1YnNjcmliZSlcbn1cblxudHlwZSBDb25uZWN0aW9uSGFuZGxlcjxcbiAgICBPIGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUyBleHRlbmRzIGtleW9mIE9bXCIkc2lnbmFsc1wiXSxcbiAgICBULFxuPiA9IE9bXCIkc2lnbmFsc1wiXVtTXSBleHRlbmRzICguLi5hcmdzOiBhbnlbXSkgPT4gaW5mZXIgUlxuICAgID8gdm9pZCBleHRlbmRzIFJcbiAgICAgICAgPyAoLi4uYXJnczogWy4uLlBhcmFtZXRlcnM8T1tcIiRzaWduYWxzXCJdW1NdPiwgY3VycmVudFZhbHVlOiBUXSkgPT4gVFxuICAgICAgICA6IG5ldmVyXG4gICAgOiBuZXZlclxuXG4vKipcbiAqIENyZWF0ZSBhbiBgQWNjZXNzb3JgIHdoaWNoIHNldHMgdXAgYSBsaXN0IG9mIGBHT2JqZWN0Lk9iamVjdGAgc2lnbmFsIGNvbm5lY3Rpb25zLlxuICpcbiAqIGBgYHRzIEV4YW1wbGVcbiAqIGNvbnN0IHZhbHVlOiBBY2Nlc3NvcjxzdHJpbmc+ID0gY3JlYXRlQ29ubmVjdGlvbihcbiAqICAgXCJpbml0aWFsIHZhbHVlXCIsXG4gKiAgIFtvYmoxLCBcInNpZy1uYW1lXCIsICguLi5hcmdzKSA9PiBcInN0clwiXSxcbiAqICAgW29iajIsIFwic2lnLW5hbWVcIiwgKC4uLmFyZ3MpID0+IFwic3RyXCJdXG4gKiApXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gaW5pdCBUaGUgaW5pdGlhbCB2YWx1ZVxuICogQHBhcmFtIHNpZ25hbHMgQSBsaXN0IG9mIGBHT2JqZWN0Lk9iamVjdGAsIHNpZ25hbCBuYW1lIGFuZCBjYWxsYmFjayBwYWlycyB0byBjb25uZWN0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29ubmVjdGlvbjxcbiAgICBULFxuICAgIE8xIGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzEgZXh0ZW5kcyBrZXlvZiBPMVtcIiRzaWduYWxzXCJdLFxuICAgIE8yIGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzIgZXh0ZW5kcyBrZXlvZiBPMltcIiRzaWduYWxzXCJdLFxuICAgIE8zIGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzMgZXh0ZW5kcyBrZXlvZiBPM1tcIiRzaWduYWxzXCJdLFxuICAgIE80IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzQgZXh0ZW5kcyBrZXlvZiBPNFtcIiRzaWduYWxzXCJdLFxuICAgIE81IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzUgZXh0ZW5kcyBrZXlvZiBPNVtcIiRzaWduYWxzXCJdLFxuICAgIE82IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzYgZXh0ZW5kcyBrZXlvZiBPNltcIiRzaWduYWxzXCJdLFxuICAgIE83IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzcgZXh0ZW5kcyBrZXlvZiBPN1tcIiRzaWduYWxzXCJdLFxuICAgIE84IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzggZXh0ZW5kcyBrZXlvZiBPOFtcIiRzaWduYWxzXCJdLFxuICAgIE85IGV4dGVuZHMgR09iamVjdC5PYmplY3QsXG4gICAgUzkgZXh0ZW5kcyBrZXlvZiBPOVtcIiRzaWduYWxzXCJdLFxuPihcbiAgICBpbml0OiBULFxuICAgIGgxOiBbTzEsIFMxLCBDb25uZWN0aW9uSGFuZGxlcjxPMSwgUzEsIFQ+XSxcbiAgICBoMj86IFtPMiwgUzIsIENvbm5lY3Rpb25IYW5kbGVyPE8yLCBTMiwgVD5dLFxuICAgIGgzPzogW08zLCBTMywgQ29ubmVjdGlvbkhhbmRsZXI8TzMsIFMzLCBUPl0sXG4gICAgaDQ/OiBbTzQsIFM0LCBDb25uZWN0aW9uSGFuZGxlcjxPNCwgUzQsIFQ+XSxcbiAgICBoNT86IFtPNSwgUzUsIENvbm5lY3Rpb25IYW5kbGVyPE81LCBTNSwgVD5dLFxuICAgIGg2PzogW082LCBTNiwgQ29ubmVjdGlvbkhhbmRsZXI8TzYsIFM2LCBUPl0sXG4gICAgaDc/OiBbTzcsIFM3LCBDb25uZWN0aW9uSGFuZGxlcjxPNywgUzcsIFQ+XSxcbiAgICBoOD86IFtPOCwgUzgsIENvbm5lY3Rpb25IYW5kbGVyPE84LCBTOCwgVD5dLFxuICAgIGg5PzogW085LCBTOSwgQ29ubmVjdGlvbkhhbmRsZXI8TzksIFM5LCBUPl0sXG4pIHtcbiAgICBsZXQgdmFsdWUgPSBpbml0XG4gICAgbGV0IGRpc3Bvc2U6IEFycmF5PERpc3Bvc2VGdW5jdGlvbj5cbiAgICBjb25zdCBzdWJzY3JpYmVycyA9IG5ldyBTZXQ8U3Vic2NyaWJlQ2FsbGJhY2s+KClcbiAgICBjb25zdCBzaWduYWxzID0gW2gxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIGg3LCBoOCwgaDldLmZpbHRlcigoaCkgPT4gaCAhPT0gdW5kZWZpbmVkKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgZGlzcG9zZSA9IHNpZ25hbHMubWFwKChbb2JqZWN0LCBzaWduYWwsIGNhbGxiYWNrXSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGlkID0gR09iamVjdC5PYmplY3QucHJvdG90eXBlLmNvbm5lY3QuY2FsbChcbiAgICAgICAgICAgICAgICAgICAgb2JqZWN0LFxuICAgICAgICAgICAgICAgICAgICBzaWduYWwgYXMgc3RyaW5nLFxuICAgICAgICAgICAgICAgICAgICAoXywgLi4uYXJncykgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3VmFsdWUgPSBjYWxsYmFjayguLi5hcmdzLCB2YWx1ZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSAhPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IG5ld1ZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgKVxuXG4gICAgICAgICAgICAgICAgcmV0dXJuICgpID0+IEdPYmplY3QuT2JqZWN0LnByb3RvdHlwZS5kaXNjb25uZWN0LmNhbGwob2JqZWN0LCBpZClcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgZGlzcG9zZS5tYXAoKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIGRpc3Bvc2UubGVuZ3RoID0gMFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiB2YWx1ZSwgc3Vic2NyaWJlKVxufVxuXG4vKipcbiAqIENyZWF0ZSBhIHNpZ25hbCBmcm9tIGEgcHJvdmllciBmdW5jdGlvbi5cbiAqIFRoZSBwcm92aWRlciBpcyBjYWxsZWQgd2hlbiB0aGUgZmlyc3Qgc3Vic2NyaWJlciBhcHBlYXJzIGFuZCB0aGUgcmV0dXJuZWQgZGlzcG9zZVxuICogZnVuY3Rpb24gZnJvbSB0aGUgcHJvdmlkZXIgd2lsbCBiZSBjYWxsZWQgd2hlbiB0aGUgbnVtYmVyIG9mIHN1YnNjcmliZXJzIGRyb3AgdG8gemVyby5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYHRzXG4gKiBjb25zdCB2YWx1ZSA9IGNyZWF0ZUV4dGVybmFsKDAsIChzZXQpID0+IHtcbiAqICAgY29uc3QgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiBzZXQoKHYpID0+IHYgKyAxKSlcbiAqICAgcmV0dXJuICgpID0+IGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpXG4gKiB9KVxuICogYGBgXG4gKlxuICogQHBhcmFtIGluaXQgVGhlIGluaXRpYWwgdmFsdWVcbiAqIEBwYXJhbSBwcm9kdWNlciBUaGUgcHJvZHVjZXIgZnVuY3Rpb24gd2hpY2ggc2hvdWxkIHJldHVybiBhIGNsZWFudXAgZnVuY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUV4dGVybmFsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgcHJvZHVjZXI6IChzZXQ6IFNldHRlcjxUPikgPT4gRGlzcG9zZUZ1bmN0aW9uLFxuKTogQWNjZXNzb3I8VD4ge1xuICAgIGxldCBjdXJyZW50VmFsdWUgPSBpbml0XG4gICAgbGV0IGRpc3Bvc2U6IERpc3Bvc2VGdW5jdGlvblxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDxTdWJzY3JpYmVDYWxsYmFjaz4oKVxuXG4gICAgY29uc3Qgc3Vic2NyaWJlOiBTdWJzY3JpYmVGdW5jdGlvbiA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICBpZiAoc3Vic2NyaWJlcnMuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgZGlzcG9zZSA9IHByb2R1Y2VyKCh2OiB1bmtub3duKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgbmV3VmFsdWU6IFQgPSB0eXBlb2YgdiA9PT0gXCJmdW5jdGlvblwiID8gdihjdXJyZW50VmFsdWUpIDogdlxuICAgICAgICAgICAgICAgIGlmIChuZXdWYWx1ZSAhPT0gY3VycmVudFZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIGN1cnJlbnRWYWx1ZSA9IG5ld1ZhbHVlXG4gICAgICAgICAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICAgICAgZGlzcG9zZSgpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IEFjY2Vzc29yKCgpID0+IGN1cnJlbnRWYWx1ZSwgc3Vic2NyaWJlKVxufVxuXG4vKiogQGV4cGVyaW1lbnRhbCAqL1xudHlwZSBTZXR0aW5nczxUIGV4dGVuZHMgUmVjb3JkPHN0cmluZywgc3RyaW5nPj4gPSB7XG4gICAgW0sgaW4ga2V5b2YgVCBhcyBVbmNhcGl0YWxpemU8UGFzY2FsaWZ5PEs+Pl06IEFjY2Vzc29yPFJlY3Vyc2l2ZUluZmVyPFRbS10+PlxufSAmIHtcbiAgICBbSyBpbiBrZXlvZiBUIGFzIGBzZXQke1Bhc2NhbGlmeTxLPn1gXTogU2V0dGVyPERlZXBJbmZlcjxUW0tdPj5cbn1cblxuLyoqXG4gKiBAZXhwZXJpbWVudGFsXG4gKlxuICogV3JhcCBhIHtAbGluayBHaW8uU2V0dGluZ3N9IGludG8gYSBjb2xsZWN0aW9uIG9mIHNldHRlcnMgYW5kIGFjY2Vzc29ycy5cbiAqXG4gKiBFeGFtcGxlOlxuICpcbiAqIGBgYHRzXG4gKiBjb25zdCBzID0gY3JlYXRlU2V0dGluZ3Moc2V0dGluZ3MsIHtcbiAqICAgXCJjb21wbGV4LWtleVwiOiBcImF7c2F7c3N9fVwiLFxuICogICBcInNpbXBsZS1rZXlcIjogXCJzXCIsXG4gKiB9KVxuICpcbiAqIHMuY29tcGxleEtleS5zdWJzY3JpYmUoKCkgPT4ge1xuICogICBwcmludChzLmNvbXBsZXhLZXkuZ2V0KCkpXG4gKiB9KVxuICpcbiAqIHMuc2V0Q29tcGxleEtleSgocHJldikgPT4gKHtcbiAqICAgLi4ucHJldixcbiAqICAga2V5OiB7IG5lc3RlZDogXCJcIiB9LFxuICogfSkpXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNldHRpbmdzPGNvbnN0IFQgZXh0ZW5kcyBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+PihcbiAgICBzZXR0aW5nczogR2lvLlNldHRpbmdzLFxuICAgIGtleXM6IFQsXG4pOiBTZXR0aW5nczxUPiB7XG4gICAgcmV0dXJuIE9iamVjdC5mcm9tRW50cmllcyhcbiAgICAgICAgT2JqZWN0LmVudHJpZXMoa2V5cykuZmxhdE1hcCgoW2tleSwgdHlwZV0pID0+IFtcbiAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICBjYW1lbGlmeShrZXkpLFxuICAgICAgICAgICAgICAgIG5ldyBBY2Nlc3NvcihcbiAgICAgICAgICAgICAgICAgICAgKCkgPT4gc2V0dGluZ3MuZ2V0X3ZhbHVlKGtleSkucmVjdXJzaXZlVW5wYWNrKCksXG4gICAgICAgICAgICAgICAgICAgIChjYWxsYmFjaykgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgaWQgPSBzZXR0aW5ncy5jb25uZWN0KGBjaGFuZ2VkOjoke2tleX1gLCBjYWxsYmFjaylcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoKSA9PiBzZXR0aW5ncy5kaXNjb25uZWN0KGlkKVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICBdLFxuICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIGBzZXQke2tleVswXS50b1VwcGVyQ2FzZSgpICsgY2FtZWxpZnkoa2V5KS5zbGljZSgxKX1gLFxuICAgICAgICAgICAgICAgICh2OiB1bmtub3duKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHNldHRpbmdzLnNldF92YWx1ZShcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ldyBHTGliLlZhcmlhbnQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlb2YgdiA9PT0gXCJmdW5jdGlvblwiID8gdihzZXR0aW5ncy5nZXRfdmFsdWUoa2V5KS5kZWVwVW5wYWNrKCkpIDogdixcbiAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgXSxcbiAgICAgICAgXSksXG4gICAgKVxufVxuIiwgImltcG9ydCB0eXBlIEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyB0eXBlIEFjY2Vzc29yIH0gZnJvbSBcIi4vc3RhdGUuanNcIlxuXG50eXBlIEdPYmogPSBHT2JqZWN0Lk9iamVjdFxuZXhwb3J0IHR5cGUgQ0M8VCBleHRlbmRzIEdPYmogPSBHT2JqPiA9IHsgbmV3IChwcm9wczogYW55KTogVCB9XG5leHBvcnQgdHlwZSBGQzxUIGV4dGVuZHMgR09iaiA9IEdPYmo+ID0gKHByb3BzOiBhbnkpID0+IFRcblxudHlwZSBDc3NTZXR0ZXIgPSAob2JqZWN0OiBHT2JqLCBjc3M6IHN0cmluZyB8IEFjY2Vzc29yPHN0cmluZz4pID0+IHZvaWRcblxuZXhwb3J0IGZ1bmN0aW9uIGNvbmZpZ3VlKGNvbmY6IFBhcnRpYWw8SnN4RW52Pikge1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKGVudiwgY29uZilcbn1cblxudHlwZSBKc3hFbnYgPSB7XG4gICAgaW50cmluc2ljRWxlbWVudHM6IFJlY29yZDxzdHJpbmcsIENDIHwgRkM+XG4gICAgdGV4dE5vZGUobm9kZTogc3RyaW5nIHwgbnVtYmVyKTogR09ialxuICAgIGFwcGVuZENoaWxkKHBhcmVudDogR09iaiwgY2hpbGQ6IEdPYmopOiB2b2lkXG4gICAgcmVtb3ZlQ2hpbGQocGFyZW50OiBHT2JqLCBjaGlsZDogR09iaik6IHZvaWRcbiAgICBzZXRDc3M6IENzc1NldHRlclxuICAgIHNldENsYXNzOiBDc3NTZXR0ZXJcbiAgICAvLyBzdHJpbmdbXSBjYW4gYmUgdXNlIHRvIGRlbGF5IHNldHRpbmcgcHJvcHMgYWZ0ZXIgY2hpbGRyZW5cbiAgICAvLyBlLmcgR3RrLlN0YWNrW1widmlzaWJsZUNoaWxkTmFtZVwiXSBkZXBlbmRzIG9uIGNoaWxkcmVuXG4gICAgaW5pdFByb3BzKGN0b3I6IHVua25vd24sIHByb3BzOiBhbnkpOiB2b2lkIHwgc3RyaW5nW11cbiAgICBkZWZhdWx0Q2xlYW51cChvYmplY3Q6IEdPYmopOiB2b2lkXG59XG5cbmZ1bmN0aW9uIG1pc3NpbmdJbXBsKCk6IGFueSB7XG4gICAgdGhyb3cgRXJyb3IoXCJtaXNzaW5nIGltcGxcIilcbn1cblxuZXhwb3J0IGNvbnN0IGVudjogSnN4RW52ID0ge1xuICAgIGludHJpbnNpY0VsZW1lbnRzOiB7fSxcbiAgICB0ZXh0Tm9kZTogbWlzc2luZ0ltcGwsXG4gICAgYXBwZW5kQ2hpbGQ6IG1pc3NpbmdJbXBsLFxuICAgIHJlbW92ZUNoaWxkOiBtaXNzaW5nSW1wbCxcbiAgICBzZXRDc3M6IG1pc3NpbmdJbXBsLFxuICAgIHNldENsYXNzOiBtaXNzaW5nSW1wbCxcbiAgICBpbml0UHJvcHM6ICgpID0+IHZvaWQgMCxcbiAgICBkZWZhdWx0Q2xlYW51cDogKCkgPT4gdm9pZCAwLFxufVxuIiwgImV4cG9ydCBjbGFzcyBTY29wZSB7XG4gICAgc3RhdGljIGN1cnJlbnQ/OiBTY29wZSB8IG51bGxcblxuICAgIHBhcmVudD86IFNjb3BlIHwgbnVsbFxuICAgIGNvbnRleHRzID0gbmV3IE1hcDxDb250ZXh0LCB1bmtub3duPigpXG5cbiAgICBwcml2YXRlIGNsZWFudXBzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG4gICAgcHJpdmF0ZSBtb3VudHMgPSBuZXcgU2V0PCgpID0+IHZvaWQ+KClcbiAgICBwcml2YXRlIG1vdW50ZWQgPSBmYWxzZVxuXG4gICAgY29uc3RydWN0b3IocGFyZW50PzogU2NvcGUgfCBudWxsKSB7XG4gICAgICAgIHRoaXMucGFyZW50ID0gcGFyZW50XG4gICAgfVxuXG4gICAgb25DbGVhbnVwKGNhbGxiYWNrOiAoKSA9PiB2b2lkKSB7XG4gICAgICAgIHRoaXMuY2xlYW51cHM/LmFkZChjYWxsYmFjaylcbiAgICB9XG5cbiAgICBvbk1vdW50KGNhbGxiYWNrOiAoKSA9PiB2b2lkKSB7XG4gICAgICAgIGlmICh0aGlzLnBhcmVudCAmJiAhdGhpcy5wYXJlbnQubW91bnRlZCkge1xuICAgICAgICAgICAgdGhpcy5wYXJlbnQub25Nb3VudChjYWxsYmFjaylcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMubW91bnRzLmFkZChjYWxsYmFjaylcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJ1bjxUPihmbjogKCkgPT4gVCkge1xuICAgICAgICBjb25zdCBwcmV2ID0gU2NvcGUuY3VycmVudFxuICAgICAgICBTY29wZS5jdXJyZW50ID0gdGhpc1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gZm4oKVxuICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgdGhpcy5tb3VudHMuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICB0aGlzLm1vdW50cy5jbGVhcigpXG4gICAgICAgICAgICB0aGlzLm1vdW50ZWQgPSB0cnVlXG4gICAgICAgICAgICBTY29wZS5jdXJyZW50ID0gcHJldlxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZGlzcG9zZSgpIHtcbiAgICAgICAgdGhpcy5jbGVhbnVwcy5mb3JFYWNoKChjYikgPT4gY2IoKSlcbiAgICAgICAgdGhpcy5jbGVhbnVwcy5jbGVhcigpXG4gICAgICAgIHRoaXMuY29udGV4dHMuY2xlYXIoKVxuICAgICAgICBkZWxldGUgdGhpcy5wYXJlbnRcbiAgICB9XG59XG5cbmV4cG9ydCB0eXBlIENvbnRleHQ8VCA9IGFueT4gPSB7XG4gICAgdXNlKCk6IFRcbiAgICBwcm92aWRlPFI+KHZhbHVlOiBULCBmbjogKCkgPT4gUik6IFJcbiAgICAocHJvcHM6IHsgdmFsdWU6IFQ7IGNoaWxkcmVuOiAoKSA9PiBKU1guRWxlbWVudCB9KTogSlNYLkVsZW1lbnRcbn1cblxuLyoqXG4gKiBFeGFtcGxlIFVzYWdlOlxuICogYGBgdHN4XG4gKiBjb25zdCBNeUNvbnRleHQgPSBjcmVhdGVDb250ZXh0KFwiZmFsbGJhY2stdmFsdWVcIilcbiAqXG4gKiBmdW5jdGlvbiBDb25zdW1lckNvbXBvbmVudCgpIHtcbiAqICAgY29uc3QgdmFsdWUgPSBNeUNvbnRleHQudXNlKClcbiAqXG4gKiAgIHJldHVybiA8R3RrLkxhYmVsIGxhYmVsPXt2YWx1ZX0gLz5cbiAqIH1cbiAqXG4gKiBmdW5jdGlvbiBQcm92aWRlckNvbXBvbmVudCgpIHtcbiAqICAgcmV0dXJuIChcbiAqICAgICA8R3RrLkJveD5cbiAqICAgICAgIDxNeUNvbnRleHQgdmFsdWU9XCJteS12YWx1ZVwiPlxuICogICAgICAgICB7KCkgPT4gPENvbnN1bWVyQ29tcG9uZW50IC8+fVxuICogICAgICAgPC9NeUNvbnRleHQ+XG4gKiAgICAgPC9HdGsuQm94PlxuICogICApXG4gKiB9XG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbnRleHQ8VD4oZGVmYXVsdFZhbHVlOiBUKTogQ29udGV4dDxUPiB7XG4gICAgbGV0IGN0eDogQ29udGV4dDxUPlxuXG4gICAgZnVuY3Rpb24gcHJvdmlkZTxSPih2YWx1ZTogVCwgZm46ICgpID0+IFIpOiBSIHtcbiAgICAgICAgY29uc3Qgc2NvcGUgPSBnZXRTY29wZSgpXG4gICAgICAgIHNjb3BlLmNvbnRleHRzLnNldChjdHgsIHZhbHVlKVxuICAgICAgICByZXR1cm4gc2NvcGUucnVuKGZuKVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVzZSgpOiBUIHtcbiAgICAgICAgbGV0IHNjb3BlID0gU2NvcGUuY3VycmVudFxuICAgICAgICB3aGlsZSAoc2NvcGUpIHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gc2NvcGUuY29udGV4dHMuZ2V0KGN0eClcbiAgICAgICAgICAgIGlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkKSByZXR1cm4gdmFsdWUgYXMgVFxuICAgICAgICAgICAgc2NvcGUgPSBzY29wZS5wYXJlbnRcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGVmYXVsdFZhbHVlXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY29udGV4dCh7IHZhbHVlLCBjaGlsZHJlbiB9OiB7IHZhbHVlOiBUOyBjaGlsZHJlbjogKCkgPT4gSlNYLkVsZW1lbnQgfSkge1xuICAgICAgICByZXR1cm4gcHJvdmlkZSh2YWx1ZSwgY2hpbGRyZW4pXG4gICAgfVxuXG4gICAgcmV0dXJuIChjdHggPSBPYmplY3QuYXNzaWduKGNvbnRleHQsIHtcbiAgICAgICAgcHJvdmlkZSxcbiAgICAgICAgdXNlLFxuICAgIH0pKVxufVxuXG4vKipcbiAqIEdldHMgdGhlIHNjb3BlIHRoYXQgb3ducyB0aGUgY3VycmVudGx5IHJ1bm5pbmcgY29kZS5cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHNcbiAqIGNvbnN0IHNjb3BlID0gZ2V0U2NvcGUoKVxuICogc2V0VGltZW91dCgoKSA9PiB7XG4gKiAgIC8vIFRoaXMgY2FsbGJhY2sgZ2V0cyBydW4gd2l0aG91dCBhbiBvd25lciBzY29wZS5cbiAqICAgLy8gUmVzdG9yZSBvd25lciB2aWEgc2NvcGUucnVuOlxuICogICBzY29wZS5ydW4oKCkgPT4ge1xuICogICAgIGNvbnN0IGZvbyA9IEZvb0NvbnRleHQudXNlKClcbiAqICAgICBvbkNsZWFudXAoKCkgPT4ge1xuICogICAgICAgcHJpbnQoXCJzb21lIGNsZWFudXBcIilcbiAqICAgICB9KVxuICogICB9KVxuICogfSwgMTAwMClcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2NvcGUoKTogU2NvcGUge1xuICAgIGNvbnN0IHNjb3BlID0gU2NvcGUuY3VycmVudFxuICAgIGlmICghc2NvcGUpIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoXCJjYW5ub3QgZ2V0IHNjb3BlOiBvdXQgb2YgdHJhY2tpbmcgY29udGV4dFwiKVxuICAgIH1cblxuICAgIHJldHVybiBzY29wZVxufVxuXG4vKipcbiAqIEF0dGFjaCBhIGNsZWFudXAgY2FsbGJhY2sgdG8gdGhlIGN1cnJlbnQge0BsaW5rIFNjb3BlfS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG9uQ2xlYW51cChjbGVhbnVwOiAoKSA9PiB2b2lkKSB7XG4gICAgaWYgKCFTY29wZS5jdXJyZW50KSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoRXJyb3IoXCJvdXQgb2YgdHJhY2tpbmcgY29udGV4dDogd2lsbCBub3QgYmUgYWJsZSB0byBjbGVhbnVwXCIpKVxuICAgIH1cblxuICAgIFNjb3BlLmN1cnJlbnQ/Lm9uQ2xlYW51cChjbGVhbnVwKVxufVxuXG4vKipcbiAqIEF0dGFjaCBhIGNhbGxiYWNrIHRvIHJ1biB3aGVuIHRoZSBjdXJyZW50bHkgcnVubmluZyB7QGxpbmsgU2NvcGV9IHJldHVybnMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBvbk1vdW50KGNsZWFudXA6ICgpID0+IHZvaWQpIHtcbiAgICBpZiAoIVNjb3BlLmN1cnJlbnQpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihFcnJvcihcImNhbm5vdCBhdHRhY2ggb25Nb3VudDogb3V0IG9mIHRyYWNraW5nIGNvbnRleHRcIikpXG4gICAgfVxuXG4gICAgU2NvcGUuY3VycmVudD8ub25Nb3VudChjbGVhbnVwKVxufVxuXG4vKipcbiAqIENyZWF0ZXMgYSByb290IHtAbGluayBTY29wZX0gdGhhdCB3aGVuIGRpc3Bvc2VkIHdpbGwgcmVtb3ZlXG4gKiBhbnkgY2hpbGQgc2lnbmFsIGhhbmRsZXIgb3Igc3RhdGUgc3Vic2NyaWJlci5cbiAqXG4gKiBFeGFtcGxlOlxuICogYGBgdHN4XG4gKiBjcmVhdGVSb290KChkaXNwb3NlKSA9PiB7XG4gKiAgIGxldCByb290OiBHdGsuV2luZG93XG4gKlxuICogICBjb25zdCBbc3RhdGVdID0gY3JlYXRlU3RhdGUoXCJ2YWx1ZVwiKVxuICpcbiAqICAgY29uc3QgcmVtb3ZlID0gKCkgPT4ge1xuICogICAgIHJvb3QuZGVzdHJveSgpXG4gKiAgICAgZGlzcG9zZSgpXG4gKiAgIH1cbiAqXG4gKiAgIHJldHVybiAoXG4gKiAgICAgPEd0ay5XaW5kb3cgJD17KHNlbGYpID0+IChyb290ID0gc2VsZil9PlxuICogICAgICAgPEd0ay5Cb3g+XG4gKiAgICAgICAgIDxHdGsuTGFiZWwgbGFiZWw9e3N0YXRlfSAvPlxuICogICAgICAgICA8R3RrLkJ1dHRvbiAkY2xpY2tlZD17cmVtb3ZlfSAvPlxuICogICAgICAgPC9HdGsuQm94PlxuICogICAgIDwvR3RrLldpbmRvdz5cbiAqICAgKVxuICogfSlcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUm9vdDxUPihmbjogKGRpc3Bvc2U6ICgpID0+IHZvaWQpID0+IFQpIHtcbiAgICBjb25zdCBzY29wZSA9IG5ldyBTY29wZShudWxsKVxuICAgIHJldHVybiBzY29wZS5ydW4oKCkgPT4gZm4oKCkgPT4gc2NvcGUuZGlzcG9zZSgpKSlcbn1cbiIsICJpbXBvcnQgeyBGcmFnbWVudCB9IGZyb20gXCIuL0ZyYWdtZW50LmpzXCJcbmltcG9ydCB7IEFjY2Vzc29yLCB0eXBlIFN0YXRlLCBjcmVhdGVTdGF0ZSB9IGZyb20gXCIuL3N0YXRlLmpzXCJcbmltcG9ydCB7IGVudiB9IGZyb20gXCIuL2Vudi5qc1wiXG5pbXBvcnQgeyBnZXRTY29wZSwgb25DbGVhbnVwLCBTY29wZSB9IGZyb20gXCIuL3Njb3BlLmpzXCJcblxuaW50ZXJmYWNlIEZvclByb3BzPEl0ZW0sIEVsIGV4dGVuZHMgSlNYLkVsZW1lbnQsIEtleT4ge1xuICAgIGVhY2g6IEFjY2Vzc29yPEl0ZXJhYmxlPEl0ZW0+PlxuICAgIGNoaWxkcmVuOiAoaXRlbTogSXRlbSwgaW5kZXg6IEFjY2Vzc29yPG51bWJlcj4pID0+IEVsXG5cbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0byBydW4gZm9yIGVhY2ggcmVtb3ZlZCBlbGVtZW50LlxuICAgICAqIFRoZSBkZWZhdWx0IHZhbHVlIGRlcGVuZHMgb24gdGhlIGVudmlyb25tZW50OlxuICAgICAqXG4gICAgICogLSAqKkd0azQqKjogbnVsbFxuICAgICAqIC0gKipHdGszKio6IEd0ay5XaWRnZXQucHJvdG90eXBlLmRlc3Ryb3lcbiAgICAgKiAtICoqR25vbWUqKjogQ2x1dHRlci5BY3Rvci5wcm90b3R5cGUuZGVzdHJveVxuICAgICAqL1xuICAgIGNsZWFudXA/OiBudWxsIHwgKChlbGVtZW50OiBFbCwgaXRlbTogSXRlbSwgaW5kZXg6IG51bWJlcikgPT4gdm9pZClcblxuICAgIC8qKlxuICAgICAqIEZ1bmN0aW9uIHRoYXQgZ2VuZXJhdGVzIHRoZSBrZXkgZm9yIGVhY2ggaXRlbS5cbiAgICAgKlxuICAgICAqIEJ5IGRlZmF1bHQgaXRlbXMgYXJlIG1hcHBlZCBieTpcbiAgICAgKiAtIHZhbHVlIGluIGNhc2Ugb2YgcHJpbWl0aXZlIHZhbHVlc1xuICAgICAqIC0gcmVmZXJlbmNlIG90aGVyd2lzZVxuICAgICAqL1xuICAgIGlkPzogKGl0ZW06IEl0ZW0pID0+IEtleSB8IEl0ZW1cbn1cblxuLy8gVE9ETzogc3VwcG9ydCBHaW8uTGlzdE1vZGVsXG5cbmV4cG9ydCBmdW5jdGlvbiBGb3I8SXRlbSwgRWwgZXh0ZW5kcyBKU1guRWxlbWVudCwgS2V5Pih7XG4gICAgZWFjaCxcbiAgICBjaGlsZHJlbjogbWtDaGlsZCxcbiAgICBjbGVhbnVwLFxuICAgIGlkID0gKGl0ZW06IEl0ZW0pID0+IGl0ZW0sXG59OiBGb3JQcm9wczxJdGVtLCBFbCwgS2V5Pik6IEZyYWdtZW50PEVsPiB7XG4gICAgdHlwZSBNYXBJdGVtID0geyBpdGVtOiBJdGVtOyBjaGlsZDogRWw7IGluZGV4OiBTdGF0ZTxudW1iZXI+OyBzY29wZTogU2NvcGUgfVxuXG4gICAgY29uc3QgY3VycmVudFNjb3BlID0gZ2V0U2NvcGUoKVxuICAgIGNvbnN0IG1hcCA9IG5ldyBNYXA8SXRlbSB8IEtleSwgTWFwSXRlbT4oKVxuICAgIGNvbnN0IGZyYWdtZW50ID0gbmV3IEZyYWdtZW50PEVsPigpXG5cbiAgICBmdW5jdGlvbiByZW1vdmUoeyBpdGVtLCBjaGlsZCwgaW5kZXg6IFtpbmRleF0sIHNjb3BlIH06IE1hcEl0ZW0pIHtcbiAgICAgICAgc2NvcGUuZGlzcG9zZSgpXG4gICAgICAgIGlmICh0eXBlb2YgY2xlYW51cCA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICBjbGVhbnVwKGNoaWxkLCBpdGVtLCBpbmRleC5nZXQoKSlcbiAgICAgICAgfSBlbHNlIGlmIChjbGVhbnVwICE9PSBudWxsKSB7XG4gICAgICAgICAgICBlbnYuZGVmYXVsdENsZWFudXAoY2hpbGQpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjYWxsYmFjayhpdGFyZWFibGU6IEl0ZXJhYmxlPEl0ZW0+KSB7XG4gICAgICAgIGNvbnN0IGl0ZW1zID0gWy4uLml0YXJlYWJsZV1cbiAgICAgICAgY29uc3QgaWRzID0gaXRlbXMubWFwKGlkKVxuICAgICAgICBjb25zdCBpZFNldCA9IG5ldyBTZXQoaWRzKVxuXG4gICAgICAgIC8vIGNsZWFudXAgY2hpbGRyZW4gbWlzc2luZyBmcm9tIGFyclxuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBtYXAuZW50cmllcygpKSB7XG4gICAgICAgICAgICAvLyB0aGVyZSBpcyBubyBnZW5lcmljIHdheSB0byBpbnNlcnQgY2hpbGQgYXQgaW5kZXhcbiAgICAgICAgICAgIC8vIHNvIHdlIHNvcnQgYnkgcmVtb3ZpbmcgZXZlcnkgY2hpbGQgYW5kIHJlYXBwZW5kaW5nIGluIG9yZGVyXG4gICAgICAgICAgICBmcmFnbWVudC5yZW1vdmUodmFsdWUuY2hpbGQpXG5cbiAgICAgICAgICAgIGlmICghaWRTZXQuaGFzKGtleSkpIHtcbiAgICAgICAgICAgICAgICByZW1vdmUodmFsdWUpXG4gICAgICAgICAgICAgICAgbWFwLmRlbGV0ZShrZXkpXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyB1cGRhdGUgaW5kZXggYW5kIGFkZCBuZXcgaXRlbXNcbiAgICAgICAgaXRlbXMubWFwKChpdGVtLCBpKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBrZXkgPSBpZHNbaV1cbiAgICAgICAgICAgIGlmIChtYXAuaGFzKGtleSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB7XG4gICAgICAgICAgICAgICAgICAgIGluZGV4OiBbLCBzZXRJbmRleF0sXG4gICAgICAgICAgICAgICAgICAgIGNoaWxkLFxuICAgICAgICAgICAgICAgIH0gPSBtYXAuZ2V0KGtleSkhXG4gICAgICAgICAgICAgICAgc2V0SW5kZXgoaSlcbiAgICAgICAgICAgICAgICBpZiAoWy4uLmZyYWdtZW50XS5zb21lKChjaCkgPT4gY2ggPT09IGNoaWxkKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oYGR1cGxpY2F0ZSBrZXlzIGZvdW5kOiAke2tleX1gKVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGZyYWdtZW50LmFwcGVuZChjaGlsZClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IFtpbmRleCwgc2V0SW5kZXhdID0gY3JlYXRlU3RhdGUoaSlcbiAgICAgICAgICAgICAgICBjb25zdCBzY29wZSA9IG5ldyBTY29wZShjdXJyZW50U2NvcGUpXG4gICAgICAgICAgICAgICAgY29uc3QgY2hpbGQgPSBzY29wZS5ydW4oKCkgPT4gbWtDaGlsZChpdGVtLCBpbmRleCkpXG4gICAgICAgICAgICAgICAgbWFwLnNldChrZXksIHsgaXRlbSwgY2hpbGQsIGluZGV4OiBbaW5kZXgsIHNldEluZGV4XSwgc2NvcGUgfSlcbiAgICAgICAgICAgICAgICBmcmFnbWVudC5hcHBlbmQoY2hpbGQpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgY29uc3QgZGlzcG9zZSA9IGVhY2guc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgY2FsbGJhY2soZWFjaC5nZXQoKSlcbiAgICB9KVxuICAgIGNhbGxiYWNrKGVhY2guZ2V0KCkpXG5cbiAgICBvbkNsZWFudXAoKCkgPT4ge1xuICAgICAgICBkaXNwb3NlKClcblxuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIG1hcC52YWx1ZXMoKSkge1xuICAgICAgICAgICAgcmVtb3ZlKHZhbHVlKVxuICAgICAgICB9XG5cbiAgICAgICAgbWFwLmNsZWFyKClcbiAgICB9KVxuXG4gICAgcmV0dXJuIGZyYWdtZW50XG59XG4iLCAiaW1wb3J0IEdPYmplY3QgZnJvbSBcImdpOi8vR09iamVjdFwiXG5pbXBvcnQgeyBlbnYgfSBmcm9tIFwiLi9lbnYuanNcIlxuaW1wb3J0IHsgQWNjZXNzb3IgfSBmcm9tIFwiLi9zdGF0ZS5qc1wiXG5pbXBvcnQgeyBzZXQgfSBmcm9tIFwiLi4vdXRpbC5qc1wiXG5pbXBvcnQgeyBvbkNsZWFudXAgfSBmcm9tIFwiLi9zY29wZS5qc1wiXG5pbXBvcnQgeyBhcHBlbmQsIHNldFR5cGUsIHNpZ25hbE5hbWUsIHR5cGUgQ0NQcm9wcyB9IGZyb20gXCIuL2pzeC5qc1wiXG5cbnR5cGUgVGhpc1Byb3BzPFNlbGYgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdD4gPSBQYXJ0aWFsPFxuICAgIE9taXQ8Q0NQcm9wczxTZWxmLCB7IFtLIGluIGtleW9mIFNlbGZdOiBTZWxmW0tdIH0+LCBcIiRcIiB8IFwiJGNvbnN0cnVjdG9yXCI+XG4+ICYge1xuICAgIHRoaXM6IFNlbGZcbn1cblxuLyoqIEBleHBlcmltZW50YWwgKi9cbmV4cG9ydCBmdW5jdGlvbiBUaGlzPFQgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdD4oe1xuICAgIHRoaXM6IHNlbGYsXG4gICAgY2hpbGRyZW4sXG4gICAgJHR5cGUsXG4gICAgLi4ucHJvcHNcbn06IFRoaXNQcm9wczxUPikge1xuICAgIGNvbnN0IGNsZWFudXAgPSBuZXcgQXJyYXk8KCkgPT4gdm9pZD4oKVxuXG4gICAgaWYgKCR0eXBlKSBzZXRUeXBlKHNlbGYsICR0eXBlKVxuXG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMocHJvcHMpKSB7XG4gICAgICAgIGlmIChrZXkgPT09IFwiY3NzXCIpIHtcbiAgICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICAgICAgZW52LnNldENzcyhzZWxmLCB2YWx1ZS5nZXQoKSlcbiAgICAgICAgICAgICAgICBjbGVhbnVwLnB1c2godmFsdWUuc3Vic2NyaWJlKCgpID0+IGVudi5zZXRDc3Moc2VsZiwgdmFsdWUuZ2V0KCkpKSlcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgZW52LnNldENzcyhzZWxmLCB2YWx1ZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChrZXkgPT09IFwiY2xhc3NcIikge1xuICAgICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgICAgICBlbnYuc2V0Q2xhc3Moc2VsZiwgdmFsdWUuZ2V0KCkpXG4gICAgICAgICAgICAgICAgY2xlYW51cC5wdXNoKHZhbHVlLnN1YnNjcmliZSgoKSA9PiBlbnYuc2V0Q2xhc3Moc2VsZiwgdmFsdWUuZ2V0KCkpKSlcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAgICAgZW52LnNldENsYXNzKHNlbGYsIHZhbHVlKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGtleS5zdGFydHNXaXRoKFwib25cIikpIHtcbiAgICAgICAgICAgIGNvbnN0IGlkID0gc2VsZi5jb25uZWN0KHNpZ25hbE5hbWUoa2V5KSwgdmFsdWUpXG4gICAgICAgICAgICBjbGVhbnVwLnB1c2goKCkgPT4gc2VsZi5kaXNjb25uZWN0KGlkKSlcbiAgICAgICAgfSBlbHNlIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEFjY2Vzc29yKSB7XG4gICAgICAgICAgICBjb25zdCBkaXNwb3NlID0gdmFsdWUuc3Vic2NyaWJlKCgpID0+IHNldChzZWxmLCBrZXksIHZhbHVlLmdldCgpKSlcbiAgICAgICAgICAgIHNldChzZWxmLCBrZXksIHZhbHVlLmdldCgpKVxuICAgICAgICAgICAgY2xlYW51cC5wdXNoKGRpc3Bvc2UpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzZXQoc2VsZiwga2V5LCB2YWx1ZSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZvciAobGV0IGNoaWxkIG9mIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pID8gY2hpbGRyZW4gOiBbY2hpbGRyZW5dKSB7XG4gICAgICAgIGlmIChjaGlsZCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKEVycm9yKFwiVHJ5aW5nIHRvIGFkZCBib29sZWFuIHZhbHVlIG9mIGB0cnVlYCBhcyBhIGNoaWxkLlwiKSlcbiAgICAgICAgICAgIGNvbnRpbnVlXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShjaGlsZCkpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgY2ggb2YgY2hpbGQpIHtcbiAgICAgICAgICAgICAgICBhcHBlbmQoc2VsZiwgY2gpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoY2hpbGQpIHtcbiAgICAgICAgICAgIGlmICghKGNoaWxkIGluc3RhbmNlb2YgR09iamVjdC5PYmplY3QpKSB7XG4gICAgICAgICAgICAgICAgY2hpbGQgPSBlbnYudGV4dE5vZGUoY2hpbGQpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhcHBlbmQoc2VsZiwgY2hpbGQpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoY2xlYW51cC5sZW5ndGggPiAwKSB7XG4gICAgICAgIG9uQ2xlYW51cCgoKSA9PiBjbGVhbnVwLmZvckVhY2goKGNiKSA9PiBjYigpKSlcbiAgICB9XG5cbiAgICByZXR1cm4gc2VsZlxufVxuIiwgIi8qIFRyb3AgY29sb3JzY2hlbWUgZm9yIEFHUyAqL1xuLyogfi8uY29uZmlnL2Fncy9zdHlsZXMvY29sb3JzLnNjc3MgKi9cbioge1xuICBmb250LWZhbWlseTogXCJKZXQgTmVyZCBGb250XCI7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbn1cblxuc2NhbGUge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5zY2FsZSB0cm91Z2ggaGlnaGxpZ2h0IHtcbiAgbWluLWhlaWdodDogNnB4O1xufVxuc2NhbGUgdHJvdWdoIHNsaWRlciB7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG4gIG91dGxpbmU6IHVuc2V0O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxubWVudWJ1dHRvbiB7XG4gIHBhZGRpbmc6IDA7XG59XG5tZW51YnV0dG9uIGJ1dHRvbiB7XG4gIHBhZGRpbmc6IHVuc2V0O1xuICBtYXJnaW46IHVuc2V0O1xufVxubWVudWJ1dHRvbiBidXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDIxMSwgMTk4LCAxNzAsIDAuMTUpO1xufVxuXG5idXR0b24ge1xuICBwYWRkaW5nOiB1bnNldDtcbiAgbWFyZ2luOiB1bnNldDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzIGVhc2UtaW4tb3V0O1xufVxuYnV0dG9uOmFjdGl2ZSA+ICoge1xuICB0cmFuc2Zvcm06IHNjYWxlKDAuODUpO1xufVxuYnV0dG9uOmhvdmVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMTEsIDE5OCwgMTcwLCAwLjE1KTtcbn1cblxud2luZG93LkJhciB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxud2luZG93LkJhciAuYmFyLWNvbnRhaW5lciB7XG4gIHBhZGRpbmc6IDByZW0gMC40cmVtO1xuICBtaW4taGVpZ2h0OiAxLjc1cmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTcxYjFmO1xuICBjb2xvcjogI2QzYzZhYTtcbn1cblxuLm1vZHVsZS1jb250YWluZXIgLmljb24ge1xuICBwYWRkaW5nOiAwIDAuM2VtO1xuICBmb250LWZhbWlseTogXCJNYXRlcmlhbCBTeW1ib2xzIFJvdW5kZWRcIjtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwLjI1ZW07XG4gIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDAuMjVlbTtcbiAgY29sb3I6ICMyMzI5MmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiMmM5OGY7XG59XG4ubW9kdWxlLWNvbnRhaW5lciAubGFiZWwge1xuICBwYWRkaW5nOiAwIDAuM2VtO1xuICBjb2xvcjogI2QzYzZhYTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJhMzEzNztcbiAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDAuMjVlbTtcbiAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDAuMjVlbTtcbn1cblxuLndvcmtzcGFjZXMgLndvcmtzcGFjZS1idXR0b24ge1xuICBtaW4taGVpZ2h0OiAwLjdyZW07XG4gIG1pbi13aWR0aDogMC43cmVtO1xuICBib3JkZXItcmFkaXVzOiAxMDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQ5NGY0ODtcbn1cbi53b3Jrc3BhY2VzIC53b3Jrc3BhY2UtYnV0dG9uLmFjdGl2ZSB7XG4gIG1pbi13aWR0aDogMS40cmVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjJjOThmO1xufVxuLndvcmtzcGFjZXMgLndvcmtzcGFjZS1idXR0b24ub2NjdXBpZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYTk5ZTg4O1xufVxuLndvcmtzcGFjZXMgLndvcmtzcGFjZS1idXR0b24ub2NjdXBpZWQuYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2IyYzk4Zjtcbn1cblxuLnRhc2tiYXIgLmNsaWVudC5hY3RpdmUgLmNsaWVudC1pY29uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2IyYzk4ZjtcbiAgY29sb3I6ICMyMzI5MmU7XG59XG4udGFza2JhciAuY2xpZW50LmFjdGl2ZSAuY2xpZW50LXRpdGxlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzJhMzEzNztcbiAgY29sb3I6ICNiMmM5OGY7XG59XG4udGFza2JhciAuY2xpZW50LWljb24ge1xuICBwYWRkaW5nOiAwcmVtIDAuM3JlbTtcbiAgZm9udC1mYW1pbHk6IFwiTWF0ZXJpYWwgU3ltYm9scyBSb3VuZGVkXCI7XG4gIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDAuMjVlbTtcbiAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMC4yNWVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDQ0YTRmO1xuICBjb2xvcjogI2QzYzZhYTtcbn1cbi50YXNrYmFyIC5jbGllbnQtdGl0bGUge1xuICBtaW4td2lkdGg6IDhlbTtcbiAgcGFkZGluZzogMHJlbSAwLjNyZW07XG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwLjI1ZW07XG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwLjI1ZW07XG4gIGJhY2tncm91bmQtY29sb3I6ICMxZTI0Mjg7XG4gIGNvbG9yOiAjNTU1YzU0O1xufVxuXG4uZXhpdC1idXR0b24gLmljb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTY3ZTgwO1xufVxuLmV4aXQtYnV0dG9uIC5sYWJlbCB7XG4gIGNvbG9yOiAjZTY3ZTgwO1xufVxuXG4uY2xvY2sgLmljb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGJiYzdmO1xufVxuLmNsb2NrIC5sYWJlbCB7XG4gIGNvbG9yOiAjZGJiYzdmO1xufVxuXG4ubmV0d29yayAuaWNvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNhZDg1ZDc7XG59XG4ubmV0d29yayAubGFiZWwge1xuICBjb2xvcjogI2FkODVkNztcbn1cblxuLm5ldHN0YXRzIC5pY29uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2OTg3NTtcbn1cbi5uZXRzdGF0cyAubGFiZWwge1xuICBjb2xvcjogI2U2OTg3NTtcbn1cblxuLnZvbHVtZSAuaWNvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4M2MwOTI7XG59XG4udm9sdW1lIC5sYWJlbCB7XG4gIGNvbG9yOiAjODNjMDkyO1xufVxuXG4uc3lzdHJheSAuYnV0dG9uLWljb24ge1xuICBib3JkZXItcmFkaXVzOiAwLjI1ZW07XG4gIHBhZGRpbmc6IDByZW0gMC40cmVtO1xuICBtaW4td2lkdGg6IDE4cHg7XG4gIG1pbi1oZWlnaHQ6IDE4cHg7XG59XG4uc3lzdHJheSAuYnV0dG9uLWljb246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjJjOThmO1xuICBjb2xvcjogIzIzMjkyZTtcbn1cblxud2luZG93Lm5vdGlmaWNhdGlvbi1wb3B1cHMge1xuICBhbGw6IHVuc2V0O1xufVxuXG4ubm90aWZpY2F0aW9uIHtcbiAgYm9yZGVyLXJhZGl1czogMC4yNWVtO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMWUyNDI4O1xuICBtYXJnaW46IDRweDtcbiAgYm94LXNoYWRvdzogMnB4IDNweCA4cHggMCBhbHBoYShibGFjaywwLjQpO1xuICBib3JkZXI6IDFwdCBzb2xpZCBhbHBoYSgjZDNjNmFhLDAuMDMpO1xufVxuLm5vdGlmaWNhdGlvbi5jcml0aWNhbCB7XG4gIGJvcmRlcjogMXB0IHNvbGlkIGFscGhhKCNlNjdlODAsMC40KTtcbn1cbi5ub3RpZmljYXRpb24uY3JpdGljYWwgLmhlYWRlciAuYXBwLW5hbWUge1xuICBjb2xvcjogYWxwaGEoI2U2N2U4MCwwLjgpO1xufVxuLm5vdGlmaWNhdGlvbi5jcml0aWNhbCAuaGVhZGVyIC5hcHAtaWNvbiB7XG4gIGNvbG9yOiBhbHBoYSgjZTY3ZTgwLDAuNik7XG59XG4ubm90aWZpY2F0aW9uIC5oZWFkZXIge1xuICBwYWRkaW5nOiAwLjVyZW07XG4gIGNvbG9yOiBhbHBoYSgjZDNjNmFhLDAuNSk7XG59XG4ubm90aWZpY2F0aW9uIC5oZWFkZXIgLmFwcC1pY29uIHtcbiAgbWFyZ2luOiAwIDAuNHJlbTtcbn1cbi5ub3RpZmljYXRpb24gLmhlYWRlciAuYXBwLW5hbWUge1xuICBtYXJnaW4tcmlnaHQ6IDAuM3JlbTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG4ubm90aWZpY2F0aW9uIC5oZWFkZXIgLmFwcC1uYW1lOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLWxlZnQ6IDAuNHJlbTtcbn1cbi5ub3RpZmljYXRpb24gLmhlYWRlciAudGltZSB7XG4gIG1hcmdpbjogMCAwLjRyZW07XG59XG4ubm90aWZpY2F0aW9uIC5oZWFkZXIgYnV0dG9uIHtcbiAgYm9yZGVyLXJhZGl1czogMC4yNWVtO1xuICBwYWRkaW5nOiAwLjJyZW07XG4gIG1pbi13aWR0aDogMDtcbiAgbWluLWhlaWdodDogMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U2N2U4MDtcbiAgY29sb3I6ICMxZTI0Mjg7XG59XG4ubm90aWZpY2F0aW9uIHNlcGFyYXRvciB7XG4gIG1hcmdpbjogMCAwLjRyZW07XG4gIGJhY2tncm91bmQtY29sb3I6IGFscGhhKCNkM2M2YWEsMC4xKTtcbn1cbi5ub3RpZmljYXRpb24gLmNvbnRlbnQge1xuICBtYXJnaW46IDFyZW07XG4gIG1hcmdpbi10b3A6IDAuNXJlbTtcbn1cbi5ub3RpZmljYXRpb24gLmNvbnRlbnQgLnN1bW1hcnkge1xuICBmb250LXNpemU6IDFlbTtcbiAgY29sb3I6ICNkM2M2YWE7XG59XG4ubm90aWZpY2F0aW9uIC5jb250ZW50IC5ib2R5IHtcbiAgY29sb3I6IGFscGhhKCNkM2M2YWEsMC42KTtcbiAgZm9udC1zaXplOiAxZW07XG59XG4ubm90aWZpY2F0aW9uIC5jb250ZW50IC5pbWFnZSB7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGFscGhhKCNkM2M2YWEsMC4wMik7XG4gIG1hcmdpbi1yaWdodDogMC41cmVtO1xuICBib3JkZXItcmFkaXVzOiAwLjI1ZW07XG4gIG1pbi13aWR0aDogMTAwcHg7XG4gIG1pbi1oZWlnaHQ6IDEwMHB4O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG59XG4ubm90aWZpY2F0aW9uIC5hY3Rpb25zIHtcbiAgbWFyZ2luOiAxcmVtO1xuICBtYXJnaW4tdG9wOiAwO1xufVxuLm5vdGlmaWNhdGlvbiAuYWN0aW9ucyBidXR0b24ge1xuICBtYXJnaW46IDAgMC4zcmVtO1xuICBwYWRkaW5nOiAwLjNyZW0gMDtcbiAgZm9udC1zaXplOiAwLjhyZW07XG4gIGJvcmRlci1yYWRpdXM6IDAuMjVlbTtcbiAgYmFja2dyb3VuZC1jb2xvcjogYWxwaGEoI2QzYzZhYSwwLjEpO1xufVxuLm5vdGlmaWNhdGlvbiAuYWN0aW9ucyBidXR0b246Zmlyc3QtY2hpbGQge1xuICBtYXJnaW4tbGVmdDogMDtcbn1cbi5ub3RpZmljYXRpb24gLmFjdGlvbnMgYnV0dG9uOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tcmlnaHQ6IDA7XG59IiwgImltcG9ydCBBc3RhbCBmcm9tIFwiZ2k6Ly9Bc3RhbD92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR2RrIGZyb20gXCJnaTovL0dkaz92ZXJzaW9uPTQuMFwiXG5leHBvcnQgeyBBc3RhbCwgR3RrLCBHZGsgfVxuIiwgImltcG9ydCBHdGsgZnJvbSBcImdpOi8vR3RrP3ZlcnNpb249NC4wXCJcbmltcG9ydCBBc3RhbCBmcm9tIFwiZ2k6Ly9Bc3RhbD92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgeyBDQ1Byb3BzIH0gZnJvbSBcImduaW1cIlxuaW1wb3J0IHsgaW50cmluc2ljRWxlbWVudHMgfSBmcm9tIFwiZ25pbS9ndGs0L2pzeC1ydW50aW1lXCJcblxudHlwZSBQcm9wczxUIGV4dGVuZHMgR3RrLldpZGdldCwgUHJvcHM+ID0gQ0NQcm9wczxULCBQYXJ0aWFsPFByb3BzPj5cblxuT2JqZWN0LmFzc2lnbihpbnRyaW5zaWNFbGVtZW50cywge1xuICAgIGJveDogR3RrLkJveCxcbiAgICBidXR0b246IEd0ay5CdXR0b24sXG4gICAgY2VudGVyYm94OiBHdGsuQ2VudGVyQm94LFxuICAgIC8vIGNpcmN1bGFycHJvZ3Jlc3M6IEFzdGFsLkNpcmN1bGFyUHJvZ3Jlc3MsXG4gICAgZHJhd2luZ2FyZWE6IEd0ay5EcmF3aW5nQXJlYSxcbiAgICBlbnRyeTogR3RrLkVudHJ5LFxuICAgIGltYWdlOiBHdGsuSW1hZ2UsXG4gICAgbGFiZWw6IEd0ay5MYWJlbCxcbiAgICBsZXZlbGJhcjogR3RrLkxldmVsQmFyLFxuICAgIG1lbnVidXR0b246IEd0ay5NZW51QnV0dG9uLFxuICAgIG92ZXJsYXk6IEd0ay5PdmVybGF5LFxuICAgIHBvcG92ZXI6IEd0ay5Qb3BvdmVyLFxuICAgIHJldmVhbGVyOiBHdGsuUmV2ZWFsZXIsXG4gICAgc2Nyb2xsZWR3aW5kb3c6IEd0ay5TY3JvbGxlZFdpbmRvdyxcbiAgICBzbGlkZXI6IEFzdGFsLlNsaWRlcixcbiAgICBzdGFjazogR3RrLlN0YWNrLFxuICAgIHN3aXRjaDogR3RrLlN3aXRjaCxcbiAgICB0b2dnbGVidXR0b246IEd0ay5Ub2dnbGVCdXR0b24sXG4gICAgd2luZG93OiBBc3RhbC5XaW5kb3csXG59KVxuXG5kZWNsYXJlIGdsb2JhbCB7XG4gICAgbmFtZXNwYWNlIEpTWCB7XG4gICAgICAgIGludGVyZmFjZSBJbnRyaW5zaWNFbGVtZW50cyB7XG4gICAgICAgICAgICBib3g6IFByb3BzPEd0ay5Cb3gsIEd0ay5Cb3guQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGJ1dHRvbjogUHJvcHM8R3RrLkJ1dHRvbiwgR3RrLkJ1dHRvbi5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgY2VudGVyYm94OiBQcm9wczxHdGsuQ2VudGVyQm94LCBHdGsuQ2VudGVyQm94LkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICAvLyBjaXJjdWxhcnByb2dyZXNzOiBQcm9wczxBc3RhbC5DaXJjdWxhclByb2dyZXNzLCBBc3RhbC5DaXJjdWxhclByb2dyZXNzLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBkcmF3aW5nYXJlYTogUHJvcHM8R3RrLkRyYXdpbmdBcmVhLCBHdGsuRHJhd2luZ0FyZWEuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGVudHJ5OiBQcm9wczxHdGsuRW50cnksIEd0ay5FbnRyeS5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgaW1hZ2U6IFByb3BzPEd0ay5JbWFnZSwgR3RrLkltYWdlLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBsYWJlbDogUHJvcHM8R3RrLkxhYmVsLCBHdGsuTGFiZWwuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIGxldmVsYmFyOiBQcm9wczxHdGsuTGV2ZWxCYXIsIEd0ay5MZXZlbEJhci5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgbWVudWJ1dHRvbjogUHJvcHM8R3RrLk1lbnVCdXR0b24sIEd0ay5NZW51QnV0dG9uLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBvdmVybGF5OiBQcm9wczxHdGsuT3ZlcmxheSwgR3RrLk92ZXJsYXkuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHBvcG92ZXI6IFByb3BzPEd0ay5Qb3BvdmVyLCBHdGsuUG9wb3Zlci5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgcmV2ZWFsZXI6IFByb3BzPEd0ay5SZXZlYWxlciwgR3RrLlJldmVhbGVyLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICBzY3JvbGxlZHdpbmRvdzogUHJvcHM8R3RrLlNjcm9sbGVkV2luZG93LCBHdGsuU2Nyb2xsZWRXaW5kb3cuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHNsaWRlcjogUHJvcHM8QXN0YWwuU2xpZGVyLCBBc3RhbC5TbGlkZXIuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHN0YWNrOiBQcm9wczxHdGsuU3RhY2ssIEd0ay5TdGFjay5Db25zdHJ1Y3RvclByb3BzPlxuICAgICAgICAgICAgc3dpdGNoOiBQcm9wczxHdGsuU3dpdGNoLCBHdGsuU3dpdGNoLkNvbnN0cnVjdG9yUHJvcHM+XG4gICAgICAgICAgICB0b2dnbGVidXR0b246IFByb3BzPEd0ay5Ub2dnbGVCdXR0b24sIEd0ay5Ub2dnbGVCdXR0b24uQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgICAgIHdpbmRvdzogUHJvcHM8QXN0YWwuV2luZG93LCBBc3RhbC5XaW5kb3cuQ29uc3RydWN0b3JQcm9wcz5cbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0ICogZnJvbSBcImduaW0vZ3RrNC9qc3gtcnVudGltZVwiXG4iLCAiaW1wb3J0IEd0ayBmcm9tIFwiZ2k6Ly9HdGs/dmVyc2lvbj00LjBcIlxuaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW8/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IHsgY29uZmlndWUgfSBmcm9tIFwiLi4vanN4L2Vudi5qc1wiXG5pbXBvcnQgeyBnZXRUeXBlLCBvbkNsZWFudXAsIEFjY2Vzc29yLCBGcmFnbWVudCB9IGZyb20gXCIuLi9pbmRleC5qc1wiXG5cbmltcG9ydCB0eXBlIEFkdyBmcm9tIFwiZ2k6Ly9BZHdcIlxuY29uc3QgYWR3ID0gYXdhaXQgaW1wb3J0KFwiZ2k6Ly9BZHdcIikudGhlbigobSkgPT4gbS5kZWZhdWx0KS5jYXRjaCgoKSA9PiBudWxsKVxuXG5jb25zdCBkdW1teUJ1aWxkZXIgPSBuZXcgR3RrLkJ1aWxkZXIoKVxuXG5jb25zdCB7IGludHJpbnNpY0VsZW1lbnRzIH0gPSBjb25maWd1ZSh7XG4gICAgaW5pdFByb3BzKGN0b3IpIHtcbiAgICAgICAgaWYgKGN0b3IgPT09IEd0ay5TdGFjaykge1xuICAgICAgICAgICAgY29uc3Qga2V5czogQXJyYXk8RXh0cmFjdDxrZXlvZiBHdGsuU3RhY2ssIHN0cmluZz4+ID0gW1xuICAgICAgICAgICAgICAgIFwidmlzaWJsZUNoaWxkTmFtZVwiLFxuICAgICAgICAgICAgICAgIFwidmlzaWJsZV9jaGlsZF9uYW1lXCIsXG4gICAgICAgICAgICBdXG4gICAgICAgICAgICByZXR1cm4ga2V5c1xuICAgICAgICB9XG4gICAgICAgIGlmIChhZHcgJiYgY3RvciA9PT0gYWR3LlRvZ2dsZUdyb3VwKSB7XG4gICAgICAgICAgICBjb25zdCBrZXlzOiBBcnJheTxFeHRyYWN0PGtleW9mIEFkdy5Ub2dnbGVHcm91cCwgc3RyaW5nPj4gPSBbXG4gICAgICAgICAgICAgICAgXCJhY3RpdmVcIixcbiAgICAgICAgICAgICAgICBcImFjdGl2ZU5hbWVcIixcbiAgICAgICAgICAgICAgICBcImFjdGl2ZV9uYW1lXCIsXG4gICAgICAgICAgICBdXG4gICAgICAgICAgICByZXR1cm4ga2V5c1xuICAgICAgICB9XG4gICAgfSxcbiAgICBzZXRDc3Mob2JqZWN0LCBjc3MpIHtcbiAgICAgICAgaWYgKCEob2JqZWN0IGluc3RhbmNlb2YgR3RrLldpZGdldCkpIHtcbiAgICAgICAgICAgIHJldHVybiBjb25zb2xlLndhcm4oRXJyb3IoYGNhbm5vdCBzZXQgY3NzIG9uICR7b2JqZWN0fWApKVxuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgY3R4ID0gb2JqZWN0LmdldF9zdHlsZV9jb250ZXh0KClcbiAgICAgICAgbGV0IHByb3ZpZGVyOiBHdGsuQ3NzUHJvdmlkZXJcblxuICAgICAgICBjb25zdCBzZXR0ZXIgPSAoY3NzOiBzdHJpbmcpID0+IHtcbiAgICAgICAgICAgIGlmICghY3NzLmluY2x1ZGVzKFwie1wiKSB8fCAhY3NzLmluY2x1ZGVzKFwifVwiKSkge1xuICAgICAgICAgICAgICAgIGNzcyA9IGAqIHsgJHtjc3N9IH1gXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChwcm92aWRlcikgY3R4LnJlbW92ZV9wcm92aWRlcihwcm92aWRlcilcblxuICAgICAgICAgICAgcHJvdmlkZXIgPSBuZXcgR3RrLkNzc1Byb3ZpZGVyKClcbiAgICAgICAgICAgIHByb3ZpZGVyLmxvYWRfZnJvbV9zdHJpbmcoY3NzKVxuICAgICAgICAgICAgY3R4LmFkZF9wcm92aWRlcihwcm92aWRlciwgR3RrLlNUWUxFX1BST1ZJREVSX1BSSU9SSVRZX1VTRVIpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY3NzIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIHNldHRlcihjc3MuZ2V0KCkpXG4gICAgICAgICAgICBjb25zdCBkaXNwb3NlID0gY3NzLnN1YnNjcmliZSgoKSA9PiBzZXR0ZXIoY3NzLmdldCgpKSlcbiAgICAgICAgICAgIG9uQ2xlYW51cChkaXNwb3NlKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgc2V0dGVyKGNzcylcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBzZXRDbGFzcyhvYmplY3QsIGNsYXNzTmFtZSkge1xuICAgICAgICBpZiAoIShvYmplY3QgaW5zdGFuY2VvZiBHdGsuV2lkZ2V0KSkge1xuICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUud2FybihFcnJvcihgY2Fubm90IHNldCBjbGFzc05hbWUgb24gJHtvYmplY3R9YCkpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY2xhc3NOYW1lIGluc3RhbmNlb2YgQWNjZXNzb3IpIHtcbiAgICAgICAgICAgIG9iamVjdC5jc3NDbGFzc2VzID0gY2xhc3NOYW1lLmdldCgpLnNwbGl0KC9cXHMrLylcbiAgICAgICAgICAgIGNvbnN0IGRpc3Bvc2UgPSBjbGFzc05hbWUuc3Vic2NyaWJlKFxuICAgICAgICAgICAgICAgICgpID0+IChvYmplY3QuY3NzQ2xhc3NlcyA9IGNsYXNzTmFtZS5nZXQoKS5zcGxpdCgvXFxzKy8pKSxcbiAgICAgICAgICAgIClcbiAgICAgICAgICAgIG9uQ2xlYW51cChkaXNwb3NlKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgb2JqZWN0LnNldF9jc3NfY2xhc3NlcyhjbGFzc05hbWUuc3BsaXQoL1xccysvKSlcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICB0ZXh0Tm9kZSh0ZXh0KSB7XG4gICAgICAgIHJldHVybiBHdGsuTGFiZWwubmV3KHRleHQudG9TdHJpbmcoKSlcbiAgICB9LFxuXG4gICAgLy8gYHNldF9jaGlsZGAgYW5kIGVzcGVjaWFsbHkgYHJlbW92ZWAgbWlnaHQgYmUgd2F5IHRvbyBnZW5lcmljIGFuZCB0aGVyZSBtaWdodFxuICAgIC8vIGJlIGNhc2VzIHdoZXJlIGl0IGRvZXMgbm90IGFjdHVhbGx5IGRvIHdoYXQgd2Ugd2FudCBpdCB0byBkb1xuICAgIC8vXG4gICAgLy8gaWYgdGhlcmUgaXMgYSB1c2VjYXNlIGZvciBlaXRoZXIgb2YgdGhlc2UgdHdvIHRoYXQgZG9lcyBzb21ldGhpbmcgZWxzZSB0aGFuXG4gICAgLy8gd2UgZXhwZWN0IGl0IHRvIGRvIGhlcmUgaW4gYSBKU1ggY29udGV4dCB3ZSBoYXZlIHRvIGNoZWNrIGZvciBrbm93biBpbnN0YW5jZXNcbiAgICByZW1vdmVDaGlsZChwYXJlbnQsIGNoaWxkKSB7XG4gICAgICAgIGlmIChwYXJlbnQgaW5zdGFuY2VvZiBHdGsuV2lkZ2V0ICYmIGNoaWxkIGluc3RhbmNlb2YgR3RrLkV2ZW50Q29udHJvbGxlcikge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC5yZW1vdmVfY29udHJvbGxlcihjaGlsZClcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChcInNldF9jaGlsZFwiIGluIHBhcmVudCAmJiB0eXBlb2YgcGFyZW50LnNldF9jaGlsZCA9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQuc2V0X2NoaWxkKG51bGwpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoXCJyZW1vdmVcIiBpbiBwYXJlbnQgJiYgdHlwZW9mIHBhcmVudC5yZW1vdmUgPT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnJlbW92ZShjaGlsZClcbiAgICAgICAgfVxuXG4gICAgICAgIHRocm93IEVycm9yKGBjYW5ub3QgcmVtb3ZlICR7Y2hpbGR9IGZyb20gJHtwYXJlbnR9YClcbiAgICB9LFxuICAgIGFwcGVuZENoaWxkKHBhcmVudCwgY2hpbGQpIHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgY2hpbGQgaW5zdGFuY2VvZiBHdGsuQWRqdXN0bWVudCAmJlxuICAgICAgICAgICAgXCJzZXRfYWRqdXN0bWVudFwiIGluIHBhcmVudCAmJlxuICAgICAgICAgICAgdHlwZW9mIHBhcmVudC5zZXRfYWRqdXN0bWVudCA9PT0gXCJmdW5jdGlvblwiXG4gICAgICAgICkge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC5zZXRfYWRqdXN0bWVudChjaGlsZClcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIGNoaWxkIGluc3RhbmNlb2YgR3RrLldpZGdldCAmJlxuICAgICAgICAgICAgcGFyZW50IGluc3RhbmNlb2YgR3RrLlN0YWNrICYmXG4gICAgICAgICAgICBjaGlsZC5uYW1lICE9PSBcIlwiICYmXG4gICAgICAgICAgICBjaGlsZC5uYW1lICE9PSBudWxsICYmXG4gICAgICAgICAgICBnZXRUeXBlKGNoaWxkKSA9PT0gXCJuYW1lZFwiXG4gICAgICAgICkge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC5hZGRfbmFtZWQoY2hpbGQsIGNoaWxkLm5hbWUpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAoY2hpbGQgaW5zdGFuY2VvZiBHdGsuUG9wb3ZlciAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuTWVudUJ1dHRvbikge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC5zZXRfcG9wb3ZlcihjaGlsZClcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIGNoaWxkIGluc3RhbmNlb2YgR2lvLk1lbnVNb2RlbCAmJlxuICAgICAgICAgICAgKHBhcmVudCBpbnN0YW5jZW9mIEd0ay5NZW51QnV0dG9uIHx8IHBhcmVudCBpbnN0YW5jZW9mIEd0ay5Qb3BvdmVyTWVudSlcbiAgICAgICAgKSB7XG4gICAgICAgICAgICByZXR1cm4gcGFyZW50LnNldF9tZW51X21vZGVsKGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR2lvLk1lbnVJdGVtICYmIHBhcmVudCBpbnN0YW5jZW9mIEdpby5NZW51KSB7XG4gICAgICAgICAgICAvLyBUT0RPOlxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNoaWxkIGluc3RhbmNlb2YgR3RrLldpbmRvdyAmJiBwYXJlbnQgaW5zdGFuY2VvZiBHdGsuQXBwbGljYXRpb24pIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQuYWRkX3dpbmRvdyhjaGlsZClcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjaGlsZCBpbnN0YW5jZW9mIEd0ay5UZXh0QnVmZmVyICYmIHBhcmVudCBpbnN0YW5jZW9mIEd0ay5UZXh0Vmlldykge1xuICAgICAgICAgICAgcmV0dXJuIHBhcmVudC5zZXRfYnVmZmVyKGNoaWxkKVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHBhcmVudCBpbnN0YW5jZW9mIEd0ay5CdWlsZGFibGUpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXJlbnQudmZ1bmNfYWRkX2NoaWxkKGR1bW15QnVpbGRlciwgY2hpbGQsIGdldFR5cGUoY2hpbGQpKVxuICAgICAgICB9XG5cbiAgICAgICAgdGhyb3cgRXJyb3IoYGNhbm5vdCBhZGQgJHtjaGlsZH0gdG8gJHtwYXJlbnR9YClcbiAgICB9LFxufSlcblxuZXhwb3J0IHsgRnJhZ21lbnQsIGludHJpbnNpY0VsZW1lbnRzIH1cbmV4cG9ydCB7IGpzeCwganN4cyB9IGZyb20gXCIuLi9qc3gvanN4LmpzXCJcbiIsICJpbXBvcnQgeyBBY2Nlc3NvciwgdHlwZSBDQ1Byb3BzIH0gZnJvbSBcImFnc1wiXG5pbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIlxuXG50eXBlIE1vZHVsZUNvbnRhaW5lclByb3BzID0gUGFydGlhbDxcbiAgQ0NQcm9wczxHdGsuQnV0dG9uLCBHdGsuQnV0dG9uLkNvbnN0cnVjdG9yUHJvcHM+XG4+ICYge1xuICBpY29uPzogc3RyaW5nIHwgQWNjZXNzb3I8c3RyaW5nPlxuICBsYWJlbD86IHN0cmluZyB8IEFjY2Vzc29yPHN0cmluZz5cbn1cblxuZnVuY3Rpb24gTW9kdWxlQ29udGFpbmVyKHtcbiAgaWNvbixcbiAgbGFiZWwsXG4gIGNsYXNzOiBjbGFzc05hbWUsXG4gIC4uLnByb3BzXG59OiBNb2R1bGVDb250YWluZXJQcm9wcykge1xuICByZXR1cm4gKFxuICAgIDxidXR0b24gY2xhc3M9e1wibW9kdWxlLWNvbnRhaW5lclwiICsgXCIgXCIgKyBjbGFzc05hbWV9IHsuLi5wcm9wc30+XG4gICAgICA8Ym94PlxuICAgICAgICA8bGFiZWwgY2xhc3M9XCJpY29uXCIgbGFiZWw9e2ljb259IC8+XG4gICAgICAgIDxsYWJlbCBjbGFzcz1cImxhYmVsXCIgbGFiZWw9e2xhYmVsfSAvPlxuICAgICAgPC9ib3g+XG4gICAgPC9idXR0b24+XG4gIClcbn1cblxuZXhwb3J0IHsgTW9kdWxlQ29udGFpbmVyIH1cbiIsICJpbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliXCJcbmltcG9ydCB7IGNyZWF0ZVBvbGwgfSBmcm9tIFwiYWdzL3RpbWVcIlxuXG5mdW5jdGlvbiBmb3JtYXREYXRlVGltZShmb3JtYXQ6IHN0cmluZyA9IFwiJWEsICViICVkIC0gJUg6JU1cIikge1xuICByZXR1cm4gY3JlYXRlUG9sbChcIlwiLCA2MDAwMCwgKCkgPT4ge1xuICAgIHJldHVybiBHTGliLkRhdGVUaW1lLm5ld19ub3dfbG9jYWwoKS5mb3JtYXQoZm9ybWF0KSFcbiAgfSlcbn1cblxuZXhwb3J0IGNvbnN0IGNsb2NrTGFiZWwgPSBmb3JtYXREYXRlVGltZShcIiVIOiVNXCIpXG5cbmV4cG9ydCBjb25zdCBjbG9ja1Rvb2x0aXAgPSBmb3JtYXREYXRlVGltZSgpXG4iLCAiaW1wb3J0IEdpbyBmcm9tIFwiZ2k6Ly9HaW8/dmVyc2lvbj0yLjBcIlxuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYj92ZXJzaW9uPTIuMFwiXG5pbXBvcnQgR09iamVjdCwgeyByZWdpc3Rlciwgc2lnbmFsIH0gZnJvbSBcImduaW0vZ29iamVjdFwiXG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCJnbmltXCJcblxuY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpXG5cbmV4cG9ydCBuYW1lc3BhY2UgUHJvY2VzcyB7XG4gICAgZXhwb3J0IGludGVyZmFjZSBTaWduYWxTaWduYXR1cmVzIGV4dGVuZHMgR09iamVjdC5PYmplY3QuU2lnbmFsU2lnbmF0dXJlcyB7XG4gICAgICAgIHN0ZG91dDogUHJvY2Vzc1tcInN0ZG91dFwiXVxuICAgICAgICBzdGRlcnI6IFByb2Nlc3NbXCJzdGRlcnJcIl1cbiAgICAgICAgZXhpdDogUHJvY2Vzc1tcImV4aXRcIl1cbiAgICB9XG4gICAgZXhwb3J0IGludGVyZmFjZSBDb25zdHJ1Y3RvclByb3BzIGV4dGVuZHMgR09iamVjdC5PYmplY3QuQ29uc3RydWN0b3JQcm9wcyB7XG4gICAgICAgIGFyZ3Y6IHN0cmluZ1tdXG4gICAgfVxufVxuXG5AcmVnaXN0ZXIoKVxuZXhwb3J0IGNsYXNzIFByb2Nlc3MgZXh0ZW5kcyBHT2JqZWN0Lk9iamVjdCB7XG4gICAgQHNpZ25hbChTdHJpbmcpXG4gICAgcHJvdGVjdGVkIHN0ZG91dChvdXQ6IHN0cmluZykge1xuICAgICAgICB2b2lkIG91dFxuICAgIH1cblxuICAgIEBzaWduYWwoU3RyaW5nKVxuICAgIHByb3RlY3RlZCBzdGRlcnIoZXJyOiBzdHJpbmcpIHtcbiAgICAgICAgdm9pZCBlcnJcbiAgICB9XG5cbiAgICBAc2lnbmFsKE51bWJlciwgQm9vbGVhbilcbiAgICBwcm90ZWN0ZWQgZXhpdChjb2RlOiBudW1iZXIsIHNpZ25hbGVkOiBib29sZWFuKSB7XG4gICAgICAgIHZvaWQgW2NvZGUsIHNpZ25hbGVkXVxuICAgIH1cblxuICAgICNlbmNvZGVyID0gbmV3IFRleHRFbmNvZGVyKClcbiAgICAjb3V0U3RyZWFtOiBHaW8uRGF0YUlucHV0U3RyZWFtXG4gICAgI2VyclN0cmVhbTogR2lvLkRhdGFJbnB1dFN0cmVhbVxuICAgICNpblN0cmVhbTogR2lvLkRhdGFPdXRwdXRTdHJlYW1cbiAgICAjcHJvY2VzczogR2lvLlN1YnByb2Nlc3NcblxuICAgICNyZWFkU3RyZWFtKHN0cmVhbTogR2lvLkRhdGFJbnB1dFN0cmVhbSkge1xuICAgICAgICBzdHJlYW0ucmVhZF9saW5lX2FzeW5jKEdMaWIuUFJJT1JJVFlfREVGQVVMVCwgbnVsbCwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBjb25zdCBbb3V0cHV0XSA9IHN0cmVhbS5yZWFkX2xpbmVfZmluaXNoX3V0ZjgocmVzKVxuICAgICAgICAgICAgICAgIGlmIChvdXRwdXQgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHN0cmVhbSA9PT0gdGhpcy4jZXJyU3RyZWFtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0ZGVycihvdXRwdXQudHJpbSgpKVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGRvdXQob3V0cHV0LnRyaW0oKSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLiNyZWFkU3RyZWFtKHN0cmVhbSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgY29ubmVjdDxTIGV4dGVuZHMga2V5b2YgUHJvY2Vzcy5TaWduYWxTaWduYXR1cmVzPihcbiAgICAgICAgc2lnbmFsOiBTLFxuICAgICAgICBjYWxsYmFjazogR09iamVjdC5TaWduYWxDYWxsYmFjazx0aGlzLCBQcm9jZXNzLlNpZ25hbFNpZ25hdHVyZXNbU10+LFxuICAgICk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiBzdXBlci5jb25uZWN0KHNpZ25hbCwgY2FsbGJhY2spXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogRm9yY2UgcXVpdCB0aGUgc3VicHJvY2Vzcy5cbiAgICAgKi9cbiAgICBraWxsKCk6IHZvaWQge1xuICAgICAgICB0aGlzLiNwcm9jZXNzLmZvcmNlX2V4aXQoKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNlbmQgYSBzaWduYWwgdG8gdGhlIHN1YnByb2Nlc3MuXG4gICAgICpcbiAgICAgKiBAcGFyYW0gc2lnbmFsIFNpZ25hbCBudW1iZXIgdG8gYmUgc2VudFxuICAgICAqL1xuICAgIHNpZ25hbChzaWduYWw6IG51bWJlcik6IHZvaWQge1xuICAgICAgICB0aGlzLiNwcm9jZXNzLnNlbmRfc2lnbmFsKHNpZ25hbClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBXcml0ZSBhIGxpbmUgdG8gdGhlIHN1YnByb2Nlc3MnIHN0ZGluIHN5bmNocm9ub3VzbHkuXG4gICAgICogU2VlIHtAbGluayBHaW8uRGF0YU91dHB1dFN0cmVhbS5wcm90b3R5cGUud3JpdGVfYnl0ZXNfYXN5bmN9XG4gICAgICpcbiAgICAgKiBAcGFyYW0gc3RyIFN0cmluZyB0byBiZSB3cml0dGVuIHRvIHN0ZGluXG4gICAgICovXG4gICAgd3JpdGUoc3RyOiBzdHJpbmcpOiBQcm9taXNlPFtib29sZWFuLCBudW1iZXJdPiB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICB0aGlzLiNpblN0cmVhbS53cml0ZV9ieXRlc19hc3luYyhcbiAgICAgICAgICAgICAgICBlbmNvZGVyLmVuY29kZShzdHIpLFxuICAgICAgICAgICAgICAgIEdMaWIuUFJJT1JJVFlfREVGQVVMVCxcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUodGhpcy4jaW5TdHJlYW0ud3JpdGVfYWxsX2ZpbmlzaChyZXMpKVxuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIClcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBXcml0ZSBhIGxpbmUgdG8gdGhlIHN1YnByb2Nlc3MnIHN0ZGluIGFzeW5jaHJvbm91c2x5LlxuICAgICAqXG4gICAgICogQHBhcmFtIHN0ciBTdHJpbmcgdG8gYmUgd3JpdHRlbiB0byBzdGRpblxuICAgICAqL1xuICAgIGFzeW5jIHdyaXRlQXN5bmMoc3RyOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIHRoaXMuI2luU3RyZWFtLndyaXRlX2FsbF9hc3luYyhcbiAgICAgICAgICAgICAgICB0aGlzLiNlbmNvZGVyLmVuY29kZShzdHIpLFxuICAgICAgICAgICAgICAgIEdMaWIuUFJJT1JJVFlfREVGQVVMVCxcbiAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUodm9pZCB0aGlzLiNpblN0cmVhbS53cml0ZV9hbGxfZmluaXNoKHJlcykpXG4gICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgKVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKHsgYXJndiB9OiBQcm9jZXNzLkNvbnN0cnVjdG9yUHJvcHMpIHtcbiAgICAgICAgc3VwZXIoKVxuICAgICAgICBjb25zdCBwcm9jZXNzID0gKHRoaXMuI3Byb2Nlc3MgPSBHaW8uU3VicHJvY2Vzcy5uZXcoXG4gICAgICAgICAgICBhcmd2LFxuICAgICAgICAgICAgR2lvLlN1YnByb2Nlc3NGbGFncy5TVERJTl9QSVBFIHxcbiAgICAgICAgICAgICAgICBHaW8uU3VicHJvY2Vzc0ZsYWdzLlNURE9VVF9QSVBFIHxcbiAgICAgICAgICAgICAgICBHaW8uU3VicHJvY2Vzc0ZsYWdzLlNUREVSUl9QSVBFLFxuICAgICAgICApKVxuXG4gICAgICAgIHRoaXMuI2luU3RyZWFtID0gR2lvLkRhdGFPdXRwdXRTdHJlYW0ubmV3KHByb2Nlc3MuZ2V0X3N0ZGluX3BpcGUoKSEpXG4gICAgICAgIHRoaXMuI291dFN0cmVhbSA9IEdpby5EYXRhSW5wdXRTdHJlYW0ubmV3KHByb2Nlc3MuZ2V0X3N0ZG91dF9waXBlKCkhKVxuICAgICAgICB0aGlzLiNlcnJTdHJlYW0gPSBHaW8uRGF0YUlucHV0U3RyZWFtLm5ldyhwcm9jZXNzLmdldF9zdGRlcnJfcGlwZSgpISlcblxuICAgICAgICB0aGlzLiNyZWFkU3RyZWFtKHRoaXMuI291dFN0cmVhbSlcbiAgICAgICAgdGhpcy4jcmVhZFN0cmVhbSh0aGlzLiNlcnJTdHJlYW0pXG5cbiAgICAgICAgcHJvY2Vzcy53YWl0X2FzeW5jKG51bGwsIChfLCByZXMpID0+IHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgcHJvY2Vzcy53YWl0X2ZpbmlzaChyZXMpXG4gICAgICAgICAgICB9IGNhdGNoIHtcbiAgICAgICAgICAgICAgICAvLyBpZ25vcmVcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZ2V0X2lmX2V4aXRlZCgpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5leGl0KHByb2Nlc3MuZ2V0X2V4aXRfc3RhdHVzKCksIGZhbHNlKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5nZXRfaWZfc2lnbmFsZWQoKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZXhpdChwcm9jZXNzLmdldF90ZXJtX3NpZygpLCB0cnVlKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFN0YXJ0IGEgbmV3IHN1YnByb2Nlc3Mgd2l0aCB0aGUgZ2l2ZW4gY29tbWFuZC5cbiAgICAgKiBUaGUgZmlyc3QgZWxlbWVudCBvZiB0aGUgdmVjdG9yIGlzIGV4ZWN1dGVkIHdpdGggdGhlIHJlbWFpbmluZ1xuICAgICAqIGVsZW1lbnRzIGFzIHRoZSBhcmd1bWVudCBsaXN0LlxuICAgICAqL1xuICAgIHN0YXRpYyBzdWJwcm9jZXNzdihjbWQ6IHN0cmluZ1tdKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvY2Vzcyh7IGFyZ3Y6IGNtZCB9KVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFN0YXJ0IGEgbmV3IHN1YnByb2Nlc3Mgd2l0aCB0aGUgZ2l2ZW4gY29tbWFuZFxuICAgICAqIHdoaWNoIGlzIHBhcnNlZCB1c2luZyB7QGxpbmsgR0xpYi5zaGVsbF9wYXJzZV9hcmd2fS5cbiAgICAgKi9cbiAgICBzdGF0aWMgc3VicHJvY2VzcyhjbWQ6IHN0cmluZykge1xuICAgICAgICBjb25zdCBbLCBhcmd2XSA9IEdMaWIuc2hlbGxfcGFyc2VfYXJndihjbWQpXG4gICAgICAgIHJldHVybiBQcm9jZXNzLnN1YnByb2Nlc3N2KGFyZ3YhKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEV4ZWN1dGUgYSBjb21tYW5kIHN5bmNocm9ub3VzbHkuXG4gICAgICogVGhlIGZpcnN0IGVsZW1lbnQgb2YgdGhlIHZlY3RvciBpcyBleGVjdXRlZCB3aXRoIHRoZSByZW1haW5pbmdcbiAgICAgKiBlbGVtZW50cyBhcyB0aGUgYXJndW1lbnQgbGlzdC5cbiAgICAgKlxuICAgICAqIEB0aHJvd3Mgc3RkZXJyXG4gICAgICogQHJldHVybiBzdGRvdXQgb2YgdGhlIHN1YnByb2Nlc3NcbiAgICAgKi9cbiAgICBzdGF0aWMgZXhlY3YoY21kOiBzdHJpbmdbXSkge1xuICAgICAgICBjb25zdCBwcm9jZXNzID0gR2lvLlN1YnByb2Nlc3MubmV3KFxuICAgICAgICAgICAgY21kLFxuICAgICAgICAgICAgR2lvLlN1YnByb2Nlc3NGbGFncy5TVERFUlJfUElQRSB8IEdpby5TdWJwcm9jZXNzRmxhZ3MuU1RET1VUX1BJUEUsXG4gICAgICAgIClcblxuICAgICAgICBjb25zdCBbLCBvdXQsIGVycl0gPSBwcm9jZXNzLmNvbW11bmljYXRlX3V0ZjgobnVsbCwgbnVsbClcbiAgICAgICAgaWYgKHByb2Nlc3MuZ2V0X3N1Y2Nlc3NmdWwoKSkge1xuICAgICAgICAgICAgcmV0dXJuIG91dC50cmltKClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihlcnIpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBFeGVjdXRlIGEgY29tbWFuZCBzeW5jaHJvbm91c2x5LlxuICAgICAqIFRoZSBjb21tYW5kIGlzIHBhcnNlZCB1c2luZyB7QGxpbmsgR0xpYi5zaGVsbF9wYXJzZV9hcmd2fS5cbiAgICAgKlxuICAgICAqIEB0aHJvd3Mgc3RkZXJyXG4gICAgICogQHJldHVybiBzdGRvdXQgb2YgdGhlIHN1YnByb2Nlc3NcbiAgICAgKi9cbiAgICBzdGF0aWMgZXhlYyhjbWQ6IHN0cmluZykge1xuICAgICAgICBjb25zdCBbLCBhcmd2XSA9IEdMaWIuc2hlbGxfcGFyc2VfYXJndihjbWQpXG4gICAgICAgIHJldHVybiBQcm9jZXNzLmV4ZWN2KGFyZ3YhKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEV4ZWN1dGUgYSBjb21tYW5kIGFzeW5jaHJvbm91c2x5LlxuICAgICAqIFRoZSBmaXJzdCBlbGVtZW50IG9mIHRoZSB2ZWN0b3IgaXMgZXhlY3V0ZWQgd2l0aCB0aGUgcmVtYWluaW5nXG4gICAgICogZWxlbWVudHMgYXMgdGhlIGFyZ3VtZW50IGxpc3QuXG4gICAgICpcbiAgICAgKiBAdGhyb3dzIHN0ZGVyclxuICAgICAqIEByZXR1cm4gc3Rkb3V0IG9mIHRoZSBzdWJwcm9jZXNzXG4gICAgICovXG4gICAgc3RhdGljIGV4ZWNBc3luY3YoY21kOiBzdHJpbmdbXSk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgICAgIGNvbnN0IHByb2Nlc3MgPSBHaW8uU3VicHJvY2Vzcy5uZXcoXG4gICAgICAgICAgICBjbWQsXG4gICAgICAgICAgICBHaW8uU3VicHJvY2Vzc0ZsYWdzLlNUREVSUl9QSVBFIHwgR2lvLlN1YnByb2Nlc3NGbGFncy5TVERPVVRfUElQRSxcbiAgICAgICAgKVxuXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBwcm9jZXNzLmNvbW11bmljYXRlX3V0ZjhfYXN5bmMobnVsbCwgbnVsbCwgKF8sIHJlcykgPT4ge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IFssIG91dCwgZXJyXSA9IHByb2Nlc3MuY29tbXVuaWNhdGVfdXRmOF9maW5pc2gocmVzKVxuICAgICAgICAgICAgICAgICAgICBpZiAocHJvY2Vzcy5nZXRfc3VjY2Vzc2Z1bCgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzb2x2ZShvdXQudHJpbSgpKVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihlcnIudHJpbSgpKSlcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEV4ZWN1dGUgYSBjb21tYW5kIGFzeW5jaHJvbm91c2x5LlxuICAgICAqIFRoZSBjb21tYW5kIGlzIHBhcnNlZCB1c2luZyB7QGxpbmsgR0xpYi5zaGVsbF9wYXJzZV9hcmd2fS5cbiAgICAgKlxuICAgICAqIEB0aHJvd3Mgc3RkZXJyXG4gICAgICogQHJldHVybiBzdGRvdXQgb2YgdGhlIHN1YnByb2Nlc3NcbiAgICAgKi9cbiAgICBzdGF0aWMgZXhlY0FzeW5jKGNtZDogc3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IFssIGFyZ3ZdID0gR0xpYi5zaGVsbF9wYXJzZV9hcmd2KGNtZClcbiAgICAgICAgcmV0dXJuIFByb2Nlc3MuZXhlY0FzeW5jdihhcmd2ISlcbiAgICB9XG59XG5cbnR5cGUgQXJncyA9IHtcbiAgICBjbWQ6IHN0cmluZyB8IHN0cmluZ1tdXG4gICAgb3V0PzogKHN0ZG91dDogc3RyaW5nKSA9PiB2b2lkXG4gICAgZXJyPzogKHN0ZGVycjogc3RyaW5nKSA9PiB2b2lkXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzdWJwcm9jZXNzKGFyZ3M6IEFyZ3MpOiBQcm9jZXNzXG5cbmV4cG9ydCBmdW5jdGlvbiBzdWJwcm9jZXNzKFxuICAgIGNtZDogc3RyaW5nIHwgc3RyaW5nW10sXG4gICAgb25PdXQ/OiAoc3Rkb3V0OiBzdHJpbmcpID0+IHZvaWQsXG4gICAgb25FcnI/OiAoc3RkZXJyOiBzdHJpbmcpID0+IHZvaWQsXG4pOiBQcm9jZXNzXG5cbmV4cG9ydCBmdW5jdGlvbiBzdWJwcm9jZXNzKFxuICAgIGFyZ3NPckNtZDogQXJncyB8IHN0cmluZyB8IHN0cmluZ1tdLFxuICAgIG9uT3V0OiAoc3Rkb3V0OiBzdHJpbmcpID0+IHZvaWQgPSBwcmludCxcbiAgICBvbkVycjogKHN0ZGVycjogc3RyaW5nKSA9PiB2b2lkID0gcHJpbnRlcnIsXG4pIHtcbiAgICBjb25zdCBhcmdzID0gQXJyYXkuaXNBcnJheShhcmdzT3JDbWQpIHx8IHR5cGVvZiBhcmdzT3JDbWQgPT09IFwic3RyaW5nXCJcbiAgICBjb25zdCB7IGNtZCwgZXJyLCBvdXQgfSA9IHtcbiAgICAgICAgY21kOiBhcmdzID8gYXJnc09yQ21kIDogYXJnc09yQ21kLmNtZCxcbiAgICAgICAgZXJyOiBhcmdzID8gb25FcnIgOiBhcmdzT3JDbWQuZXJyIHx8IG9uRXJyLFxuICAgICAgICBvdXQ6IGFyZ3MgPyBvbk91dCA6IGFyZ3NPckNtZC5vdXQgfHwgb25PdXQsXG4gICAgfVxuXG4gICAgY29uc3QgcHJvYyA9IEFycmF5LmlzQXJyYXkoY21kKSA/IFByb2Nlc3Muc3VicHJvY2Vzc3YoY21kKSA6IFByb2Nlc3Muc3VicHJvY2VzcyhjbWQpXG4gICAgcHJvYy5jb25uZWN0KFwic3Rkb3V0XCIsIChfLCBzdGRvdXQ6IHN0cmluZykgPT4gb3V0KHN0ZG91dCkpXG4gICAgcHJvYy5jb25uZWN0KFwic3RkZXJyXCIsIChfLCBzdGRlcnI6IHN0cmluZykgPT4gZXJyKHN0ZGVycikpXG4gICAgcmV0dXJuIHByb2Ncbn1cblxuLyoqIEB0aHJvd3Mge0Vycm9yfSBUaHJvd3Mgc3RkZXJyICovXG5leHBvcnQgZnVuY3Rpb24gZXhlYyhjbWQ6IHN0cmluZyB8IHN0cmluZ1tdKSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoY21kKSA/IFByb2Nlc3MuZXhlY3YoY21kKSA6IFByb2Nlc3MuZXhlYyhjbWQpXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleGVjQXN5bmMoY21kOiBzdHJpbmcgfCBzdHJpbmdbXSk6IFByb21pc2U8c3RyaW5nPiB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoY21kKSkge1xuICAgICAgICByZXR1cm4gUHJvY2Vzcy5leGVjQXN5bmN2KGNtZClcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gUHJvY2Vzcy5leGVjQXN5bmMoY21kKVxuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN1YnByb2Nlc3MoaW5pdDogc3RyaW5nLCBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSk6IEFjY2Vzc29yPHN0cmluZz5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN1YnByb2Nlc3M8VD4oXG4gICAgaW5pdDogVCxcbiAgICBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICB0cmFuc2Zvcm06IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVCxcbik6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdWJwcm9jZXNzPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10sXG4gICAgdHJhbnNmb3JtPzogKHN0ZG91dDogc3RyaW5nLCBwcmV2OiBUKSA9PiBULFxuKTogQWNjZXNzb3I8VD4ge1xuICAgIGxldCBjdXJyZW50VmFsdWUgPSBpbml0XG4gICAgbGV0IHByb2M6IFByb2Nlc3MgfCBudWxsID0gbnVsbFxuICAgIGNvbnN0IHN1YnNjcmliZXJzID0gbmV3IFNldDwoKSA9PiB2b2lkPigpXG5cbiAgICBmdW5jdGlvbiBzdWJzY3JpYmUoY2FsbGJhY2s6ICgpID0+IHZvaWQpOiAoKSA9PiB2b2lkIHtcbiAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgIHByb2MgPSBzdWJwcm9jZXNzKGV4ZWMsIChzdGRvdXQpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRyYW5zZm9ybSA/IHRyYW5zZm9ybShzdGRvdXQsIGN1cnJlbnRWYWx1ZSkgOiAoc3Rkb3V0IGFzIFQpXG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRWYWx1ZSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudFZhbHVlID0gdmFsdWVcbiAgICAgICAgICAgICAgICAgICAgQXJyYXkuZnJvbShzdWJzY3JpYmVycykuZm9yRWFjaCgoY2IpID0+IGNiKCkpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIHN1YnNjcmliZXJzLmFkZChjYWxsYmFjaylcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgc3Vic2NyaWJlcnMuZGVsZXRlKGNhbGxiYWNrKVxuICAgICAgICAgICAgaWYgKHN1YnNjcmliZXJzLnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICBwcm9jPy5raWxsKClcbiAgICAgICAgICAgICAgICBwcm9jID0gbnVsbFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBBY2Nlc3NvcigoKSA9PiBjdXJyZW50VmFsdWUsIHN1YnNjcmliZSlcbn1cbiIsICJpbXBvcnQgR09iamVjdCwgeyByZWdpc3Rlciwgc2lnbmFsIH0gZnJvbSBcImduaW0vZ29iamVjdFwiXG5pbXBvcnQgeyBBY2Nlc3NvciB9IGZyb20gXCJnbmltXCJcbmltcG9ydCB7IGV4ZWNBc3luYyB9IGZyb20gXCIuL3Byb2Nlc3MuanNcIlxuaW1wb3J0IEdMaWIgZnJvbSBcImdpOi8vR0xpYj92ZXJzaW9uPTIuMFwiXG5cbmV4cG9ydCBuYW1lc3BhY2UgVGltZXIge1xuICAgIGV4cG9ydCBpbnRlcmZhY2UgU2lnbmFsU2lnbmF0dXJlcyBleHRlbmRzIEdPYmplY3QuT2JqZWN0LlNpZ25hbFNpZ25hdHVyZXMge1xuICAgICAgICBub3coKTogdm9pZFxuICAgICAgICBjYW5jZWxsZWQoKTogdm9pZFxuICAgIH1cbn1cblxuQHJlZ2lzdGVyKClcbmV4cG9ydCBjbGFzcyBUaW1lciBleHRlbmRzIEdPYmplY3QuT2JqZWN0IHtcbiAgICBkZWNsYXJlICRzaWduYWxzOiBUaW1lci5TaWduYWxTaWduYXR1cmVzXG5cbiAgICBAc2lnbmFsKClcbiAgICBwcm90ZWN0ZWQgbm93KCkge31cblxuICAgIEBzaWduYWwoKVxuICAgIHByb3RlY3RlZCBjYW5jZWxsZWQoKSB7fVxuXG4gICAgc3RhdGljIGludGVydmFsKGludGVydmFsOiBudW1iZXIsIGNhbGxiYWNrPzogKCkgPT4gdm9pZCkge1xuICAgICAgICBjb25zdCB7IHRpbWVyLCBub3cgfSA9IFRpbWVyLm5ldyhjYWxsYmFjaywgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKGltbWVkaWF0ZS5pc19kZXN0cm95ZWQoKSkgaW1tZWRpYXRlLmRlc3Ryb3koKVxuICAgICAgICAgICAgaWYgKHNvdXJjZS5pc19kZXN0cm95ZWQoKSkgc291cmNlLmRlc3Ryb3koKVxuICAgICAgICB9KVxuICAgICAgICBjb25zdCBpbW1lZGlhdGUgPSBzZXRUaW1lb3V0KG5vdylcbiAgICAgICAgY29uc3Qgc291cmNlID0gc2V0SW50ZXJ2YWwobm93LCBpbnRlcnZhbClcbiAgICAgICAgcmV0dXJuIHRpbWVyXG4gICAgfVxuXG4gICAgc3RhdGljIHRpbWVvdXQoaW50ZXJ2YWw6IG51bWJlciwgY2FsbGJhY2s/OiAoKSA9PiB2b2lkKSB7XG4gICAgICAgIGNvbnN0IHsgdGltZXIsIG5vdyB9ID0gVGltZXIubmV3KGNhbGxiYWNrLCAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoc291cmNlLmlzX2Rlc3Ryb3llZCgpKSBzb3VyY2UuZGVzdHJveSgpXG4gICAgICAgIH0pXG4gICAgICAgIGNvbnN0IHNvdXJjZSA9IHNldFRpbWVvdXQobm93LCBpbnRlcnZhbClcbiAgICAgICAgcmV0dXJuIHRpbWVyXG4gICAgfVxuXG4gICAgc3RhdGljIGlkbGUoY2FsbGJhY2s/OiAoKSA9PiB2b2lkKSB7XG4gICAgICAgIGNvbnN0IHsgdGltZXIsIG5vdyB9ID0gVGltZXIubmV3KGNhbGxiYWNrLCAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoc291cmNlLmlzX2Rlc3Ryb3llZCgpKSBzb3VyY2UuZGVzdHJveSgpXG4gICAgICAgIH0pXG4gICAgICAgIGNvbnN0IHNvdXJjZSA9IHNldFRpbWVvdXQobm93KVxuICAgICAgICByZXR1cm4gdGltZXJcbiAgICB9XG5cbiAgICBwcml2YXRlIHN0YXRpYyBuZXcob25Ob3c/OiAoKSA9PiB2b2lkLCBvbkNhbmNlbGxlZD86ICgpID0+IHZvaWQpIHtcbiAgICAgICAgY29uc3QgdGltZXIgPSBuZXcgVGltZXIoKVxuICAgICAgICBjb25zdCBub3cgPSB0aW1lci5jb25uZWN0KFwibm93XCIsICgpID0+IHZvaWQgb25Ob3c/LigpKVxuICAgICAgICBjb25zdCBjYW5jZWxsZWQgPSB0aW1lci5jb25uZWN0KFwiY2FuY2VsbGVkXCIsICgpID0+IHtcbiAgICAgICAgICAgIHRpbWVyLmRpc2Nvbm5lY3Qobm93KVxuICAgICAgICAgICAgdGltZXIuZGlzY29ubmVjdChjYW5jZWxsZWQpXG4gICAgICAgICAgICBvbkNhbmNlbGxlZD8uKClcbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuIHsgdGltZXIsIG5vdzogKCkgPT4gdGltZXIubm93KCkgfVxuICAgIH1cblxuICAgIGNvbm5lY3Q8UyBleHRlbmRzIGtleW9mIFRpbWVyLlNpZ25hbFNpZ25hdHVyZXM+KFxuICAgICAgICBzaWduYWw6IFMsXG4gICAgICAgIGNhbGxiYWNrOiBHT2JqZWN0LlNpZ25hbENhbGxiYWNrPHRoaXMsIFRpbWVyLlNpZ25hbFNpZ25hdHVyZXNbU10+LFxuICAgICk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiBzdXBlci5jb25uZWN0KHNpZ25hbCwgY2FsbGJhY2spXG4gICAgfVxuXG4gICAgY2FuY2VsKCkge1xuICAgICAgICB0aGlzLmNhbmNlbGxlZCgpXG4gICAgfVxufVxuXG5leHBvcnQgY29uc3QgeyBpbnRlcnZhbCwgdGltZW91dCwgaWRsZSB9ID0gVGltZXJcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvbGwoXG4gICAgaW5pdDogc3RyaW5nLFxuICAgIGludGVydmFsOiBudW1iZXIsXG4gICAgZXhlYzogc3RyaW5nIHwgc3RyaW5nW10sXG4pOiBBY2Nlc3NvcjxzdHJpbmc+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgaW50ZXJ2YWw6IG51bWJlcixcbiAgICBleGVjOiBzdHJpbmcgfCBzdHJpbmdbXSxcbiAgICB0cmFuc2Zvcm06IChzdGRvdXQ6IHN0cmluZywgcHJldjogVCkgPT4gVCxcbik6IEFjY2Vzc29yPFQ+XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQb2xsPFQ+KFxuICAgIGluaXQ6IFQsXG4gICAgaW50ZXJ2YWw6IG51bWJlcixcbiAgICBmbjogKHByZXY6IFQpID0+IFQgfCBQcm9taXNlPFQ+LFxuKTogQWNjZXNzb3I8VD5cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVBvbGw8VD4oXG4gICAgaW5pdDogVCxcbiAgICBpdmFsOiBudW1iZXIsXG4gICAgZXhlY09yRm46IHN0cmluZyB8IHN0cmluZ1tdIHwgKChwcmV2OiBUKSA9PiBUIHwgUHJvbWlzZTxUPiksXG4gICAgdHJhbnNmb3JtPzogKHN0ZG91dDogc3RyaW5nLCBwcmV2OiBUKSA9PiBULFxuKTogQWNjZXNzb3I8VD4ge1xuICAgIGxldCBjdXJyZW50VmFsdWUgPSBpbml0XG4gICAgbGV0IHRpbWVyOiBHTGliLlNvdXJjZSB8IG51bGwgPSBudWxsXG4gICAgY29uc3Qgc3Vic2NyaWJlcnMgPSBuZXcgU2V0PCgpID0+IHZvaWQ+KClcblxuICAgIGZ1bmN0aW9uIHNldCh2YWx1ZTogVCkge1xuICAgICAgICBpZiAodmFsdWUgIT09IGN1cnJlbnRWYWx1ZSkge1xuICAgICAgICAgICAgY3VycmVudFZhbHVlID0gdmFsdWVcbiAgICAgICAgICAgIEFycmF5LmZyb20oc3Vic2NyaWJlcnMpLmZvckVhY2goKGNiKSA9PiBjYigpKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY29tcHV0ZSgpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBleGVjT3JGbiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGV4ZWNPckZuKGN1cnJlbnRWYWx1ZSlcbiAgICAgICAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZS50aGVuKHNldClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgc2V0KHZhbHVlKVxuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZXhlY0FzeW5jKGV4ZWNPckZuKS50aGVuKChzdGRvdXQpID0+IHtcbiAgICAgICAgICAgICAgICBzZXQodHJhbnNmb3JtID8gdHJhbnNmb3JtKHN0ZG91dCwgY3VycmVudFZhbHVlKSA6IChzdGRvdXQgYXMgVCkpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc3Vic2NyaWJlKGNhbGxiYWNrOiAoKSA9PiB2b2lkKTogKCkgPT4gdm9pZCB7XG4gICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwKSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KGNvbXB1dGUpXG4gICAgICAgICAgICB0aW1lciA9IHNldEludGVydmFsKGNvbXB1dGUsIGl2YWwpXG4gICAgICAgIH1cblxuICAgICAgICBzdWJzY3JpYmVycy5hZGQoY2FsbGJhY2spXG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHN1YnNjcmliZXJzLmRlbGV0ZShjYWxsYmFjaylcbiAgICAgICAgICAgIGlmIChzdWJzY3JpYmVycy5zaXplID09PSAwICYmIHRpbWVyKSB7XG4gICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbCh0aW1lcilcbiAgICAgICAgICAgICAgICB0aW1lciA9IG51bGxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBuZXcgQWNjZXNzb3IoKCkgPT4gY3VycmVudFZhbHVlLCBzdWJzY3JpYmUpXG59XG4iLCAiaW1wb3J0IHsgTW9kdWxlQ29udGFpbmVyIH0gZnJvbSBcIi4uL3NoYXJlZC9tb2R1bGUtY29udGFpbmVyXCJcbmltcG9ydCB7IGNsb2NrTGFiZWwsIGNsb2NrVG9vbHRpcCB9IGZyb20gXCIuL2hlbHBlcnNcIlxuXG5mdW5jdGlvbiBDbG9jaygpIHtcbiAgcmV0dXJuIChcbiAgICA8TW9kdWxlQ29udGFpbmVyXG4gICAgICBjbGFzcz1cImNsb2NrXCJcbiAgICAgIGljb249XCJcdUU4QjVcIlxuICAgICAgbGFiZWw9e2Nsb2NrTGFiZWx9XG4gICAgICB0b29sdGlwVGV4dD17Y2xvY2tUb29sdGlwfVxuICAgIC8+XG4gIClcbn1cblxuZXhwb3J0IHsgQ2xvY2sgfVxuIiwgImltcG9ydCB7IEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiXG5pbXBvcnQgQXN0YWxIeXBybGFuZCBmcm9tIFwiZ2k6Ly9Bc3RhbEh5cHJsYW5kXCJcbmltcG9ydCB7IHJhbmdlIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzXCJcbmltcG9ydCB7IENDUHJvcHMsIGNyZWF0ZUJpbmRpbmcsIGNyZWF0ZUNvbXB1dGVkIH0gZnJvbSBcImFnc1wiXG5cbnR5cGUgV3NCdXR0b25Qcm9wcyA9IFBhcnRpYWw8XG4gIENDUHJvcHM8R3RrLkJ1dHRvbiwgR3RrLkJ1dHRvbi5Db25zdHJ1Y3RvclByb3BzPlxuPiAmIHtcbiAgd3M6IEFzdGFsSHlwcmxhbmQuV29ya3NwYWNlXG59XG5cbmZ1bmN0aW9uIFdzQnV0dG9uKHsgd3MsIC4uLnByb3BzIH06IFdzQnV0dG9uUHJvcHMpIHtcbiAgY29uc3QgaHlwcmxhbmQgPSBBc3RhbEh5cHJsYW5kLmdldF9kZWZhdWx0KClcbiAgY29uc3QgY2xhc3NOYW1lcyA9IGNyZWF0ZUNvbXB1dGVkKFxuICAgIFtcbiAgICAgIGNyZWF0ZUJpbmRpbmcoaHlwcmxhbmQsIFwiZm9jdXNlZFdvcmtzcGFjZVwiKSxcbiAgICAgIGNyZWF0ZUJpbmRpbmcoaHlwcmxhbmQsIFwiY2xpZW50c1wiKSxcbiAgICBdLFxuICAgIChmd3MsIF8pID0+IHtcbiAgICAgIGNvbnN0IGNsYXNzZXMgPSBbXCJ3b3Jrc3BhY2UtYnV0dG9uXCJdXG4gICAgICBjb25zdCBhY3RpdmUgPSBmd3MuaWQgPT0gd3MuaWRcbiAgICAgIGlmIChhY3RpdmUpIGNsYXNzZXMucHVzaChcImFjdGl2ZVwiKVxuICAgICAgY29uc3Qgb2NjdXBpZWQgPSBoeXBybGFuZC5nZXRfd29ya3NwYWNlKHdzLmlkKT8uZ2V0X2NsaWVudHMoKS5sZW5ndGggPiAwXG4gICAgICBpZiAob2NjdXBpZWQpIGNsYXNzZXMucHVzaChcIm9jY3VwaWVkXCIpXG4gICAgICByZXR1cm4gY2xhc3Nlc1xuICAgIH0sXG4gIClcbiAgcmV0dXJuIChcbiAgICA8YnV0dG9uXG4gICAgICBjc3NDbGFzc2VzPXtjbGFzc05hbWVzfVxuICAgICAgdmFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgaGFsaWduPXtHdGsuQWxpZ24uQ0VOVEVSfVxuICAgICAgb25DbGlja2VkPXsoKSA9PiB3cy5mb2N1cygpfVxuICAgICAgey4uLnByb3BzfVxuICAgID48L2J1dHRvbj5cbiAgKVxufVxuXG5mdW5jdGlvbiBXb3Jrc3BhY2VzKCkge1xuICByZXR1cm4gKFxuICAgIDxib3ggY3NzQ2xhc3Nlcz17W1wid29ya3NwYWNlc1wiXX0gc3BhY2luZz17N30+XG4gICAgICB7cmFuZ2UoNikubWFwKChpKSA9PiAoXG4gICAgICAgIDxXc0J1dHRvbiB3cz17QXN0YWxIeXBybGFuZC5Xb3Jrc3BhY2UuZHVtbXkoaSArIDEsIG51bGwpfSAvPlxuICAgICAgKSl9XG4gICAgPC9ib3g+XG4gIClcbn1cblxuZXhwb3J0IHsgV29ya3NwYWNlcyB9XG4iLCAiaW1wb3J0IHsgZXhlY0FzeW5jIH0gZnJvbSBcImFncy9wcm9jZXNzXCJcblxuZXhwb3J0IGZ1bmN0aW9uIHJhbmdlKG1heDogbnVtYmVyKSB7XG4gIHJldHVybiBBcnJheS5mcm9tKHsgbGVuZ3RoOiBtYXggfSwgKF8sIGkpID0+IGkpXG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzaChjbWQ6IHN0cmluZyB8IHN0cmluZ1tdKSB7XG4gIHJldHVybiBleGVjQXN5bmMoY21kKS5jYXRjaCgoZXJyKSA9PiB7XG4gICAgY29uc29sZS5lcnJvcih0eXBlb2YgY21kID09PSBcInN0cmluZ1wiID8gY21kIDogY21kLmpvaW4oXCIgXCIpLCBlcnIpXG4gICAgcmV0dXJuIFwiXCJcbiAgfSlcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGJhc2goc3RyaW5nczogc3RyaW5nIHwgc3RyaW5nW10sIC4uLnZhbHVlczogdW5rbm93bltdKSB7XG4gIGNvbnN0IGNtZCA9XG4gICAgdHlwZW9mIHN0cmluZ3MgPT09IFwic3RyaW5nXCJcbiAgICAgID8gc3RyaW5nc1xuICAgICAgOiBzdHJpbmdzLmZsYXRNYXAoKHN0ciwgaSkgPT4gc3RyICsgYCR7dmFsdWVzW2ldID8/IFwiXCJ9YCkuam9pbihcIlwiKVxuXG4gIHJldHVybiBleGVjQXN5bmMoW1wiYmFzaFwiLCBcIi1jXCIsIGNtZF0pLmNhdGNoKChlcnIpID0+IHtcbiAgICBjb25zb2xlLmVycm9yKGNtZCwgZXJyKVxuICAgIHJldHVybiBcIlwiXG4gIH0pXG59XG5cbnR5cGUgTm90aWZVcmdlbmN5ID0gXCJsb3dcIiB8IFwibm9ybWFsXCIgfCBcImNyaXRpY2FsXCJcbmV4cG9ydCBmdW5jdGlvbiBub3RpZnlTZW5kKHtcbiAgYXBwTmFtZSxcbiAgYXBwSWNvbixcbiAgdXJnZW5jeSA9IFwibm9ybWFsXCIsXG4gIGltYWdlLFxuICBpY29uLFxuICBzdW1tYXJ5LFxuICBib2R5LFxuICBhY3Rpb25zLFxufToge1xuICBhcHBOYW1lPzogc3RyaW5nXG4gIGFwcEljb24/OiBzdHJpbmdcbiAgdXJnZW5jeT86IE5vdGlmVXJnZW5jeVxuICBpbWFnZT86IHN0cmluZ1xuICBpY29uPzogc3RyaW5nXG4gIHN1bW1hcnk6IHN0cmluZ1xuICBib2R5OiBzdHJpbmdcbiAgYWN0aW9ucz86IHtcbiAgICBbbGFiZWw6IHN0cmluZ106ICgpID0+IHZvaWRcbiAgfVxufSkge1xuICBjb25zdCBhY3Rpb25zQXJyYXkgPSBPYmplY3QuZW50cmllcyhhY3Rpb25zIHx8IHt9KS5tYXAoXG4gICAgKFtsYWJlbCwgY2FsbGJhY2tdLCBpKSA9PiAoe1xuICAgICAgaWQ6IGAke2l9YCxcbiAgICAgIGxhYmVsLFxuICAgICAgY2FsbGJhY2ssXG4gICAgfSksXG4gIClcbiAgZXhlY0FzeW5jKFxuICAgIFtcbiAgICAgIFwibm90aWZ5LXNlbmRcIixcbiAgICAgIGAtdSAke3VyZ2VuY3l9YCxcbiAgICAgIGFwcEljb24gJiYgYC1pICR7YXBwSWNvbn1gLFxuICAgICAgYC1oIFwic3RyaW5nOmltYWdlLXBhdGg6JHshIWljb24gPyBpY29uIDogaW1hZ2V9XCJgLFxuICAgICAgYFwiJHtzdW1tYXJ5ID8/IFwiXCJ9XCJgLFxuICAgICAgYFwiJHtib2R5ID8/IFwiXCJ9XCJgLFxuICAgICAgYC1hIFwiJHthcHBOYW1lID8/IFwiXCJ9XCJgLFxuICAgICAgLi4uYWN0aW9uc0FycmF5Lm1hcCgodikgPT4gYC0tYWN0aW9uPVxcXCIke3YuaWR9PSR7di5sYWJlbH1cXFwiYCksXG4gICAgXS5qb2luKFwiIFwiKSxcbiAgKVxuICAgIC50aGVuKChvdXQpID0+IHtcbiAgICAgIGlmICghaXNOYU4oTnVtYmVyKG91dC50cmltKCkpKSAmJiBvdXQudHJpbSgpICE9PSBcIlwiKSB7XG4gICAgICAgIGFjdGlvbnNBcnJheVtwYXJzZUludChvdXQpXS5jYWxsYmFjaygpXG4gICAgICB9XG4gICAgfSlcbiAgICAuY2F0Y2goY29uc29sZS5lcnJvcilcbn1cbiIsICJleHBvcnQgY29uc3QgaWNvbnMgPSB7XG4gIG11dGVkOiBcIlx1RTA0RlwiLFxuICBsb3c6IFwiXHVFMDREXCIsXG4gIGhpZ2g6IFwiXHVFMDUwXCIsXG4gIG92ZXJhbXBsaWZpZWQ6IFwiXHVFOThFXCIsXG59XG5cbmV4cG9ydCBjb25zdCB0aHJlc2hvbGRzID0ge1xuICAxMDE6IFwib3ZlcmFtcGxpZmllZFwiLFxuICA1MTogXCJoaWdoXCIsXG4gIDE6IFwibG93XCIsXG4gIDA6IFwibXV0ZWRcIixcbn1cbiIsICJpbXBvcnQgeyBjcmVhdGVDb21wdXRlZCwgY3JlYXRlQmluZGluZyB9IGZyb20gXCJhZ3NcIlxuaW1wb3J0IHsgaWNvbnMsIHRocmVzaG9sZHMgfSBmcm9tIFwiLi9jb25zdGFudHNcIlxuaW1wb3J0IEFzdGFsV3AgZnJvbSBcImdpOi8vQXN0YWxXcFwiXG5cbmNvbnN0IHNwZWFrZXIgPSBBc3RhbFdwLmdldF9kZWZhdWx0KCk/LmF1ZGlvIS5kZWZhdWx0X3NwZWFrZXJcblxuZnVuY3Rpb24gZ2V0Vm9sdW1lSWNvbih2b2x1bWU6IG51bWJlciwgbXV0ZTogYm9vbGVhbikge1xuICBjb25zdCBpY29uID0gbXV0ZSA/IDAgOiBbMTAxLCA1MSwgMSwgMF0uZmluZCgodHMpID0+IHRzIDw9IHZvbHVtZSAqIDEwMClcbiAgcmV0dXJuIGljb25cbiAgICA/IGljb25zW3RocmVzaG9sZHNbaWNvbiBhcyBrZXlvZiB0eXBlb2YgdGhyZXNob2xkc10gYXMga2V5b2YgdHlwZW9mIGljb25zXVxuICAgIDogaWNvbnMubXV0ZWRcbn1cblxuZXhwb3J0IGNvbnN0IHZvbHVtZUljb24gPSBjcmVhdGVDb21wdXRlZChcbiAgW2NyZWF0ZUJpbmRpbmcoc3BlYWtlciwgXCJ2b2x1bWVcIiksIGNyZWF0ZUJpbmRpbmcoc3BlYWtlciwgXCJtdXRlXCIpXSxcbiAgKHZvbHVtZSwgbXV0ZSkgPT4gZ2V0Vm9sdW1lSWNvbih2b2x1bWUsIG11dGUpLFxuKVxuXG5leHBvcnQgY29uc3Qgdm9sdW1lVmFsdWUgPSBjcmVhdGVCaW5kaW5nKHNwZWFrZXIsIFwidm9sdW1lXCIpLmFzKCh2YWx1ZSkgPT4ge1xuICByZXR1cm4gKFxuICAgIE1hdGguZmxvb3IodmFsdWUgKiAxMDApXG4gICAgICAudG9TdHJpbmcoKVxuICAgICAgLnBhZFN0YXJ0KDMsIFwiMFwiKSArIFwiJVwiXG4gIClcbn0pXG4iLCAiaW1wb3J0IHsgTW9kdWxlQ29udGFpbmVyIH0gZnJvbSBcIi4uL3NoYXJlZC9tb2R1bGUtY29udGFpbmVyXCJcbmltcG9ydCB7IEd0ayB9IGZyb20gXCJhZ3MvZ3RrNFwiXG5pbXBvcnQgeyB2b2x1bWVJY29uLCB2b2x1bWVWYWx1ZSB9IGZyb20gXCIuL2hlbHBlcnNcIlxuaW1wb3J0IEFzdGFsV3AgZnJvbSBcImdpOi8vQXN0YWxXcFwiXG5pbXBvcnQgeyBiYXNoIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzXCJcblxuZnVuY3Rpb24gVm9sdW1lKCkge1xuICBjb25zdCBzcGVha2VyID0gQXN0YWxXcC5nZXRfZGVmYXVsdCgpPy5hdWRpbyEuZGVmYXVsdF9zcGVha2VyXG5cbiAgZnVuY3Rpb24gb25fc2Nyb2xsKF86IEd0ay5CdXR0b24sIF9fOiBHdGsuRXZlbnRDb250cm9sbGVyU2Nyb2xsLCBkeDogbnVtYmVyKSB7XG4gICAgaWYgKGR4ID4gMCkge1xuICAgICAgc3BlYWtlci5zZXRfdm9sdW1lKHNwZWFrZXIudm9sdW1lIC0gMC4wMSlcbiAgICB9XG4gICAgaWYgKGR4IDwgMCkge1xuICAgICAgc3BlYWtlci5zZXRfdm9sdW1lKHNwZWFrZXIudm9sdW1lICsgMC4wMSlcbiAgICB9XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxNb2R1bGVDb250YWluZXJcbiAgICAgIGNsYXNzPVwidm9sdW1lXCJcbiAgICAgIGljb249e3ZvbHVtZUljb259XG4gICAgICBsYWJlbD17dm9sdW1lVmFsdWV9XG4gICAgICBvbkNsaWNrZWQ9eygpID0+IGJhc2goXCJwYXZ1Y29udHJvbFwiKX1cbiAgICAgICQ9eyhzZWxmKSA9PiB7XG4gICAgICAgIGNvbnN0IHNjcm9sbF9ldmVudCA9IEd0ay5FdmVudENvbnRyb2xsZXJTY3JvbGwubmV3KFxuICAgICAgICAgIEd0ay5FdmVudENvbnRyb2xsZXJTY3JvbGxGbGFncy5WRVJUSUNBTCxcbiAgICAgICAgKVxuICAgICAgICBzY3JvbGxfZXZlbnQuY29ubmVjdChcInNjcm9sbFwiLCBvbl9zY3JvbGwpXG4gICAgICAgIHNlbGYuYWRkX2NvbnRyb2xsZXIoc2Nyb2xsX2V2ZW50KVxuICAgICAgfX1cbiAgICAvPlxuICApXG59XG5cbmV4cG9ydCB7IFZvbHVtZSB9XG4iLCAiaW1wb3J0IEFzdGFsTmV0d29yayBmcm9tIFwiZ2k6Ly9Bc3RhbE5ldHdvcmtcIlxuaW1wb3J0IHsgY3JlYXRlQmluZGluZywgY3JlYXRlQ29tcHV0ZWQgfSBmcm9tIFwiYWdzXCJcbmltcG9ydCB7IGljb25zLCB0aHJlc2hvbGRzIH0gZnJvbSBcIi4vY29uc3RhbnRzXCJcblxuY29uc3QgbmV0d29yayA9IEFzdGFsTmV0d29yay5nZXRfZGVmYXVsdCgpXG5cbmZ1bmN0aW9uIGdldE5ldHdvcmtJY29uKFxuICBwcmltYXJ5OiBBc3RhbE5ldHdvcmsuUHJpbWFyeSxcbiAgd2lmaTogQXN0YWxOZXR3b3JrLldpZmksXG4pIHtcbiAgaWYgKHByaW1hcnkgPT09IEFzdGFsTmV0d29yay5QcmltYXJ5LldJUkVEKSB7XG4gICAgcmV0dXJuIGljb25zLndpcmVkXG4gIH1cblxuICBpZiAocHJpbWFyeSA9PT0gQXN0YWxOZXR3b3JrLlByaW1hcnkuV0lGSSkge1xuICAgIGNvbnN0IGljb25UaHJlc2hvbGQgPSBbODAsIDYwLCA0MCwgMjAsIDBdLmZpbmQoKHRzKSA9PiB0cyA8PSB3aWZpLnN0cmVuZ3RoKVxuICAgIHJldHVybiBpY29uc1tcbiAgICAgIHRocmVzaG9sZHNbaWNvblRocmVzaG9sZCBhcyBrZXlvZiB0eXBlb2YgdGhyZXNob2xkc10gYXMga2V5b2YgdHlwZW9mIGljb25zXG4gICAgXVxuICB9XG5cbiAgcmV0dXJuIGljb25zLmRpc2Nvbm5lY3RlZFxufVxuXG5leHBvcnQgY29uc3QgbmV0d29ya0ljb24gPSBjcmVhdGVDb21wdXRlZChcbiAgW2NyZWF0ZUJpbmRpbmcobmV0d29yaywgXCJwcmltYXJ5XCIpLCBjcmVhdGVCaW5kaW5nKG5ldHdvcmssIFwid2lmaVwiKV0sXG4gIChwcmltYXJ5LCB3aWZpKSA9PiBnZXROZXR3b3JrSWNvbihwcmltYXJ5LCB3aWZpKSxcbilcblxuZXhwb3J0IGNvbnN0IG5ldHdvcmtMYWJlbEFuZFRvb2x0aXAgPSBjcmVhdGVDb21wdXRlZChcbiAgW1xuICAgIGNyZWF0ZUJpbmRpbmcobmV0d29yaywgXCJwcmltYXJ5XCIpLFxuICAgIGNyZWF0ZUJpbmRpbmcobmV0d29yaywgXCJzdGF0ZVwiKSxcbiAgICBjcmVhdGVCaW5kaW5nKG5ldHdvcmssIFwiY29ubmVjdGl2aXR5XCIpLFxuICAgIC4uLihuZXR3b3JrLndpZmkgPyBbY3JlYXRlQmluZGluZyhuZXR3b3JrLndpZmksIFwiZW5hYmxlZFwiKV0gOiBbXSksXG4gIF0sXG4gIChwcmltYXJ5KSA9PiB7XG4gICAgaWYgKHByaW1hcnkgPT09IEFzdGFsTmV0d29yay5QcmltYXJ5LldJUkVEKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBsYWJlbDogbmV0d29yay53aXJlZC5kZXZpY2UuaW50ZXJmYWNlLFxuICAgICAgICB0b29sdGlwOiBcIkNvbm5lY3RlZFwiLFxuICAgICAgfVxuICAgIH1cbiAgICBpZiAocHJpbWFyeSA9PT0gQXN0YWxOZXR3b3JrLlByaW1hcnkuV0lGSSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgbGFiZWw6IG5ldHdvcmsud2lmaS5hY3RpdmVfYWNjZXNzX3BvaW50LnNzaWQsXG4gICAgICAgIHRvb2x0aXA6IGZvcm1hdFdpZmlJbmZvKG5ldHdvcmsud2lmaSksXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7IGxhYmVsOiBcIlVuYXZhaWxhYmxlXCIsIHRvb2x0aXA6IFwiTm8gSW50ZXJuZXRcIiB9XG4gIH0sXG4pXG5cbi8qKlxuICogRm9ybWF0cyB0aGUgZnJlcXVlbmN5IHZhbHVlIHRvIE1Iei5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIHRha2VzIGEgZnJlcXVlbmN5IHZhbHVlIGluIGtIeiBhbmQgZm9ybWF0cyBpdCB0byBNSHogd2l0aCB0d28gZGVjaW1hbCBwbGFjZXMuXG4gKlxuICogQHBhcmFtIGZyZXF1ZW5jeSBUaGUgZnJlcXVlbmN5IHZhbHVlIGluIGtIei5cbiAqXG4gKiBAcmV0dXJucyBUaGUgZm9ybWF0dGVkIGZyZXF1ZW5jeSB2YWx1ZSBpbiBNSHogYXMgYSBzdHJpbmcuXG4gKi9cbmNvbnN0IGZvcm1hdEZyZXF1ZW5jeSA9IChmcmVxdWVuY3k6IG51bWJlcik6IHN0cmluZyA9PiB7XG4gIHJldHVybiBgJHsoZnJlcXVlbmN5IC8gMTAwMCkudG9GaXhlZCgyKX1NSHpgXG59XG5cbi8qKlxuICogRm9ybWF0cyB0aGUgV2lGaSBpbmZvcm1hdGlvbiBmb3IgZGlzcGxheS5cbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIHRha2VzIGEgV2lGaSBvYmplY3QgYW5kIGZvcm1hdHMgaXRzIFNTSUQsIHNpZ25hbCBzdHJlbmd0aCwgYW5kIGZyZXF1ZW5jeSBmb3IgZGlzcGxheS5cbiAqXG4gKiBAcGFyYW0gd2lmaSBUaGUgV2lGaSBvYmplY3QgY29udGFpbmluZyBTU0lELCBzaWduYWwgc3RyZW5ndGgsIGFuZCBmcmVxdWVuY3kgaW5mb3JtYXRpb24uXG4gKlxuICogQHJldHVybnMgQSBmb3JtYXR0ZWQgc3RyaW5nIGNvbnRhaW5pbmcgdGhlIFdpRmkgaW5mb3JtYXRpb24uXG4gKi9cbmNvbnN0IGZvcm1hdFdpZmlJbmZvID0gKHdpZmk6IEFzdGFsTmV0d29yay5XaWZpKTogc3RyaW5nID0+IHtcbiAgcmV0dXJuIGBOZXR3b3JrOiAke3dpZmkuc3NpZH0gXFxuU2lnbmFsIFN0cmVuZ3RoOiAke3dpZmkuc3RyZW5ndGh9JSBcXG5GcmVxdWVuY3k6ICR7Zm9ybWF0RnJlcXVlbmN5KHdpZmkuZnJlcXVlbmN5KX1gXG59XG4iLCAiZXhwb3J0IGNvbnN0IGljb25zID0ge1xuICBkaXNjb25uZWN0ZWQ6IFwiXHVFMURBXCIsXG4gIHdpcmVkOiBcIlx1RUZFNlwiLFxuICB3aWZpXzA6IFwiXHVGMEIwXCIsXG4gIHdpZmlfMTogXCJcdUVCRTRcIixcbiAgd2lmaV8yOiBcIlx1RUJENlwiLFxuICB3aWZpXzM6IFwiXHVFQkUxXCIsXG4gIHdpZmlfNDogXCJcdUUxRDhcIixcbn1cblxuZXhwb3J0IGNvbnN0IHRocmVzaG9sZHMgPSB7XG4gIDA6IFwid2lmaV8wXCIsXG4gIDIwOiBcIndpZmlfMVwiLFxuICA0MDogXCJ3aWZpXzJcIixcbiAgNjA6IFwid2lmaV8zXCIsXG4gIDgwOiBcIndpZmlfNFwiLFxufVxuIiwgImltcG9ydCB7IGJhc2ggfSBmcm9tIFwiLi4vLi4vLi4vdXRpbHNcIlxuaW1wb3J0IHsgTW9kdWxlQ29udGFpbmVyIH0gZnJvbSBcIi4uL3NoYXJlZC9tb2R1bGUtY29udGFpbmVyXCJcbmltcG9ydCB7IG5ldHdvcmtJY29uLCBuZXR3b3JrTGFiZWxBbmRUb29sdGlwIH0gZnJvbSBcIi4vaGVscGVyc1wiXG5cbmZ1bmN0aW9uIE5ldHdvcmsoKSB7XG4gIHJldHVybiAoXG4gICAgPE1vZHVsZUNvbnRhaW5lclxuICAgICAgY2xhc3M9XCJuZXR3b3JrXCJcbiAgICAgIGljb249e25ldHdvcmtJY29ufVxuICAgICAgbGFiZWw9e25ldHdvcmtMYWJlbEFuZFRvb2x0aXAoKHZhbHVlKSA9PiB2YWx1ZS5sYWJlbCl9XG4gICAgICB0b29sdGlwVGV4dD17bmV0d29ya0xhYmVsQW5kVG9vbHRpcCgodmFsdWUpID0+IHZhbHVlLnRvb2x0aXApfVxuICAgICAgb25DbGlja2VkPXsoKSA9PiBiYXNoKFwibm0tY29ubmVjdGlvbi1lZGl0b3JcIil9XG4gICAgLz5cbiAgKVxufVxuXG5leHBvcnQgeyBOZXR3b3JrIH1cbiIsICJpbXBvcnQgeyBjcmVhdGVQb2xsIH0gZnJvbSBcImFncy90aW1lXCJcblxuY29uc3QgaW50ZXJ2YWwgPSA1MDAwXG5sZXQgbGFzdFRvdGFsRG93bkJ5dGVzID0gMFxubGV0IGxhc3RUb3RhbFVwQnl0ZXMgPSAwXG5cbmNvbnN0IG5ldHdvcmtTcGVlZCA9IGNyZWF0ZVBvbGwoXG4gIHtcbiAgICBkb3dubG9hZDogMCxcbiAgICB1cGxvYWQ6IDAsXG4gIH0sXG4gIGludGVydmFsLFxuICBbXCJjYXRcIiwgXCIvcHJvYy9uZXQvZGV2XCJdLFxuICAoY29udGVudCwgXykgPT4ge1xuICAgIGNvbnN0IGxpbmVzID0gY29udGVudC5zcGxpdChcIlxcblwiKVxuXG4gICAgLy8gQ2FjdWxhdGUgdGhlIHN1bSBvZiBhbGwgaW50ZXJmYWNlcycgdHJhZmZpYyBsaW5lIGJ5IGxpbmUuXG4gICAgbGV0IHRvdGFsRG93bkJ5dGVzID0gMFxuICAgIGxldCB0b3RhbFVwQnl0ZXMgPSAwXG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxpbmVzLmxlbmd0aDsgKytpKSB7XG4gICAgICBjb25zdCBmaWVsZHMgPSBsaW5lc1tpXS50cmltKCkuc3BsaXQoL1xcVysvKVxuICAgICAgaWYgKGZpZWxkcy5sZW5ndGggPD0gMikge1xuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICAvLyBTa2lwIHZpcnR1YWwgaW50ZXJmYWNlcy5cbiAgICAgIGNvbnN0IGludGVyZmNlID0gZmllbGRzWzBdXG4gICAgICBjb25zdCBjdXJyZW50SW50ZXJmYWNlRG93bkJ5dGVzID0gTnVtYmVyLnBhcnNlSW50KGZpZWxkc1sxXSlcbiAgICAgIGNvbnN0IGN1cnJlbnRJbnRlcmZhY2VVcEJ5dGVzID0gTnVtYmVyLnBhcnNlSW50KGZpZWxkc1s5XSlcbiAgICAgIGlmIChcbiAgICAgICAgaW50ZXJmY2UgPT09IFwibG9cIiB8fFxuICAgICAgICAvLyBDcmVhdGVkIGJ5IHB5dGhvbi1iYXNlZCBiYW5kd2lkdGggbWFuYWdlciBcInRyYWZmaWN0b2xsXCIuXG4gICAgICAgIGludGVyZmNlLm1hdGNoKC9eaWZiWzAtOV0rLykgfHxcbiAgICAgICAgLy8gQ3JlYXRlZCBieSBseGQgY29udGFpbmVyIG1hbmFnZXIuXG4gICAgICAgIGludGVyZmNlLm1hdGNoKC9ebHhkYnJbMC05XSsvKSB8fFxuICAgICAgICBpbnRlcmZjZS5tYXRjaCgvXnZpcmJyWzAtOV0rLykgfHxcbiAgICAgICAgaW50ZXJmY2UubWF0Y2goL15iclswLTldKy8pIHx8XG4gICAgICAgIGludGVyZmNlLm1hdGNoKC9edm5ldFswLTldKy8pIHx8XG4gICAgICAgIGludGVyZmNlLm1hdGNoKC9edHVuWzAtOV0rLykgfHxcbiAgICAgICAgaW50ZXJmY2UubWF0Y2goL150YXBbMC05XSsvKSB8fFxuICAgICAgICBpc05hTihjdXJyZW50SW50ZXJmYWNlRG93bkJ5dGVzKSB8fFxuICAgICAgICBpc05hTihjdXJyZW50SW50ZXJmYWNlVXBCeXRlcylcbiAgICAgICkge1xuICAgICAgICBjb250aW51ZVxuICAgICAgfVxuXG4gICAgICB0b3RhbERvd25CeXRlcyArPSBjdXJyZW50SW50ZXJmYWNlRG93bkJ5dGVzXG4gICAgICB0b3RhbFVwQnl0ZXMgKz0gY3VycmVudEludGVyZmFjZVVwQnl0ZXNcbiAgICB9XG5cbiAgICBpZiAobGFzdFRvdGFsRG93bkJ5dGVzID09PSAwKSB7XG4gICAgICBsYXN0VG90YWxEb3duQnl0ZXMgPSB0b3RhbERvd25CeXRlc1xuICAgIH1cbiAgICBpZiAobGFzdFRvdGFsVXBCeXRlcyA9PT0gMCkge1xuICAgICAgbGFzdFRvdGFsVXBCeXRlcyA9IHRvdGFsVXBCeXRlc1xuICAgIH1cbiAgICBjb25zdCBkb3dubG9hZFNwZWVkID0gKHRvdGFsRG93bkJ5dGVzIC0gbGFzdFRvdGFsRG93bkJ5dGVzKSAvIGludGVydmFsXG4gICAgY29uc3QgdXBsb2FkU3BlZWQgPSAodG90YWxVcEJ5dGVzIC0gbGFzdFRvdGFsVXBCeXRlcykgLyBpbnRlcnZhbFxuXG4gICAgbGFzdFRvdGFsRG93bkJ5dGVzID0gdG90YWxEb3duQnl0ZXNcbiAgICBsYXN0VG90YWxVcEJ5dGVzID0gdG90YWxVcEJ5dGVzXG5cbiAgICByZXR1cm4ge1xuICAgICAgZG93bmxvYWQ6IGRvd25sb2FkU3BlZWQsXG4gICAgICB1cGxvYWQ6IHVwbG9hZFNwZWVkLFxuICAgIH1cbiAgfSxcbilcblxuZXhwb3J0IGRlZmF1bHQgbmV0d29ya1NwZWVkXG4iLCAiaW1wb3J0IHsgTW9kdWxlQ29udGFpbmVyIH0gZnJvbSBcIi4uL3NoYXJlZC9tb2R1bGUtY29udGFpbmVyXCJcbmltcG9ydCBuZXR3b3JrU3BlZWQgZnJvbSBcIi4vaGVscGVyc1wiXG5cbmZ1bmN0aW9uIE5ldHN0YXRzKCkge1xuICByZXR1cm4gKFxuICAgIDxNb2R1bGVDb250YWluZXJcbiAgICAgIGNsYXNzPVwibmV0c3RhdHNcIlxuICAgICAgaWNvbj1cIlx1RTY0MFwiXG4gICAgICBsYWJlbD17bmV0d29ya1NwZWVkKCh2YWx1ZSkgPT4ge1xuICAgICAgICBjb25zdCBkb3dubG9hZFNwZWVkID0gdmFsdWUuZG93bmxvYWRcbiAgICAgICAgY29uc3QgdXBsb2FkU3BlZWQgPSB2YWx1ZS51cGxvYWRcbiAgICAgICAgY29uc3QgaGlnaGVyU3BlZWQgPVxuICAgICAgICAgIGRvd25sb2FkU3BlZWQgPj0gdXBsb2FkU3BlZWQgPyBkb3dubG9hZFNwZWVkIDogdXBsb2FkU3BlZWRcblxuICAgICAgICBjb25zdCBzcGVlZCA9IChoaWdoZXJTcGVlZCAvIDEwMDApLnRvRml4ZWQoMilcblxuICAgICAgICBjb25zdCBzeW1ib2wgPSBkb3dubG9hZFNwZWVkID49IHVwbG9hZFNwZWVkID8gXCJcdUYwRDdcIiA6IFwiXHVGMEQ4XCJcblxuICAgICAgICByZXR1cm4gYCR7c3BlZWR9IE1CL3MgJHtzeW1ib2x9YFxuICAgICAgfSl9XG4gICAgLz5cbiAgKVxufVxuXG5leHBvcnQgeyBOZXRzdGF0cyB9XG4iLCAiaW1wb3J0IHsgY3JlYXRlQmluZGluZywgRm9yIH0gZnJvbSBcImFnc1wiXG5pbXBvcnQgeyBHdGsgfSBmcm9tIFwiYWdzL2d0azRcIlxuaW1wb3J0IEFzdGFsVHJheSBmcm9tIFwiZ2k6Ly9Bc3RhbFRyYXlcIlxuXG5mdW5jdGlvbiBTeXN0cmF5KCkge1xuICBjb25zdCB0cmF5ID0gQXN0YWxUcmF5LmdldF9kZWZhdWx0KClcbiAgY29uc3QgaXRlbXMgPSBjcmVhdGVCaW5kaW5nKHRyYXksIFwiaXRlbXNcIilcblxuICByZXR1cm4gKFxuICAgIDxib3ggY2xhc3M9XCJzeXN0cmF5XCIgc3BhY2luZz17Mn0+XG4gICAgICA8Rm9yIGVhY2g9e2l0ZW1zfT5cbiAgICAgICAgeyhpdGVtKSA9PiAoXG4gICAgICAgICAgPG1lbnVidXR0b25cbiAgICAgICAgICAgIGNsYXNzPVwiYnV0dG9uXCJcbiAgICAgICAgICAgICQ9eyhzZWxmOiBHdGsuTWVudUJ1dHRvbikgPT4ge1xuICAgICAgICAgICAgICBzZWxmLmluc2VydF9hY3Rpb25fZ3JvdXAoXCJkYnVzbWVudVwiLCBpdGVtLmFjdGlvbkdyb3VwKVxuICAgICAgICAgICAgfX1cbiAgICAgICAgICAgIHRvb2x0aXBUZXh0PXtjcmVhdGVCaW5kaW5nKGl0ZW0sIFwidG9vbHRpcE1hcmt1cFwiKX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8aW1hZ2UgY2xhc3M9XCJidXR0b24taWNvblwiIGdpY29uPXtjcmVhdGVCaW5kaW5nKGl0ZW0sIFwiZ2ljb25cIil9IC8+XG4gICAgICAgICAgICB7R3RrLlBvcG92ZXJNZW51Lm5ld19mcm9tX21vZGVsKGl0ZW0ubWVudU1vZGVsKX1cbiAgICAgICAgICA8L21lbnVidXR0b24+XG4gICAgICAgICl9XG4gICAgICA8L0Zvcj5cbiAgICA8L2JveD5cbiAgKVxufVxuXG5leHBvcnQgeyBTeXN0cmF5IH1cbiIsICJpbXBvcnQgeyBiYXNoIH0gZnJvbSBcIi4uLy4uLy4uL3V0aWxzXCJcbmltcG9ydCB7IE1vZHVsZUNvbnRhaW5lciB9IGZyb20gXCIuLi9zaGFyZWQvbW9kdWxlLWNvbnRhaW5lclwiXG5cbmZ1bmN0aW9uIEV4aXRCdXR0b24oKSB7XG4gIHJldHVybiAoXG4gICAgPE1vZHVsZUNvbnRhaW5lclxuICAgICAgY2xhc3M9XCJleGl0LWJ1dHRvblwiXG4gICAgICBpY29uPVwiXHVFODc5XCJcbiAgICAgIGxhYmVsPVwiRXhpdFwiXG4gICAgICBvbkNsaWNrZWQ9eygpID0+IGJhc2goXCJ+Ly5jb25maWcvaHlwci9zY3JpcHRzL2RtZW51LnNoIHF1aXRcIil9XG4gICAgLz5cbiAgKVxufVxuXG5leHBvcnQgeyBFeGl0QnV0dG9uIH1cbiIsICJpbXBvcnQgYXBwIGZyb20gXCJhZ3MvZ3RrNC9hcHBcIlxuaW1wb3J0IHsgQXN0YWwsIEdkaywgR3RrIH0gZnJvbSBcImFncy9ndGs0XCJcbmltcG9ydCB7IENsb2NrIH0gZnJvbSBcIi4vY2xvY2tcIlxuaW1wb3J0IHsgV29ya3NwYWNlcyB9IGZyb20gXCIuL3dvcmtzcGFjZXNcIlxuaW1wb3J0IHsgVm9sdW1lIH0gZnJvbSBcIi4vdm9sdW1lXCJcbmltcG9ydCB7IE5ldHdvcmsgfSBmcm9tIFwiLi9uZXR3b3JrXCJcbmltcG9ydCB7IE5ldHN0YXRzIH0gZnJvbSBcIi4vbmV0c3RhdHNcIlxuaW1wb3J0IHsgU3lzdHJheSB9IGZyb20gXCIuL3N5c3RyYXlcIlxuaW1wb3J0IHsgRXhpdEJ1dHRvbiB9IGZyb20gXCIuL2V4aXQtYnV0dG9uXCJcblxuZXhwb3J0IGZ1bmN0aW9uIEJhcihnZGttb25pdG9yOiBHZGsuTW9uaXRvcikge1xuICBjb25zdCB7IEJPVFRPTSwgTEVGVCwgUklHSFQgfSA9IEFzdGFsLldpbmRvd0FuY2hvclxuXG4gIHJldHVybiAoXG4gICAgPHdpbmRvd1xuICAgICAgdmlzaWJsZVxuICAgICAgbmFtZT1cImJhclwiXG4gICAgICBjbGFzcz1cIkJhclwiXG4gICAgICBnZGttb25pdG9yPXtnZGttb25pdG9yfVxuICAgICAgZXhjbHVzaXZpdHk9e0FzdGFsLkV4Y2x1c2l2aXR5LkVYQ0xVU0lWRX1cbiAgICAgIGFuY2hvcj17Qk9UVE9NIHwgTEVGVCB8IFJJR0hUfVxuICAgICAgYXBwbGljYXRpb249e2FwcH1cbiAgICA+XG4gICAgICA8Y2VudGVyYm94IGNzc0NsYXNzZXM9e1tcImJhci1jb250YWluZXJcIl19PlxuICAgICAgICA8Ym94ICR0eXBlPVwic3RhcnRcIiBoYWxpZ249e0d0ay5BbGlnbi5TVEFSVH0gc3BhY2luZz17OH0+XG4gICAgICAgICAgPFdvcmtzcGFjZXMgLz5cbiAgICAgICAgPC9ib3g+XG4gICAgICAgIDxib3ggJHR5cGU9XCJlbmRcIiBoYWxpZ249e0d0ay5BbGlnbi5FTkR9IHNwYWNpbmc9ezR9PlxuICAgICAgICAgIDxTeXN0cmF5IC8+XG4gICAgICAgICAgPFZvbHVtZSAvPlxuICAgICAgICAgIDxOZXR3b3JrIC8+XG4gICAgICAgICAgPE5ldHN0YXRzIC8+XG4gICAgICAgICAgPENsb2NrIC8+XG4gICAgICAgICAgPEV4aXRCdXR0b24gLz5cbiAgICAgICAgPC9ib3g+XG4gICAgICA8L2NlbnRlcmJveD5cbiAgICA8L3dpbmRvdz5cbiAgKVxufVxuIiwgImltcG9ydCBhcHAgZnJvbSBcImFncy9ndGs0L2FwcFwiXG5pbXBvcnQgeyBBc3RhbCwgR3RrIH0gZnJvbSBcImFncy9ndGs0XCJcbmltcG9ydCBBc3RhbE5vdGlmZCBmcm9tIFwiZ2k6Ly9Bc3RhbE5vdGlmZFwiXG5pbXBvcnQgeyBOb3RpZmljYXRpb24gfSBmcm9tIFwiLi9ub3RpZmljYXRpb25cIlxuaW1wb3J0IHsgY3JlYXRlQmluZGluZywgRm9yLCBjcmVhdGVTdGF0ZSwgb25DbGVhbnVwIH0gZnJvbSBcImFnc1wiXG5cbmZ1bmN0aW9uIE5vdGlmaWNhdGlvblBvcHVwcygpIHtcbiAgY29uc3QgbW9uaXRvcnMgPSBjcmVhdGVCaW5kaW5nKGFwcCwgXCJtb25pdG9yc1wiKVxuXG4gIGNvbnN0IG5vdGlmZCA9IEFzdGFsTm90aWZkLmdldF9kZWZhdWx0KClcblxuICBjb25zdCBbbm90aWZpY2F0aW9ucywgc2V0Tm90aWZpY2F0aW9uc10gPSBjcmVhdGVTdGF0ZShcbiAgICBuZXcgQXJyYXk8QXN0YWxOb3RpZmQuTm90aWZpY2F0aW9uPigpLFxuICApXG5cbiAgY29uc3Qgbm90aWZpZWRIYW5kbGVyID0gbm90aWZkLmNvbm5lY3QoXCJub3RpZmllZFwiLCAoXywgaWQsIHJlcGxhY2VkKSA9PiB7XG4gICAgY29uc3Qgbm90aWZpY2F0aW9uID0gbm90aWZkLmdldF9ub3RpZmljYXRpb24oaWQpXG5cbiAgICBpZiAocmVwbGFjZWQgJiYgbm90aWZpY2F0aW9ucy5nZXQoKS5zb21lKChuKSA9PiBuLmlkID09PSBpZCkpIHtcbiAgICAgIHNldE5vdGlmaWNhdGlvbnMoKG5zKSA9PiBucy5tYXAoKG4pID0+IChuLmlkID09PSBpZCA/IG5vdGlmaWNhdGlvbiA6IG4pKSlcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0Tm90aWZpY2F0aW9ucygobnMpID0+IFtub3RpZmljYXRpb24sIC4uLm5zXSlcbiAgICB9XG4gIH0pXG5cbiAgY29uc3QgcmVzb2x2ZWRIYW5kbGVyID0gbm90aWZkLmNvbm5lY3QoXCJyZXNvbHZlZFwiLCAoXywgaWQpID0+IHtcbiAgICBzZXROb3RpZmljYXRpb25zKChucykgPT4gbnMuZmlsdGVyKChuKSA9PiBuLmlkICE9PSBpZCkpXG4gIH0pXG5cbiAgb25DbGVhbnVwKCgpID0+IHtcbiAgICBub3RpZmQuZGlzY29ubmVjdChub3RpZmllZEhhbmRsZXIpXG4gICAgbm90aWZkLmRpc2Nvbm5lY3QocmVzb2x2ZWRIYW5kbGVyKVxuICB9KVxuXG4gIHJldHVybiAoXG4gICAgPEZvciBlYWNoPXttb25pdG9yc30+XG4gICAgICB7KG1vbml0b3IpID0+IChcbiAgICAgICAgPHdpbmRvd1xuICAgICAgICAgICQ9eyhzZWxmKSA9PiBvbkNsZWFudXAoKCkgPT4gc2VsZi5kZXN0cm95KCkpfVxuICAgICAgICAgIGNsYXNzPVwibm90aWZpY2F0aW9uLXBvcHVwc1wiXG4gICAgICAgICAgZ2RrbW9uaXRvcj17bW9uaXRvcn1cbiAgICAgICAgICB2aXNpYmxlPXtub3RpZmljYXRpb25zKChucykgPT4gbnMubGVuZ3RoID4gMCl9XG4gICAgICAgICAgYW5jaG9yPXtBc3RhbC5XaW5kb3dBbmNob3IuQk9UVE9NIHwgQXN0YWwuV2luZG93QW5jaG9yLlJJR0hUfVxuICAgICAgICA+XG4gICAgICAgICAgPGJveCBvcmllbnRhdGlvbj17R3RrLk9yaWVudGF0aW9uLlZFUlRJQ0FMfT5cbiAgICAgICAgICAgIDxGb3IgZWFjaD17bm90aWZpY2F0aW9uc30+XG4gICAgICAgICAgICAgIHsobm90aWZpY2F0aW9uKSA9PiA8Tm90aWZpY2F0aW9uIG5vdGlmaWNhdGlvbj17bm90aWZpY2F0aW9ufSAvPn1cbiAgICAgICAgICAgIDwvRm9yPlxuICAgICAgICAgIDwvYm94PlxuICAgICAgICA8L3dpbmRvdz5cbiAgICAgICl9XG4gICAgPC9Gb3I+XG4gIClcbn1cblxuZXhwb3J0IHsgTm90aWZpY2F0aW9uUG9wdXBzIH1cbiIsICJpbXBvcnQgR3RrIGZyb20gXCJnaTovL0d0az92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgR2RrIGZyb20gXCJnaTovL0dkaz92ZXJzaW9uPTQuMFwiXG5pbXBvcnQgQWR3IGZyb20gXCJnaTovL0Fkd1wiXG5pbXBvcnQgR0xpYiBmcm9tIFwiZ2k6Ly9HTGliXCJcbmltcG9ydCBBc3RhbE5vdGlmZCBmcm9tIFwiZ2k6Ly9Bc3RhbE5vdGlmZFwiXG5pbXBvcnQgUGFuZ28gZnJvbSBcImdpOi8vUGFuZ29cIlxuXG5mdW5jdGlvbiBpc0ljb24oaWNvbj86IHN0cmluZyB8IG51bGwpIHtcbiAgY29uc3QgaWNvblRoZW1lID0gR3RrLkljb25UaGVtZS5nZXRfZm9yX2Rpc3BsYXkoR2RrLkRpc3BsYXkuZ2V0X2RlZmF1bHQoKSEpXG4gIHJldHVybiBpY29uICYmIGljb25UaGVtZS5oYXNfaWNvbihpY29uKVxufVxuXG5mdW5jdGlvbiBmaWxlRXhpc3RzKHBhdGg6IHN0cmluZykge1xuICByZXR1cm4gR0xpYi5maWxlX3Rlc3QocGF0aCwgR0xpYi5GaWxlVGVzdC5FWElTVFMpXG59XG5cbmZ1bmN0aW9uIHRpbWUodGltZTogbnVtYmVyLCBmb3JtYXQgPSBcIiVIOiVNXCIpIHtcbiAgcmV0dXJuIEdMaWIuRGF0ZVRpbWUubmV3X2Zyb21fdW5peF9sb2NhbCh0aW1lKS5mb3JtYXQoZm9ybWF0KSFcbn1cblxuZnVuY3Rpb24gdXJnZW5jeShuOiBBc3RhbE5vdGlmZC5Ob3RpZmljYXRpb24pIHtcbiAgY29uc3QgeyBMT1csIE5PUk1BTCwgQ1JJVElDQUwgfSA9IEFzdGFsTm90aWZkLlVyZ2VuY3lcbiAgc3dpdGNoIChuLnVyZ2VuY3kpIHtcbiAgICBjYXNlIExPVzpcbiAgICAgIHJldHVybiBcImxvd1wiXG4gICAgY2FzZSBDUklUSUNBTDpcbiAgICAgIHJldHVybiBcImNyaXRpY2FsXCJcbiAgICBjYXNlIE5PUk1BTDpcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIFwibm9ybWFsXCJcbiAgfVxufVxuXG5pbnRlcmZhY2UgTm90aWZpY2F0aW9uUHJvcHMge1xuICBub3RpZmljYXRpb246IEFzdGFsTm90aWZkLk5vdGlmaWNhdGlvblxufVxuXG5mdW5jdGlvbiBOb3RpZmljYXRpb24oeyBub3RpZmljYXRpb246IG4gfTogTm90aWZpY2F0aW9uUHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICA8QWR3LkNsYW1wIG1heGltdW1TaXplPXs0MDB9PlxuICAgICAgPGJveFxuICAgICAgICB3aWR0aFJlcXVlc3Q9ezQwMH1cbiAgICAgICAgY2xhc3M9e2Bub3RpZmljYXRpb24gJHt1cmdlbmN5KG4pfWB9XG4gICAgICAgIG9yaWVudGF0aW9uPXtHdGsuT3JpZW50YXRpb24uVkVSVElDQUx9XG4gICAgICA+XG4gICAgICAgIDxib3ggY2xhc3M9XCJoZWFkZXJcIj5cbiAgICAgICAgICB7KG4uYXBwSWNvbiB8fCBpc0ljb24obi5kZXNrdG9wRW50cnkpKSAmJiAoXG4gICAgICAgICAgICA8aW1hZ2VcbiAgICAgICAgICAgICAgY2xhc3M9XCJhcHAtaWNvblwiXG4gICAgICAgICAgICAgIHZpc2libGU9e0Jvb2xlYW4obi5hcHBJY29uIHx8IG4uZGVza3RvcEVudHJ5KX1cbiAgICAgICAgICAgICAgaWNvbk5hbWU9e24uYXBwSWNvbiB8fCBuLmRlc2t0b3BFbnRyeX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgIGNsYXNzPVwiYXBwLW5hbWVcIlxuICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uU1RBUlR9XG4gICAgICAgICAgICBlbGxpcHNpemU9e1BhbmdvLkVsbGlwc2l6ZU1vZGUuRU5EfVxuICAgICAgICAgICAgbGFiZWw9e24uYXBwTmFtZSB8fCBcIlVua25vd25cIn1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgY2xhc3M9XCJ0aW1lXCJcbiAgICAgICAgICAgIGhleHBhbmRcbiAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkVORH1cbiAgICAgICAgICAgIGxhYmVsPXt0aW1lKG4udGltZSl9XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2tlZD17KCkgPT4gbi5kaXNtaXNzKCl9PlxuICAgICAgICAgICAgPGltYWdlIGljb25OYW1lPVwid2luZG93LWNsb3NlLXN5bWJvbGljXCIgLz5cbiAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgPC9ib3g+XG4gICAgICAgIDxHdGsuU2VwYXJhdG9yIHZpc2libGUgLz5cbiAgICAgICAgPGJveCBjbGFzcz1cImNvbnRlbnRcIj5cbiAgICAgICAgICB7bi5pbWFnZSAmJiBmaWxlRXhpc3RzKG4uaW1hZ2UpICYmIChcbiAgICAgICAgICAgIDxpbWFnZSB2YWxpZ249e0d0ay5BbGlnbi5TVEFSVH0gY2xhc3M9XCJpbWFnZVwiIGZpbGU9e24uaW1hZ2V9IC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgICB7bi5pbWFnZSAmJiBpc0ljb24obi5pbWFnZSkgJiYgKFxuICAgICAgICAgICAgPGJveCB2YWxpZ249e0d0ay5BbGlnbi5TVEFSVH0gY2xhc3M9XCJpY29uLWltYWdlXCI+XG4gICAgICAgICAgICAgIDxpbWFnZVxuICAgICAgICAgICAgICAgIGljb25OYW1lPXtuLmltYWdlfVxuICAgICAgICAgICAgICAgIGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn1cbiAgICAgICAgICAgICAgICB2YWxpZ249e0d0ay5BbGlnbi5DRU5URVJ9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2JveD5cbiAgICAgICAgICApfVxuICAgICAgICAgIDxib3ggb3JpZW50YXRpb249e0d0ay5PcmllbnRhdGlvbi5WRVJUSUNBTH0+XG4gICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgY2xhc3M9XCJzdW1tYXJ5XCJcbiAgICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uU1RBUlR9XG4gICAgICAgICAgICAgIHhhbGlnbj17MH1cbiAgICAgICAgICAgICAgbGFiZWw9e24uc3VtbWFyeX1cbiAgICAgICAgICAgICAgZWxsaXBzaXplPXtQYW5nby5FbGxpcHNpemVNb2RlLkVORH1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICB7bi5ib2R5ICYmIChcbiAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJib2R5XCJcbiAgICAgICAgICAgICAgICB3cmFwXG4gICAgICAgICAgICAgICAgdXNlTWFya3VwXG4gICAgICAgICAgICAgICAgaGFsaWduPXtHdGsuQWxpZ24uU1RBUlR9XG4gICAgICAgICAgICAgICAgeGFsaWduPXswfVxuICAgICAgICAgICAgICAgIGp1c3RpZnk9e0d0ay5KdXN0aWZpY2F0aW9uLkZJTEx9XG4gICAgICAgICAgICAgICAgbGFiZWw9e24uYm9keX1cbiAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9ib3g+XG4gICAgICAgIDwvYm94PlxuICAgICAgICB7bi5hY3Rpb25zLmxlbmd0aCA+IDAgJiYgKFxuICAgICAgICAgIDxib3ggY2xhc3M9XCJhY3Rpb25zXCI+XG4gICAgICAgICAgICB7bi5hY3Rpb25zLm1hcCgoeyBsYWJlbCwgaWQgfSkgPT4gKFxuICAgICAgICAgICAgICA8YnV0dG9uIGhleHBhbmQgb25DbGlja2VkPXsoKSA9PiBuLmludm9rZShpZCl9PlxuICAgICAgICAgICAgICAgIDxsYWJlbCBsYWJlbD17bGFiZWx9IGhhbGlnbj17R3RrLkFsaWduLkNFTlRFUn0gaGV4cGFuZCAvPlxuICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvYm94PlxuICAgICAgICApfVxuICAgICAgPC9ib3g+XG4gICAgPC9BZHcuQ2xhbXA+XG4gIClcbn1cblxuZXhwb3J0IHsgTm90aWZpY2F0aW9uIH1cbiIsICJpbXBvcnQgYXBwIGZyb20gXCJhZ3MvZ3RrNC9hcHBcIlxuaW1wb3J0IHN0eWxlcyBmcm9tIFwiLi9zdHlsZXMvc3R5bGVzLnNjc3NcIlxuaW1wb3J0IHsgQmFyIH0gZnJvbSBcIi4vY29tcG9uZW50cy9iYXJcIlxuaW1wb3J0IHsgTm90aWZpY2F0aW9uUG9wdXBzIH0gZnJvbSBcIi4vY29tcG9uZW50cy9ub3RpZmljYXRpb25zXCJcbmltcG9ydCB7IG5vdGlmeVNlbmQgfSBmcm9tIFwiLi91dGlsc1wiXG5cbmFwcC5zdGFydCh7XG4gIGNzczogc3R5bGVzLFxuICBtYWluKCkge1xuICAgIGFwcC5nZXRfbW9uaXRvcnMoKS5tYXAoQmFyKVxuICAgIE5vdGlmaWNhdGlvblBvcHVwcygpXG5cbiAgICAvLyBub3RpZnlTZW5kKHtcbiAgICAvLyAgIGFwcE5hbWU6IFwiZm9vdFwiLFxuICAgIC8vICAgYXBwSWNvbjogXCJmb290XCIsXG4gICAgLy8gICBzdW1tYXJ5OiBcIkhlbGxvIGZyb20gZm9vdFwiLFxuICAgIC8vICAgYm9keTogXCJUaGlzIGlzIGEgYm9keSBub3RpZmljYXRpb24uXCIsXG4gICAgLy8gICBhY3Rpb25zOiB7XG4gICAgLy8gICAgIFllczogKCkgPT4ge30sXG4gICAgLy8gICAgIE5vOiAoKSA9PiB7fSxcbiAgICAvLyAgICAgTGF0ZXI6ICgpID0+IHt9LFxuICAgIC8vICAgfSxcbiAgICAvLyB9KVxuICB9LFxufSlcbiJdLAogICJtYXBwaW5ncyI6ICI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTUEsU0FBUyxTQUFTLEtBQWE7QUFDM0IsU0FBTyxJQUNGLFFBQVEsbUJBQW1CLE9BQU8sRUFDbEMsV0FBVyxLQUFLLEdBQUcsRUFDbkIsWUFBWTtBQUNyQjtBQUVBLGVBQWUsU0FBWSxLQUE4QkEsUUFBdUI7QUFDNUUsU0FBTyxJQUFJLEtBQUssQ0FBQyxNQUFNQSxPQUFNLEVBQUUsT0FBTyxDQUFDLEVBQUUsTUFBTSxNQUFNLE1BQU07QUFDL0Q7QUFFQSxTQUFTLE1BQXdCLE9BQVUsTUFBZ0M7QUFDdkUsU0FBTyxlQUFlLE9BQU8sTUFBTTtBQUFBLElBQy9CLE1BQU07QUFDRixhQUFPLEtBQUssT0FBTyxTQUFTLElBQUksQ0FBQyxFQUFFLEVBQUU7QUFBQSxJQUN6QztBQUFBLEVBQ0osQ0FBQztBQUNMO0FBRUEsTUFBTSxTQUFTLE9BQU8sZ0JBQWdCLEdBQUcsQ0FBQyxFQUFFLE1BQU0sWUFBWSxNQUFNO0FBQ2hFLFFBQU0sS0FBSyxXQUFXLE1BQU07QUFDNUIsUUFB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UyxjQUFjLENBQUMsT0FBTyxHQUFHLFNBQVMsQ0FBQztBQUFBLE1BQzVDLFFBQVEsTUFBTSxhQUFhLFNBQVMsTUFBTSxhQUFhO0FBQUEsTUFFdkQsOEJBQUMsU0FBSSxhQUFhQyxLQUFJLFlBQVksVUFDaEMsOEJBQUMsT0FBSSxNQUFNLGVBQ1IsV0FBQyxpQkFBaUIsb0JBQUMsZ0JBQWEsY0FBNEIsR0FDL0QsR0FDRjtBQUFBO0FBQUEsRUFDRixHQUVKO0FBRUo7OztBRS9DQSxZQUFJLE1BQU07QUFBQSxFQUNSLEtBQUs7QUFBQSxFQUNMLE9BQU87QUFDTCxnQkFBSSxhQUFhLEVBQUUsSUFBSSxHQUFHO0FBQzFCLHVCQUFtQjtBQUFBLEVBYXJCO0FBQ0YsQ0FBQzsiLAogICJuYW1lcyI6IFsicGF0Y2giLCAiTm90aWZpY2F0aW9uIiwgInNuYWtlaWZ5IiwgInNuYWtlaWZ5IiwgImdldHRlciIsICJzZXR0ZXIiLCAic2V0IiwgInNpZ25hbE5hbWUiLCAic2lnbmFsIiwgIkdMaWIiLCAiR2lvIiwgIkdMaWIiLCAiR09iamVjdCIsICJHTGliIiwgIkdPYmplY3QiLCAic2lnbmFsIiwgInZhbHVlIiwgInRpbWVvdXQiLCAic2V0IiwgIm5hbWUiLCAiYXJncyIsICJfYSIsICJhcHAiLCAiR09iamVjdCIsICJHT2JqZWN0IiwgIl9hIiwgInNpZ25hbCIsICJHT2JqZWN0IiwgIkdpbyIsICJHTGliIiwgIkdPYmplY3QiLCAic2V0IiwgInZhbHVlIiwgIm5ld1ZhbHVlIiwgIkdpbyIsICJnZXR0ZXIiLCAiR09iamVjdCIsICJrZXkiLCAib2JqZWN0IiwgInJlbW92ZSIsICJHT2JqZWN0IiwgIkdMaWIiLCAiQWR3IiwgIl9jdXJzb3JUaGVtZV9kZWMiLCAiX2ljb25UaGVtZV9kZWMiLCAiX2d0a1RoZW1lX2RlYyIsICJfYSIsICJfaW5pdCIsICJHaW8iLCAiXyIsICJpY29ucyIsICJzaWduYWwiLCAiR3RrIiwgIkdkayIsICJHdGsiLCAiQXN0YWwiLCAiR3RrIiwgIkdpbyIsICJHdGsiLCAic2V0dGVyIiwgImNzcyIsICJHaW8iLCAiR3RrIiwgIkFzdGFsIiwgIkdMaWIiLCAiR2lvIiwgIkdMaWIiLCAiX2EiLCAiX2luaXQiLCAiR2lvIiwgInNpZ25hbCIsICJHTGliIiwgIl9hIiwgIl9pbml0IiwgImludGVydmFsIiwgInNpZ25hbCIsICJzZXQiLCAiR0xpYiIsICJHdGsiLCAiQXN0YWxXcCIsICJzcGVha2VyIiwgIkFzdGFsV3AiLCAiR3RrIiwgImljb25zIiwgInRocmVzaG9sZHMiLCAiaWNvbnMiLCAidGhyZXNob2xkcyIsICJpbnRlcnZhbCIsICJHdGsiLCAiR3RrIiwgIkFzdGFsTm90aWZkIiwgIkd0ayIsICJHZGsiLCAiR0xpYiIsICJHdGsiLCAiR2RrIiwgIkdMaWIiLCAidGltZSIsICJBc3RhbE5vdGlmZCIsICJHdGsiXQp9Cg==

EOF

LD_PRELOAD="/usr/lib/libgtk4-layer-shell.so" /usr/bin/gjs -m $file $@